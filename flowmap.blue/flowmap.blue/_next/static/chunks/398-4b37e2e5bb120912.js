(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [398], {
        95318: function(t) {
            t.exports = function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }, t.exports.default = t.exports, t.exports.__esModule = !0
        },
        50008: function(t) {
            function e(n) {
                return "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? (t.exports = e = function(t) {
                    return typeof t
                }, t.exports.default = t.exports, t.exports.__esModule = !0) : (t.exports = e = function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }, t.exports.default = t.exports, t.exports.__esModule = !0), e(n)
            }
            t.exports = e, t.exports.default = t.exports, t.exports.__esModule = !0
        },
        98060: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Colors = void 0;
            e.Colors = Object.assign(Object.assign(Object.assign({}, {
                BLACK: "#111418",
                DARK_GRAY1: "#1C2127",
                DARK_GRAY2: "#252A31",
                DARK_GRAY3: "#2F343C",
                DARK_GRAY4: "#383E47",
                DARK_GRAY5: "#404854",
                GRAY1: "#5F6B7C",
                GRAY2: "#738091",
                GRAY3: "#8F99A8",
                GRAY4: "#ABB3BF",
                GRAY5: "#C5CBD3",
                LIGHT_GRAY1: "#D3D8DE",
                LIGHT_GRAY2: "#DCE0E5",
                LIGHT_GRAY3: "#E5E8EB",
                LIGHT_GRAY4: "#EDEFF2",
                LIGHT_GRAY5: "#F6F7F9",
                WHITE: "#FFFFFF"
            }), {
                BLUE1: "#184A90",
                BLUE2: "#215DB0",
                BLUE3: "#2D72D2",
                BLUE4: "#4C90F0",
                BLUE5: "#8ABBFF",
                GREEN1: "#165A36",
                GREEN2: "#1C6E42",
                GREEN3: "#238551",
                GREEN4: "#32A467",
                GREEN5: "#72CA9B",
                ORANGE1: "#77450D",
                ORANGE2: "#935610",
                ORANGE3: "#C87619",
                ORANGE4: "#EC9A3C",
                ORANGE5: "#FBB360",
                RED1: "#8E292C",
                RED2: "#AC2F33",
                RED3: "#CD4246",
                RED4: "#E76A6E",
                RED5: "#FA999C"
            }), {
                CERULEAN1: "#0C5174",
                CERULEAN2: "#0F6894",
                CERULEAN3: "#147EB3",
                CERULEAN4: "#3FA6DA",
                CERULEAN5: "#68C1EE",
                FOREST1: "#1D7324",
                FOREST2: "#238C2C",
                FOREST3: "#29A634",
                FOREST4: "#43BF4D",
                FOREST5: "#62D96B",
                GOLD1: "#5C4405",
                GOLD2: "#866103",
                GOLD3: "#D1980B",
                GOLD4: "#F0B726",
                GOLD5: "#FBD065",
                INDIGO1: "#5642A6",
                INDIGO2: "#634DBF",
                INDIGO3: "#7961DB",
                INDIGO4: "#9881F3",
                INDIGO5: "#BDADFF",
                LIME1: "#43501B",
                LIME2: "#5A701A",
                LIME3: "#8EB125",
                LIME4: "#B6D94C",
                LIME5: "#D4F17E",
                ROSE1: "#A82255",
                ROSE2: "#C22762",
                ROSE3: "#DB2C6F",
                ROSE4: "#F5498B",
                ROSE5: "#FF66A1",
                SEPIA1: "#5E4123",
                SEPIA2: "#7A542E",
                SEPIA3: "#946638",
                SEPIA4: "#AF855A",
                SEPIA5: "#D0B090",
                TURQUOISE1: "#004D46",
                TURQUOISE2: "#007067",
                TURQUOISE3: "#00A396",
                TURQUOISE4: "#13C9BA",
                TURQUOISE5: "#7AE1D8",
                VERMILION1: "#96290D",
                VERMILION2: "#B83211",
                VERMILION3: "#D33D17",
                VERMILION4: "#EB6847",
                VERMILION5: "#FF9980",
                VIOLET1: "#5C255C",
                VIOLET2: "#7C327C",
                VIOLET3: "#9D3F9D",
                VIOLET4: "#BD6BBD",
                VIOLET5: "#D69FD6"
            })
        },
        65746: function(t, e, n) {
            "use strict";
            e.wL = void 0;
            var r = n(98060);
            Object.defineProperty(e, "wL", {
                enumerable: !0,
                get: function() {
                    return r.Colors
                }
            });
            var i = n(31920)
        },
        31920: function(t, e) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.LegacyColors = void 0, e.LegacyColors = {
                BLACK: "#10161A",
                BLUE1: "#0E5A8A",
                BLUE2: "#106BA3",
                BLUE3: "#137CBD",
                BLUE4: "#2B95D6",
                BLUE5: "#48AFF0",
                COBALT1: "#1F4B99",
                COBALT2: "#2458B3",
                COBALT3: "#2965CC",
                COBALT4: "#4580E6",
                COBALT5: "#669EFF",
                DARK_GRAY1: "#182026",
                DARK_GRAY2: "#202B33",
                DARK_GRAY3: "#293742",
                DARK_GRAY4: "#30404D",
                DARK_GRAY5: "#394B59",
                FOREST1: "#1D7324",
                FOREST2: "#238C2C",
                FOREST3: "#29A634",
                FOREST4: "#43BF4D",
                FOREST5: "#62D96B",
                GOLD1: "#A67908",
                GOLD2: "#BF8C0A",
                GOLD3: "#D99E0B",
                GOLD4: "#F2B824",
                GOLD5: "#FFC940",
                GRAY1: "#5C7080",
                GRAY2: "#738694",
                GRAY3: "#8A9BA8",
                GRAY4: "#A7B6C2",
                GRAY5: "#BFCCD6",
                GREEN1: "#0A6640",
                GREEN2: "#0D8050",
                GREEN3: "#0F9960",
                GREEN4: "#15B371",
                GREEN5: "#3DCC91",
                INDIGO1: "#5642A6",
                INDIGO2: "#634DBF",
                INDIGO3: "#7157D9",
                INDIGO4: "#9179F2",
                INDIGO5: "#AD99FF",
                LIGHT_GRAY1: "#CED9E0",
                LIGHT_GRAY2: "#D8E1E8",
                LIGHT_GRAY3: "#E1E8ED",
                LIGHT_GRAY4: "#EBF1F5",
                LIGHT_GRAY5: "#F5F8FA",
                LIME1: "#728C23",
                LIME2: "#87A629",
                LIME3: "#9BBF30",
                LIME4: "#B6D94C",
                LIME5: "#D1F26D",
                ORANGE1: "#A66321",
                ORANGE2: "#BF7326",
                ORANGE3: "#D9822B",
                ORANGE4: "#F29D49",
                ORANGE5: "#FFB366",
                RED1: "#A82A2A",
                RED2: "#C23030",
                RED3: "#DB3737",
                RED4: "#F55656",
                RED5: "#FF7373",
                ROSE1: "#A82255",
                ROSE2: "#C22762",
                ROSE3: "#DB2C6F",
                ROSE4: "#F5498B",
                ROSE5: "#FF66A1",
                SEPIA1: "#63411E",
                SEPIA2: "#7D5125",
                SEPIA3: "#96622D",
                SEPIA4: "#B07B46",
                SEPIA5: "#C99765",
                TURQUOISE1: "#008075",
                TURQUOISE2: "#00998C",
                TURQUOISE3: "#00B3A4",
                TURQUOISE4: "#14CCBD",
                TURQUOISE5: "#2EE6D6",
                VERMILION1: "#9E2B0E",
                VERMILION2: "#B83211",
                VERMILION3: "#D13913",
                VERMILION4: "#EB532D",
                VERMILION5: "#FF6E4A",
                VIOLET1: "#5C255C",
                VIOLET2: "#752F75",
                VIOLET3: "#8F398F",
                VIOLET4: "#A854A8",
                VIOLET5: "#C274C2",
                WHITE: "#FFFFFF"
            }
        },
        14527: function(t, e, n) {
            "use strict";
            n.d(e, {
                K7: function() {
                    return i
                },
                lt: function() {
                    return o
                },
                BR: function() {
                    return a
                },
                x8: function() {
                    return u
                },
                Xv: function() {
                    return c
                }
            });
            var r = n(5526).wGP(),
                i = r + "-multi-select",
                o = i + "-popover",
                a = i + "-tag-input-input",
                s = r + "-select",
                u = s + "-popover",
                c = s + "-match-target-width"
        },
        8463: function(t, e, n) {
            "use strict";
            n.d(e, {
                n: function() {
                    return y
                }
            });
            var r = n(63647),
                i = n(67294),
                o = n(92100),
                a = n(90322),
                s = function(t) {
                    function e(e, n) {
                        var r = t.call(this, e, n) || this;
                        return r.timeoutIds = [], r.requestIds = [], r.clearTimeouts = function() {
                            if (r.timeoutIds.length > 0) {
                                for (var t = 0, e = r.timeoutIds; t < e.length; t++) {
                                    var n = e[t];
                                    window.clearTimeout(n)
                                }
                                r.timeoutIds = []
                            }
                        }, r.cancelAnimationFrames = function() {
                            if (r.requestIds.length > 0) {
                                for (var t = 0, e = r.requestIds; t < e.length; t++) {
                                    var n = e[t];
                                    window.cancelAnimationFrame(n)
                                }
                                r.requestIds = []
                            }
                        }, (0, a.KV)("production") || r.validateProps(r.props), r
                    }
                    return (0, o.ZT)(e, t), e.prototype.componentDidUpdate = function(t, e, n) {
                        (0, a.KV)("production") || this.validateProps(this.props)
                    }, e.prototype.componentWillUnmount = function() {
                        this.clearTimeouts(), this.cancelAnimationFrames()
                    }, e.prototype.requestAnimationFrame = function(t) {
                        var e = window.requestAnimationFrame(t);
                        return this.requestIds.push(e),
                            function() {
                                return window.cancelAnimationFrame(e)
                            }
                    }, e.prototype.setTimeout = function(t, e) {
                        var n = window.setTimeout(t, e);
                        return this.timeoutIds.push(n),
                            function() {
                                return window.clearTimeout(n)
                            }
                    }, e.prototype.validateProps = function(t) {}, e
                }(i.Component),
                u = n(15360),
                c = n(9421),
                l = n(72778),
                f = n(48261),
                h = n(23251);

            function d(t, e, n) {
                return void 0 === t || null == e || null == n ? e === n : h.m(t) ? t(e, n) : e[t] === n[t]
            }

            function p(t) {
                if (null == t) return !1;
                var e = Object.keys(t);
                return 1 === e.length && "__blueprintCreateNewItemBrand" === e[0] && "blueprint-create-new-item" === t.__blueprintCreateNewItemBrand
            }

            function g(t) {
                return null == t || p(t) ? null : t
            }
            var y = function(t) {
                function e(e, n) {
                    var r, o, a = t.call(this, e, n) || this;
                    a.refHandlers = {
                        itemsParent: function(t) {
                            return a.itemsParentRef = t
                        }
                    }, a.shouldCheckActiveItemInViewport = !1, a.expectedNextActiveItem = null, a.isEnterKeyPressed = !1, a.renderItemList = function(t) {
                        var e = a.props,
                            n = e.initialContent,
                            r = e.noResults,
                            o = t.renderCreateItem(),
                            s = function(t, e, n) {
                                if (0 === t.query.length && void 0 !== n) return n;
                                var r = t.filteredItems.map(t.renderItem).filter((function(t) {
                                    return null != t
                                }));
                                return r.length > 0 ? r : e
                            }(t, null != o ? null : r, n);
                        if (null == s && null == o) return null;
                        var c = a.isCreateItemFirst();
                        return i.createElement(u.v2, {
                            ulRef: t.itemsParentRef
                        }, c && o, s, !c && o)
                    }, a.renderItem = function(t, e) {
                        if (!0 !== a.props.disabled) {
                            var n = a.state,
                                r = n.activeItem,
                                i = n.query,
                                o = a.state.filteredItems.indexOf(t) >= 0,
                                s = {
                                    active: d(a.props.itemsEqual, g(r), t),
                                    disabled: w(t, e, a.props.itemDisabled),
                                    matchesPredicate: o
                                };
                            return a.props.itemRenderer(t, {
                                handleClick: function(e) {
                                    return a.handleItemSelect(t, e)
                                },
                                index: e,
                                modifiers: s,
                                query: i
                            })
                        }
                        return null
                    }, a.renderCreateItemMenuItem = function() {
                        if (a.isCreateItemRendered()) {
                            var t = a.state,
                                e = t.activeItem,
                                n = t.query.trim(),
                                r = p(e);
                            return a.props.createNewItemRenderer(n, r, (function(t) {
                                a.handleItemCreate(n, t)
                            }))
                        }
                        return null
                    }, a.handleItemCreate = function(t, e) {
                        var n, r, i, o, s = null === (r = (n = a.props).createNewItemFromQuery) || void 0 === r ? void 0 : r.call(n, t);
                        null != s && (null === (o = (i = a.props).onItemSelect) || void 0 === o || o.call(i, s, e), a.maybeResetQuery())
                    }, a.handleItemSelect = function(t, e) {
                        var n, r;
                        a.setActiveItem(t), null === (r = (n = a.props).onItemSelect) || void 0 === r || r.call(n, t, e), a.maybeResetQuery()
                    }, a.handlePaste = function(t) {
                        for (var e, n = a.props, r = n.createNewItemFromQuery, i = n.onItemsPaste, o = [], s = [], u = 0, c = t; u < c.length; u++) {
                            var l = c[u],
                                f = m(l, a.props);
                            if (void 0 !== f) e = f, s.push(f);
                            else if (a.canCreateItems()) {
                                var h = null === r || void 0 === r ? void 0 : r(l);
                                void 0 !== h && s.push(h)
                            } else o.push(l)
                        }
                        a.setQuery(o.join(", "), !1), void 0 !== e && a.setActiveItem(e), null === i || void 0 === i || i(s)
                    }, a.handleKeyDown = function(t) {
                        var e, n, r = t.keyCode;
                        if (r === c.NF || r === c.qN) {
                            t.preventDefault();
                            var i = a.getNextActiveItem(r === c.NF ? -1 : 1);
                            null != i && a.setActiveItem(i)
                        } else r === c.K5 && (a.isEnterKeyPressed = !0);
                        null === (n = (e = a.props).onKeyDown) || void 0 === n || n.call(e, t)
                    }, a.handleKeyUp = function(t) {
                        var e = a.props.onKeyUp,
                            n = a.state.activeItem;
                        t.keyCode === c.K5 && a.isEnterKeyPressed && (t.preventDefault(), null == n || p(n) ? a.handleItemCreate(a.state.query, t) : a.handleItemSelect(n, t), a.isEnterKeyPressed = !1), null === e || void 0 === e || e(t)
                    }, a.handleInputQueryChange = function(t) {
                        var e, n, r = null == t ? "" : t.target.value;
                        a.setQuery(r), null === (n = (e = a.props).onQueryChange) || void 0 === n || n.call(e, r, t)
                    };
                    var s = e.query,
                        l = void 0 === s ? "" : s,
                        f = null === (r = e.createNewItemFromQuery) || void 0 === r ? void 0 : r.call(e, l),
                        h = b(l, e);
                    return a.state = {
                        activeItem: void 0 !== e.activeItem ? e.activeItem : null !== (o = e.initialActiveItem) && void 0 !== o ? o : _(h, e.itemDisabled),
                        createNewItem: f,
                        filteredItems: h,
                        query: l
                    }, a
                }
                return (0, r.ZT)(e, t), e.ofType = function() {
                    return e
                }, e.prototype.render = function() {
                    var t = this.props,
                        e = t.className,
                        n = t.items,
                        i = t.renderer,
                        o = t.itemListRenderer,
                        a = void 0 === o ? this.renderItemList : o,
                        s = this.state,
                        u = (s.createNewItem, (0, r._T)(s, ["createNewItem"]));
                    return i((0, r.pi)((0, r.pi)({}, u), {
                        className: e,
                        handleItemSelect: this.handleItemSelect,
                        handleKeyDown: this.handleKeyDown,
                        handleKeyUp: this.handleKeyUp,
                        handlePaste: this.handlePaste,
                        handleQueryChange: this.handleInputQueryChange,
                        itemList: a((0, r.pi)((0, r.pi)({}, u), {
                            items: n,
                            itemsParentRef: this.refHandlers.itemsParent,
                            renderCreateItem: this.renderCreateItemMenuItem,
                            renderItem: this.renderItem
                        }))
                    }))
                }, e.prototype.componentDidUpdate = function(t) {
                    var e = this;
                    void 0 !== this.props.activeItem && this.props.activeItem !== this.state.activeItem && (this.shouldCheckActiveItemInViewport = !0, this.setState({
                        activeItem: this.props.activeItem
                    })), null != this.props.query && this.props.query !== t.query ? this.setQuery(this.props.query, this.props.resetOnQuery, this.props) : f.ms(this.props, t, {
                        include: ["items", "itemListPredicate", "itemPredicate"]
                    }) || this.setQuery(this.state.query), this.shouldCheckActiveItemInViewport && (this.requestAnimationFrame((function() {
                        return e.scrollActiveItemIntoView()
                    })), this.shouldCheckActiveItemInViewport = !1)
                }, e.prototype.scrollActiveItemIntoView = function() {
                    var t = !1 !== this.props.scrollToActiveItem,
                        e = !d(this.props.itemsEqual, g(this.expectedNextActiveItem), g(this.props.activeItem));
                    if (this.expectedNextActiveItem = null, t || !e) {
                        var n = this.getActiveElement();
                        if (null != this.itemsParentRef && null != n) {
                            var r = n.offsetTop,
                                i = n.offsetHeight,
                                o = this.itemsParentRef,
                                a = o.offsetTop,
                                s = o.scrollTop,
                                u = o.clientHeight,
                                c = this.getItemsParentPadding(),
                                l = c.paddingTop,
                                f = r + i + c.paddingBottom - a,
                                h = r - l - a;
                            f >= s + u ? this.itemsParentRef.scrollTop = f + i - u : h <= s && (this.itemsParentRef.scrollTop = h - i)
                        }
                    }
                }, e.prototype.setQuery = function(t, e, n) {
                    var r;
                    void 0 === e && (e = this.props.resetOnQuery), void 0 === n && (n = this.props);
                    var i = n.createNewItemFromQuery;
                    this.shouldCheckActiveItemInViewport = !0, t !== this.state.query && (null === (r = n.onQueryChange) || void 0 === r || r.call(n, t));
                    var o = t.trim(),
                        a = b(o, n),
                        s = null != i && "" !== o ? i(o) : void 0;
                    this.setState({
                        createNewItem: s,
                        filteredItems: a,
                        query: t
                    });
                    var u = this.getActiveIndex(a);
                    (e || u < 0 || w(g(this.state.activeItem), u, n.itemDisabled)) && (this.isCreateItemRendered() && this.isCreateItemFirst() ? this.setActiveItem({
                        __blueprintCreateNewItemBrand: "blueprint-create-new-item"
                    }) : this.setActiveItem(_(a, n.itemDisabled)))
                }, e.prototype.setActiveItem = function(t) {
                    var e, n, r, i;
                    this.expectedNextActiveItem = t, void 0 === this.props.activeItem && (this.shouldCheckActiveItemInViewport = !0, this.setState({
                        activeItem: t
                    })), p(t) ? null === (n = (e = this.props).onActiveItemChange) || void 0 === n || n.call(e, null, !0) : null === (i = (r = this.props).onActiveItemChange) || void 0 === i || i.call(r, t, !1)
                }, e.prototype.getActiveElement = function() {
                    var t = this.state.activeItem;
                    if (null != this.itemsParentRef) {
                        if (p(t)) {
                            var e = this.isCreateItemFirst() ? 0 : this.state.filteredItems.length;
                            return this.itemsParentRef.children.item(e)
                        }
                        var n = this.getActiveIndex();
                        return this.itemsParentRef.children.item(n)
                    }
                }, e.prototype.getActiveIndex = function(t) {
                    void 0 === t && (t = this.state.filteredItems);
                    var e = this.state.activeItem;
                    if (null == e || p(e)) return -1;
                    for (var n = 0; n < t.length; ++n)
                        if (d(this.props.itemsEqual, t[n], e)) return n;
                    return -1
                }, e.prototype.getItemsParentPadding = function() {
                    var t = getComputedStyle(this.itemsParentRef),
                        e = t.paddingTop;
                    return {
                        paddingBottom: v(t.paddingBottom),
                        paddingTop: v(e)
                    }
                }, e.prototype.getNextActiveItem = function(t, e) {
                    if ((void 0 === e && (e = this.getActiveIndex()), this.isCreateItemRendered()) && (0 === e && -1 === t || e === this.state.filteredItems.length - 1 && 1 === t)) return {
                        __blueprintCreateNewItemBrand: "blueprint-create-new-item"
                    };
                    return _(this.state.filteredItems, this.props.itemDisabled, t, e)
                }, e.prototype.isCreateItemRendered = function() {
                    return this.canCreateItems() && "" !== this.state.query && !this.wouldCreatedItemMatchSomeExistingItem()
                }, e.prototype.isCreateItemFirst = function() {
                    return "first" === this.props.createNewItemPosition
                }, e.prototype.canCreateItems = function() {
                    return null != this.props.createNewItemFromQuery && null != this.props.createNewItemRenderer
                }, e.prototype.wouldCreatedItemMatchSomeExistingItem = function() {
                    var t = this;
                    return this.state.filteredItems.some((function(e) {
                        return d(t.props.itemsEqual, e, t.state.createNewItem)
                    }))
                }, e.prototype.maybeResetQuery = function() {
                    this.props.resetOnSelect && this.setQuery("", !0)
                }, e.displayName = l.g + ".QueryList", e.defaultProps = {
                    disabled: !1,
                    resetOnQuery: !0
                }, e
            }(s);

            function v(t) {
                return null == t ? 0 : parseInt(t.slice(0, -2), 10)
            }

            function m(t, e) {
                var n = e.items,
                    r = e.itemPredicate;
                if (h.m(r))
                    for (var i = 0; i < n.length; i++) {
                        var o = n[i];
                        if (r(t, o, i, !0)) return o
                    }
            }

            function b(t, e) {
                var n = e.items,
                    r = e.itemPredicate,
                    i = e.itemListPredicate;
                return h.m(i) ? i(t, n) : h.m(r) ? n.filter((function(e, n) {
                    return r(t, e, n)
                })) : n
            }

            function w(t, e, n) {
                return null != n && null != t && (h.m(n) ? n(t, e) : !!t[n])
            }

            function _(t, e, n, r) {
                if (void 0 === n && (n = 1), void 0 === r && (r = t.length - 1), 0 === t.length) return null;
                var i, o, a, s = r,
                    u = t.length - 1;
                do {
                    if (a = u, !w(t[s = (i = s + n) < (o = 0) ? a : i > a ? o : i], s, e)) return t[s]
                } while (s !== r && -1 !== r);
                return null
            }
        },
        29101: function(t, e, n) {
            "use strict";
            n.d(e, {
                N: function() {
                    return y
                }
            });
            var r = n(63647),
                i = n(94184),
                o = n.n(i),
                a = n(67294),
                s = n(4408),
                u = n(15360),
                c = n(53766),
                l = n(9421),
                f = n(5526),
                h = n(72778),
                d = n(35307),
                p = n(14527),
                g = n(8463),
                y = function(t) {
                    function e() {
                        var e, n = t.apply(this, arguments) || this;
                        return n.state = {
                            isOpen: n.props.popoverProps && n.props.popoverProps.isOpen || !1
                        }, n.TypedQueryList = g.n.ofType(), n.input = null, n.queryList = null, n.refHandlers = {
                            input: (0, s.Km)(n, "input", null === (e = n.props.tagInputProps) || void 0 === e ? void 0 : e.inputRef),
                            queryList: function(t) {
                                return n.queryList = t
                            }
                        }, n.renderQueryList = function(t) {
                            var e, i = n.props,
                                s = i.fill,
                                l = i.tagInputProps,
                                f = void 0 === l ? {} : l,
                                h = i.popoverProps,
                                d = void 0 === h ? {} : h,
                                g = i.selectedItems,
                                y = void 0 === g ? [] : g,
                                v = i.placeholder,
                                m = t.handlePaste,
                                b = t.handleKeyDown,
                                w = t.handleKeyUp;
                            s && (d.fill = !0, f.fill = !0);
                            var _ = (0, r.pi)((0, r.pi)({}, f.inputProps), {
                                className: o()(null === (e = f.inputProps) || void 0 === e ? void 0 : e.className, p.BR)
                            });
                            return a.createElement(u.J2, (0, r.pi)({
                                autoFocus: !1,
                                canEscapeKeyClose: !0,
                                enforceFocus: !1,
                                isOpen: n.state.isOpen,
                                position: c.Ly.BOTTOM_LEFT
                            }, d, {
                                className: o()(t.className, d.className),
                                interactionKind: u.V3.CLICK,
                                onInteraction: n.handlePopoverInteraction,
                                popoverClassName: o()(p.lt, d.popoverClassName),
                                onOpened: n.handlePopoverOpened
                            }), a.createElement("div", {
                                onKeyDown: n.getTagInputKeyDownHandler(b),
                                onKeyUp: n.getTagInputKeyUpHandler(w)
                            }, a.createElement(u.EG, (0, r.pi)({
                                placeholder: v
                            }, f, {
                                className: o()(p.K7, f.className),
                                inputRef: n.refHandlers.input,
                                inputProps: _,
                                inputValue: t.query,
                                onAdd: function(t, e) {
                                    "paste" === e && m(t)
                                },
                                onInputChange: t.handleQueryChange,
                                onRemove: n.handleTagRemove,
                                values: y.map(n.props.tagRenderer)
                            }))), a.createElement("div", {
                                onKeyDown: b,
                                onKeyUp: w
                            }, t.itemList))
                        }, n.handleItemSelect = function(t, e) {
                            var r, i;
                            null != n.input && n.input.focus(), null === (i = (r = n.props).onItemSelect) || void 0 === i || i.call(r, t, e)
                        }, n.handleQueryChange = function(t, e) {
                            var r, i;
                            n.setState({
                                isOpen: t.length > 0 || !n.props.openOnKeyDown
                            }), null === (i = (r = n.props).onQueryChange) || void 0 === i || i.call(r, t, e)
                        }, n.handlePopoverInteraction = function(t, e) {
                            return n.requestAnimationFrame((function() {
                                var r, i, o = n.input === document.activeElement;
                                null == n.input || o ? n.props.openOnKeyDown || n.setState({
                                    isOpen: !0
                                }) : n.setState({
                                    isOpen: !1
                                }), null === (i = null === (r = n.props.popoverProps) || void 0 === r ? void 0 : r.onInteraction) || void 0 === i || i.call(r, t, e)
                            }))
                        }, n.handlePopoverOpened = function(t) {
                            var e, r;
                            null != n.queryList && n.queryList.scrollActiveItemIntoView(), null === (r = null === (e = n.props.popoverProps) || void 0 === e ? void 0 : e.onOpened) || void 0 === r || r.call(e, t)
                        }, n.handleTagRemove = function(t, e) {
                            var r, i = n.props,
                                o = i.selectedItems,
                                a = void 0 === o ? [] : o,
                                s = i.onRemove,
                                u = i.tagInputProps;
                            null === s || void 0 === s || s(a[e], e), null === (r = null === u || void 0 === u ? void 0 : u.onRemove) || void 0 === r || r.call(u, t, e)
                        }, n.getTagInputKeyDownHandler = function(t) {
                            return function(e) {
                                var r = e.which;
                                r === l.hY || r === l.Mf ? (null != n.input && n.input.blur(), n.setState({
                                    isOpen: !1
                                })) : r !== l.ZH && r !== l.pe && r !== l.Ft && n.setState({
                                    isOpen: !0
                                });
                                var i = null != e.target.closest("." + f.cm4);
                                n.state.isOpen && !i && (null === t || void 0 === t || t(e))
                            }
                        }, n.getTagInputKeyUpHandler = function(t) {
                            return function(e) {
                                var r = e.target.classList.contains(p.BR);
                                n.state.isOpen && r && (null === t || void 0 === t || t(e))
                            }
                        }, n
                    }
                    return (0, r.ZT)(e, t), e.ofType = function() {
                        return e
                    }, e.prototype.componentDidUpdate = function(t) {
                        var e, n, r, i, o;
                        (null === (e = t.tagInputProps) || void 0 === e ? void 0 : e.inputRef) !== (null === (n = this.props.tagInputProps) || void 0 === n ? void 0 : n.inputRef) && ((0, s.k$)(null === (r = t.tagInputProps) || void 0 === r ? void 0 : r.inputRef, null), this.refHandlers.input = (0, s.Km)(this, "input", null === (i = this.props.tagInputProps) || void 0 === i ? void 0 : i.inputRef), (0, s.k$)(null === (o = this.props.tagInputProps) || void 0 === o ? void 0 : o.inputRef, this.input))
                    }, e.prototype.render = function() {
                        var t = this.props,
                            e = (t.openOnKeyDown, t.popoverProps, t.tagInputProps, (0, r._T)(t, ["openOnKeyDown", "popoverProps", "tagInputProps"]));
                        return a.createElement(this.TypedQueryList, (0, r.pi)({}, e, {
                            onItemSelect: this.handleItemSelect,
                            onQueryChange: this.handleQueryChange,
                            ref: this.refHandlers.queryList,
                            renderer: this.renderQueryList
                        }))
                    }, e.displayName = h.g + ".MultiSelect", e.defaultProps = {
                        fill: !1,
                        placeholder: "Search..."
                    }, e
                }(d.U)
        },
        1483: function(t, e, n) {
            "use strict";
            n.d(e, {
                P: function() {
                    return g
                }
            });
            var r = n(63647),
                i = n(94184),
                o = n.n(i),
                a = n(67294),
                s = n(4408),
                u = n(15360),
                c = n(53766),
                l = n(9421),
                f = n(72778),
                h = n(35307),
                d = n(14527),
                p = n(8463),
                g = function(t) {
                    function e() {
                        var e, n = t.apply(this, arguments) || this;
                        return n.state = {
                            isOpen: !1
                        }, n.TypedQueryList = p.n.ofType(), n.inputElement = null, n.queryList = null, n.handleInputRef = (0, s.Km)(n, "inputElement", null === (e = n.props.inputProps) || void 0 === e ? void 0 : e.inputRef), n.handleQueryListRef = function(t) {
                            return n.queryList = t
                        }, n.renderQueryList = function(t) {
                            var e, i = n.props,
                                s = i.fill,
                                l = i.filterable,
                                f = void 0 === l || l,
                                h = i.disabled,
                                p = void 0 !== h && h,
                                g = i.inputProps,
                                y = void 0 === g ? {} : g,
                                v = i.popoverProps,
                                m = void 0 === v ? {} : v,
                                b = i.matchTargetWidth;
                            s && (m.fill = !0), b && (null == m.modifiers && (m.modifiers = {}), m.modifiers.minWidth = {
                                enabled: !0,
                                fn: function(t) {
                                    return t.styles.width = t.offsets.reference.width + "px", t
                                },
                                order: 800
                            }, m.usePortal = !1, m.wrapperTagName = "div");
                            var w = a.createElement(u.BZ, (0, r.pi)({
                                    leftIcon: "search",
                                    placeholder: "Filter...",
                                    rightElement: n.maybeRenderClearButton(t.query)
                                }, y, {
                                    inputRef: n.handleInputRef,
                                    onChange: t.handleQueryChange,
                                    value: t.query
                                })),
                                _ = t.handleKeyDown,
                                P = t.handleKeyUp;
                            return a.createElement(u.J2, (0, r.pi)({
                                autoFocus: !1,
                                enforceFocus: !1,
                                isOpen: n.state.isOpen,
                                disabled: p,
                                position: c.Ly.BOTTOM_LEFT
                            }, m, {
                                className: o()(t.className, m.className),
                                onInteraction: n.handlePopoverInteraction,
                                popoverClassName: o()(d.x8, m.popoverClassName, (e = {}, e[d.Xv] = b, e)),
                                onOpening: n.handlePopoverOpening,
                                onOpened: n.handlePopoverOpened,
                                onClosing: n.handlePopoverClosing
                            }), a.createElement("div", {
                                onKeyDown: n.state.isOpen ? _ : n.handleTargetKeyDown,
                                onKeyUp: n.state.isOpen ? P : void 0
                            }, n.props.children), a.createElement("div", {
                                onKeyDown: _,
                                onKeyUp: P
                            }, f ? w : void 0, t.itemList))
                        }, n.handleTargetKeyDown = function(t) {
                            t.which !== l.NF && t.which !== l.qN || (t.preventDefault(), n.setState({
                                isOpen: !0
                            }))
                        }, n.handleItemSelect = function(t, e) {
                            var r, i;
                            n.setState({
                                isOpen: !1
                            }), null === (i = (r = n.props).onItemSelect) || void 0 === i || i.call(r, t, e)
                        }, n.handlePopoverInteraction = function(t, e) {
                            var r, i;
                            n.setState({
                                isOpen: t
                            }), null === (i = null === (r = n.props.popoverProps) || void 0 === r ? void 0 : r.onInteraction) || void 0 === i || i.call(r, t, e)
                        }, n.handlePopoverOpening = function(t) {
                            var e, r;
                            n.previousFocusedElement = document.activeElement, n.props.resetOnClose && n.resetQuery(), null === (r = null === (e = n.props.popoverProps) || void 0 === e ? void 0 : e.onOpening) || void 0 === r || r.call(e, t)
                        }, n.handlePopoverOpened = function(t) {
                            var e, r;
                            null != n.queryList && n.queryList.scrollActiveItemIntoView(), n.requestAnimationFrame((function() {
                                var t, e = n.props.inputProps;
                                !1 !== (void 0 === e ? {} : e).autoFocus && (null === (t = n.inputElement) || void 0 === t || t.focus())
                            })), null === (r = null === (e = n.props.popoverProps) || void 0 === e ? void 0 : e.onOpened) || void 0 === r || r.call(e, t)
                        }, n.handlePopoverClosing = function(t) {
                            var e, r;
                            n.requestAnimationFrame((function() {
                                void 0 !== n.previousFocusedElement && (n.previousFocusedElement.focus(), n.previousFocusedElement = void 0)
                            })), null === (r = null === (e = n.props.popoverProps) || void 0 === e ? void 0 : e.onClosing) || void 0 === r || r.call(e, t)
                        }, n.resetQuery = function() {
                            return n.queryList && n.queryList.setQuery("", !0)
                        }, n
                    }
                    return (0, r.ZT)(e, t), e.ofType = function() {
                        return e
                    }, e.prototype.render = function() {
                        var t = this.props,
                            e = (t.filterable, t.inputProps, t.popoverProps, (0, r._T)(t, ["filterable", "inputProps", "popoverProps"]));
                        return a.createElement(this.TypedQueryList, (0, r.pi)({}, e, {
                            onItemSelect: this.handleItemSelect,
                            ref: this.handleQueryListRef,
                            renderer: this.renderQueryList
                        }))
                    }, e.prototype.componentDidUpdate = function(t, e) {
                        var n, r, i, o, a;
                        (null === (n = t.inputProps) || void 0 === n ? void 0 : n.inputRef) !== (null === (r = this.props.inputProps) || void 0 === r ? void 0 : r.inputRef) && ((0, s.k$)(null === (i = t.inputProps) || void 0 === i ? void 0 : i.inputRef, null), this.handleInputRef = (0, s.Km)(this, "inputElement", null === (o = this.props.inputProps) || void 0 === o ? void 0 : o.inputRef), (0, s.k$)(null === (a = this.props.inputProps) || void 0 === a ? void 0 : a.inputRef, this.inputElement)), this.state.isOpen && !e.isOpen && null != this.queryList && this.queryList.scrollActiveItemIntoView()
                    }, e.prototype.maybeRenderClearButton = function(t) {
                        return t.length > 0 ? a.createElement(u.zx, {
                            icon: "cross",
                            minimal: !0,
                            onClick: this.resetQuery
                        }) : void 0
                    }, e.displayName = f.g + ".Select", e
                }(h.U)
        },
        63647: function(t, e, n) {
            "use strict";
            n.d(e, {
                ZT: function() {
                    return i
                },
                pi: function() {
                    return o
                },
                _T: function() {
                    return a
                }
            });
            var r = function(t, e) {
                return (r = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(t, e) {
                        t.__proto__ = e
                    } || function(t, e) {
                        for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n])
                    })(t, e)
            };

            function i(t, e) {
                function n() {
                    this.constructor = t
                }
                r(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n)
            }
            var o = function() {
                return (o = Object.assign || function(t) {
                    for (var e, n = 1, r = arguments.length; n < r; n++)
                        for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                    return t
                }).apply(this, arguments)
            };

            function a(t, e) {
                var n = {};
                for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
                if (null != t && "function" === typeof Object.getOwnPropertySymbols) {
                    var i = 0;
                    for (r = Object.getOwnPropertySymbols(t); i < r.length; i++) e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[i]) && (n[r[i]] = t[r[i]])
                }
                return n
            }
        },
        54479: function(t, e, n) {
            "use strict";
            n.d(e, {
                WT: function() {
                    return r
                }
            });
            var r = "undefined" !== typeof Float32Array ? Float32Array : Array;
            Math.random;
            Math.PI;
            Math.hypot || (Math.hypot = function() {
                for (var t = 0, e = arguments.length; e--;) t += arguments[e] * arguments[e];
                return Math.sqrt(t)
            })
        },
        69884: function(t, e, n) {
            "use strict";

            function r(t, e) {
                var n = e[0],
                    r = e[1],
                    i = e[2],
                    o = e[3],
                    a = e[4],
                    s = e[5],
                    u = e[6],
                    c = e[7],
                    l = e[8],
                    f = e[9],
                    h = e[10],
                    d = e[11],
                    p = e[12],
                    g = e[13],
                    y = e[14],
                    v = e[15],
                    m = n * s - r * a,
                    b = n * u - i * a,
                    w = n * c - o * a,
                    _ = r * u - i * s,
                    P = r * c - o * s,
                    E = i * c - o * u,
                    x = l * g - f * p,
                    S = l * y - h * p,
                    O = l * v - d * p,
                    T = f * y - h * g,
                    M = f * v - d * g,
                    C = h * v - d * y,
                    A = m * C - b * M + w * T + _ * O - P * S + E * x;
                return A ? (A = 1 / A, t[0] = (s * C - u * M + c * T) * A, t[1] = (i * M - r * C - o * T) * A, t[2] = (g * E - y * P + v * _) * A, t[3] = (h * P - f * E - d * _) * A, t[4] = (u * O - a * C - c * S) * A, t[5] = (n * C - i * O + o * S) * A, t[6] = (y * w - p * E - v * b) * A, t[7] = (l * E - h * w + d * b) * A, t[8] = (a * M - s * O + c * x) * A, t[9] = (r * O - n * M - o * x) * A, t[10] = (p * P - g * w + v * m) * A, t[11] = (f * w - l * P - d * m) * A, t[12] = (s * S - a * T - u * x) * A, t[13] = (n * T - r * S + i * x) * A, t[14] = (g * b - p * _ - y * m) * A, t[15] = (l * _ - f * b + h * m) * A, t) : null
            }

            function i(t, e, n) {
                var r = e[0],
                    i = e[1],
                    o = e[2],
                    a = e[3],
                    s = e[4],
                    u = e[5],
                    c = e[6],
                    l = e[7],
                    f = e[8],
                    h = e[9],
                    d = e[10],
                    p = e[11],
                    g = e[12],
                    y = e[13],
                    v = e[14],
                    m = e[15],
                    b = n[0],
                    w = n[1],
                    _ = n[2],
                    P = n[3];
                return t[0] = b * r + w * s + _ * f + P * g, t[1] = b * i + w * u + _ * h + P * y, t[2] = b * o + w * c + _ * d + P * v, t[3] = b * a + w * l + _ * p + P * m, b = n[4], w = n[5], _ = n[6], P = n[7], t[4] = b * r + w * s + _ * f + P * g, t[5] = b * i + w * u + _ * h + P * y, t[6] = b * o + w * c + _ * d + P * v, t[7] = b * a + w * l + _ * p + P * m, b = n[8], w = n[9], _ = n[10], P = n[11], t[8] = b * r + w * s + _ * f + P * g, t[9] = b * i + w * u + _ * h + P * y, t[10] = b * o + w * c + _ * d + P * v, t[11] = b * a + w * l + _ * p + P * m, b = n[12], w = n[13], _ = n[14], P = n[15], t[12] = b * r + w * s + _ * f + P * g, t[13] = b * i + w * u + _ * h + P * y, t[14] = b * o + w * c + _ * d + P * v, t[15] = b * a + w * l + _ * p + P * m, t
            }

            function o(t, e, n) {
                var r, i, o, a, s, u, c, l, f, h, d, p, g = n[0],
                    y = n[1],
                    v = n[2];
                return e === t ? (t[12] = e[0] * g + e[4] * y + e[8] * v + e[12], t[13] = e[1] * g + e[5] * y + e[9] * v + e[13], t[14] = e[2] * g + e[6] * y + e[10] * v + e[14], t[15] = e[3] * g + e[7] * y + e[11] * v + e[15]) : (r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], c = e[6], l = e[7], f = e[8], h = e[9], d = e[10], p = e[11], t[0] = r, t[1] = i, t[2] = o, t[3] = a, t[4] = s, t[5] = u, t[6] = c, t[7] = l, t[8] = f, t[9] = h, t[10] = d, t[11] = p, t[12] = r * g + s * y + f * v + e[12], t[13] = i * g + u * y + h * v + e[13], t[14] = o * g + c * y + d * v + e[14], t[15] = a * g + l * y + p * v + e[15]), t
            }

            function a(t, e, n) {
                var r = n[0],
                    i = n[1],
                    o = n[2];
                return t[0] = e[0] * r, t[1] = e[1] * r, t[2] = e[2] * r, t[3] = e[3] * r, t[4] = e[4] * i, t[5] = e[5] * i, t[6] = e[6] * i, t[7] = e[7] * i, t[8] = e[8] * o, t[9] = e[9] * o, t[10] = e[10] * o, t[11] = e[11] * o, t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15], t
            }
            n.d(e, {
                U_: function() {
                    return r
                },
                Jp: function() {
                    return i
                },
                Iu: function() {
                    return o
                },
                bA: function() {
                    return a
                }
            })
        },
        10616: function(t, e, n) {
            "use strict";
            n.d(e, {
                fF: function() {
                    return i
                }
            });
            var r = n(54479);

            function i(t, e, n) {
                var r = e[0],
                    i = e[1],
                    o = e[2],
                    a = e[3];
                return t[0] = n[0] * r + n[4] * i + n[8] * o + n[12] * a, t[1] = n[1] * r + n[5] * i + n[9] * o + n[13] * a, t[2] = n[2] * r + n[6] * i + n[10] * o + n[14] * a, t[3] = n[3] * r + n[7] * i + n[11] * o + n[15] * a, t
            }! function() {
                var t = function() {
                    var t = new r.WT(4);
                    return r.WT != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0), t
                }()
            }()
        },
        45668: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return Pn
                }
            });
            var r = n(67294),
                i = n(45697),
                o = n.n(i);
            let a = 1,
                s = 1;
            class u {
                constructor() {
                    this.time = 0, this.channels = new Map, this.animations = new Map, this.playing = !1, this.lastEngineTime = -1
                }
                addChannel(t) {
                    const {
                        delay: e = 0,
                        duration: n = Number.POSITIVE_INFINITY,
                        rate: r = 1,
                        repeat: i = 1
                    } = t, o = a++, s = {
                        time: 0,
                        delay: e,
                        duration: n,
                        rate: r,
                        repeat: i
                    };
                    return this._setChannelTime(s, this.time), this.channels.set(o, s), o
                }
                removeChannel(t) {
                    this.channels.delete(t);
                    for (const [e, n] of this.animations) n.channel === t && this.detachAnimation(e)
                }
                isFinished(t) {
                    const e = this.channels.get(t);
                    return void 0 !== e && this.time >= e.delay + e.duration * e.repeat
                }
                getTime(t) {
                    if (void 0 === t) return this.time;
                    const e = this.channels.get(t);
                    return void 0 === e ? -1 : e.time
                }
                setTime(t) {
                    this.time = Math.max(0, t);
                    const e = this.channels.values();
                    for (const r of e) this._setChannelTime(r, this.time);
                    const n = this.animations.values();
                    for (const r of n) {
                        const {
                            animation: t,
                            channel: e
                        } = r;
                        t.setTime(this.getTime(e))
                    }
                }
                play() {
                    this.playing = !0
                }
                pause() {
                    this.playing = !1, this.lastEngineTime = -1
                }
                reset() {
                    this.setTime(0)
                }
                attachAnimation(t, e) {
                    const n = s++;
                    return this.animations.set(n, {
                        animation: t,
                        channel: e
                    }), t.setTime(this.getTime(e)), n
                }
                detachAnimation(t) {
                    this.animations.delete(t)
                }
                update(t) {
                    this.playing && (-1 === this.lastEngineTime && (this.lastEngineTime = t), this.setTime(this.time + (t - this.lastEngineTime)), this.lastEngineTime = t)
                }
                _setChannelTime(t, e) {
                    const n = e - t.delay;
                    n >= t.duration * t.repeat ? t.time = t.duration * t.rate : (t.time = Math.max(0, n) % t.duration, t.time *= t.rate)
                }
            }
            var c = n(3472),
                l = n(553),
                f = n(14270),
                h = n(71997),
                d = n(50009),
                p = n(49300);

            function g(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var y = function() {
                function t(e, n, r) {
                    ! function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), this.id = e, this.context = r, this._loadCount = 0, this._subscribers = new Set, this.setData(n)
                }
                var e, n, r;
                return e = t, (n = [{
                    key: "subscribe",
                    value: function(t) {
                        this._subscribers.add(t)
                    }
                }, {
                    key: "unsubscribe",
                    value: function(t) {
                        this._subscribers.delete(t)
                    }
                }, {
                    key: "inUse",
                    value: function() {
                        return this._subscribers.size > 0
                    }
                }, {
                    key: "delete",
                    value: function() {}
                }, {
                    key: "getData",
                    value: function() {
                        var t = this;
                        return this.isLoaded ? this._error ? Promise.reject(this._error) : this._content : this._loader.then((function() {
                            return t.getData()
                        }))
                    }
                }, {
                    key: "setData",
                    value: function(t, e) {
                        if (t !== this._data || e) {
                            this._data = t;
                            var n, r, i = ++this._loadCount,
                                o = t;
                            if ("string" === typeof t && (o = (0, p.z)(t)), n = o, null != (r = Promise) && "undefined" !== typeof Symbol && r[Symbol.hasInstance] ? r[Symbol.hasInstance](n) : n instanceof r) {
                                var a = this;
                                this.isLoaded = !1, this._loader = o.then((function(t) {
                                    a._loadCount === i && (a.isLoaded = !0, a._error = null, a._content = t)
                                })).catch((function(t) {
                                    a._loadCount === i && (a.isLoaded = !0, a._error = t || !0)
                                }))
                            } else this.isLoaded = !0, this._error = null, this._content = t;
                            var s = !0,
                                u = !1,
                                c = void 0;
                            try {
                                for (var l, f = this._subscribers[Symbol.iterator](); !(s = (l = f.next()).done); s = !0) l.value.onChange(this.getData())
                            } catch (h) {
                                u = !0, c = h
                            } finally {
                                try {
                                    s || null == f.return || f.return()
                                } finally {
                                    if (u) throw c
                                }
                            }
                        }
                    }
                }]) && g(e.prototype, n), r && g(e, r), t
            }();

            function v(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var m = function() {
                    function t(e) {
                        var n = e.gl,
                            r = e.protocol;
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this.protocol = r || "resource://", this._context = {
                            gl: n,
                            resourceManager: this
                        }, this._resources = {}, this._consumers = {}, this._pruneRequest = null
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "contains",
                        value: function(t) {
                            return !!t.startsWith(this.protocol) || t in this._resources
                        }
                    }, {
                        key: "add",
                        value: function(t) {
                            var e = t.resourceId,
                                n = t.data,
                                r = t.forceUpdate,
                                i = void 0 !== r && r,
                                o = t.persistent,
                                a = void 0 === o || o,
                                s = this._resources[e];
                            s ? s.setData(n, i) : (s = new y(e, n, this._context), this._resources[e] = s), s.persistent = a
                        }
                    }, {
                        key: "remove",
                        value: function(t) {
                            var e = this._resources[t];
                            e && (e.delete(), delete this._resources[t])
                        }
                    }, {
                        key: "unsubscribe",
                        value: function(t) {
                            var e = t.consumerId,
                                n = this._consumers[e];
                            if (n) {
                                for (var r in n) {
                                    var i = n[r];
                                    i.resource && i.resource.unsubscribe(i)
                                }
                                delete this._consumers[e], this.prune()
                            }
                        }
                    }, {
                        key: "subscribe",
                        value: function(t) {
                            var e = t.resourceId,
                                n = t.onChange,
                                r = t.consumerId,
                                i = t.requestId,
                                o = void 0 === i ? "default" : i,
                                a = this._resources,
                                s = this.protocol;
                            e.startsWith(s) && (a[e = e.replace(s, "")] || this.add({
                                resourceId: e,
                                data: null,
                                persistent: !1
                            }));
                            var u = a[e];
                            if (this._track(r, o, u, n), u) return u.getData()
                        }
                    }, {
                        key: "prune",
                        value: function() {
                            if (!this._pruneRequest) {
                                var t = this;
                                this._pruneRequest = setTimeout((function() {
                                    return t._prune()
                                }), 0)
                            }
                        }
                    }, {
                        key: "finalize",
                        value: function() {
                            for (var t in this._resources) this._resources[t].delete()
                        }
                    }, {
                        key: "_track",
                        value: function(t, e, n, r) {
                            var i = this._consumers,
                                o = i[t] = i[t] || {},
                                a = o[e] || {};
                            a.resource && (a.resource.unsubscribe(a), a.resource = null, this.prune()), n && (o[e] = a, a.onChange = r, a.resource = n, n.subscribe(a))
                        }
                    }, {
                        key: "_prune",
                        value: function() {
                            this._pruneRequest = null;
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = Object.keys(this._resources)[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) {
                                    var o = r.value,
                                        a = this._resources[o];
                                    a.persistent || a.inUse() || (a.delete(), delete this._resources[o])
                                }
                            } catch (s) {
                                e = !0, n = s
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                        }
                    }]) && v(e.prototype, n), r && v(e, r), t
                }(),
                b = n(13649),
                w = n(43426),
                _ = n(14917),
                P = [_.Z],
                E = ["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)", "vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)", "vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)", "fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"];

            function x(t) {
                var e = w.Z.getDefaultProgramManager(t),
                    n = !0,
                    r = !1,
                    i = void 0;
                try {
                    for (var o, a = P[Symbol.iterator](); !(n = (o = a.next()).done); n = !0) {
                        var s = o.value;
                        e.addDefaultModule(s)
                    }
                } catch (p) {
                    r = !0, i = p
                } finally {
                    try {
                        n || null == a.return || a.return()
                    } finally {
                        if (r) throw i
                    }
                }
                var u = !0,
                    c = !1,
                    l = void 0;
                try {
                    for (var f, h = E[Symbol.iterator](); !(u = (f = h.next()).done); u = !0) {
                        var d = f.value;
                        e.addShaderHook(d)
                    }
                } catch (p) {
                    c = !0, l = p
                } finally {
                    try {
                        u || null == h.return || h.return()
                    } finally {
                        if (c) throw l
                    }
                }
                return e
            }

            function S(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function O(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function T(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function M(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        T(t, e, n[e])
                    }))
                }
                return t
            }
            var C = Object.seal({
                    layerManager: null,
                    resourceManager: null,
                    deck: null,
                    gl: null,
                    stats: null,
                    shaderCache: null,
                    pickingFBO: null,
                    mousePosition: null,
                    userData: {}
                }),
                A = function() {
                    function t(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            r = n.deck,
                            i = n.stats,
                            o = n.viewport,
                            a = n.timeline;
                        S(this, t), this.lastRenderedLayers = [], this.layers = [], this.resourceManager = new m({
                            gl: e,
                            protocol: "deck://"
                        }), this.context = M({}, C, {
                            layerManager: this,
                            gl: e,
                            deck: r,
                            programManager: e && x(e),
                            stats: i || new d.jk({
                                id: "deck.gl"
                            }),
                            viewport: o || new b.Z({
                                id: "DEFAULT-INITIAL-VIEWPORT"
                            }),
                            timeline: a || new u,
                            resourceManager: this.resourceManager
                        }), this._nextLayers = null, this._needsRedraw = "Initial render", this._needsUpdate = !1, this._debug = !1, this.activateViewport = this.activateViewport.bind(this), Object.seal(this)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "finalize",
                        value: function() {
                            this.resourceManager.finalize();
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = this.layers[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) {
                                    var o = r.value;
                                    this._finalizeLayer(o)
                                }
                            } catch (a) {
                                e = !0, n = a
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                        }
                    }, {
                        key: "needsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                    clearRedrawFlags: !1
                                },
                                e = this._needsRedraw;
                            t.clearRedrawFlags && (this._needsRedraw = !1);
                            var n = !0,
                                r = !1,
                                i = void 0;
                            try {
                                for (var o, a = this.layers[Symbol.iterator](); !(n = (o = a.next()).done); n = !0) {
                                    var s = o.value,
                                        u = s.getNeedsRedraw(t);
                                    e = e || u
                                }
                            } catch (c) {
                                r = !0, i = c
                            } finally {
                                try {
                                    n || null == a.return || a.return()
                                } finally {
                                    if (r) throw i
                                }
                            }
                            return e
                        }
                    }, {
                        key: "needsUpdate",
                        value: function() {
                            return this._nextLayers && this._nextLayers !== this.lastRenderedLayers ? "layers changed" : this._needsUpdate
                        }
                    }, {
                        key: "setNeedsRedraw",
                        value: function(t) {
                            this._needsRedraw = this._needsRedraw || t
                        }
                    }, {
                        key: "setNeedsUpdate",
                        value: function(t) {
                            this._needsUpdate = this._needsUpdate || t
                        }
                    }, {
                        key: "getLayers",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                e = t.layerIds,
                                n = void 0 === e ? null : e;
                            return n ? this.layers.filter((function(t) {
                                return n.find((function(e) {
                                    return 0 === t.id.indexOf(e)
                                }))
                            })) : this.layers
                        }
                    }, {
                        key: "setProps",
                        value: function(t) {
                            "debug" in t && (this._debug = t.debug), "userData" in t && (this.context.userData = t.userData), "layers" in t && (this._nextLayers = t.layers), "onError" in t && (this.context.onError = t.onError)
                        }
                    }, {
                        key: "setLayers",
                        value: function(t, e) {
                            (0, f.Z)("layerManager.setLayers", this, e, t), this.lastRenderedLayers = t, t = (0, h.x)(t, Boolean);
                            var n = !0,
                                r = !1,
                                i = void 0;
                            try {
                                for (var o, a = t[Symbol.iterator](); !(n = (o = a.next()).done); n = !0) o.value.context = this.context
                            } catch (s) {
                                r = !0, i = s
                            } finally {
                                try {
                                    n || null == a.return || a.return()
                                } finally {
                                    if (r) throw i
                                }
                            }
                            return this._updateLayers(this.layers, t), this
                        }
                    }, {
                        key: "updateLayers",
                        value: function() {
                            var t = this.needsUpdate();
                            t && (this.setNeedsRedraw("updating layers: ".concat(t)), this.setLayers(this._nextLayers || this.lastRenderedLayers, t)), this._nextLayers = null
                        }
                    }, {
                        key: "activateViewport",
                        value: function(t) {
                            return (0, f.Z)("layerManager.activateViewport", this, t), t && (this.context.viewport = t), this
                        }
                    }, {
                        key: "_handleError",
                        value: function(t, e, n) {
                            n.raiseError(e, "".concat(t, " of ").concat(n))
                        }
                    }, {
                        key: "_updateLayers",
                        value: function(t, e) {
                            var n = {},
                                r = !0,
                                i = !1,
                                o = void 0;
                            try {
                                for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done); r = !0) {
                                    var u = a.value;
                                    n[u.id] ? l.Z.warn("Multiple old layers with same id ".concat(u.id))() : n[u.id] = u
                                }
                            } catch (v) {
                                i = !0, o = v
                            } finally {
                                try {
                                    r || null == s.return || s.return()
                                } finally {
                                    if (i) throw o
                                }
                            }
                            var c = [];
                            this._updateSublayersRecursively(e, n, c), this._finalizeOldLayers(n);
                            var f = !1,
                                h = !0,
                                d = !1,
                                p = void 0;
                            try {
                                for (var g, y = c[Symbol.iterator](); !(h = (g = y.next()).done); h = !0)
                                    if (g.value.hasUniformTransition()) {
                                        f = !0;
                                        break
                                    }
                            } catch (v) {
                                d = !0, p = v
                            } finally {
                                try {
                                    h || null == y.return || y.return()
                                } finally {
                                    if (d) throw p
                                }
                            }
                            this._needsUpdate = f, this.layers = c
                        }
                    }, {
                        key: "_updateSublayersRecursively",
                        value: function(t, e, n) {
                            var r = !0,
                                i = !1,
                                o = void 0;
                            try {
                                for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done); r = !0) {
                                    var u = a.value;
                                    u.context = this.context;
                                    var c = e[u.id];
                                    null === c && l.Z.warn("Multiple new layers with same id ".concat(u.id))(), e[u.id] = null;
                                    var f = null;
                                    try {
                                        this._debug && c !== u && u.validateProps(), c ? (this._transferLayerState(c, u), this._updateLayer(u)) : this._initializeLayer(u), n.push(u), f = u.isComposite && u.getSubLayers()
                                    } catch (h) {
                                        this._handleError("matching", h, u)
                                    }
                                    f && this._updateSublayersRecursively(f, e, n)
                                }
                            } catch (h) {
                                i = !0, o = h
                            } finally {
                                try {
                                    r || null == s.return || s.return()
                                } finally {
                                    if (i) throw o
                                }
                            }
                        }
                    }, {
                        key: "_finalizeOldLayers",
                        value: function(t) {
                            for (var e in t) {
                                var n = t[e];
                                n && this._finalizeLayer(n)
                            }
                        }
                    }, {
                        key: "_initializeLayer",
                        value: function(t) {
                            try {
                                t._initialize(), t.lifecycle = c.d.INITIALIZED
                            } catch (e) {
                                this._handleError("initialization", e, t)
                            }
                        }
                    }, {
                        key: "_transferLayerState",
                        value: function(t, e) {
                            e._transferState(t), e.lifecycle = c.d.MATCHED, e !== t && (t.lifecycle = c.d.AWAITING_GC)
                        }
                    }, {
                        key: "_updateLayer",
                        value: function(t) {
                            try {
                                t._update()
                            } catch (e) {
                                this._handleError("update", e, t)
                            }
                        }
                    }, {
                        key: "_finalizeLayer",
                        value: function(t) {
                            this._needsRedraw = this._needsRedraw || "finalized ".concat(t), t.lifecycle = c.d.AWAITING_FINALIZATION;
                            try {
                                t._finalize(), t.lifecycle = c.d.FINALIZED
                            } catch (e) {
                                this._handleError("finalization", e, t)
                            }
                        }
                    }]) && O(e.prototype, n), r && O(e, r), t
                }(),
                k = n(61310);

            function I(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function j(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function L(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function R(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        L(t, e, n[e])
                    }))
                }
                return t
            }
            var D = function() {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        I(this, t), this.views = [], this.width = 100, this.height = 100, this.viewState = {}, this.controllers = {}, this.timeline = e.timeline, this._viewports = [], this._viewportMap = {}, this._isUpdating = !1, this._needsRedraw = "Initial render", this._needsUpdate = !0, this._eventManager = e.eventManager, this._eventCallbacks = {
                            onViewStateChange: e.onViewStateChange,
                            onInteractionStateChange: e.onInteractionStateChange
                        }, Object.seal(this), this.setProps(e)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "finalize",
                        value: function() {
                            for (var t in this.controllers) this.controllers[t] && this.controllers[t].finalize();
                            this.controllers = {}
                        }
                    }, {
                        key: "needsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                    clearRedrawFlags: !1
                                },
                                e = this._needsRedraw;
                            return t.clearRedrawFlags && (this._needsRedraw = !1), e
                        }
                    }, {
                        key: "setNeedsUpdate",
                        value: function(t) {
                            this._needsUpdate = this._needsUpdate || t, this._needsRedraw = this._needsRedraw || t
                        }
                    }, {
                        key: "updateViewStates",
                        value: function() {
                            for (var t in this.controllers) {
                                var e = this.controllers[t];
                                e && e.updateTransition()
                            }
                        }
                    }, {
                        key: "getViewports",
                        value: function(t) {
                            return t ? this._viewports.filter((function(e) {
                                return e.containsPixel(t)
                            })) : this._viewports
                        }
                    }, {
                        key: "getViews",
                        value: function() {
                            var t = {};
                            return this.views.forEach((function(e) {
                                t[e.id] = e
                            })), t
                        }
                    }, {
                        key: "getView",
                        value: function(t) {
                            return "string" === typeof t ? this.views.find((function(e) {
                                return e.id === t
                            })) : t
                        }
                    }, {
                        key: "getViewState",
                        value: function(t) {
                            var e = this.getView(t),
                                n = e && this.viewState[e.getViewStateId()] || this.viewState;
                            return e ? e.filterViewState(n) : n
                        }
                    }, {
                        key: "getViewport",
                        value: function(t) {
                            return this._viewportMap[t]
                        }
                    }, {
                        key: "unproject",
                        value: function(t, e) {
                            for (var n = this.getViewports(), r = {
                                    x: t[0],
                                    y: t[1]
                                }, i = n.length - 1; i >= 0; --i) {
                                var o = n[i];
                                if (o.containsPixel(r)) {
                                    var a = t.slice();
                                    return a[0] -= o.x, a[1] -= o.y, o.unproject(a, e)
                                }
                            }
                            return null
                        }
                    }, {
                        key: "setProps",
                        value: function(t) {
                            "views" in t && this._setViews(t.views), "viewState" in t && this._setViewState(t.viewState), ("width" in t || "height" in t) && this._setSize(t.width, t.height), this._isUpdating || this._update()
                        }
                    }, {
                        key: "_update",
                        value: function() {
                            this._isUpdating = !0, this._needsUpdate && (this._needsUpdate = !1, this._rebuildViewports()), this._needsUpdate && (this._needsUpdate = !1, this._rebuildViewports()), this._isUpdating = !1
                        }
                    }, {
                        key: "_setSize",
                        value: function(t, e) {
                            t === this.width && e === this.height || (this.width = t, this.height = e, this.setNeedsUpdate("Size changed"))
                        }
                    }, {
                        key: "_setViews",
                        value: function(t) {
                            t = (0, h.x)(t, Boolean), this._diffViews(t, this.views) && this.setNeedsUpdate("views changed"), this.views = t
                        }
                    }, {
                        key: "_setViewState",
                        value: function(t) {
                            t ? (!(0, k.v)(t, this.viewState) && this.setNeedsUpdate("viewState changed"), this.viewState = t) : l.Z.warn("missing `viewState` or `initialViewState`")()
                        }
                    }, {
                        key: "_onViewStateChange",
                        value: function(t, e) {
                            e.viewId = t, this._eventCallbacks.onViewStateChange && this._eventCallbacks.onViewStateChange(e)
                        }
                    }, {
                        key: "_createController",
                        value: function(t, e) {
                            return new(0, e.type)(R({
                                timeline: this.timeline,
                                eventManager: this._eventManager,
                                onViewStateChange: this._onViewStateChange.bind(this, e.id),
                                onStateChange: this._eventCallbacks.onInteractionStateChange,
                                makeViewport: function(e) {
                                    return t._getViewport(e, {
                                        width: e.width,
                                        height: e.height
                                    })
                                }
                            }, e))
                        }
                    }, {
                        key: "_updateController",
                        value: function(t, e, n, r) {
                            var i = t.controller;
                            return i ? (i = R({}, e, t.props, i, {
                                id: t.id,
                                x: n.x,
                                y: n.y,
                                width: n.width,
                                height: n.height
                            }), r ? r.setProps(i) : r = this._createController(t, i), r) : null
                        }
                    }, {
                        key: "_rebuildViewports",
                        value: function() {
                            var t = this,
                                e = t.width,
                                n = t.height,
                                r = t.views,
                                i = this.controllers;
                            this._viewports = [], this.controllers = {};
                            for (var o = !1, a = r.length; a--;) {
                                var s = r[a],
                                    u = this.getViewState(s),
                                    c = s.makeViewport({
                                        width: e,
                                        height: n,
                                        viewState: u
                                    }),
                                    l = i[s.id];
                                s.controller && !l && (o = !0), !o && s.controller || !l || (l.finalize(), l = null), this.controllers[s.id] = this._updateController(s, u, c, l), this._viewports.unshift(c)
                            }
                            for (var f in i) i[f] && !this.controllers[f] && i[f].finalize();
                            this._buildViewportMap()
                        }
                    }, {
                        key: "_buildViewportMap",
                        value: function() {
                            var t = this;
                            this._viewportMap = {}, this._viewports.forEach((function(e) {
                                e.id && (t._viewportMap[e.id] = t._viewportMap[e.id] || e)
                            }))
                        }
                    }, {
                        key: "_diffViews",
                        value: function(t, e) {
                            return t.length !== e.length || t.some((function(n, r) {
                                return !t[r].equals(e[r])
                            }))
                        }
                    }]) && j(e.prototype, n), r && j(e, r), t
                }(),
                F = n(22260),
                N = n(51621);

            function z(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }
            var B = [255, 255, 255],
                U = 0,
                G = function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    z(this, t);
                    var n = e.color,
                        r = void 0 === n ? B : n,
                        i = e.intensity,
                        o = void 0 === i ? 1 : i;
                    this.id = e.id || "ambient-".concat(U++), this.color = r, this.intensity = o, this.type = "ambient"
                },
                Z = n(76695);

            function V(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function H(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var W = [255, 255, 255],
                Y = [0, 0, -1],
                q = 0,
                $ = function() {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        V(this, t);
                        var n = e.color,
                            r = void 0 === n ? W : n,
                            i = e.intensity,
                            o = void 0 === i ? 1 : i,
                            a = e.direction,
                            s = void 0 === a ? Y : a,
                            u = e._shadow,
                            c = void 0 !== u && u;
                        this.id = e.id || "directional-".concat(q++), this.color = r, this.intensity = o, this.type = "directional", this.direction = new Z.Z(s).normalize().toArray(), this.shadow = c
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "getProjectedLight",
                        value: function() {
                            return this
                        }
                    }]) && H(e.prototype, n), r && H(e, r), t
                }();

            function X(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function K(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function J(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Q(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        J(t, e, n[e])
                    }))
                }
                return t
            }
            var tt = function() {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        X(this, t);
                        var n = e.id,
                            r = void 0 === n ? "effect" : n;
                        this.id = r, this.props = Q({}, e)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "preRender",
                        value: function() {}
                    }, {
                        key: "getModuleParameters",
                        value: function() {}
                    }, {
                        key: "cleanup",
                        value: function() {}
                    }]) && K(e.prototype, n), r && K(e, r), t
                }(),
                et = n(99572);

            function nt(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function rt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function it(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function ot(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        it(t, e, n[e])
                    }))
                }
                return t
            }
            var at = function() {
                    function t(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        nt(this, t);
                        var r = n.id,
                            i = void 0 === r ? "pass" : r;
                        this.id = i, this.gl = e, this.props = ot({}, n)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "setProps",
                        value: function(t) {
                            Object.assign(this.props, t)
                        }
                    }, {
                        key: "render",
                        value: function() {}
                    }, {
                        key: "cleanup",
                        value: function() {}
                    }]) && rt(e.prototype, n), r && rt(e, r), t
                }(),
                st = n(1418),
                ut = n(26047);

            function ct(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function lt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function ft(t) {
                return (ft = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function ht(t, e) {
                return !e || "object" !== pt(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function dt(t, e) {
                return (dt = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var pt = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function gt(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = ft(t);
                    if (e) {
                        var i = ft(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return ht(this, n)
                }
            }
            var yt = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && dt(t, e)
                }(o, t);
                var e, n, r, i = gt(o);

                function o() {
                    return ct(this, o), i.apply(this, arguments)
                }
                return e = o, (n = [{
                    key: "render",
                    value: function(t) {
                        var e = this.gl;
                        return (0, st.dR)(e, {
                            framebuffer: t.target
                        }), this._drawLayers(t)
                    }
                }, {
                    key: "_drawLayers",
                    value: function(t) {
                        var e = t.viewports,
                            n = t.views,
                            r = t.onViewportActive,
                            i = t.clearCanvas,
                            o = void 0 === i || i;
                        t.pass = t.pass || "unknown";
                        var a = this.gl;
                        o && function(t) {
                            var e = t.drawingBufferWidth,
                                n = t.drawingBufferHeight;
                            (0, st.dR)(t, {
                                viewport: [0, 0, e, n]
                            }), t.clear(16640)
                        }(a);
                        var s = [],
                            u = !0,
                            c = !1,
                            l = void 0;
                        try {
                            for (var f, h = e[Symbol.iterator](); !(u = (f = h.next()).done); u = !0) {
                                var d = f.value,
                                    p = d.viewport || d,
                                    g = n && n[p.id];
                                r(p);
                                var y = this._getDrawLayerParams(p, t);
                                t.view = g;
                                var v = p.subViewports || [p],
                                    m = !0,
                                    b = !1,
                                    w = void 0;
                                try {
                                    for (var _, P = v[Symbol.iterator](); !(m = (_ = P.next()).done); m = !0) {
                                        var E = _.value;
                                        t.viewport = E;
                                        var x = this._drawLayersInViewport(a, t, y);
                                        s.push(x)
                                    }
                                } catch (S) {
                                    b = !0, w = S
                                } finally {
                                    try {
                                        m || null == P.return || P.return()
                                    } finally {
                                        if (b) throw w
                                    }
                                }
                            }
                        } catch (S) {
                            c = !0, l = S
                        } finally {
                            try {
                                u || null == h.return || h.return()
                            } finally {
                                if (c) throw l
                            }
                        }
                        return s
                    }
                }, {
                    key: "_getDrawLayerParams",
                    value: function(t, e) {
                        for (var n = e.layers, r = e.pass, i = e.layerFilter, o = e.effects, a = e.moduleParameters, s = [], u = vt(), c = {
                                viewport: t,
                                isPicking: r.startsWith("picking"),
                                renderPass: r
                            }, l = {}, f = 0; f < n.length; f++) {
                            var h = n[f],
                                d = this._shouldDrawLayer(h, c, i, l),
                                p = {
                                    shouldDrawLayer: d,
                                    layerRenderIndex: u(h, d)
                                };
                            d && (p.moduleParameters = this._getModuleParameters(h, o, r, a), p.layerParameters = this.getLayerParameters(h, f, t)), s[f] = p
                        }
                        return s
                    }
                }, {
                    key: "_drawLayersInViewport",
                    value: function(t, e, n) {
                        var r = e.layers,
                            i = e.pass,
                            o = e.viewport,
                            a = e.view,
                            s = function(t, e) {
                                var n = e.viewport,
                                    r = t.canvas ? t.canvas.clientHeight || t.canvas.height : 100,
                                    i = n,
                                    o = (0, st.w)(t);
                                return [i.x * o, (r - i.y - i.height) * o, i.width * o, i.height * o]
                            }(t, {
                                viewport: o
                            });
                        if (a && a.props.clear) {
                            var u = !0 === a.props.clear ? {
                                color: !0,
                                depth: !0
                            } : a.props.clear;
                            (0, st.s8)(t, {
                                scissorTest: !0,
                                scissor: s
                            }, (function() {
                                return (0, ut.Z)(t, u)
                            }))
                        }
                        var c = {
                            totalCount: r.length,
                            visibleCount: 0,
                            compositeCount: 0,
                            pickableCount: 0
                        };
                        (0, st.dR)(t, {
                            viewport: s
                        });
                        for (var l = 0; l < r.length; l++) {
                            var f = r[l],
                                h = n[l],
                                d = h.shouldDrawLayer,
                                p = h.layerRenderIndex,
                                g = h.moduleParameters,
                                y = h.layerParameters;
                            if (d && f.props.pickable && c.pickableCount++, f.isComposite) c.compositeCount++;
                            else if (d) {
                                c.visibleCount++, g.viewport = o;
                                try {
                                    f.drawLayer({
                                        moduleParameters: g,
                                        uniforms: {
                                            layerIndex: p
                                        },
                                        parameters: y
                                    })
                                } catch (v) {
                                    f.raiseError(v, "drawing ".concat(f, " to ").concat(i))
                                }
                            }
                        }
                        return c
                    }
                }, {
                    key: "shouldDrawLayer",
                    value: function(t) {
                        return !0
                    }
                }, {
                    key: "getModuleParameters",
                    value: function(t, e) {
                        return null
                    }
                }, {
                    key: "getLayerParameters",
                    value: function(t, e) {
                        return t.props.parameters
                    }
                }, {
                    key: "_shouldDrawLayer",
                    value: function(t, e, n, r) {
                        if (!this.shouldDrawLayer(t) || !t.props.visible) return !1;
                        e.layer = t;
                        for (var i = t.parent; i;) {
                            if (!i.props.visible || !i.filterSubLayer(e)) return !1;
                            e.layer = i, i = i.parent
                        }
                        if (n) {
                            var o = e.layer.id;
                            if (o in r || (r[o] = n(e)), !r[o]) return !1
                        }
                        return t.activateViewport(e.viewport), !0
                    }
                }, {
                    key: "_getModuleParameters",
                    value: function(t, e, n, r) {
                        var i = Object.assign(Object.create(t.props), {
                            autoWrapLongitude: t.wrapLongitude,
                            viewport: t.context.viewport,
                            mousePosition: t.context.mousePosition,
                            pickingActive: 0,
                            devicePixelRatio: (0, st.w)(this.gl)
                        });
                        if (e) {
                            var o = !0,
                                a = !1,
                                s = void 0;
                            try {
                                for (var u, c = e[Symbol.iterator](); !(o = (u = c.next()).done); o = !0) {
                                    var l = u.value;
                                    Object.assign(i, l.getModuleParameters(t))
                                }
                            } catch (f) {
                                a = !0, s = f
                            } finally {
                                try {
                                    o || null == c.return || c.return()
                                } finally {
                                    if (a) throw s
                                }
                            }
                        }
                        return Object.assign(i, this.getModuleParameters(t, e), r)
                    }
                }]) && lt(e.prototype, n), r && lt(e, r), o
            }(at);

            function vt() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = {},
                    r = function(i, o) {
                        var a, s = i.props._offset,
                            u = i.id,
                            c = i.parent && i.parent.id;
                        if (c && !(c in e) && r(i.parent, !1), c in n) {
                            var l = n[c] = n[c] || vt(e[c], e);
                            a = l(i, o), n[u] = l
                        } else Number.isFinite(s) ? (a = s + (e[c] || 0), n[u] = null) : a = t;
                        return o && a >= t && (t = a + 1), e[u] = a, a
                    };
                return r
            }
            var mt = n(94041),
                bt = n(53849);

            function wt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function _t(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Pt(t, e, n) {
                return (Pt = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = Et(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function Et(t) {
                return (Et = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function xt(t, e) {
                return !e || "object" !== Ot(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function St(t, e) {
                return (St = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var Ot = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function Tt(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = Et(t);
                    if (e) {
                        var i = Et(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return xt(this, n)
                }
            }
            var Mt = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && St(t, e)
                    }(o, t);
                    var e, n, r, i = Tt(o);

                    function o(t, e) {
                        var n, r, a;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, o), (n = i.call(this, t, e)).shadowMap = new N.Z(t, {
                            width: 1,
                            height: 1,
                            parameters: (r = {}, _t(r, 10241, 9729), _t(r, 10240, 9729), _t(r, 10242, 33071), _t(r, 10243, 33071), r)
                        }), n.depthBuffer = new mt.Z(t, {
                            format: 33189,
                            width: 1,
                            height: 1
                        }), n.fbo = new bt.Z(t, {
                            id: "shadowmap",
                            width: 1,
                            height: 1,
                            attachments: (a = {}, _t(a, 36064, n.shadowMap), _t(a, 36096, n.depthBuffer), a)
                        }), n
                    }
                    return e = o, (n = [{
                        key: "render",
                        value: function(t) {
                            var e = this,
                                n = this.fbo;
                            (0, st.s8)(this.gl, {
                                depthRange: [0, 1],
                                depthTest: !0,
                                blend: !1,
                                clearColor: [1, 1, 1, 1]
                            }, (function() {
                                var r = t.viewports[0],
                                    i = (0, st.w)(e.gl),
                                    a = r.width * i,
                                    s = r.height * i;
                                a === n.width && s === n.height || n.resize({
                                    width: a,
                                    height: s
                                }), Pt(Et(o.prototype), "render", e).call(e, function(t) {
                                    for (var e = 1; e < arguments.length; e++) {
                                        var n = null != arguments[e] ? arguments[e] : {},
                                            r = Object.keys(n);
                                        "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                            return Object.getOwnPropertyDescriptor(n, t).enumerable
                                        })))), r.forEach((function(e) {
                                            _t(t, e, n[e])
                                        }))
                                    }
                                    return t
                                }({}, t, {
                                    target: n,
                                    pass: "shadow"
                                }))
                            }))
                        }
                    }, {
                        key: "shouldDrawLayer",
                        value: function(t) {
                            return !1 !== t.props.shadowEnabled
                        }
                    }, {
                        key: "getModuleParameters",
                        value: function() {
                            return {
                                drawToShadowMap: !0
                            }
                        }
                    }, {
                        key: "delete",
                        value: function() {
                            this.fbo && (this.fbo.delete(), this.fbo = null), this.shadowMap && (this.shadowMap.delete(), this.shadowMap = null), this.depthBuffer && (this.depthBuffer.delete(), this.depthBuffer = null)
                        }
                    }]) && wt(e.prototype, n), r && wt(e, r), o
                }(yt),
                Ct = n(87529),
                At = n(328),
                kt = n(78866);

            function It(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function jt(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || Rt(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function Lt(t) {
                return function(t) {
                    if (Array.isArray(t)) return It(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                }(t) || Rt(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function Rt(t, e) {
                if (t) {
                    if ("string" === typeof t) return It(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? It(t, e) : void 0
                }
            }
            var Dt = (0, At.Z)((function(t) {
                    var e = t.viewport,
                        n = t.center;
                    return new et.Z(e.viewProjectionMatrix).invert().transform(n)
                })),
                Ft = (0, At.Z)((function(t) {
                    var e = t.viewport,
                        n = t.shadowMatrices,
                        r = [],
                        i = e.pixelUnprojectionMatrix,
                        o = e.isGeospatial ? void 0 : 1,
                        a = [
                            [0, 0, o],
                            [e.width, 0, o],
                            [0, e.height, o],
                            [e.width, e.height, o],
                            [0, 0, -1],
                            [e.width, 0, -1],
                            [0, e.height, -1],
                            [e.width, e.height, -1]
                        ].map((function(t) {
                            return function(t, e) {
                                var n = jt(t, 3),
                                    r = n[0],
                                    i = n[1],
                                    o = n[2],
                                    a = (0, kt.CT)([r, i, o], e);
                                if (Number.isFinite(o)) return a;
                                return [a[0], a[1], 0]
                            }(t, i)
                        })),
                        s = !0,
                        u = !1,
                        c = void 0;
                    try {
                        for (var l, f = function(t, n) {
                                var i, o, s, u, c, l, f = n.value,
                                    h = f.clone().translate(new Z.Z(e.center).negate()),
                                    d = a.map((function(t) {
                                        return h.transform(t)
                                    })),
                                    p = (new et.Z).ortho({
                                        left: (i = Math).min.apply(i, Lt(d.map((function(t) {
                                            return t[0]
                                        })))),
                                        right: (o = Math).max.apply(o, Lt(d.map((function(t) {
                                            return t[0]
                                        })))),
                                        bottom: (s = Math).min.apply(s, Lt(d.map((function(t) {
                                            return t[1]
                                        })))),
                                        top: (u = Math).max.apply(u, Lt(d.map((function(t) {
                                            return t[1]
                                        })))),
                                        near: (c = Math).min.apply(c, Lt(d.map((function(t) {
                                            return -t[2]
                                        })))),
                                        far: (l = Math).max.apply(l, Lt(d.map((function(t) {
                                            return -t[2]
                                        }))))
                                    });
                                r.push(p.multiplyRight(f))
                            }, h = n[Symbol.iterator](); !(s = (l = h.next()).done); s = !0) f(0, l)
                    } catch (d) {
                        u = !0, c = d
                    } finally {
                        try {
                            s || null == h.return || h.return()
                        } finally {
                            if (u) throw c
                        }
                    }
                    return r
                })),
                Nt = [0, 0, 0, 1],
                zt = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];

            function Bt() {
                for (var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = {
                        shadow_uDrawShadowMap: Boolean(t.drawToShadowMap),
                        shadow_uUseShadowMap: !!t.shadowMaps && t.shadowMaps.length > 0,
                        shadow_uColor: t.shadowColor || Nt,
                        shadow_uLightId: t.shadowLightId || 0,
                        shadow_uLightCount: t.shadowMatrices.length
                    }, r = Dt({
                        viewport: t.viewport,
                        center: e.project_uCenter
                    }), i = [], o = Ft({
                        shadowMatrices: t.shadowMatrices,
                        viewport: t.viewport
                    }).slice(), a = 0; a < t.shadowMatrices.length; a++) {
                    var s = o[a],
                        u = s.clone().translate(new Z.Z(t.viewport.center).negate());
                    e.project_uCoordinateSystem === Ct.Df.LNGLAT && e.project_uProjectionMode === Ct.zG.WEB_MERCATOR ? (o[a] = u, i[a] = r) : (o[a] = s.clone().multiplyRight(zt), i[a] = u.transform(r))
                }
                for (var c = 0; c < o.length; c++) n["shadow_uViewProjectionMatrices[".concat(c, "]")] = o[c], n["shadow_uProjectCenters[".concat(c, "]")] = i[c], t.shadowMaps && t.shadowMaps.length > 0 ? n["shadow_uShadowMap".concat(c)] = t.shadowMaps[c] : n["shadow_uShadowMap".concat(c)] = t.dummyShadowMap;
                return n
            }
            var Ut = {
                name: "shadow",
                dependencies: [_.Z],
                vs: "\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n",
                fs: "\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n",
                inject: {
                    "vs:DECKGL_FILTER_GL_POSITION": "\n    position = shadow_setVertexPosition(geometry.position);\n    ",
                    "fs:DECKGL_FILTER_COLOR": "\n    color = shadow_filterShadowColor(color);\n    "
                },
                getUniforms: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    if (t.drawToShadowMap || t.shadowMaps && t.shadowMaps.length > 0) {
                        var n = t.shadowEnabled,
                            r = void 0 === n || n;
                        return r && t.shadowMatrices && t.shadowMatrices.length > 0 ? Bt(t, e) : {
                            shadow_uDrawShadowMap: !1,
                            shadow_uUseShadowMap: !1
                        }
                    }
                    return {}
                }
            };

            function Gt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function Zt(t) {
                return (Zt = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function Vt(t, e) {
                return !e || "object" !== Wt(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function Ht(t, e) {
                return (Ht = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var Wt = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function Yt(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = Zt(t);
                    if (e) {
                        var i = Zt(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return Vt(this, n)
                }
            }
            var qt = {
                    color: [255, 255, 255],
                    intensity: 1
                },
                $t = [{
                    color: [255, 255, 255],
                    intensity: 1,
                    direction: [-1, 3, -1]
                }, {
                    color: [255, 255, 255],
                    intensity: .9,
                    direction: [1, -8, -2.5]
                }],
                Xt = [0, 0, 0, 200 / 255],
                Kt = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && Ht(t, e)
                    }(o, t);
                    var e, n, r, i = Yt(o);

                    function o(t) {
                        var e;
                        for (var n in function(t, e) {
                                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                            }(this, o), (e = i.call(this, t)).ambientLight = null, e.directionalLights = [], e.pointLights = [], e.shadowColor = Xt, e.shadowPasses = [], e.shadowMaps = [], e.dummyShadowMap = null, e.shadow = !1, e.programManager = null, t) {
                            var r = t[n];
                            switch (r.type) {
                                case "ambient":
                                    e.ambientLight = r;
                                    break;
                                case "directional":
                                    e.directionalLights.push(r);
                                    break;
                                case "point":
                                    e.pointLights.push(r)
                            }
                        }
                        return e._applyDefaultLights(), e.shadow = e.directionalLights.some((function(t) {
                            return t.shadow
                        })), e
                    }
                    return e = o, (n = [{
                        key: "preRender",
                        value: function(t, e) {
                            var n = e.layers,
                                r = e.layerFilter,
                                i = e.viewports,
                                o = e.onViewportActive,
                                a = e.views;
                            if (this.shadow) {
                                this.shadowMatrices = this._createLightMatrix(), 0 === this.shadowPasses.length && this._createShadowPasses(t), this.programManager || (this.programManager = w.Z.getDefaultProgramManager(t), Ut && this.programManager.addDefaultModule(Ut)), this.dummyShadowMap || (this.dummyShadowMap = new N.Z(t, {
                                    width: 1,
                                    height: 1
                                }));
                                for (var s = 0; s < this.shadowPasses.length; s++) this.shadowPasses[s].render({
                                    layers: n,
                                    layerFilter: r,
                                    viewports: i,
                                    onViewportActive: o,
                                    views: a,
                                    moduleParameters: {
                                        shadowLightId: s,
                                        dummyShadowMap: this.dummyShadowMap,
                                        shadowMatrices: this.shadowMatrices
                                    }
                                })
                            }
                        }
                    }, {
                        key: "getModuleParameters",
                        value: function(t) {
                            var e = this.shadow ? {
                                shadowMaps: this.shadowMaps,
                                dummyShadowMap: this.dummyShadowMap,
                                shadowColor: this.shadowColor,
                                shadowMatrices: this.shadowMatrices
                            } : {};
                            return e.lightSources = {
                                ambientLight: this.ambientLight,
                                directionalLights: this.directionalLights.map((function(e) {
                                    return e.getProjectedLight({
                                        layer: t
                                    })
                                })),
                                pointLights: this.pointLights.map((function(e) {
                                    return e.getProjectedLight({
                                        layer: t
                                    })
                                }))
                            }, e
                        }
                    }, {
                        key: "cleanup",
                        value: function() {
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = this.shadowPasses[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) r.value.delete()
                            } catch (o) {
                                e = !0, n = o
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                            this.shadowPasses.length = 0, this.shadowMaps.length = 0, this.dummyShadowMap && (this.dummyShadowMap.delete(), this.dummyShadowMap = null), this.shadow && this.programManager && (this.programManager.removeDefaultModule(Ut), this.programManager = null)
                        }
                    }, {
                        key: "_createLightMatrix",
                        value: function() {
                            var t = [],
                                e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = this.directionalLights[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) {
                                    var a = i.value,
                                        s = (new et.Z).lookAt({
                                            eye: new Z.Z(a.direction).negate()
                                        });
                                    t.push(s)
                                }
                            } catch (u) {
                                n = !0, r = u
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                            return t
                        }
                    }, {
                        key: "_createShadowPasses",
                        value: function(t) {
                            for (var e = 0; e < this.directionalLights.length; e++) {
                                var n = new Mt(t);
                                this.shadowPasses[e] = n, this.shadowMaps[e] = n.shadowMap
                            }
                        }
                    }, {
                        key: "_applyDefaultLights",
                        value: function() {
                            var t = this,
                                e = t.ambientLight,
                                n = t.pointLights,
                                r = t.directionalLights;
                            e || 0 !== n.length || 0 !== r.length || (this.ambientLight = new G(qt), this.directionalLights.push(new $($t[0]), new $($t[1])))
                        }
                    }]) && Gt(e.prototype, n), r && Gt(e, r), o
                }(tt);

            function Jt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var Qt = new Kt,
                te = function() {
                    function t() {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this.effects = [], this._internalEffects = [], this._needsRedraw = "Initial render", this.setEffects()
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "setProps",
                        value: function(t) {
                            "effects" in t && (t.effects.length === this.effects.length && (0, k.v)(t.effects, this.effects) || (this.setEffects(t.effects), this._needsRedraw = "effects changed"))
                        }
                    }, {
                        key: "needsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                    clearRedrawFlags: !1
                                },
                                e = this._needsRedraw;
                            return t.clearRedrawFlags && (this._needsRedraw = !1), e
                        }
                    }, {
                        key: "getEffects",
                        value: function() {
                            return this._internalEffects
                        }
                    }, {
                        key: "finalize",
                        value: function() {
                            this.cleanup()
                        }
                    }, {
                        key: "setEffects",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                            this.cleanup(), this.effects = t, this._createInternalEffects()
                        }
                    }, {
                        key: "cleanup",
                        value: function() {
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = this.effects[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) r.value.cleanup()
                            } catch (l) {
                                e = !0, n = l
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                            var o = !0,
                                a = !1,
                                s = void 0;
                            try {
                                for (var u, c = this._internalEffects[Symbol.iterator](); !(o = (u = c.next()).done); o = !0) u.value.cleanup()
                            } catch (l) {
                                a = !0, s = l
                            } finally {
                                try {
                                    o || null == c.return || c.return()
                                } finally {
                                    if (a) throw s
                                }
                            }
                            this.effects.length = 0, this._internalEffects.length = 0
                        }
                    }, {
                        key: "_createInternalEffects",
                        value: function() {
                            this._internalEffects = this.effects.slice(), this.effects.some((function(t) {
                                return e = t, null != (n = Kt) && "undefined" !== typeof Symbol && n[Symbol.hasInstance] ? n[Symbol.hasInstance](e) : e instanceof n;
                                var e, n
                            })) || this._internalEffects.push(Qt)
                        }
                    }]) && Jt(e.prototype, n), r && Jt(e, r), t
                }();

            function ee(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function ne(t) {
                return (ne = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function re(t, e) {
                return !e || "object" !== oe(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function ie(t, e) {
                return (ie = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var oe = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function ae(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = ne(t);
                    if (e) {
                        var i = ne(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return re(this, n)
                }
            }
            var se = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && ie(t, e)
                }(n, t);
                var e = ae(n);

                function n() {
                    return ee(this, n), e.apply(this, arguments)
                }
                return n
            }(yt);

            function ue(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function ce(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function le(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function fe(t, e, n) {
                return (fe = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = he(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function he(t) {
                return (he = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function de(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        le(t, e, n[e])
                    }))
                }
                return t
            }

            function pe(t, e) {
                return !e || "object" !== ye(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function ge(t, e) {
                return (ge = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var ye = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function ve(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = he(t);
                    if (e) {
                        var i = he(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return pe(this, n)
                }
            }
            var me = {
                    blendFunc: [1, 0, 32771, 0],
                    blendEquation: 32774
                },
                be = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && ge(t, e)
                    }(o, t);
                    var e, n, r, i = ve(o);

                    function o() {
                        return ue(this, o), i.apply(this, arguments)
                    }
                    return e = o, (n = [{
                        key: "render",
                        value: function(t) {
                            return t.pickingFBO ? this._drawPickingBuffer(t) : fe(he(o.prototype), "render", this).call(this, t)
                        }
                    }, {
                        key: "_drawPickingBuffer",
                        value: function(t) {
                            var e = t.layers,
                                n = t.layerFilter,
                                r = t.views,
                                i = t.viewports,
                                a = t.onViewportActive,
                                s = t.pickingFBO,
                                u = t.deviceRect,
                                c = u.x,
                                l = u.y,
                                f = u.width,
                                h = u.height,
                                d = t.pass,
                                p = void 0 === d ? "picking" : d,
                                g = t.redrawReason,
                                y = t.pickZ,
                                v = this,
                                m = this.gl;
                            this.pickZ = y;
                            var b = !y && {
                                byLayer: new Map,
                                byAlpha: []
                            };
                            this._colors = b;
                            var w = (0, st.s8)(m, de({
                                scissorTest: !0,
                                scissor: [c, l, f, h],
                                clearColor: [0, 0, 0, 0],
                                depthMask: !0,
                                depthTest: !0,
                                depthRange: [0, 1],
                                colorMask: [!0, !0, !0, !0]
                            }, me, {
                                blend: !y
                            }), (function() {
                                return fe(he(o.prototype), "render", v).call(v, {
                                    target: s,
                                    layers: e,
                                    layerFilter: n,
                                    views: r,
                                    viewports: i,
                                    onViewportActive: a,
                                    pass: p,
                                    redrawReason: g
                                })
                            }));
                            return this._colors = null, {
                                decodePickingColor: b && we.bind(null, b),
                                stats: w
                            }
                        }
                    }, {
                        key: "shouldDrawLayer",
                        value: function(t) {
                            return t.props.pickable
                        }
                    }, {
                        key: "getModuleParameters",
                        value: function() {
                            return {
                                pickingActive: 1,
                                pickingAttribute: this.pickZ,
                                lightSources: {}
                            }
                        }
                    }, {
                        key: "getLayerParameters",
                        value: function(t, e, n) {
                            var r = de({}, t.props.parameters);
                            return this.pickZ ? r.blend = !1 : (Object.assign(r, me), r.blend = !0, r.blendColor = function(t, e, n) {
                                var r, i = t.byLayer,
                                    o = t.byAlpha;
                                if (i.has(e)) {
                                    var a = i.get(e);
                                    a.viewports.push(n), r = a.a
                                } else if ((r = i.size + 1) <= 255) {
                                    var s = {
                                        a: r,
                                        layer: e,
                                        viewports: [n]
                                    };
                                    i.set(e, s), o[r] = s
                                } else l.Z.warn("Too many pickable layers, only picking the first 255")(), r = 0;
                                return [0, 0, 0, r / 255]
                            }(this._colors, t, n)), r
                        }
                    }]) && ce(e.prototype, n), r && ce(e, r), o
                }(yt);

            function we(t, e) {
                var n = t.byAlpha[e[3]];
                return n && {
                    pickedLayer: n.layer,
                    pickedViewports: n.viewports,
                    pickedObjectIndex: n.layer.decodePickingColor(e)
                }
            }

            function _e(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function Pe(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var Ee = function() {
                    function t(e) {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this.gl = e, this.layerFilter = null, this.drawPickingColors = !1, this.drawLayersPass = new se(e), this.pickLayersPass = new be(e), this.renderCount = 0, this._needsRedraw = "Initial render", this.renderBuffers = [], this.lastPostProcessEffect = null
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "setProps",
                        value: function(t) {
                            "layerFilter" in t && this.layerFilter !== t.layerFilter && (this.layerFilter = t.layerFilter, this._needsRedraw = "layerFilter changed"), "drawPickingColors" in t && this.drawPickingColors !== t.drawPickingColors && (this.drawPickingColors = t.drawPickingColors, this._needsRedraw = "drawPickingColors changed")
                        }
                    }, {
                        key: "renderLayers",
                        value: function(t) {
                            var e = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;
                            t.layerFilter = t.layerFilter || this.layerFilter, t.effects = t.effects || [], t.target = t.target || bt.Z.getDefaultFramebuffer(this.gl), this._preRender(t.effects, t);
                            var n = this.lastPostProcessEffect ? this.renderBuffers[0] : t.target,
                                r = e.render(function(t) {
                                    for (var e = 1; e < arguments.length; e++) {
                                        var n = null != arguments[e] ? arguments[e] : {},
                                            r = Object.keys(n);
                                        "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                            return Object.getOwnPropertyDescriptor(n, t).enumerable
                                        })))), r.forEach((function(e) {
                                            Pe(t, e, n[e])
                                        }))
                                    }
                                    return t
                                }({}, t, {
                                    target: n
                                }));
                            this._postRender(t.effects, t), this.renderCount++, (0, f.Z)("deckRenderer.renderLayers", this, r, t)
                        }
                    }, {
                        key: "needsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                    clearRedrawFlags: !1
                                },
                                e = this._needsRedraw;
                            return t.clearRedrawFlags && (this._needsRedraw = !1), e
                        }
                    }, {
                        key: "finalize",
                        value: function() {
                            var t = this.renderBuffers,
                                e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = t[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) i.value.delete()
                            } catch (a) {
                                n = !0, r = a
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                            t.length = 0
                        }
                    }, {
                        key: "_preRender",
                        value: function(t, e) {
                            var n = null,
                                r = !0,
                                i = !1,
                                o = void 0;
                            try {
                                for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done); r = !0) {
                                    var u = a.value;
                                    u.preRender(this.gl, e), u.postRender && (n = u)
                                }
                            } catch (c) {
                                i = !0, o = c
                            } finally {
                                try {
                                    r || null == s.return || s.return()
                                } finally {
                                    if (i) throw o
                                }
                            }
                            n && this._resizeRenderBuffers(), this.lastPostProcessEffect = n
                        }
                    }, {
                        key: "_resizeRenderBuffers",
                        value: function() {
                            var t = this.renderBuffers;
                            0 === t.length && t.push(new bt.Z(this.gl), new bt.Z(this.gl));
                            var e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = t[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) i.value.resize()
                            } catch (a) {
                                n = !0, r = a
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                        }
                    }, {
                        key: "_postRender",
                        value: function(t, e) {
                            var n = this.renderBuffers,
                                r = {
                                    inputBuffer: n[0],
                                    swapBuffer: n[1],
                                    target: null
                                },
                                i = !0,
                                o = !1,
                                a = void 0;
                            try {
                                for (var s, u = t[Symbol.iterator](); !(i = (s = u.next()).done); i = !0) {
                                    var c = s.value;
                                    if (c.postRender) {
                                        if (c === this.lastPostProcessEffect) {
                                            r.target = e.target, c.postRender(this.gl, r);
                                            break
                                        }
                                        var l = c.postRender(this.gl, r);
                                        r.inputBuffer = l, r.swapBuffer = l === n[0] ? n[1] : n[0]
                                    }
                                }
                            } catch (f) {
                                o = !0, a = f
                            } finally {
                                try {
                                    i || null == u.return || u.return()
                                } finally {
                                    if (o) throw a
                                }
                            }
                        }
                    }]) && _e(e.prototype, n), r && _e(e, r), t
                }(),
                xe = n(29295);

            function Se(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Oe(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        Se(t, e, n[e])
                    }))
                }
                return t
            }
            var Te = {
                pickedColor: null,
                pickedLayer: null,
                pickedObjectIndex: -1
            };

            function Me(t) {
                var e = t.pickedColors,
                    n = t.decodePickingColor,
                    r = t.deviceX,
                    i = t.deviceY,
                    o = t.deviceRadius,
                    a = t.deviceRect;
                if (e) {
                    for (var s = a.x, u = a.y, c = a.width, f = a.height, h = o * o, d = -1, p = 0, g = 0; g < f; g++) {
                        var y = g + u - i,
                            v = y * y;
                        if (v > h) p += 4 * c;
                        else
                            for (var m = 0; m < c; m++) {
                                if (e[p + 3] - 1 >= 0) {
                                    var b = m + s - r,
                                        w = b * b + v;
                                    w <= h && (h = w, d = p)
                                }
                                p += 4
                            }
                    }
                    if (d >= 0) {
                        var _ = e.slice(d, d + 4),
                            P = n(_);
                        if (P) {
                            var E = Math.floor(d / 4 / c);
                            return Oe({}, P, {
                                pickedColor: _,
                                pickedX: s + (d / 4 - E * c),
                                pickedY: u + E
                            })
                        }
                        l.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()
                    }
                }
                return Te
            }

            function Ce(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Ae(t) {
                var e = t.pickInfo,
                    n = t.viewports,
                    r = t.pixelRatio,
                    i = t.x,
                    o = t.y,
                    a = t.z,
                    s = n[0];
                n.length > 1 && (s = function(t, e) {
                    for (var n = t.length - 1; n >= 0; n--) {
                        var r = t[n];
                        if (r.containsPixel(e)) return r
                    }
                    return t[0]
                }((null === e || void 0 === e ? void 0 : e.pickedViewports) || n, {
                    x: i,
                    y: o
                }));
                var u = s && s.unproject([i - s.x, o - s.y], {
                    targetZ: a
                });
                return {
                    color: null,
                    layer: null,
                    viewport: s,
                    index: -1,
                    picked: !1,
                    x: i,
                    y: o,
                    pixel: [i, o],
                    coordinate: u,
                    devicePixel: e && "pickedX" in e ? [e.pickedX, e.pickedY] : null,
                    pixelRatio: r
                }
            }

            function ke(t) {
                var e = t.pickInfo,
                    n = t.lastPickedInfo,
                    r = t.mode,
                    i = t.layers,
                    o = e.pickedColor,
                    a = e.pickedLayer,
                    s = e.pickedObjectIndex,
                    u = a ? [a] : [];
                if ("hover" === r) {
                    var c = n.index,
                        l = n.layerId,
                        f = a && a.props.id;
                    if (f !== l || s !== c) {
                        if (f !== l) {
                            var h = i.find((function(t) {
                                return t.props.id === l
                            }));
                            h && u.unshift(h)
                        }
                        n.layerId = f, n.index = s, n.info = null
                    }
                }
                var d = Ae(t),
                    p = new Map;
                return p.set(null, d), u.forEach((function(t) {
                    var e = function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {},
                                r = Object.keys(n);
                            "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                return Object.getOwnPropertyDescriptor(n, t).enumerable
                            })))), r.forEach((function(e) {
                                Ce(t, e, n[e])
                            }))
                        }
                        return t
                    }({}, d);
                    t === a && (e.color = o, e.index = s, e.picked = !0), e = Ie({
                        layer: t,
                        info: e,
                        mode: r
                    }), t === a && "hover" === r && (n.info = e), p.set(e.layer.id, e), "hover" === r && e.layer.updateAutoHighlight(e)
                })), p
            }

            function Ie(t) {
                for (var e = t.layer, n = t.info, r = t.mode; e && n;) {
                    var i = n.layer || null;
                    n.sourceLayer = i, n.layer = e, n = e.getPickingInfo({
                        info: n,
                        mode: r,
                        sourceLayer: i
                    }), e = e.parent
                }
                return n
            }

            function je(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function Le(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Re(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        Le(t, e, n[e])
                    }))
                }
                return t
            }
            var De = function() {
                function t(e) {
                    ! function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), this.gl = e, this.pickingFBO = null, this.pickLayersPass = new be(e), this.layerFilter = null, this.lastPickedInfo = {
                        index: -1,
                        layerId: null,
                        info: null
                    }
                }
                var e, n, r;
                return e = t, (n = [{
                    key: "setProps",
                    value: function(t) {
                        "layerFilter" in t && (this.layerFilter = t.layerFilter), "_pickable" in t && (this._pickable = t._pickable)
                    }
                }, {
                    key: "finalize",
                    value: function() {
                        this.pickingFBO && this.pickingFBO.delete(), this.depthFBO && (this.depthFBO.color.delete(), this.depthFBO.delete())
                    }
                }, {
                    key: "pickObject",
                    value: function(t) {
                        return this._pickClosestObject(t)
                    }
                }, {
                    key: "pickObjects",
                    value: function(t) {
                        return this._pickVisibleObjects(t)
                    }
                }, {
                    key: "getLastPickedObject",
                    value: function(t) {
                        var e = t.x,
                            n = t.y,
                            r = t.layers,
                            i = t.viewports,
                            o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.lastPickedInfo.info,
                            a = o && o.layer && o.layer.id,
                            s = o && o.viewport && o.viewport.id,
                            u = a ? r.find((function(t) {
                                return t.id === a
                            })) : null,
                            c = s && i.find((function(t) {
                                return t.id === s
                            })) || i[0],
                            l = c && c.unproject([e - c.x, n - c.y]),
                            f = {
                                x: e,
                                y: n,
                                viewport: c,
                                coordinate: l,
                                layer: u
                            };
                        return Re({}, o, f)
                    }
                }, {
                    key: "_resizeBuffer",
                    value: function() {
                        var t = this.gl;
                        return this.pickingFBO || (this.pickingFBO = new bt.Z(t), bt.Z.isSupported(t, {
                            colorBufferFloat: !0
                        }) && (this.depthFBO = new bt.Z(t), this.depthFBO.attach(Le({}, 36064, new N.Z(t, {
                            format: (0, st.D0)(t) ? 34836 : 6408,
                            type: 5126
                        }))))), this.pickingFBO.resize({
                            width: t.canvas.width,
                            height: t.canvas.height
                        }), this.depthFBO && this.depthFBO.resize({
                            width: t.canvas.width,
                            height: t.canvas.height
                        }), this.pickingFBO
                    }
                }, {
                    key: "_getPickable",
                    value: function(t) {
                        if (!1 === this._pickable) return null;
                        var e = t.filter((function(t) {
                            return t.isPickable() && !t.isComposite
                        }));
                        return e.length ? e : null
                    }
                }, {
                    key: "_pickClosestObject",
                    value: function(t) {
                        var e = t.layers,
                            n = t.views,
                            r = t.viewports,
                            i = t.x,
                            o = t.y,
                            a = t.radius,
                            s = void 0 === a ? 0 : a,
                            u = t.depth,
                            c = void 0 === u ? 1 : u,
                            l = t.mode,
                            f = void 0 === l ? "query" : l,
                            h = t.unproject3D,
                            d = t.onViewportActive;
                        if (!(e = this._getPickable(e))) return {
                            result: [],
                            emptyInfo: Ae({
                                viewports: r,
                                x: i,
                                y: o
                            })
                        };
                        this._resizeBuffer();
                        for (var p, g = (0, st.w)(this.gl), y = (0, st.JY)(this.gl, [i, o], !0), v = [y.x + Math.floor(y.width / 2), y.y + Math.floor(y.height / 2)], m = Math.round(s * g), b = this.pickingFBO, w = b.width, _ = b.height, P = this._getPickingRect({
                                deviceX: v[0],
                                deviceY: v[1],
                                deviceRadius: m,
                                deviceWidth: w,
                                deviceHeight: _
                            }), E = [], x = new Set, S = 0; S < c; S++) {
                            var O = Me(Re({}, P && this._drawAndSample({
                                    layers: e,
                                    views: n,
                                    viewports: r,
                                    onViewportActive: d,
                                    deviceRect: P,
                                    pass: "picking:".concat(f),
                                    redrawReason: f
                                }), {
                                    deviceX: v[0],
                                    deviceY: v[1],
                                    deviceRadius: m,
                                    deviceRect: P
                                })),
                                T = void 0;
                            O.pickedLayer && h && this.depthFBO && (T = this._drawAndSample({
                                layers: [O.pickedLayer],
                                views: n,
                                viewports: r,
                                onViewportActive: d,
                                deviceRect: {
                                    x: O.pickedX,
                                    y: O.pickedY,
                                    width: 1,
                                    height: 1
                                },
                                pass: "picking:".concat(f),
                                redrawReason: "pick-z",
                                pickZ: !0
                            }).pickedColors[0] * r[0].distanceScales.metersPerUnit[2] + r[0].position[2]), O.pickedLayer && S + 1 < c && (x.add(O.pickedLayer), O.pickedLayer.disablePickingIndex(O.pickedObjectIndex)), p = ke({
                                pickInfo: O,
                                lastPickedInfo: this.lastPickedInfo,
                                mode: f,
                                layers: e,
                                viewports: r,
                                x: i,
                                y: o,
                                z: T,
                                pixelRatio: g
                            });
                            var M = !0,
                                C = !1,
                                A = void 0;
                            try {
                                for (var k, I = p.values()[Symbol.iterator](); !(M = (k = I.next()).done); M = !0) {
                                    var j = k.value;
                                    j.layer && E.push(j)
                                }
                            } catch (z) {
                                C = !0, A = z
                            } finally {
                                try {
                                    M || null == I.return || I.return()
                                } finally {
                                    if (C) throw A
                                }
                            }
                            if (!O.pickedColor) break
                        }
                        var L = !0,
                            R = !1,
                            D = void 0;
                        try {
                            for (var F, N = x[Symbol.iterator](); !(L = (F = N.next()).done); L = !0) F.value.restorePickingColors()
                        } catch (z) {
                            R = !0, D = z
                        } finally {
                            try {
                                L || null == N.return || N.return()
                            } finally {
                                if (R) throw D
                            }
                        }
                        return {
                            result: E,
                            emptyInfo: p && p.get(null)
                        }
                    }
                }, {
                    key: "_pickVisibleObjects",
                    value: function(t) {
                        var e = t.layers,
                            n = t.views,
                            r = t.viewports,
                            i = t.x,
                            o = t.y,
                            a = t.width,
                            s = void 0 === a ? 1 : a,
                            u = t.height,
                            c = void 0 === u ? 1 : u,
                            f = t.mode,
                            h = void 0 === f ? "query" : f,
                            d = t.maxObjects,
                            p = void 0 === d ? null : d,
                            g = t.onViewportActive;
                        if (!(e = this._getPickable(e))) return [];
                        this._resizeBuffer();
                        for (var y = (0, st.w)(this.gl), v = (0, st.JY)(this.gl, [i, o], !0), m = v.x, b = v.y + v.height, w = (0, st.JY)(this.gl, [i + s, o + c], !0), _ = w.x + w.width, P = w.y, E = {
                                x: m,
                                y: P,
                                width: _ - m,
                                height: b - P
                            }, x = function(t) {
                                var e = t.pickedColors,
                                    n = t.decodePickingColor,
                                    r = new Map;
                                if (e)
                                    for (var i = 0; i < e.length; i += 4)
                                        if (e[i + 3] - 1 >= 0) {
                                            var o = e.slice(i, i + 4),
                                                a = o.join(",");
                                            if (!r.has(a)) {
                                                var s = n(o);
                                                s ? r.set(a, Oe({}, s, {
                                                    pickedColor: o
                                                })) : l.Z.error("Picked non-existent layer. Is picking buffer corrupt?")()
                                            }
                                        }
                                return Array.from(r.values())
                            }(this._drawAndSample({
                                layers: e,
                                views: n,
                                viewports: r,
                                onViewportActive: g,
                                deviceRect: E,
                                pass: "picking:".concat(h),
                                redrawReason: h
                            })), S = new Map, O = Number.isFinite(p), T = 0; T < x.length && !(O && S.size >= p); T++) {
                            var M = x[T],
                                C = {
                                    color: M.pickedColor,
                                    layer: null,
                                    index: M.pickedObjectIndex,
                                    picked: !0,
                                    x: i,
                                    y: o,
                                    width: s,
                                    height: c,
                                    pixelRatio: y
                                };
                            C = Ie({
                                layer: M.pickedLayer,
                                info: C,
                                mode: h
                            }), S.has(C.object) || S.set(C.object, C)
                        }
                        return Array.from(S.values())
                    }
                }, {
                    key: "_drawAndSample",
                    value: function(t) {
                        var e = t.layers,
                            n = t.views,
                            r = t.viewports,
                            i = t.onViewportActive,
                            o = t.deviceRect,
                            a = t.pass,
                            s = t.redrawReason,
                            u = t.pickZ,
                            c = u ? this.depthFBO : this.pickingFBO,
                            l = this.pickLayersPass.render({
                                layers: e,
                                layerFilter: this.layerFilter,
                                views: n,
                                viewports: r,
                                onViewportActive: i,
                                pickingFBO: c,
                                deviceRect: o,
                                pass: a,
                                redrawReason: s,
                                pickZ: u
                            }).decodePickingColor,
                            f = o.x,
                            h = o.y,
                            d = o.width,
                            p = o.height,
                            g = new(u ? Float32Array : Uint8Array)(d * p * 4);
                        return (0, xe.z6)(c, {
                            sourceX: f,
                            sourceY: h,
                            sourceWidth: d,
                            sourceHeight: p,
                            target: g
                        }), {
                            pickedColors: g,
                            decodePickingColor: l
                        }
                    }
                }, {
                    key: "_getPickingRect",
                    value: function(t) {
                        var e = t.deviceX,
                            n = t.deviceY,
                            r = t.deviceRadius,
                            i = t.deviceWidth,
                            o = t.deviceHeight,
                            a = Math.max(0, e - r),
                            s = Math.max(0, n - r),
                            u = Math.min(i, e + r + 1) - a,
                            c = Math.min(o, n + r + 1) - s;
                        return u <= 0 || c <= 0 ? null : {
                            x: a,
                            y: s,
                            width: u,
                            height: c
                        }
                    }
                }]) && je(e.prototype, n), r && je(e, r), t
            }();

            function Fe(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var Ne = {
                    zIndex: 1,
                    position: "absolute",
                    pointerEvents: "none",
                    color: "#a0a7b4",
                    backgroundColor: "#29323c",
                    padding: "10px",
                    top: 0,
                    left: 0,
                    display: "none"
                },
                ze = function() {
                    function t(e) {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var n = e.parentElement;
                        n && (this.el = document.createElement("div"), this.el.className = "deck-tooltip", Object.assign(this.el.style, Ne), n.appendChild(this.el)), this.isVisible = !1
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "setTooltip",
                        value: function(t, e, n) {
                            var r = this.el;
                            if ("string" === typeof t) r.innerText = t;
                            else {
                                if (!t) return this.isVisible = !1, void(r.style.display = "none");
                                "text" in t && (r.innerText = t.text), "html" in t && (r.innerHTML = t.html), "className" in t && (r.className = t.className), Object.assign(r.style, t.style)
                            }
                            this.isVisible = !0, r.style.display = "block", r.style.transform = "translate(".concat(e, "px, ").concat(n, "px)")
                        }
                    }, {
                        key: "remove",
                        value: function() {
                            this.el && this.el.remove()
                        }
                    }]) && Fe(e.prototype, n), r && Fe(e, r), t
                }(),
                Be = n(85242),
                Ue = n(6228),
                Ge = n(78423),
                Ze = n(89718);
            var Ve = {
                    name: "JSON",
                    extensions: ["json", "geojson"],
                    mimeTypes: ["application/json", "application/geo+json"],
                    testText: function(t) {
                        var e = t[0],
                            n = t[t.length - 1];
                        return "{" === e && "}" === n || "[" === e && "]" === n
                    },
                    parseTextSync: JSON.parse
                },
                He = "8.6.4",
                We = Ze.CO.deck && Ze.CO.deck.VERSION;
            if (We && We !== He) throw new Error("deck.gl - multiple versions detected: ".concat(We, " vs ").concat(He));
            We || (l.Z.log(1, "deck.gl ".concat(He))(), Ze.CO.deck = Object.assign(Ze.CO.deck || {}, {
                VERSION: He,
                version: He,
                log: l.Z,
                _registerLoggers: f.z
            }), (0, Ue.fh)([Ve, [Ge.S, {
                imagebitmap: {
                    premultiplyAlpha: "none"
                }
            }]]));
            var Ye = Ze.CO.deck,
                qe = n(49835),
                $e = n(22525),
                Xe = n(87577),
                Ke = n(44211),
                Je = n(6948);
            class Qe extends Xe.Z {
                static isSupported(t, e = []) {
                    const n = (0, st.D0)(t),
                        r = (0, Ke.ag)(t, Je.h.TIMER_QUERY);
                    let i = n || r;
                    for (const o of e) switch (o) {
                        case "queries":
                            i = i && n;
                            break;
                        case "timers":
                            i = i && r;
                            break;
                        default:
                            (0, $e.h)(!1)
                    }
                    return i
                }
                constructor(t, e = {}) {
                    super(t, e), this.target = null, this._queryPending = !1, this._pollingPromise = null, Object.seal(this)
                }
                beginTimeElapsedQuery() {
                    return this.begin(35007)
                }
                beginOcclusionQuery({
                    conservative: t = !1
                } = {}) {
                    return this.begin(t ? 36202 : 35887)
                }
                beginTransformFeedbackQuery() {
                    return this.begin(35976)
                }
                begin(t) {
                    return this._queryPending || (this.target = t, this.gl2.beginQuery(this.target, this.handle)), this
                }
                end() {
                    return this._queryPending || this.target && (this.gl2.endQuery(this.target), this.target = null, this._queryPending = !0), this
                }
                isResultAvailable() {
                    if (!this._queryPending) return !1;
                    const t = this.gl2.getQueryParameter(this.handle, 34919);
                    return t && (this._queryPending = !1), t
                }
                isTimerDisjoint() {
                    return this.gl2.getParameter(36795)
                }
                getResult() {
                    return this.gl2.getQueryParameter(this.handle, 34918)
                }
                getTimerMilliseconds() {
                    return this.getResult() / 1e6
                }
                createPoll(t = Number.POSITIVE_INFINITY) {
                    if (this._pollingPromise) return this._pollingPromise;
                    let e = 0;
                    return this._pollingPromise = new Promise(((n, r) => {
                        const i = () => {
                            this.isResultAvailable() ? (n(this.getResult()), this._pollingPromise = null) : e++ > t ? (r("Timed out"), this._pollingPromise = null) : requestAnimationFrame(i)
                        };
                        requestAnimationFrame(i)
                    })), this._pollingPromise
                }
                _createHandle() {
                    return Qe.isSupported(this.gl) ? this.gl2.createQuery() : null
                }
                _deleteHandle() {
                    this.gl2.deleteQuery(this.handle)
                }
            }
            const tn = (0, Ze.jU)() && "undefined" !== typeof document;
            let en = 0;
            class nn {
                constructor(t = {}) {
                    const {
                        onCreateContext: e = (t => (0, st.s9)(t)),
                        onAddHTML: n = null,
                        onInitialize: r = (() => {}),
                        onRender: i = (() => {}),
                        onFinalize: o = (() => {}),
                        onError: a,
                        gl: s = null,
                        glOptions: u = {},
                        debug: c = !1,
                        createFramebuffer: l = !1,
                        autoResizeViewport: f = !0,
                        autoResizeDrawingBuffer: h = !0,
                        stats: d = qe.l.get("animation-loop-" + en++)
                    } = t;
                    let {
                        useDevicePixels: p = !0
                    } = t;
                    "useDevicePixelRatio" in t && (st.cM.deprecated("useDevicePixelRatio", "useDevicePixels")(), p = t.useDevicePixelRatio), this.props = {
                        onCreateContext: e,
                        onAddHTML: n,
                        onInitialize: r,
                        onRender: i,
                        onFinalize: o,
                        onError: a,
                        gl: s,
                        glOptions: u,
                        debug: c,
                        createFramebuffer: l
                    }, this.gl = s, this.needsRedraw = null, this.timeline = null, this.stats = d, this.cpuTime = this.stats.get("CPU Time"), this.gpuTime = this.stats.get("GPU Time"), this.frameRate = this.stats.get("Frame Rate"), this._initialized = !1, this._running = !1, this._animationFrameId = null, this._nextFramePromise = null, this._resolveNextFrame = null, this._cpuStartTime = 0, this.setProps({
                        autoResizeViewport: f,
                        autoResizeDrawingBuffer: h,
                        useDevicePixels: p
                    }), this.start = this.start.bind(this), this.stop = this.stop.bind(this), this._pageLoadPromise = null, this._onMousemove = this._onMousemove.bind(this), this._onMouseleave = this._onMouseleave.bind(this)
                }
                delete() {
                    this.stop(), this._setDisplay(null)
                }
                setNeedsRedraw(t) {
                    return (0, $e.h)("string" === typeof t), this.needsRedraw = this.needsRedraw || t, this
                }
                setProps(t) {
                    return "autoResizeViewport" in t && (this.autoResizeViewport = t.autoResizeViewport), "autoResizeDrawingBuffer" in t && (this.autoResizeDrawingBuffer = t.autoResizeDrawingBuffer), "useDevicePixels" in t && (this.useDevicePixels = t.useDevicePixels), this
                }
                start(t = {}) {
                    if (this._running) return this;
                    this._running = !0;
                    const e = this._getPageLoadPromise().then((() => !this._running || this._initialized ? null : (this._createWebGLContext(t), this._createFramebuffer(), this._startEventHandling(), this._initializeCallbackData(), this._updateCallbackData(), this._resizeCanvasDrawingBuffer(), this._resizeViewport(), this._gpuTimeQuery = Qe.isSupported(this.gl, ["timers"]) ? new Qe(this.gl) : null, this._initialized = !0, this.onInitialize(this.animationProps)))).then((t => {
                        this._running && (this._addCallbackData(t || {}), !1 !== t && this._startLoop())
                    }));
                    return this.props.onError && e.catch(this.props.onError), this
                }
                redraw() {
                    return this.isContextLost() || (this._beginTimers(), this._setupFrame(), this._updateCallbackData(), this._renderFrame(this.animationProps), this._clearNeedsRedraw(), this.offScreen && this.gl.commit && this.gl.commit(), this._resolveNextFrame && (this._resolveNextFrame(this), this._nextFramePromise = null, this._resolveNextFrame = null), this._endTimers()), this
                }
                stop() {
                    return this._running && (this._finalizeCallbackData(), this._cancelAnimationFrame(this._animationFrameId), this._nextFramePromise = null, this._resolveNextFrame = null, this._animationFrameId = null, this._running = !1), this
                }
                attachTimeline(t) {
                    return this.timeline = t, this.timeline
                }
                detachTimeline() {
                    this.timeline = null
                }
                waitForRender() {
                    return this.setNeedsRedraw("waitForRender"), this._nextFramePromise || (this._nextFramePromise = new Promise((t => {
                        this._resolveNextFrame = t
                    }))), this._nextFramePromise
                }
                async toDataURL() {
                    return this.setNeedsRedraw("toDataURL"), await this.waitForRender(), this.gl.canvas.toDataURL()
                }
                isContextLost() {
                    return this.gl.isContextLost()
                }
                onCreateContext(...t) {
                    return this.props.onCreateContext(...t)
                }
                onInitialize(...t) {
                    return this.props.onInitialize(...t)
                }
                onRender(...t) {
                    return this.props.onRender(...t)
                }
                onFinalize(...t) {
                    return this.props.onFinalize(...t)
                }
                getHTMLControlValue(t, e = 1) {
                    const n = document.getElementById(t);
                    return n ? Number(n.value) : e
                }
                setViewParameters() {
                    return st.cM.removed("AnimationLoop.setViewParameters", "AnimationLoop.setProps")(), this
                }
                _startLoop() {
                    const t = () => {
                        this._running && (this.redraw(), this._animationFrameId = this._requestAnimationFrame(t))
                    };
                    this._cancelAnimationFrame(this._animationFrameId), this._animationFrameId = this._requestAnimationFrame(t)
                }
                _getPageLoadPromise() {
                    return this._pageLoadPromise || (this._pageLoadPromise = tn ? new Promise(((t, e) => {
                        tn && "complete" === document.readyState ? t(document) : window.addEventListener("load", (() => {
                            t(document)
                        }))
                    })) : Promise.resolve({})), this._pageLoadPromise
                }
                _setDisplay(t) {
                    this.display && (this.display.delete(), this.display.animationLoop = null), t && (t.animationLoop = this), this.display = t
                }
                _cancelAnimationFrame(t) {
                    return this.display && this.display.cancelAnimationFrame ? this.display.cancelAnimationFrame(t) : (e = t, "undefined" !== typeof window && window.cancelAnimationFrame ? window.cancelAnimationFrame(e) : clearTimeout(e));
                    var e
                }
                _requestAnimationFrame(t) {
                    if (this._running) return this.display && this.display.requestAnimationFrame ? this.display.requestAnimationFrame(t) : (e = t, "undefined" !== typeof window && window.requestAnimationFrame ? window.requestAnimationFrame(e) : setTimeout(e, 1e3 / 60));
                    var e
                }
                _renderFrame(...t) {
                    this.display ? this.display._renderFrame(...t) : this.onRender(...t)
                }
                _clearNeedsRedraw() {
                    this.needsRedraw = null
                }
                _setupFrame() {
                    this._resizeCanvasDrawingBuffer(), this._resizeViewport(), this._resizeFramebuffer()
                }
                _initializeCallbackData() {
                    this.animationProps = {
                        gl: this.gl,
                        stop: this.stop,
                        canvas: this.gl.canvas,
                        framebuffer: this.framebuffer,
                        useDevicePixels: this.useDevicePixels,
                        needsRedraw: null,
                        startTime: Date.now(),
                        engineTime: 0,
                        tick: 0,
                        tock: 0,
                        time: 0,
                        _timeline: this.timeline,
                        _loop: this,
                        _animationLoop: this,
                        _mousePosition: null
                    }
                }
                _updateCallbackData() {
                    const {
                        width: t,
                        height: e,
                        aspect: n
                    } = this._getSizeAndAspect();
                    t === this.animationProps.width && e === this.animationProps.height || this.setNeedsRedraw("drawing buffer resized"), n !== this.animationProps.aspect && this.setNeedsRedraw("drawing buffer aspect changed"), this.animationProps.width = t, this.animationProps.height = e, this.animationProps.aspect = n, this.animationProps.needsRedraw = this.needsRedraw, this.animationProps.engineTime = Date.now() - this.animationProps.startTime, this.timeline && this.timeline.update(this.animationProps.engineTime), this.animationProps.tick = Math.floor(this.animationProps.time / 1e3 * 60), this.animationProps.tock++, this.animationProps.time = this.timeline ? this.timeline.getTime() : this.animationProps.engineTime, this.animationProps._offScreen = this.offScreen
                }
                _finalizeCallbackData() {
                    this.onFinalize(this.animationProps)
                }
                _addCallbackData(t) {
                    "object" === typeof t && null !== t && (this.animationProps = Object.assign({}, this.animationProps, t))
                }
                _createWebGLContext(t) {
                    if (this.offScreen = t.canvas && "undefined" !== typeof OffscreenCanvas && t.canvas instanceof OffscreenCanvas, t = Object.assign({}, t, this.props.glOptions), this.gl = this.props.gl ? (0, st.yW)(this.props.gl, t) : this.onCreateContext(t), !(0, st.UF)(this.gl)) throw new Error("AnimationLoop.onCreateContext - illegal context returned");
                    (0, st.kL)(this.gl), this._createInfoDiv()
                }
                _createInfoDiv() {
                    if (this.gl.canvas && this.props.onAddHTML) {
                        const t = document.createElement("div");
                        document.body.appendChild(t), t.style.position = "relative";
                        const e = document.createElement("div");
                        e.style.position = "absolute", e.style.left = "10px", e.style.bottom = "10px", e.style.width = "300px", e.style.background = "white", t.appendChild(this.gl.canvas), t.appendChild(e);
                        const n = this.props.onAddHTML(e);
                        n && (e.innerHTML = n)
                    }
                }
                _getSizeAndAspect() {
                    const t = this.gl.drawingBufferWidth,
                        e = this.gl.drawingBufferHeight;
                    let n = 1;
                    const {
                        canvas: r
                    } = this.gl;
                    return r && r.clientHeight ? n = r.clientWidth / r.clientHeight : t > 0 && e > 0 && (n = t / e), {
                        width: t,
                        height: e,
                        aspect: n
                    }
                }
                _resizeViewport() {
                    this.autoResizeViewport && this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight)
                }
                _resizeCanvasDrawingBuffer() {
                    this.autoResizeDrawingBuffer && (0, st.aQ)(this.gl, {
                        useDevicePixels: this.useDevicePixels
                    })
                }
                _createFramebuffer() {
                    this.props.createFramebuffer && (this.framebuffer = new bt.Z(this.gl))
                }
                _resizeFramebuffer() {
                    this.framebuffer && this.framebuffer.resize({
                        width: this.gl.drawingBufferWidth,
                        height: this.gl.drawingBufferHeight
                    })
                }
                _beginTimers() {
                    this.frameRate.timeEnd(), this.frameRate.timeStart(), this._gpuTimeQuery && this._gpuTimeQuery.isResultAvailable() && !this._gpuTimeQuery.isTimerDisjoint() && this.stats.get("GPU Time").addTime(this._gpuTimeQuery.getTimerMilliseconds()), this._gpuTimeQuery && this._gpuTimeQuery.beginTimeElapsedQuery(), this.cpuTime.timeStart()
                }
                _endTimers() {
                    this.cpuTime.timeEnd(), this._gpuTimeQuery && this._gpuTimeQuery.end()
                }
                _startEventHandling() {
                    const {
                        canvas: t
                    } = this.gl;
                    t && (t.addEventListener("mousemove", this._onMousemove), t.addEventListener("mouseleave", this._onMouseleave))
                }
                _onMousemove(t) {
                    this.animationProps._mousePosition = [t.offsetX, t.offsetY]
                }
                _onMouseleave(t) {
                    this.animationProps._mousePosition = null
                }
            }
            var rn = n(23042),
                on = n(47806);

            function an(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function sn(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function un(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        sn(t, e, n[e])
                    }))
                }
                return t
            }

            function cn() {}
            var ln = {
                    id: "",
                    width: "100%",
                    height: "100%",
                    pickingRadius: 0,
                    layerFilter: null,
                    glOptions: {},
                    gl: null,
                    layers: [],
                    effects: [],
                    views: null,
                    controller: null,
                    useDevicePixels: !0,
                    touchAction: "none",
                    eventRecognizerOptions: {},
                    _framebuffer: null,
                    _animate: !1,
                    _pickable: !0,
                    _typedArrayManagerProps: {},
                    onWebGLInitialized: cn,
                    onResize: cn,
                    onViewStateChange: cn,
                    onInteractionStateChange: cn,
                    onBeforeRender: cn,
                    onAfterRender: cn,
                    onLoad: cn,
                    onError: function(t, e) {
                        return l.Z.error(t)()
                    },
                    _onMetrics: null,
                    getCursor: function(t) {
                        return t.isDragging ? "grabbing" : "grab"
                    },
                    debug: !1,
                    drawPickingColors: !1
                },
                fn = function() {
                    function t(e) {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), e = un({}, ln, e), this.props = {}, this.width = 0, this.height = 0, this.viewManager = null, this.layerManager = null, this.effectManager = null, this.deckRenderer = null, this.deckPicker = null, this._needsRedraw = !0, this._pickRequest = {}, this._lastPointerDownInfo = null, this.viewState = null, this.interactiveState = {
                            isHovering: !1,
                            isDragging: !1
                        }, this._onEvent = this._onEvent.bind(this), this._onPointerDown = this._onPointerDown.bind(this), this._onPointerMove = this._onPointerMove.bind(this), e.viewState && e.initialViewState && l.Z.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(), "IE" === (0, Ze.qs)() && l.Z.warn("IE 11 support will be deprecated in v8.0")(), e.gl || "undefined" !== typeof document && (this.canvas = this._createCanvas(e)), this.animationLoop = this._createAnimationLoop(e), this.stats = new d.jk({
                            id: "deck.gl"
                        }), this.metrics = {
                            fps: 0,
                            setPropsTime: 0,
                            updateAttributesTime: 0,
                            framesRedrawn: 0,
                            pickTime: 0,
                            pickCount: 0,
                            gpuTime: 0,
                            gpuTimePerFrame: 0,
                            cpuTime: 0,
                            cpuTimePerFrame: 0,
                            bufferMemory: 0,
                            textureMemory: 0,
                            renderbufferMemory: 0,
                            gpuMemory: 0
                        }, this._metricsCounter = 0, this.setProps(e), e._typedArrayManagerProps && Be.Z.setProps(e._typedArrayManagerProps), this.animationLoop.start()
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "finalize",
                        value: function() {
                            this.animationLoop.stop(), this.animationLoop = null, this._lastPointerDownInfo = null, this.layerManager && (this.layerManager.finalize(), this.layerManager = null, this.viewManager.finalize(), this.viewManager = null, this.effectManager.finalize(), this.effectManager = null, this.deckRenderer.finalize(), this.deckRenderer = null, this.deckPicker.finalize(), this.deckPicker = null, this.eventManager.destroy(), this.eventManager = null, this.tooltip.remove(), this.tooltip = null), this.props.canvas || this.props.gl || !this.canvas || (this.canvas.parentElement.removeChild(this.canvas), this.canvas = null)
                        }
                    }, {
                        key: "setProps",
                        value: function(t) {
                            this.stats.get("setProps Time").timeStart(), "onLayerHover" in t && l.Z.removed("onLayerHover", "onHover")(), "onLayerClick" in t && l.Z.removed("onLayerClick", "onClick")(), t.initialViewState && !(0, k.v)(this.props.initialViewState, t.initialViewState) && (this.viewState = t.initialViewState), Object.assign(this.props, t), this._setCanvasSize(this.props);
                            var e = Object.create(this.props);
                            Object.assign(e, {
                                views: this._getViews(),
                                width: this.width,
                                height: this.height,
                                viewState: this._getViewState()
                            }), this.animationLoop.setProps(e), this.layerManager && (this.viewManager.setProps(e), this.layerManager.activateViewport(this.getViewports()[0]), this.layerManager.setProps(e), this.effectManager.setProps(e), this.deckRenderer.setProps(e), this.deckPicker.setProps(e)), this.stats.get("setProps Time").timeEnd()
                        }
                    }, {
                        key: "needsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                clearRedrawFlags: !1
                            };
                            if (this.props._animate) return "Deck._animate";
                            var e = this._needsRedraw;
                            t.clearRedrawFlags && (this._needsRedraw = !1);
                            var n = this.viewManager.needsRedraw(t),
                                r = this.layerManager.needsRedraw(t),
                                i = this.effectManager.needsRedraw(t),
                                o = this.deckRenderer.needsRedraw(t);
                            return e = e || n || r || i || o
                        }
                    }, {
                        key: "redraw",
                        value: function(t) {
                            if (this.layerManager) {
                                var e = t || this.needsRedraw({
                                    clearRedrawFlags: !0
                                });
                                e && (this.stats.get("Redraw Count").incrementCount(), this.props._customRender ? this.props._customRender(e) : this._drawLayers(e))
                            }
                        }
                    }, {
                        key: "getViews",
                        value: function() {
                            return this.viewManager.views
                        }
                    }, {
                        key: "getViewports",
                        value: function(t) {
                            return this.viewManager.getViewports(t)
                        }
                    }, {
                        key: "pickObject",
                        value: function(t) {
                            var e = this._pick("pickObject", "pickObject Time", t).result;
                            return e.length ? e[0] : null
                        }
                    }, {
                        key: "pickMultipleObjects",
                        value: function(t) {
                            return t.depth = t.depth || 10, this._pick("pickObject", "pickMultipleObjects Time", t).result
                        }
                    }, {
                        key: "pickObjects",
                        value: function(t) {
                            return this._pick("pickObjects", "pickObjects Time", t)
                        }
                    }, {
                        key: "_addResources",
                        value: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                            for (var n in t) this.layerManager.resourceManager.add({
                                resourceId: n,
                                data: t[n],
                                forceUpdate: e
                            })
                        }
                    }, {
                        key: "_removeResources",
                        value: function(t) {
                            var e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = t[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) {
                                    var a = i.value;
                                    this.layerManager.resourceManager.remove(a)
                                }
                            } catch (s) {
                                n = !0, r = s
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                        }
                    }, {
                        key: "_pick",
                        value: function(t, e, n) {
                            var r = this.stats;
                            r.get("Pick Count").incrementCount(), r.get(e).timeStart();
                            var i = this.deckPicker[t](un({
                                layers: this.layerManager.getLayers(n),
                                views: this.viewManager.getViews(),
                                viewports: this.getViewports(n),
                                onViewportActive: this.layerManager.activateViewport
                            }, n));
                            return r.get(e).timeEnd(), i
                        }
                    }, {
                        key: "_createCanvas",
                        value: function(t) {
                            var e = t.canvas;
                            return "string" === typeof e && (e = document.getElementById(e), (0, on.Z)(e)), e || ((e = document.createElement("canvas")).id = t.id || "deckgl-overlay", (t.parent || document.body).appendChild(e)), Object.assign(e.style, t.style), e
                        }
                    }, {
                        key: "_setCanvasSize",
                        value: function(t) {
                            if (this.canvas) {
                                var e = t.width,
                                    n = t.height;
                                (e || 0 === e) && (e = Number.isFinite(e) ? "".concat(e, "px") : e, this.canvas.style.width = e), (n || 0 === n) && (n = Number.isFinite(n) ? "".concat(n, "px") : n, this.canvas.style.position = "absolute", this.canvas.style.height = n)
                            }
                        }
                    }, {
                        key: "_updateCanvasSize",
                        value: function() {
                            if (this._checkForCanvasSizeChange()) {
                                var t = this.width,
                                    e = this.height;
                                this.viewManager.setProps({
                                    width: t,
                                    height: e
                                }), this.props.onResize({
                                    width: this.width,
                                    height: this.height
                                })
                            }
                        }
                    }, {
                        key: "_checkForCanvasSizeChange",
                        value: function() {
                            var t = this.canvas;
                            if (!t) return !1;
                            var e = t.clientWidth || t.width,
                                n = t.clientHeight || t.height;
                            return (e !== this.width || n !== this.height) && (this.width = e, this.height = n, !0)
                        }
                    }, {
                        key: "_createAnimationLoop",
                        value: function(t) {
                            var e = this,
                                n = t.width,
                                r = t.height,
                                i = t.gl,
                                o = t.glOptions,
                                a = t.debug,
                                s = t.onError,
                                u = t.onBeforeRender,
                                c = t.onAfterRender,
                                l = t.useDevicePixels,
                                f = t.autoResizeDrawingBuffer;
                            return new nn({
                                width: n,
                                height: r,
                                useDevicePixels: l,
                                autoResizeDrawingBuffer: f,
                                autoResizeViewport: !1,
                                gl: i,
                                onCreateContext: function(t) {
                                    return (0, st.s9)(un({}, o, t, {
                                        canvas: e.canvas,
                                        debug: a,
                                        onContextLost: function() {
                                            return e._onContextLost()
                                        }
                                    }))
                                },
                                onInitialize: function(t) {
                                    return e._setGLContext(t.gl)
                                },
                                onRender: this._onRenderFrame.bind(this),
                                onBeforeRender: u,
                                onAfterRender: c,
                                onError: s
                            })
                        }
                    }, {
                        key: "_getViewState",
                        value: function() {
                            return this.props.viewState || this.viewState
                        }
                    }, {
                        key: "_getViews",
                        value: function() {
                            var t = this.props.views || [new F.Z({
                                id: "default-view"
                            })];
                            return (t = Array.isArray(t) ? t : [t]).length && this.props.controller && (t[0].props.controller = this.props.controller), t
                        }
                    }, {
                        key: "_onContextLost",
                        value: function() {
                            var t = this.props.onError;
                            this.animationLoop && t && t(new Error("WebGL context is lost"))
                        }
                    }, {
                        key: "_onPointerMove",
                        value: function(t) {
                            var e = this._pickRequest;
                            if ("pointerleave" === t.type) e.x = -1, e.y = -1, e.radius = 0;
                            else {
                                if (t.leftButton || t.rightButton) return;
                                var n = t.offsetCenter;
                                if (!n) return;
                                e.x = n.x, e.y = n.y, e.radius = this.props.pickingRadius
                            }
                            this.layerManager && (this.layerManager.context.mousePosition = {
                                x: e.x,
                                y: e.y
                            }), e.event = t, e.mode = "hover"
                        }
                    }, {
                        key: "_pickAndCallback",
                        value: function() {
                            var t = this._pickRequest;
                            if (t.event) {
                                var e = this._pick("pickObject", "pickObject Time", t),
                                    n = e.result,
                                    r = e.emptyInfo;
                                this.interactiveState.isHovering = n.length > 0;
                                var i = r,
                                    o = !1,
                                    a = !0,
                                    s = !1,
                                    u = void 0;
                                try {
                                    for (var c, l = n[Symbol.iterator](); !(a = (c = l.next()).done); a = !0) {
                                        var f = c.value;
                                        i = f, o = f.layer.onHover(f, t.event)
                                    }
                                } catch (d) {
                                    s = !0, u = d
                                } finally {
                                    try {
                                        a || null == l.return || l.return()
                                    } finally {
                                        if (s) throw u
                                    }
                                }
                                if (!o && this.props.onHover && this.props.onHover(i, t.event), this.props.getTooltip) {
                                    var h = this.props.getTooltip(i);
                                    this.tooltip.setTooltip(h, i.x, i.y)
                                }
                                t.event = null
                            }
                        }
                    }, {
                        key: "_updateCursor",
                        value: function() {
                            var t = this.props.parent || this.canvas;
                            t && (t.style.cursor = this.props.getCursor(this.interactiveState))
                        }
                    }, {
                        key: "_setGLContext",
                        value: function(t) {
                            if (!this.layerManager) {
                                this.canvas || (this.canvas = t.canvas, (0, st.yW)(t, {
                                    enable: !0,
                                    copyState: !0
                                })), this.tooltip = new ze(this.canvas), (0, st.dR)(t, {
                                    blend: !0,
                                    blendFunc: [770, 771, 1, 771],
                                    polygonOffsetFill: !0,
                                    depthTest: !0,
                                    depthFunc: 515
                                }), this.props.onWebGLInitialized(t);
                                var e = new u;
                                for (var n in e.play(), this.animationLoop.attachTimeline(e), this.eventManager = new rn.Q(this.props.parent || t.canvas, {
                                        touchAction: this.props.touchAction,
                                        recognizerOptions: this.props.eventRecognizerOptions,
                                        events: {
                                            pointerdown: this._onPointerDown,
                                            pointermove: this._onPointerMove,
                                            pointerleave: this._onPointerMove
                                        }
                                    }), Ct.FP) this.eventManager.on(n, this._onEvent);
                                this.viewManager = new D({
                                    timeline: e,
                                    eventManager: this.eventManager,
                                    onViewStateChange: this._onViewStateChange.bind(this),
                                    onInteractionStateChange: this._onInteractionStateChange.bind(this),
                                    views: this._getViews(),
                                    viewState: this._getViewState(),
                                    width: this.width,
                                    height: this.height
                                });
                                var r = this.viewManager.getViewports()[0];
                                this.layerManager = new A(t, {
                                    deck: this,
                                    stats: this.stats,
                                    viewport: r,
                                    timeline: e
                                }), this.effectManager = new te, this.deckRenderer = new Ee(t), this.deckPicker = new De(t), this.setProps(this.props), this._updateCanvasSize(), this.props.onLoad()
                            }
                        }
                    }, {
                        key: "_drawLayers",
                        value: function(t, e) {
                            var n = this.layerManager.context.gl;
                            (0, st.dR)(n, this.props.parameters), this.props.onBeforeRender({
                                gl: n
                            }), this.deckRenderer.renderLayers(un({
                                target: this.props._framebuffer,
                                layers: this.layerManager.getLayers(),
                                viewports: this.viewManager.getViewports(),
                                onViewportActive: this.layerManager.activateViewport,
                                views: this.viewManager.getViews(),
                                pass: "screen",
                                redrawReason: t,
                                effects: this.effectManager.getEffects()
                            }, e)), this.props.onAfterRender({
                                gl: n
                            })
                        }
                    }, {
                        key: "_onRenderFrame",
                        value: function(t) {
                            this._getFrameStats(), this._metricsCounter++ % 60 === 0 && (this._getMetrics(), this.stats.reset(), l.Z.table(4, this.metrics)(), this.props._onMetrics && this.props._onMetrics(this.metrics)), this._updateCanvasSize(), this._updateCursor(), this.tooltip.isVisible && this.viewManager.needsRedraw() && this.tooltip.setTooltip(null), this.layerManager.updateLayers(), this._pickAndCallback(), this.redraw(!1), this.viewManager && this.viewManager.updateViewStates()
                        }
                    }, {
                        key: "_onViewStateChange",
                        value: function(t) {
                            var e = this.props.onViewStateChange(t) || t.viewState;
                            this.viewState && (this.viewState = un({}, this.viewState, sn({}, t.viewId, e)), this.props.viewState || this.viewManager && this.viewManager.setProps({
                                viewState: this.viewState
                            }))
                        }
                    }, {
                        key: "_onInteractionStateChange",
                        value: function(t) {
                            this.interactiveState.isDragging = t.isDragging, this.props.onInteractionStateChange(t)
                        }
                    }, {
                        key: "_onEvent",
                        value: function(t) {
                            var e = Ct.FP[t.type],
                                n = t.offsetCenter;
                            if (e && n) {
                                var r = this.layerManager.getLayers(),
                                    i = this.deckPicker.getLastPickedObject({
                                        x: n.x,
                                        y: n.y,
                                        layers: r,
                                        viewports: this.getViewports(n)
                                    }, this._lastPointerDownInfo),
                                    o = i.layer,
                                    a = o && (o[e.handler] || o.props[e.handler]),
                                    s = this.props[e.handler],
                                    u = !1;
                                a && (u = a.call(o, i, t)), !u && s && s(i, t)
                            }
                        }
                    }, {
                        key: "_onPointerDown",
                        value: function(t) {
                            var e = t.offsetCenter,
                                n = this._pick("pickObject", "pickObject Time", {
                                    x: e.x,
                                    y: e.y,
                                    radius: this.props.pickingRadius
                                });
                            this._lastPointerDownInfo = n.result[0] || n.emptyInfo
                        }
                    }, {
                        key: "_getFrameStats",
                        value: function() {
                            var t = this.stats;
                            t.get("frameRate").timeEnd(), t.get("frameRate").timeStart();
                            var e = this.animationLoop.stats;
                            t.get("GPU Time").addTime(e.get("GPU Time").lastTiming), t.get("CPU Time").addTime(e.get("CPU Time").lastTiming)
                        }
                    }, {
                        key: "_getMetrics",
                        value: function() {
                            var t = this.metrics,
                                e = this.stats;
                            t.fps = e.get("frameRate").getHz(), t.setPropsTime = e.get("setProps Time").time, t.updateAttributesTime = e.get("Update Attributes").time, t.framesRedrawn = e.get("Redraw Count").count, t.pickTime = e.get("pickObject Time").time + e.get("pickMultipleObjects Time").time + e.get("pickObjects Time").time, t.pickCount = e.get("Pick Count").count, t.gpuTime = e.get("GPU Time").time, t.cpuTime = e.get("CPU Time").time, t.gpuTimePerFrame = e.get("GPU Time").getAverageTime(), t.cpuTimePerFrame = e.get("CPU Time").getAverageTime();
                            var n = qe.l.get("Memory Usage");
                            t.bufferMemory = n.get("Buffer Memory").count, t.textureMemory = n.get("Texture Memory").count, t.renderbufferMemory = n.get("Renderbuffer Memory").count, t.gpuMemory = n.get("GPU Memory").count
                        }
                    }]) && an(e.prototype, n), r && an(e, r), t
                }();
            fn.getPropTypes = function(t) {
                return {
                    id: t.string,
                    width: t.oneOfType([t.number, t.string]),
                    height: t.oneOfType([t.number, t.string]),
                    layers: t.oneOfType([t.object, t.array]),
                    layerFilter: t.func,
                    views: t.oneOfType([t.object, t.array]),
                    viewState: t.object,
                    effects: t.arrayOf(t.instanceOf(tt)),
                    controller: t.oneOfType([t.func, t.bool, t.object]),
                    gl: t.object,
                    glOptions: t.object,
                    parameters: t.object,
                    pickingRadius: t.number,
                    useDevicePixels: t.oneOfType([t.bool, t.number]),
                    touchAction: t.string,
                    eventRecognizerOptions: t.object,
                    onWebGLInitialized: t.func,
                    onResize: t.func,
                    onViewStateChange: t.func,
                    onInteractionStateChange: t.func,
                    onBeforeRender: t.func,
                    onAfterRender: t.func,
                    onLoad: t.func,
                    onError: t.func,
                    debug: t.bool,
                    drawPickingColors: t.bool,
                    _framebuffer: t.object,
                    _animate: t.bool,
                    _pickable: t.bool,
                    _typedArrayManagerProps: t.object
                }
            }, fn.defaultProps = ln, fn.VERSION = Ye.VERSION;
            var hn = "undefined" !== typeof window ? r.useLayoutEffect : r.useEffect;

            function dn(t, e) {
                for (; t;) {
                    if (t === e) return !0;
                    t = Object.getPrototypeOf(t)
                }
                return !1
            }
            var pn = n(60382),
                gn = n(31223);

            function yn(t) {
                return t ? "function" === typeof t ? (0, r.createElement)(pn.Z, {}, t) : Array.isArray(t) ? t.map(yn) : t.type === r.Fragment ? yn(t.props.children) : (dn(t.type, pn.Z), t) : t
            }
            const vn = {
                position: "absolute",
                zIndex: -1
            };

            function mn(t, e) {
                return t ? "function" === typeof t ? t(e) : Array.isArray(t) ? t.map((t => mn(t, e))) : function(t) {
                    const e = t && t.type,
                        n = e && e.defaultProps;
                    return n && n.mapStyle
                }(t) ? (e.style = vn, (0, r.cloneElement)(t, e)) : function(t) {
                    const e = t && t.type;
                    return e && e.deckGLViewProps
                }(t) ? (0, r.cloneElement)(t, e) : t : t
            }
            const bn = {
                mixBlendMode: null
            };

            function wn(t) {
                t.redrawReason && (t.deck._drawLayers(t.redrawReason), t.redrawReason = null)
            }
            const _n = (0, r.forwardRef)(((t, e) => {
                const n = (0, r.useRef)({}).current,
                    [i, o] = (0, r.useState)(0);
                n.forceUpdate = o;
                const a = (0, r.useRef)(null),
                    s = (0, r.useRef)(null),
                    u = (0, r.useMemo)((() => function({
                        children: t,
                        layers: e,
                        views: n
                    }) {
                        const i = [],
                            o = [],
                            a = {};
                        return r.Children.forEach(yn(t), (t => {
                            if (t) {
                                const e = t.type;
                                if (dn(e, gn.Z)) {
                                    const n = function(t, e) {
                                        const n = {},
                                            r = t.defaultProps || {};
                                        for (const i in e) r[i] !== e[i] && (n[i] = e[i]);
                                        return new t(n)
                                    }(e, t.props);
                                    o.push(n)
                                } else i.push(t);
                                if (e !== pn.Z && dn(e, pn.Z) && t.props.id) {
                                    const n = new e(t.props);
                                    a[n.id] = n
                                }
                            }
                        })), Object.keys(a).length > 0 && (Array.isArray(n) ? n.forEach((t => {
                            a[t.id] = t
                        })) : n && (a[n.id] = n), n = Object.values(a)), {
                            layers: e = o.length > 0 ? [...o, ...e] : e,
                            children: i,
                            views: n
                        }
                    }(t)), [t.layers, t.views, t.children]);
                let c = !0;
                const l = e => c && t.viewState ? (n.viewStateUpdateRequested = e, null) : (n.viewStateUpdateRequested = null, t.onViewStateChange(e)),
                    f = e => {
                        c ? n.interactionStateUpdateRequested = e : (n.interactionStateUpdateRequested = null, t.onInteractionStateChange(e))
                    },
                    h = (0, r.useMemo)((() => {
                        const e = { ...t,
                            style: null,
                            width: "100%",
                            height: "100%",
                            layers: u.layers,
                            views: u.views,
                            onViewStateChange: l,
                            onInteractionStateChange: f
                        };
                        return n.deck && n.deck.setProps(e), e
                    }), [t]);
                (0, r.useEffect)((() => (n.deck = function(t, e) {
                    const n = new(e.Deck || fn)({ ...e,
                        style: null,
                        width: "100%",
                        height: "100%",
                        _customRender: e => {
                            t.redrawReason = e;
                            const r = n.viewManager.getViewports();
                            t.lastRenderedViewports !== r ? t.forceUpdate((t => t + 1)) : wn(t)
                        }
                    });
                    return n
                }(n, { ...h,
                    parent: a.current,
                    canvas: s.current
                }), () => n.deck.finalize())), []), hn((() => {
                    wn(n);
                    const {
                        viewStateUpdateRequested: t,
                        interactionStateUpdateRequested: e
                    } = n;
                    t && l(t), e && f(e)
                })), (0, r.useImperativeHandle)(e, (() => function(t) {
                    const e = {
                        pickObject: e => t.deck.pickObject(e),
                        pickMultipleObjects: e => t.deck.pickMultipleObjects(e),
                        pickObjects: e => t.deck.pickObjects(e)
                    };
                    return Object.defineProperty(e, "deck", {
                        get: () => t.deck
                    }), e
                }(n)), []);
                const {
                    viewManager: d
                } = n.deck || {}, p = d && d.getViewports(), {
                    ContextProvider: g,
                    width: y,
                    height: v,
                    id: m,
                    style: b
                } = t, {
                    containerStyle: w,
                    canvasStyle: _
                } = (0, r.useMemo)((() => function({
                    width: t,
                    height: e,
                    style: n
                }) {
                    const r = {
                            position: "absolute",
                            zIndex: 0,
                            left: 0,
                            top: 0,
                            width: t,
                            height: e
                        },
                        i = {
                            left: 0,
                            top: 0
                        };
                    if (n)
                        for (const o in n) o in bn ? i[o] = n[o] : r[o] = n[o];
                    return {
                        containerStyle: r,
                        canvasStyle: i
                    }
                }({
                    width: y,
                    height: v,
                    style: b
                })), [y, v, b]);
                if (!n.viewStateUpdateRequested && n.lastRenderedViewports === p || n.version !== i) {
                    n.lastRenderedViewports = p, n.version = i;
                    const t = function({
                            children: t,
                            deck: e,
                            ContextProvider: n
                        }) {
                            const {
                                viewManager: i
                            } = e || {};
                            if (!i || !i.views.length) return [];
                            const o = {},
                                a = i.views[0].id;
                            for (const r of t) {
                                let t = a,
                                    e = r;
                                dn(r.type, pn.Z) && (t = r.props.id || a, e = r.props.children);
                                const n = i.getViewport(t),
                                    s = i.getViewState(t);
                                if (n) {
                                    const {
                                        x: r,
                                        y: i,
                                        width: a,
                                        height: u
                                    } = n;
                                    e = mn(e, {
                                        x: r,
                                        y: i,
                                        width: a,
                                        height: u,
                                        viewport: n,
                                        viewState: s
                                    }), o[t] || (o[t] = {
                                        viewport: n,
                                        children: []
                                    }), o[t].children.push(e)
                                }
                            }
                            return Object.keys(o).map((t => {
                                const {
                                    viewport: i,
                                    children: a
                                } = o[t], {
                                    x: s,
                                    y: u,
                                    width: c,
                                    height: l
                                } = i, f = {
                                    position: "absolute",
                                    left: s,
                                    top: u,
                                    width: c,
                                    height: l
                                }, h = "view-".concat(t), d = (0, r.createElement)("div", {
                                    key: h,
                                    id: h,
                                    style: f
                                }, ...a);
                                if (n) {
                                    const o = {
                                        viewport: i,
                                        container: e.canvas.offsetParent,
                                        eventManager: e.eventManager,
                                        onViewStateChange: n => {
                                            n.viewId = t, e._onViewStateChange(n)
                                        }
                                    };
                                    return (0, r.createElement)(n, {
                                        key: h,
                                        value: o
                                    }, d)
                                }
                                return d
                            }))
                        }({
                            children: u.children,
                            deck: n.deck,
                            ContextProvider: g
                        }),
                        e = (0, r.createElement)("canvas", {
                            key: "canvas",
                            id: m || "deckgl-overlay",
                            ref: s,
                            style: _
                        });
                    n.control = (0, r.createElement)("div", {
                        id: "".concat(m || "deckgl", "-wrapper"),
                        ref: a,
                        style: w
                    }, [e, t])
                }
                return c = !1, n.control
            }));
            _n.propTypes = fn.getPropTypes(o()), _n.defaultProps = fn.defaultProps;
            var Pn = _n
        },
        92324: function(t, e, n) {
            "use strict";
            n.d(e, {
                em: function() {
                    return c
                },
                DR: function() {
                    return O
                },
                _B: function() {
                    return f
                },
                mL: function() {
                    return a
                },
                rO: function() {
                    return l
                }
            });
            var r = n(23865),
                i = n(91077),
                o = n(46209);

            function a(t) {
                var e = t.children;
                return e && e.length > 0
            }
            var s = function(t) {
                    var e = "function" === typeof Symbol && Symbol.iterator,
                        n = e && t[e],
                        r = 0;
                    if (n) return n.call(t);
                    if (t && "number" === typeof t.length) return {
                        next: function() {
                            return t && r >= t.length && (t = void 0), {
                                value: t && t[r++],
                                done: !t
                            }
                        }
                    };
                    throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
                },
                u = function(t, e) {
                    var n = "function" === typeof Symbol && t[Symbol.iterator];
                    if (!n) return t;
                    var r, i, o = n.call(t),
                        a = [];
                    try {
                        for (;
                            (void 0 === e || e-- > 0) && !(r = o.next()).done;) a.push(r.value)
                    } catch (s) {
                        i = {
                            error: s
                        }
                    } finally {
                        try {
                            r && !r.done && (n = o.return) && n.call(o)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    return a
                };

            function c(t) {
                var e, n, o, c, l, f, h = new Map,
                    d = new Map,
                    p = new Map;
                try {
                    for (var g = s(t), y = g.next(); !y.done; y = g.next()) {
                        var v = y.value,
                            m = v.zoom,
                            b = v.nodes;
                        h.set(m, b);
                        try {
                            for (var w = (o = void 0, s(b)), _ = w.next(); !_.done; _ = w.next()) {
                                var P = _.value;
                                if (a(P)) d.set(P.id, P);
                                else {
                                    var E = P.id,
                                        x = p.get(E);
                                    (null == x || x > m) && p.set(E, m)
                                }
                            }
                        } catch (L) {
                            o = {
                                error: L
                            }
                        } finally {
                            try {
                                _ && !_.done && (c = w.return) && c.call(w)
                            } finally {
                                if (o) throw o.error
                            }
                        }
                    }
                } catch (R) {
                    e = {
                        error: R
                    }
                } finally {
                    try {
                        y && !y.done && (n = g.return) && n.call(g)
                    } finally {
                        if (e) throw e.error
                    }
                }
                var S = u((0, r.Z)(t, (function(t) {
                        return t.zoom
                    })), 2),
                    O = S[0],
                    T = S[1];
                if (null == O || null == T) throw new Error("Could not determine minZoom or maxZoom");
                var M = new Map,
                    C = function(t) {
                        var e = t.zoom,
                            n = M.get(e);
                        n || (n = new Map, M.set(e, n)), I(t, (function(e) {
                            n.set(e, t)
                        }))
                    };
                try {
                    for (var A = s(d.values()), k = A.next(); !k.done; k = A.next()) {
                        C(k.value)
                    }
                } catch (D) {
                    l = {
                        error: D
                    }
                } finally {
                    try {
                        k && !k.done && (f = A.return) && f.call(A)
                    } finally {
                        if (l) throw l.error
                    }
                }

                function I(t, e) {
                    var n, r;
                    try {
                        for (var i = s(t.children), o = i.next(); !o.done; o = i.next()) {
                            var a = o.value,
                                u = d.get(a);
                            u ? I(u, e) : e(a)
                        }
                    } catch (c) {
                        n = {
                            error: c
                        }
                    } finally {
                        try {
                            o && !o.done && (r = i.return) && r.call(i)
                        } finally {
                            if (n) throw n.error
                        }
                    }
                }

                function j(t, e) {
                    var n = M.get(e);
                    if (n) {
                        var r = n.get(t);
                        return r ? r.id : void 0
                    }
                }
                return {
                    availableZoomLevels: t.map((function(t) {
                        return +t.zoom
                    })).sort((function(t, e) {
                        return (0, i.Z)(t, e)
                    })),
                    getClusterNodesFor: function(t) {
                        if (void 0 !== t) return h.get(t)
                    },
                    getClusterById: function(t) {
                        return d.get(t)
                    },
                    getMinZoomForLocation: function(t) {
                        return p.get(t) || O
                    },
                    expandCluster: function(t, e) {
                        void 0 === e && (e = T);
                        var n = [],
                            r = function(t, n) {
                                var i, o;
                                if (e > t.zoom) try {
                                    for (var a = s(t.children), u = a.next(); !u.done; u = a.next()) {
                                        var c = u.value,
                                            l = d.get(c);
                                        l ? r(l, n) : n.push(c)
                                    }
                                } catch (f) {
                                    i = {
                                        error: f
                                    }
                                } finally {
                                    try {
                                        u && !u.done && (o = a.return) && o.call(a)
                                    } finally {
                                        if (i) throw i.error
                                    }
                                } else n.push(t.id)
                            };
                        return r(t, n), n
                    },
                    findClusterFor: j,
                    aggregateFlows: function(t, e, n, r) {
                        var i, o, a = n.getFlowOriginId,
                            u = n.getFlowDestId,
                            c = n.getFlowMagnitude;
                        if (void 0 === r && (r = {}), e > T) return t;
                        var l = [],
                            f = new Map,
                            h = function(t, e) {
                                return t + ":" + e
                            },
                            d = r.flowCountsMapReduce,
                            p = void 0 === d ? {
                                map: c,
                                reduce: function(t, e) {
                                    return (t || 0) + e
                                }
                            } : d;
                        try {
                            for (var g = s(t), y = g.next(); !y.done; y = g.next()) {
                                var v = y.value,
                                    m = a(v),
                                    b = u(v),
                                    w = j(m, e) || m,
                                    _ = j(b, e) || b,
                                    P = h(w, _);
                                if (w === m && _ === b) l.push(v);
                                else {
                                    var E = f.get(P);
                                    E ? E.count = p.reduce(E.count, p.map(v)) : (E = {
                                        origin: w,
                                        dest: _,
                                        count: p.map(v),
                                        aggregate: !0
                                    }, l.push(E), f.set(P, E))
                                }
                            }
                        } catch (x) {
                            i = {
                                error: x
                            }
                        } finally {
                            try {
                                y && !y.done && (o = g.return) && o.call(g)
                            } finally {
                                if (i) throw i.error
                            }
                        }
                        return l
                    }
                }
            }

            function l(t, e) {
                var n, r, i = e.getFlowOriginId,
                    o = e.getFlowDestId,
                    a = e.getFlowMagnitude,
                    u = {
                        incoming: new Map,
                        outgoing: new Map
                    };
                try {
                    for (var c = s(t), l = c.next(); !l.done; l = c.next()) {
                        var f = l.value,
                            h = i(f),
                            d = o(f),
                            p = a(f);
                        u.incoming.set(d, (u.incoming.get(d) || 0) + p), u.outgoing.set(h, (u.outgoing.get(h) || 0) + p)
                    }
                } catch (g) {
                    n = {
                        error: g
                    }
                } finally {
                    try {
                        l && !l.done && (r = c.return) && r.call(c)
                    } finally {
                        if (n) throw n.error
                    }
                }
                return function(t) {
                    return Math.max(Math.abs(u.incoming.get(t) || 0), Math.abs(u.outgoing.get(t) || 0))
                }
            }

            function f(t, e) {
                if (!t.length) throw new Error("No available zoom levels");
                return t[Math.min((0, o.Nw)(t, Math.floor(e)), t.length - 1)]
            }
            class h extends Map {
                constructor(t = [], e = y) {
                    super(), Object.defineProperties(this, {
                        _intern: {
                            value: new Map
                        },
                        _key: {
                            value: e
                        }
                    });
                    for (const [n, r] of t) this.set(n, r)
                }
                get(t) {
                    return super.get(d(this, t))
                }
                has(t) {
                    return super.has(d(this, t))
                }
                set(t, e) {
                    return super.set(p(this, t), e)
                }
                delete(t) {
                    return super.delete(g(this, t))
                }
            }
            Set;

            function d({
                _intern: t,
                _key: e
            }, n) {
                const r = e(n);
                return t.has(r) ? t.get(r) : n
            }

            function p({
                _intern: t,
                _key: e
            }, n) {
                const r = e(n);
                return t.has(r) ? t.get(r) : (t.set(r, n), n)
            }

            function g({
                _intern: t,
                _key: e
            }, n) {
                const r = e(n);
                return t.has(r) && (n = t.get(n), t.delete(r)), n
            }

            function y(t) {
                return null !== t && "object" === typeof t ? t.valueOf() : t
            }

            function v(t) {
                return t
            }

            function m(t, e, ...n) {
                return b(t, v, e, n)
            }

            function b(t, e, n, r) {
                return function t(i, o) {
                    if (o >= r.length) return n(i);
                    const a = new h,
                        s = r[o++];
                    let u = -1;
                    for (const e of i) {
                        const t = s(e, ++u, i),
                            n = a.get(t);
                        n ? n.push(e) : a.set(t, [e])
                    }
                    for (const [e, n] of a) a.set(e, t(n, o));
                    return e(a)
                }(t, 0)
            }
            var w = n(22305),
                _ = function() {
                    return (_ = Object.assign || function(t) {
                        for (var e, n = 1, r = arguments.length; n < r; n++)
                            for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                P = function(t, e) {
                    var n = "function" === typeof Symbol && t[Symbol.iterator];
                    if (!n) return t;
                    var r, i, o = n.call(t),
                        a = [];
                    try {
                        for (;
                            (void 0 === e || e-- > 0) && !(r = o.next()).done;) a.push(r.value)
                    } catch (s) {
                        i = {
                            error: s
                        }
                    } finally {
                        try {
                            r && !r.done && (n = o.return) && n.call(o)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    return a
                },
                E = function(t) {
                    var e = "function" === typeof Symbol && Symbol.iterator,
                        n = e && t[e],
                        r = 0;
                    if (n) return n.call(t);
                    if (t && "number" === typeof t.length) return {
                        next: function() {
                            return t && r >= t.length && (t = void 0), {
                                value: t && t[r++],
                                done: !t
                            }
                        }
                    };
                    throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
                },
                x = {
                    minZoom: 0,
                    maxZoom: 16,
                    radius: 40,
                    extent: 512,
                    nodeSize: 64,
                    makeClusterName: function(t, e) {},
                    makeClusterId: function(t) {
                        return "{[" + t + "]}"
                    }
                };

            function S(t) {
                return null != t.id
            }

            function O(t, e, n, r) {
                for (var i, o, a, s = e.getLocationCentroid, u = e.getLocationId, c = _(_({}, x), r), l = c.minZoom, f = c.maxZoom, h = c.nodeSize, d = c.makeClusterName, p = c.makeClusterId, g = new Array(f + 1), y = new Array, v = 0; v < t.length; v++) {
                    var b = P(s(t[v]), 2),
                        O = b[0],
                        T = b[1];
                    y.push({
                        x: (a = O, a / 360 + .5),
                        y: k(T),
                        weight: n(u(t[v])),
                        zoom: 1 / 0,
                        index: v,
                        parentId: -1
                    })
                }
                g[f + 1] = new w.Z(y, I, j, h, Float32Array);
                for (var L = f; L >= l; L--) y = M(y, L, g[L + 1], c), g[L] = new w.Z(y, I, j, h, Float32Array);
                if (0 === g.length) return [];
                for (var R = g.map((function(t) {
                        return t.points.length
                    })), D = R.indexOf(R[R.length - 1]), F = Math.min(D, R.lastIndexOf(R[0])), N = new Array, z = F; z <= D; z++) {
                    var B = void 0,
                        U = g[z];
                    z < D && (B = m(g[z + 1].points, (function(e) {
                        return e.map((function(e) {
                            return e.id ? p(e.id) : u(t[e.index])
                        }))
                    }), (function(t) {
                        return t.parentId
                    })));
                    var G = [];
                    try {
                        for (var Z = (i = void 0, E(U.points)), V = Z.next(); !V.done; V = Z.next()) {
                            var H = V.value,
                                W = (O = H.x, T = H.y, H.numPoints);
                            if (null != H.index) {
                                var Y = t[H.index];
                                G.push({
                                    id: u(Y),
                                    zoom: z,
                                    centroid: s(Y)
                                })
                            } else if (S(H)) {
                                var q = H.id,
                                    $ = B && B.get(q);
                                if (!$) throw new Error("Cluster " + q + " doesn't have children");
                                G.push({
                                    id: p(q),
                                    name: d(q, W),
                                    zoom: z,
                                    centroid: [C(O), A(T)],
                                    children: $
                                })
                            }
                        }
                    } catch (X) {
                        i = {
                            error: X
                        }
                    } finally {
                        try {
                            V && !V.done && (o = Z.return) && o.call(Z)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    N.push({
                        zoom: z,
                        nodes: G
                    })
                }
                return N
            }

            function T(t, e, n, r, i) {
                return {
                    x: t,
                    y: e,
                    zoom: 1 / 0,
                    id: n,
                    parentId: -1,
                    numPoints: r,
                    weight: i
                }
            }

            function M(t, e, n, r) {
                for (var i, o, a = [], s = r.radius / (r.extent * Math.pow(2, e)), u = 0; u < t.length; u++) {
                    var c = t[u];
                    if (!(c.zoom <= e)) {
                        c.zoom = e;
                        var l = n.within(c.x, c.y, s),
                            f = c.weight || 1,
                            h = S(c) ? c.numPoints : 1,
                            d = c.x * f,
                            p = c.y * f,
                            g = (u << 5) + (e + 1);
                        try {
                            for (var y = (i = void 0, E(l)), v = y.next(); !v.done; v = y.next()) {
                                var m = v.value,
                                    b = n.points[m];
                                if (!(b.zoom <= e)) {
                                    b.zoom = e;
                                    var w = b.weight || 1,
                                        _ = b.numPoints || 1;
                                    d += b.x * w, p += b.y * w, f += w, h += _, b.parentId = g
                                }
                            }
                        } catch (P) {
                            i = {
                                error: P
                            }
                        } finally {
                            try {
                                v && !v.done && (o = y.return) && o.call(y)
                            } finally {
                                if (i) throw i.error
                            }
                        }
                        1 === h ? a.push(c) : (c.parentId = g, a.push(T(d / f, p / f, g, h, f)))
                    }
                }
                return a
            }

            function C(t) {
                return 360 * (t - .5)
            }

            function A(t) {
                var e = (180 - 360 * t) * Math.PI / 180;
                return 360 * Math.atan(Math.exp(e)) / Math.PI - 90
            }

            function k(t) {
                var e = Math.sin(t * Math.PI / 180),
                    n = .5 - .25 * Math.log((1 + e) / (1 - e)) / Math.PI;
                return n < 0 ? 0 : n > 1 ? 1 : n
            }

            function I(t) {
                return t.x
            }

            function j(t) {
                return t.y
            }
        },
        86242: function(t, e, n) {
            "use strict";
            n.d(e, {
                _8: function() {
                    return Fe
                },
                ZP: function() {
                    return Kn
                },
                KW: function() {
                    return wn
                },
                SZ: function() {
                    return _n
                },
                FQ: function() {
                    return mn
                },
                Co: function() {
                    return On
                }
            });
            var r = n(31223),
                i = n(14270),
                o = n(71997);

            function a(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function s(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function u(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function c(t, e, n) {
                return (c = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = l(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function l(t) {
                return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function f(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        u(t, e, n[e])
                    }))
                }
                return t
            }

            function h(t, e) {
                return !e || "object" !== p(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function d(t, e) {
                return (d = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var p = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function g(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = l(t);
                    if (e) {
                        var i = l(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return h(this, n)
                }
            }
            var y = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && d(t, e)
                }(h, t);
                var e, n, r, u = g(h);

                function h() {
                    return a(this, h), u.apply(this, arguments)
                }
                return e = h, (n = [{
                    key: "isComposite",
                    get: function() {
                        return !0
                    }
                }, {
                    key: "isLoaded",
                    get: function() {
                        return c(l(h.prototype), "isLoaded", this) && this.getSubLayers().every((function(t) {
                            return t.isLoaded
                        }))
                    }
                }, {
                    key: "getSubLayers",
                    value: function() {
                        return this.internalState && this.internalState.subLayers || []
                    }
                }, {
                    key: "initializeState",
                    value: function() {}
                }, {
                    key: "setState",
                    value: function(t) {
                        c(l(h.prototype), "setState", this).call(this, t), this.setNeedsUpdate()
                    }
                }, {
                    key: "getPickingInfo",
                    value: function(t) {
                        var e = t.info,
                            n = e.object;
                        return n && n.__source && n.__source.parent && n.__source.parent.id === this.id ? (e.object = n.__source.object, e.index = n.__source.index, e) : e
                    }
                }, {
                    key: "renderLayers",
                    value: function() {
                        return null
                    }
                }, {
                    key: "filterSubLayer",
                    value: function(t) {
                        return !0
                    }
                }, {
                    key: "shouldRenderSubLayer",
                    value: function(t, e) {
                        return e && e.length
                    }
                }, {
                    key: "getSubLayerClass",
                    value: function(t, e) {
                        var n = this.props._subLayerProps;
                        return n && n[t] && n[t].type || e
                    }
                }, {
                    key: "getSubLayerRow",
                    value: function(t, e, n) {
                        return t.__source = {
                            parent: this,
                            object: e,
                            index: n
                        }, t
                    }
                }, {
                    key: "getSubLayerAccessor",
                    value: function(t) {
                        if ("function" === typeof t) {
                            var e = {
                                data: this.props.data,
                                target: []
                            };
                            return function(n, r) {
                                return n && n.__source ? (e.index = n.__source.index, t(n.__source.object, e)) : t(n, r)
                            }
                        }
                        return t
                    }
                }, {
                    key: "getSubLayerProps",
                    value: function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            e = this.props,
                            n = e.opacity,
                            r = e.pickable,
                            i = e.visible,
                            o = e.parameters,
                            a = e.getPolygonOffset,
                            s = e.highlightedObjectIndex,
                            u = e.autoHighlight,
                            c = e.highlightColor,
                            l = e.coordinateSystem,
                            h = e.coordinateOrigin,
                            d = e.wrapLongitude,
                            p = e.positionFormat,
                            g = e.modelMatrix,
                            y = e.extensions,
                            v = e.fetch,
                            m = e._subLayerProps,
                            b = {
                                opacity: n,
                                pickable: r,
                                visible: i,
                                parameters: o,
                                getPolygonOffset: a,
                                highlightedObjectIndex: s,
                                autoHighlight: u,
                                highlightColor: c,
                                coordinateSystem: l,
                                coordinateOrigin: h,
                                wrapLongitude: d,
                                positionFormat: p,
                                modelMatrix: g,
                                extensions: y,
                                fetch: v
                            },
                            w = m && m[t.id],
                            _ = w && w.updateTriggers,
                            P = t.id || "sublayer";
                        if (w) {
                            var E = this.constructor._propTypes,
                                x = t.type ? t.type._propTypes : {};
                            for (var S in w) {
                                var O = x[S] || E[S];
                                O && "accessor" === O.type && (w[S] = this.getSubLayerAccessor(w[S]))
                            }
                        }
                        Object.assign(b, t, w), b.id = "".concat(this.props.id, "-").concat(P), b.updateTriggers = f({
                            all: this.props.updateTriggers.all
                        }, t.updateTriggers, _);
                        var T = !0,
                            M = !1,
                            C = void 0;
                        try {
                            for (var A, k = y[Symbol.iterator](); !(T = (A = k.next()).done); T = !0) {
                                var I = A.value,
                                    j = I.getSubLayerProps.call(this, I);
                                j && Object.assign(b, j, {
                                    updateTriggers: Object.assign(b.updateTriggers, j.updateTriggers)
                                })
                            }
                        } catch (L) {
                            M = !0, C = L
                        } finally {
                            try {
                                T || null == k.return || k.return()
                            } finally {
                                if (M) throw C
                            }
                        }
                        return b
                    }
                }, {
                    key: "_updateAutoHighlight",
                    value: function(t) {
                        var e = !0,
                            n = !1,
                            r = void 0;
                        try {
                            for (var i, o = this.getSubLayers()[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) i.value.updateAutoHighlight(t)
                        } catch (a) {
                            n = !0, r = a
                        } finally {
                            try {
                                e || null == o.return || o.return()
                            } finally {
                                if (n) throw r
                            }
                        }
                    }
                }, {
                    key: "_getAttributeManager",
                    value: function() {
                        return null
                    }
                }, {
                    key: "_renderLayers",
                    value: function() {
                        var t = this.internalState.subLayers,
                            e = !t || this.needsUpdate();
                        e && (t = this.renderLayers(), t = (0, o.x)(t, Boolean), this.internalState.subLayers = t), (0, i.Z)("compositeLayer.renderLayers", this, e, t);
                        var n = !0,
                            r = !1,
                            a = void 0;
                        try {
                            for (var s, u = t[Symbol.iterator](); !(n = (s = u.next()).done); n = !0) s.value.parent = this
                        } catch (c) {
                            r = !0, a = c
                        } finally {
                            try {
                                n || null == u.return || u.return()
                            } finally {
                                if (r) throw a
                            }
                        }
                    }
                }]) && s(e.prototype, n), r && s(e, r), h
            }(r.Z);
            y.layerName = "CompositeLayer";
            var v = n(553);

            function m({
                data: t,
                getIndex: e,
                dataRange: n,
                replace: r
            }) {
                const {
                    startRow: i = 0,
                    endRow: o = 1 / 0
                } = n, a = t.length;
                let s = a,
                    u = a;
                for (let h = 0; h < a; h++) {
                    const n = e(t[h]);
                    if (s > h && n >= i && (s = h), n >= o) {
                        u = h;
                        break
                    }
                }
                let c = s;
                const l = u - s !== r.length,
                    f = l && t.slice(u);
                for (let h = 0; h < r.length; h++) t[c++] = r[h];
                if (l) {
                    for (let e = 0; e < f.length; e++) t[c++] = f[e];
                    t.length = c
                }
                return {
                    startRow: s,
                    endRow: s + r.length
                }
            }
            var b = {
                name: "project32",
                dependencies: [n(14917).Z],
                vs: "\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    mat3 rotation = project_get_orientation_matrix(projectedPosition);\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"
            };
            const w = {
                pickingSelectedColor: null,
                pickingHighlightColor: new Uint8Array([0, 255, 255, 255]),
                pickingActive: !1,
                pickingAttribute: !1
            };

            function _(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var P = function(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var n = null != arguments[e] ? arguments[e] : {},
                            r = Object.keys(n);
                        "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                            return Object.getOwnPropertyDescriptor(n, t).enumerable
                        })))), r.forEach((function(e) {
                            _(t, e, n[e])
                        }))
                    }
                    return t
                }({
                    inject: {
                        "vs:DECKGL_FILTER_COLOR": "\n  picking_setPickingColor(geometry.pickingColor);\n  // for picking depth values\n  picking_setPickingAttribute(geometry.position.z);\n  ",
                        "fs:DECKGL_FILTER_COLOR": {
                            order: 99,
                            injection: "\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "
                        }
                    }
                }, {
                    name: "picking",
                    vs: "uniform bool picking_uActive;\nuniform bool picking_uAttribute;\nuniform vec3 picking_uSelectedColor;\nuniform bool picking_uSelectedColorValid;\n\nout vec4 picking_vRGBcolor_Avalid;\n\nconst float COLOR_SCALE = 1. / 255.;\n\nbool picking_isColorValid(vec3 color) {\n  return dot(color, vec3(1.0)) > 0.001;\n}\n\nbool isVertexPicked(vec3 vertexColor) {\n  return\n    picking_uSelectedColorValid &&\n    !picking_isColorValid(abs(vertexColor - picking_uSelectedColor));\n}\n\nvoid picking_setPickingColor(vec3 pickingColor) {\n  if (picking_uActive) {\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\n\n    if (!picking_uAttribute) {\n      picking_vRGBcolor_Avalid.rgb = pickingColor * COLOR_SCALE;\n    }\n  } else {\n    picking_vRGBcolor_Avalid.a = float(isVertexPicked(pickingColor));\n  }\n}\n\nvoid picking_setPickingAttribute(float value) {\n  if (picking_uAttribute) {\n    picking_vRGBcolor_Avalid.r = value;\n  }\n}\nvoid picking_setPickingAttribute(vec2 value) {\n  if (picking_uAttribute) {\n    picking_vRGBcolor_Avalid.rg = value;\n  }\n}\nvoid picking_setPickingAttribute(vec3 value) {\n  if (picking_uAttribute) {\n    picking_vRGBcolor_Avalid.rgb = value;\n  }\n}\n",
                    fs: "uniform bool picking_uActive;\nuniform vec3 picking_uSelectedColor;\nuniform vec4 picking_uHighlightColor;\n\nin vec4 picking_vRGBcolor_Avalid;\nvec4 picking_filterHighlightColor(vec4 color) {\n  if (picking_uActive) {\n    return color;\n  }\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\n\n  if (selected) {\n    float highLightAlpha = picking_uHighlightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, picking_uHighlightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\nvec4 picking_filterPickingColor(vec4 color) {\n  if (picking_uActive) {\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\n      discard;\n    }\n    return picking_vRGBcolor_Avalid;\n  }\n  return color;\n}\nvec4 picking_filterColor(vec4 color) {\n  vec4 highightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highightColor);\n}\n\n",
                    getUniforms: function(t = w) {
                        const e = {};
                        if (void 0 !== t.pickingSelectedColor)
                            if (t.pickingSelectedColor) {
                                const n = t.pickingSelectedColor.slice(0, 3);
                                e.picking_uSelectedColorValid = 1, e.picking_uSelectedColor = n
                            } else e.picking_uSelectedColorValid = 0;
                        if (t.pickingHighlightColor) {
                            const n = Array.from(t.pickingHighlightColor, (t => t / 255));
                            Number.isFinite(n[3]) || (n[3] = 1), e.picking_uHighlightColor = n
                        }
                        return void 0 !== t.pickingActive && (e.picking_uActive = Boolean(t.pickingActive), e.picking_uAttribute = Boolean(t.pickingAttribute)), e
                    }
                }),
                E = n(87529),
                x = n(91375),
                S = n(74538),
                O = n(22525);
            const T = {
                POINTS: 0,
                LINES: 1,
                LINE_LOOP: 2,
                LINE_STRIP: 3,
                TRIANGLES: 4,
                TRIANGLE_STRIP: 5,
                TRIANGLE_FAN: 6
            };
            class M {
                static get DRAW_MODE() {
                    return T
                }
                constructor(t = {}) {
                    const {
                        id: e = (0, S.hQ)("geometry"),
                        drawMode: n = T.TRIANGLES,
                        attributes: r = {},
                        indices: i = null,
                        vertexCount: o = null
                    } = t;
                    this.id = e, this.drawMode = 0 | n, this.attributes = {}, this.userData = {}, this._setAttributes(r, i), this.vertexCount = o || this._calculateVertexCount(this.attributes, this.indices)
                }
                get mode() {
                    return this.drawMode
                }
                getVertexCount() {
                    return this.vertexCount
                }
                getAttributes() {
                    return this.indices ? {
                        indices: this.indices,
                        ...this.attributes
                    } : this.attributes
                }
                _print(t) {
                    return `Geometry ${this.id} attribute ${t}`
                }
                _setAttributes(t, e) {
                    e && (this.indices = ArrayBuffer.isView(e) ? {
                        value: e,
                        size: 1
                    } : e);
                    for (const n in t) {
                        let e = t[n];
                        e = ArrayBuffer.isView(e) ? {
                            value: e
                        } : e, (0, O.h)(ArrayBuffer.isView(e.value), `${this._print(n)}: must be typed array or object with value as typed array`), "POSITION" !== n && "positions" !== n || e.size || (e.size = 3), "indices" === n ? ((0, O.h)(!this.indices), this.indices = e) : this.attributes[n] = e
                    }
                    return this.indices && void 0 !== this.indices.isIndexed && (this.indices = Object.assign({}, this.indices), delete this.indices.isIndexed), this
                }
                _calculateVertexCount(t, e) {
                    if (e) return e.value.length;
                    let n = 1 / 0;
                    for (const r in t) {
                        const e = t[r],
                            {
                                value: i,
                                size: o,
                                constant: a
                            } = e;
                        !a && i && o >= 1 && (n = Math.min(n, i.length / o))
                    }
                    return (0, O.h)(Number.isFinite(n)), n
                }
            }
            var C = n(73462),
                A = n(29295),
                k = n(51621),
                I = n(78423),
                j = n(49300),
                L = n(71774);
            const R = () => {},
                D = {
                    10241: 9987,
                    10240: 9729,
                    10242: 33071,
                    10243: 33071
                };

            function F(t) {
                return Math.pow(2, Math.ceil(Math.log2(t)))
            }

            function N(t, e, n, r) {
                return n === e.width && r === e.height ? e : (t.canvas.height = r, t.canvas.width = n, t.clearRect(0, 0, t.canvas.width, t.canvas.height), t.drawImage(e, 0, 0, e.width, e.height, 0, 0, n, r), t.canvas)
            }

            function z(t) {
                return t && (t.id || t.url)
            }

            function B(t, e, n) {
                for (let r = 0; r < e.length; r++) {
                    const {
                        icon: i,
                        xOffset: o
                    } = e[r];
                    t[z(i)] = { ...i,
                        x: o,
                        y: n
                    }
                }
            }
            class U {
                constructor(t, {
                    onUpdate: e = R,
                    onError: n = R
                }) {
                    this.gl = t, this.onUpdate = e, this.onError = n, this._loadOptions = null, this._getIcon = null, this._texture = null, this._externalTexture = null, this._mapping = {}, this._pendingCount = 0, this._autoPacking = !1, this._xOffset = 0, this._yOffset = 0, this._rowHeight = 0, this._buffer = 4, this._canvasWidth = 1024, this._canvasHeight = 0, this._canvas = null
                }
                finalize() {
                    var t;
                    null === (t = this._texture) || void 0 === t || t.delete()
                }
                getTexture() {
                    return this._texture || this._externalTexture
                }
                getIconMapping(t) {
                    const e = this._autoPacking ? z(t) : t;
                    return this._mapping[e] || {}
                }
                setProps({
                    loadOptions: t,
                    autoPacking: e,
                    iconAtlas: n,
                    iconMapping: r,
                    data: i,
                    getIcon: o
                }) {
                    t && (this._loadOptions = t), void 0 !== e && (this._autoPacking = e), o && (this._getIcon = o), r && (this._mapping = r), n && this._updateIconAtlas(n), this._autoPacking && (i || o) && "undefined" !== typeof document && (this._canvas = this._canvas || document.createElement("canvas"), this._updateAutoPacking(i))
                }
                get isLoaded() {
                    return 0 === this._pendingCount
                }
                _updateIconAtlas(t) {
                    var e;
                    null === (e = this._texture) || void 0 === e || e.delete(), this._texture = null, this._externalTexture = t, this.onUpdate()
                }
                _updateAutoPacking(t) {
                    const e = Object.values(function(t, e, n) {
                        if (!t || !e) return null;
                        n = n || {};
                        const r = {},
                            {
                                iterable: i,
                                objectInfo: o
                            } = (0, L.jB)(t);
                        for (const a of i) {
                            o.index++;
                            const t = e(a, o),
                                i = z(t);
                            if (!t) throw new Error("Icon is missing.");
                            if (!t.url) throw new Error("Icon url is missing.");
                            r[i] || n[i] && t.url === n[i].url || (r[i] = { ...t,
                                source: a,
                                sourceIndex: o.index
                            })
                        }
                        return r
                    }(t, this._getIcon, this._mapping) || {});
                    if (e.length > 0) {
                        const {
                            mapping: t,
                            xOffset: n,
                            yOffset: r,
                            rowHeight: i,
                            canvasHeight: o
                        } = function({
                            icons: t,
                            buffer: e,
                            mapping: n = {},
                            xOffset: r = 0,
                            yOffset: i = 0,
                            rowHeight: o = 0,
                            canvasWidth: a
                        }) {
                            let s = [];
                            for (let u = 0; u < t.length; u++) {
                                const c = t[u];
                                if (!n[z(c)]) {
                                    const {
                                        height: t,
                                        width: u
                                    } = c;
                                    r + u + e > a && (B(n, s, i), r = 0, i = o + i + e, o = 0, s = []), s.push({
                                        icon: c,
                                        xOffset: r
                                    }), r = r + u + e, o = Math.max(o, t)
                                }
                            }
                            return s.length > 0 && B(n, s, i), {
                                mapping: n,
                                rowHeight: o,
                                xOffset: r,
                                yOffset: i,
                                canvasWidth: a,
                                canvasHeight: F(o + i + e)
                            }
                        }({
                            icons: e,
                            buffer: this._buffer,
                            canvasWidth: this._canvasWidth,
                            mapping: this._mapping,
                            rowHeight: this._rowHeight,
                            xOffset: this._xOffset,
                            yOffset: this._yOffset
                        });
                        this._rowHeight = i, this._mapping = t, this._xOffset = n, this._yOffset = r, this._canvasHeight = o, this._texture || (this._texture = new k.Z(this.gl, {
                            width: this._canvasWidth,
                            height: this._canvasHeight,
                            parameters: D
                        })), this._texture.height !== this._canvasHeight && (this._texture = function(t, e, n, r) {
                            const i = e.width,
                                o = e.height,
                                a = (0, C.h)(e, {
                                    width: n,
                                    height: r
                                });
                            return (0, A.Lv)(e, a, {
                                targetY: 0,
                                width: i,
                                height: o
                            }), e.delete(), a
                        }(this.gl, this._texture, this._canvasWidth, this._canvasHeight)), this.onUpdate(), this._loadIcons(e)
                    }
                }
                _loadIcons(t) {
                    const e = this._canvas.getContext("2d");
                    for (const n of t) this._pendingCount++, (0, j.z)(n.url, I.S, this._loadOptions).then((t => {
                        const r = z(n),
                            {
                                x: i,
                                y: o,
                                width: a,
                                height: s
                            } = this._mapping[r],
                            u = N(e, t, a, s);
                        this._texture.setSubImageData({
                            data: u,
                            x: i,
                            y: o,
                            width: a,
                            height: s
                        }), this._texture.generateMipmap(), this.onUpdate()
                    })).catch((t => {
                        this.onError({
                            url: n.url,
                            source: n.source,
                            sourceIndex: n.sourceIndex,
                            loadOptions: this._loadOptions,
                            error: t
                        })
                    })).finally((() => {
                        this._pendingCount--
                    }))
                }
            }
            const G = [0, 0, 0, 255],
                Z = {
                    iconAtlas: {
                        type: "image",
                        value: null,
                        async: !0
                    },
                    iconMapping: {
                        type: "object",
                        value: {},
                        async: !0
                    },
                    sizeScale: {
                        type: "number",
                        value: 1,
                        min: 0
                    },
                    billboard: !0,
                    sizeUnits: "pixels",
                    sizeMinPixels: {
                        type: "number",
                        min: 0,
                        value: 0
                    },
                    sizeMaxPixels: {
                        type: "number",
                        min: 0,
                        value: Number.MAX_SAFE_INTEGER
                    },
                    alphaCutoff: {
                        type: "number",
                        value: .05,
                        min: 0,
                        max: 1
                    },
                    getPosition: {
                        type: "accessor",
                        value: t => t.position
                    },
                    getIcon: {
                        type: "accessor",
                        value: t => t.icon
                    },
                    getColor: {
                        type: "accessor",
                        value: G
                    },
                    getSize: {
                        type: "accessor",
                        value: 1
                    },
                    getAngle: {
                        type: "accessor",
                        value: 0
                    },
                    getPixelOffset: {
                        type: "accessor",
                        value: [0, 0]
                    },
                    onIconError: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    }
                };
            class V extends r.Z {
                getShaders() {
                    return super.getShaders({
                        vs: "#define SHADER_NAME icon-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceIconFrames;\nattribute float instanceColorModes;\nattribute vec2 instanceOffsets;\nattribute vec2 instancePixelOffset;\n\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\nuniform int sizeUnits;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = angle * PI / 180.0;\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n\n  vec2 iconSize = instanceIconFrames.zw;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits), \n    sizeMinPixels, sizeMaxPixels\n  );\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\n  pixelOffset += instancePixelOffset;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTextureCoords = mix(\n    instanceIconFrames.xy,\n    instanceIconFrames.xy + iconSize,\n    (positions.xy + 1.0) / 2.0\n  ) / iconsTextureDim;\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  vColorMode = instanceColorModes;\n}\n",
                        fs: "#define SHADER_NAME icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\n  float a = texColor.a * opacity * vColor.a;\n\n  if (a < alphaCutoff) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color, a);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                        modules: [b, P]
                    })
                }
                initializeState() {
                    this.state = {
                        iconManager: new U(this.context.gl, {
                            onUpdate: this._onUpdate.bind(this),
                            onError: this._onError.bind(this)
                        })
                    };
                    this.getAttributeManager().addInstanced({
                        instancePositions: {
                            size: 3,
                            type: 5130,
                            fp64: this.use64bitPositions(),
                            transition: !0,
                            accessor: "getPosition"
                        },
                        instanceSizes: {
                            size: 1,
                            transition: !0,
                            accessor: "getSize",
                            defaultValue: 1
                        },
                        instanceOffsets: {
                            size: 2,
                            accessor: "getIcon",
                            transform: this.getInstanceOffset
                        },
                        instanceIconFrames: {
                            size: 4,
                            accessor: "getIcon",
                            transform: this.getInstanceIconFrame
                        },
                        instanceColorModes: {
                            size: 1,
                            type: 5121,
                            accessor: "getIcon",
                            transform: this.getInstanceColorMode
                        },
                        instanceColors: {
                            size: this.props.colorFormat.length,
                            type: 5121,
                            normalized: !0,
                            transition: !0,
                            accessor: "getColor",
                            defaultValue: G
                        },
                        instanceAngles: {
                            size: 1,
                            transition: !0,
                            accessor: "getAngle"
                        },
                        instancePixelOffset: {
                            size: 2,
                            transition: !0,
                            accessor: "getPixelOffset"
                        }
                    })
                }
                updateState({
                    oldProps: t,
                    props: e,
                    changeFlags: n
                }) {
                    super.updateState({
                        props: e,
                        oldProps: t,
                        changeFlags: n
                    });
                    const r = this.getAttributeManager(),
                        {
                            iconAtlas: i,
                            iconMapping: o,
                            data: a,
                            getIcon: s
                        } = e,
                        {
                            iconManager: u
                        } = this.state;
                    u.setProps({
                        loadOptions: e.loadOptions
                    });
                    let c = !1;
                    if (i || this.internalState.isAsyncPropLoading("iconAtlas") ? (t.iconAtlas !== e.iconAtlas && u.setProps({
                            iconAtlas: i,
                            autoPacking: !1
                        }), t.iconMapping !== e.iconMapping && (u.setProps({
                            iconMapping: o
                        }), c = !0)) : u.setProps({
                            autoPacking: !0
                        }), (n.dataChanged || n.updateTriggersChanged && (n.updateTriggersChanged.all || n.updateTriggersChanged.getIcon)) && u.setProps({
                            data: a,
                            getIcon: s
                        }), c && (r.invalidate("instanceOffsets"), r.invalidate("instanceIconFrames"), r.invalidate("instanceColorModes")), n.extensionsChanged) {
                        var l;
                        const {
                            gl: t
                        } = this.context;
                        null === (l = this.state.model) || void 0 === l || l.delete(), this.state.model = this._getModel(t), r.invalidateAll()
                    }
                }
                get isLoaded() {
                    return super.isLoaded && this.state.iconManager.isLoaded
                }
                finalizeState() {
                    super.finalizeState(), this.state.iconManager.finalize()
                }
                draw({
                    uniforms: t
                }) {
                    const {
                        sizeScale: e,
                        sizeMinPixels: n,
                        sizeMaxPixels: r,
                        sizeUnits: i,
                        billboard: o,
                        alphaCutoff: a
                    } = this.props, {
                        iconManager: s
                    } = this.state, u = s.getTexture();
                    u && this.state.model.setUniforms(t).setUniforms({
                        iconsTexture: u,
                        iconsTextureDim: [u.width, u.height],
                        sizeUnits: E.iI[i],
                        sizeScale: e,
                        sizeMinPixels: n,
                        sizeMaxPixels: r,
                        billboard: o,
                        alphaCutoff: a
                    }).draw()
                }
                _getModel(t) {
                    return new x.Z(t, { ...this.getShaders(),
                        id: this.props.id,
                        geometry: new M({
                            drawMode: 6,
                            attributes: {
                                positions: {
                                    size: 2,
                                    value: new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1])
                                }
                            }
                        }),
                        isInstanced: !0
                    })
                }
                _onUpdate() {
                    this.setNeedsRedraw()
                }
                _onError(t) {
                    const {
                        onIconError: e
                    } = this.getCurrentLayer().props;
                    e ? e(t) : v.Z.error(t.error)()
                }
                getInstanceOffset(t) {
                    const e = this.state.iconManager.getIconMapping(t);
                    return [e.width / 2 - e.anchorX || 0, e.height / 2 - e.anchorY || 0]
                }
                getInstanceColorMode(t) {
                    return this.state.iconManager.getIconMapping(t).mask ? 1 : 0
                }
                getInstanceIconFrame(t) {
                    const e = this.state.iconManager.getIconMapping(t);
                    return [e.x || 0, e.y || 0, e.width || 0, e.height || 0]
                }
            }
            V.layerName = "IconLayer", V.defaultProps = Z;
            const H = [0, 0, 0, 255],
                W = {
                    radiusUnits: "meters",
                    radiusScale: {
                        type: "number",
                        min: 0,
                        value: 1
                    },
                    radiusMinPixels: {
                        type: "number",
                        min: 0,
                        value: 0
                    },
                    radiusMaxPixels: {
                        type: "number",
                        min: 0,
                        value: Number.MAX_SAFE_INTEGER
                    },
                    lineWidthUnits: "meters",
                    lineWidthScale: {
                        type: "number",
                        min: 0,
                        value: 1
                    },
                    lineWidthMinPixels: {
                        type: "number",
                        min: 0,
                        value: 0
                    },
                    lineWidthMaxPixels: {
                        type: "number",
                        min: 0,
                        value: Number.MAX_SAFE_INTEGER
                    },
                    stroked: !1,
                    filled: !0,
                    billboard: !1,
                    antialiasing: !0,
                    getPosition: {
                        type: "accessor",
                        value: t => t.position
                    },
                    getRadius: {
                        type: "accessor",
                        value: 1
                    },
                    getFillColor: {
                        type: "accessor",
                        value: H
                    },
                    getLineColor: {
                        type: "accessor",
                        value: H
                    },
                    getLineWidth: {
                        type: "accessor",
                        value: 1
                    },
                    strokeWidth: {
                        deprecatedFor: "getLineWidth"
                    },
                    outline: {
                        deprecatedFor: "stroked"
                    },
                    getColor: {
                        deprecatedFor: ["getFillColor", "getLineColor"]
                    }
                };
            class Y extends r.Z {
                getShaders() {
                    return super.getShaders({
                        vs: "#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool billboard;\nuniform int radiusUnits;\nuniform int lineWidthUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\n    radiusMinPixels, radiusMaxPixels\n  );\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  }\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",
                        fs: "#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\nuniform bool antialiasing;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = antialiasing ? \n    smoothedge(distToCenter, outerRadiusPixels) : \n    step(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = antialiasing ? \n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\n\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                        modules: [b, P]
                    })
                }
                initializeState() {
                    this.getAttributeManager().addInstanced({
                        instancePositions: {
                            size: 3,
                            type: 5130,
                            fp64: this.use64bitPositions(),
                            transition: !0,
                            accessor: "getPosition"
                        },
                        instanceRadius: {
                            size: 1,
                            transition: !0,
                            accessor: "getRadius",
                            defaultValue: 1
                        },
                        instanceFillColors: {
                            size: this.props.colorFormat.length,
                            transition: !0,
                            normalized: !0,
                            type: 5121,
                            accessor: "getFillColor",
                            defaultValue: [0, 0, 0, 255]
                        },
                        instanceLineColors: {
                            size: this.props.colorFormat.length,
                            transition: !0,
                            normalized: !0,
                            type: 5121,
                            accessor: "getLineColor",
                            defaultValue: [0, 0, 0, 255]
                        },
                        instanceLineWidths: {
                            size: 1,
                            transition: !0,
                            accessor: "getLineWidth",
                            defaultValue: 1
                        }
                    })
                }
                updateState({
                    props: t,
                    oldProps: e,
                    changeFlags: n
                }) {
                    if (super.updateState({
                            props: t,
                            oldProps: e,
                            changeFlags: n
                        }), n.extensionsChanged) {
                        var r;
                        const {
                            gl: t
                        } = this.context;
                        null === (r = this.state.model) || void 0 === r || r.delete(), this.state.model = this._getModel(t), this.getAttributeManager().invalidateAll()
                    }
                }
                draw({
                    uniforms: t
                }) {
                    const {
                        radiusUnits: e,
                        radiusScale: n,
                        radiusMinPixels: r,
                        radiusMaxPixels: i,
                        stroked: o,
                        filled: a,
                        billboard: s,
                        antialiasing: u,
                        lineWidthUnits: c,
                        lineWidthScale: l,
                        lineWidthMinPixels: f,
                        lineWidthMaxPixels: h
                    } = this.props;
                    this.state.model.setUniforms(t).setUniforms({
                        stroked: o ? 1 : 0,
                        filled: a,
                        billboard: s,
                        antialiasing: u,
                        radiusUnits: E.iI[e],
                        radiusScale: n,
                        radiusMinPixels: r,
                        radiusMaxPixels: i,
                        lineWidthUnits: E.iI[c],
                        lineWidthScale: l,
                        lineWidthMinPixels: f,
                        lineWidthMaxPixels: h
                    }).draw()
                }
                _getModel(t) {
                    return new x.Z(t, { ...this.getShaders(),
                        id: this.props.id,
                        geometry: new M({
                            drawMode: 6,
                            vertexCount: 4,
                            attributes: {
                                positions: {
                                    size: 3,
                                    value: new Float32Array([-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0])
                                }
                            }
                        }),
                        isInstanced: !0
                    })
                }
            }
            Y.layerName = "ScatterplotLayer", Y.defaultProps = W;
            const q = [];
            class $ extends V {
                getShaders() {
                    return { ...super.getShaders(),
                        fs: "#define SHADER_NAME multi-icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float buffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\n\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  if (!picking_uActive) {\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\n    vec4 color = vColor;\n    if (sdf) {\n      float distance = alpha;\n      alpha = smoothstep(buffer - gamma, buffer + gamma, distance);\n\n      if (outlineBuffer > 0.0) {\n        float inFill = alpha;\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\n        color = mix(outlineColor, vColor, inFill);\n        alpha = inBorder;\n      }\n    }\n    float a = alpha * color.a;\n    \n    if (a < alphaCutoff) {\n      discard;\n    }\n\n    gl_FragColor = vec4(color.rgb, a * opacity);\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n"
                    }
                }
                initializeState() {
                    super.initializeState();
                    this.getAttributeManager().addInstanced({
                        instanceOffsets: {
                            size: 2,
                            accessor: "getIconOffsets"
                        },
                        instancePickingColors: {
                            type: 5121,
                            size: 3,
                            accessor: (t, {
                                index: e,
                                target: n
                            }) => this.encodePickingColor(e, n)
                        }
                    })
                }
                updateState(t) {
                    super.updateState(t);
                    const {
                        props: e,
                        oldProps: n
                    } = t;
                    let {
                        outlineColor: r
                    } = e;
                    r !== n.outlineColor && (r = r.map((t => t / 255)), r[3] = Number.isFinite(r[3]) ? r[3] : 1, this.setState({
                        outlineColor: r
                    })), !e.sdf && e.outlineWidth && v.Z.warn("".concat(this.id, ": fontSettings.sdf is required to render outline"))()
                }
                draw(t) {
                    const {
                        sdf: e,
                        smoothing: n,
                        outlineWidth: r
                    } = this.props, {
                        outlineColor: i
                    } = this.state;
                    t.uniforms = { ...t.uniforms,
                        buffer: .75,
                        outlineBuffer: r ? Math.max(n, .75 * (1 - r)) : -1,
                        gamma: n,
                        sdf: Boolean(e),
                        outlineColor: i
                    }, super.draw(t)
                }
                getInstanceOffset(t) {
                    return t ? Array.from(t).map((t => super.getInstanceOffset(t))) : q
                }
                getInstanceColorMode(t) {
                    return 1
                }
                getInstanceIconFrame(t) {
                    return t ? Array.from(t).map((t => super.getInstanceIconFrame(t))) : q
                }
            }
            $.layerName = "MultiIconLayer", $.defaultProps = {
                getIconOffsets: {
                    type: "accessor",
                    value: t => t.offsets
                },
                alphaCutoff: .001,
                smoothing: .1,
                outlineWidth: 0,
                outlineColor: {
                    type: "color",
                    value: [0, 0, 0, 255]
                }
            };
            var X = n(49296),
                K = n.n(X);
            const J = [];

            function Q(t) {
                return Math.pow(2, Math.ceil(Math.log2(t)))
            }

            function tt(t, e, n, r) {
                let i = 0;
                for (let o = e; o < n; o++) {
                    const e = t[o];
                    let n = null;
                    const a = r && r[e];
                    a && (n = a.width), i += n
                }
                return i
            }

            function et(t, e, n, r, i, o) {
                let a = e,
                    s = 0;
                for (let u = e; u < n; u++) {
                    const e = tt(t, u, u + 1, i);
                    s + e > r && (a < u && o.push(u), a = u, s = 0), s += e
                }
                return s
            }

            function nt(t, e, n, r, i = 0, o) {
                void 0 === o && (o = t.length);
                const a = [];
                return "break-all" === e ? et(t, i, o, n, r, a) : function(t, e, n, r, i, o) {
                    let a = e,
                        s = e,
                        u = e,
                        c = 0;
                    for (let l = e; l < n; l++)
                        if (" " === t[l] ? u = l + 1 : " " !== t[l + 1] && l + 1 !== n || (u = l + 1), u > s) {
                            let e = tt(t, s, u, i);
                            c + e > r && (a < s && (o.push(s), a = s, c = 0), e > r && (e = et(t, s, u, r, i, o), a = o[o.length - 1])), s = u, c += e
                        }
                }(t, i, o, n, r, a), a
            }

            function rt(t, e, n, r, i, o) {
                let a = 0,
                    s = 0;
                for (let u = e; u < n; u++) {
                    const e = t[u],
                        n = r[e];
                    n ? (s || (s = n.height), i[u] = a + n.width / 2, a += n.width) : (v.Z.warn("Missing character: ".concat(e, " (").concat(e.codePointAt(0), ")"))(), i[u] = a, a += 32)
                }
                o[0] = a, o[1] = s
            }

            function it(t, e, n, r, i) {
                const o = (t = Array.from(t)).length,
                    a = new Array(o),
                    s = new Array(o),
                    u = new Array(o),
                    c = ("break-word" === n || "break-all" === n) && isFinite(r) && r > 0,
                    l = [0, 0],
                    f = [];
                let h = 0,
                    d = 0,
                    p = 0;
                for (let g = 0; g <= o; g++) {
                    const y = t[g];
                    if ("\n" !== y && g !== o || (p = g), p > d) {
                        const o = c ? nt(t, n, r, i, d, p) : J;
                        for (let n = 0; n <= o.length; n++) {
                            const r = 0 === n ? d : o[n - 1],
                                c = n < o.length ? o[n] : p;
                            rt(t, r, c, i, a, f);
                            for (let t = r; t < c; t++) s[t] = h + f[1] / 2, u[t] = f[0];
                            h += f[1] * e, l[0] = Math.max(l[0], f[0])
                        }
                        d = p
                    }
                    "\n" === y && (a[d] = 0, s[d] = 0, u[d] = 0, d++)
                }
                return l[1] = h, {
                    x: a,
                    y: s,
                    rowWidth: u,
                    size: l
                }
            }
            const ot = function() {
                    const t = [];
                    for (let e = 32; e < 128; e++) t.push(String.fromCharCode(e));
                    return t
                }(),
                at = "Monaco, monospace",
                st = "normal",
                ut = new class {
                    constructor(t = 5) {
                        this.limit = t, this.clear()
                    }
                    clear() {
                        this._cache = {}, this._order = []
                    }
                    get(t) {
                        const e = this._cache[t];
                        return e && (this._deleteOrder(t), this._appendOrder(t)), e
                    }
                    set(t, e) {
                        this._cache[t] ? (this.delete(t), this._cache[t] = e, this._appendOrder(t)) : (Object.keys(this._cache).length === this.limit && this.delete(this._order[0]), this._cache[t] = e, this._appendOrder(t))
                    }
                    delete(t) {
                        this._cache[t] && (this._deleteCache(t), this._deleteOrder(t))
                    }
                    _deleteCache(t) {
                        delete this._cache[t]
                    }
                    _deleteOrder(t) {
                        const e = this._order.findIndex((e => e === t));
                        e >= 0 && this._order.splice(e, 1)
                    }
                    _appendOrder(t) {
                        this._order.push(t)
                    }
                }(3),
                ct = ["fontFamily", "fontWeight", "characterSet", "fontSize", "sdf", "buffer", "cutoff", "radius"];

            function lt(t, e) {
                for (let n = 0; n < t.length; n++) e.data[4 * n + 3] = t[n]
            }

            function ft(t, e, n, r) {
                t.font = "".concat(r, " ").concat(n, "px ").concat(e), t.fillStyle = "#000", t.textBaseline = "baseline", t.textAlign = "left"
            }
            class ht {
                constructor() {
                    this.props = {
                        fontFamily: at,
                        fontWeight: st,
                        characterSet: ot,
                        fontSize: 64,
                        buffer: 4,
                        sdf: !1,
                        cutoff: .25,
                        radius: 12
                    }, this._key = null, this._atlas = null
                }
                get texture() {
                    return this._atlas
                }
                get mapping() {
                    return this._atlas && this._atlas.mapping
                }
                get scale() {
                    return 1.2
                }
                setProps(t = {}) {
                    ct.forEach((e => {
                        e in t && (this.props[e] = t[e])
                    }));
                    const e = this._key;
                    this._key = this._getKey();
                    const n = function(t, e) {
                            const n = ut.get(t);
                            if (!n) return e;
                            const r = [],
                                i = n.mapping;
                            let o = Object.keys(i);
                            o = new Set(o);
                            let a = e;
                            return a instanceof Array && (a = new Set(a)), a.forEach((t => {
                                o.has(t) || r.push(t)
                            })), r
                        }(this._key, this.props.characterSet),
                        r = ut.get(this._key);
                    if (r && 0 === n.length) return void(this._key !== e && (this._atlas = r));
                    const i = this._generateFontAtlas(this._key, n, r);
                    this._atlas = i, ut.set(this._key, i)
                }
                _generateFontAtlas(t, e, n) {
                    const {
                        fontFamily: r,
                        fontWeight: i,
                        fontSize: o,
                        buffer: a,
                        sdf: s,
                        radius: u,
                        cutoff: c
                    } = this.props;
                    let l = n && n.data;
                    l || (l = document.createElement("canvas"), l.width = 1024);
                    const f = l.getContext("2d");
                    ft(f, r, o, i);
                    const {
                        mapping: h,
                        canvasHeight: d,
                        xOffset: p,
                        yOffset: g
                    } = function({
                        characterSet: t,
                        getFontWidth: e,
                        fontHeight: n,
                        buffer: r,
                        maxCanvasWidth: i,
                        mapping: o = {},
                        xOffset: a = 0,
                        yOffset: s = 0
                    }) {
                        let u = 0,
                            c = a,
                            l = 0;
                        for (const h of t)
                            if (!o[h]) {
                                const t = e(h, l++);
                                c + t + 2 * r > i && (c = 0, u++), o[h] = {
                                    x: c + r,
                                    y: s + u * (n + 2 * r) + r,
                                    width: t,
                                    height: n
                                }, c += t + 2 * r
                            }
                        const f = n + 2 * r;
                        return {
                            mapping: o,
                            xOffset: c,
                            yOffset: s + u * f,
                            canvasHeight: Q(s + (u + 1) * f)
                        }
                    }({
                        getFontWidth: t => f.measureText(t).width,
                        fontHeight: 1.2 * o,
                        buffer: a,
                        characterSet: e,
                        maxCanvasWidth: 1024,
                        ...n && {
                            mapping: n.mapping,
                            xOffset: n.xOffset,
                            yOffset: n.yOffset
                        }
                    });
                    if (l.height !== d) {
                        const t = f.getImageData(0, 0, l.width, l.height);
                        l.height = d, f.putImageData(t, 0, 0)
                    }
                    if (ft(f, r, o, i), s) {
                        const t = new(K())(o, a, u, c, r, i),
                            n = f.getImageData(0, 0, t.size, t.size);
                        for (const r of e) lt(t.draw(r), n), f.putImageData(n, h[r].x - a, h[r].y + a)
                    } else
                        for (const y of e) f.fillText(y, h[y].x, h[y].y + .9 * o);
                    return {
                        xOffset: p,
                        yOffset: g,
                        mapping: h,
                        data: l,
                        width: l.width,
                        height: l.height
                    }
                }
                _getKey() {
                    const {
                        fontFamily: t,
                        fontWeight: e,
                        fontSize: n,
                        buffer: r,
                        sdf: i,
                        radius: o,
                        cutoff: a
                    } = this.props;
                    return i ? "".concat(t, " ").concat(e, " ").concat(n, " ").concat(r, " ").concat(o, " ").concat(a) : "".concat(t, " ").concat(e, " ").concat(n, " ").concat(r)
                }
            }
            const dt = {
                billboard: !0,
                sizeScale: 1,
                sizeUnits: "pixels",
                sizeMinPixels: 0,
                sizeMaxPixels: Number.MAX_SAFE_INTEGER,
                padding: {
                    type: "array",
                    value: [0, 0, 0, 0]
                },
                getPosition: {
                    type: "accessor",
                    value: t => t.position
                },
                getSize: {
                    type: "accessor",
                    value: 1
                },
                getAngle: {
                    type: "accessor",
                    value: 0
                },
                getPixelOffset: {
                    type: "accessor",
                    value: [0, 0]
                },
                getBoundingRect: {
                    type: "accessor",
                    value: [0, 0, 0, 0]
                },
                getFillColor: {
                    type: "accessor",
                    value: [0, 0, 0, 255]
                },
                getLineColor: {
                    type: "accessor",
                    value: [0, 0, 0, 255]
                },
                getLineWidth: {
                    type: "accessor",
                    value: 1
                }
            };
            class pt extends r.Z {
                getShaders() {
                    return super.getShaders({
                        vs: "#define SHADER_NAME text-background-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec4 instanceRects;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec2 instancePixelOffsets;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\nuniform int sizeUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = radians(angle);\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n  vLineWidth = instanceLineWidths;\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\n    sizeMinPixels, sizeMaxPixels\n  );\n\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\n\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\n  pixelOffset += instancePixelOffsets;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",
                        fs: "#define SHADER_NAME text-background-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec2 pixelPosition = uv * dimensions;\n  if (stroked) {\n    float distToEdge = min(\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\n    );\n    float isBorder = smoothedge(distToEdge, vLineWidth);\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\n  } else {\n    gl_FragColor = vFillColor;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                        modules: [b, P]
                    })
                }
                initializeState() {
                    this.getAttributeManager().addInstanced({
                        instancePositions: {
                            size: 3,
                            type: 5130,
                            fp64: this.use64bitPositions(),
                            transition: !0,
                            accessor: "getPosition"
                        },
                        instanceSizes: {
                            size: 1,
                            transition: !0,
                            accessor: "getSize",
                            defaultValue: 1
                        },
                        instanceAngles: {
                            size: 1,
                            transition: !0,
                            accessor: "getAngle"
                        },
                        instanceRects: {
                            size: 4,
                            accessor: "getBoundingRect"
                        },
                        instancePixelOffsets: {
                            size: 2,
                            transition: !0,
                            accessor: "getPixelOffset"
                        },
                        instanceFillColors: {
                            size: 4,
                            transition: !0,
                            normalized: !0,
                            type: 5121,
                            accessor: "getFillColor",
                            defaultValue: [0, 0, 0, 255]
                        },
                        instanceLineColors: {
                            size: 4,
                            transition: !0,
                            normalized: !0,
                            type: 5121,
                            accessor: "getLineColor",
                            defaultValue: [0, 0, 0, 255]
                        },
                        instanceLineWidths: {
                            size: 1,
                            transition: !0,
                            accessor: "getLineWidth",
                            defaultValue: 1
                        }
                    })
                }
                updateState({
                    props: t,
                    oldProps: e,
                    changeFlags: n
                }) {
                    if (super.updateState({
                            props: t,
                            oldProps: e,
                            changeFlags: n
                        }), n.extensionsChanged) {
                        var r;
                        const {
                            gl: t
                        } = this.context;
                        null === (r = this.state.model) || void 0 === r || r.delete(), this.state.model = this._getModel(t), this.getAttributeManager().invalidateAll()
                    }
                }
                draw({
                    uniforms: t
                }) {
                    const {
                        billboard: e,
                        sizeScale: n,
                        sizeUnits: r,
                        sizeMinPixels: i,
                        sizeMaxPixels: o,
                        getLineWidth: a
                    } = this.props;
                    let {
                        padding: s
                    } = this.props;
                    s.length < 4 && (s = [s[0], s[1], s[0], s[1]]), this.state.model.setUniforms(t).setUniforms({
                        billboard: e,
                        stroked: Boolean(a),
                        padding: s,
                        sizeUnits: E.iI[r],
                        sizeScale: n,
                        sizeMinPixels: i,
                        sizeMaxPixels: o
                    }).draw()
                }
                _getModel(t) {
                    return new x.Z(t, { ...this.getShaders(),
                        id: this.props.id,
                        geometry: new M({
                            drawMode: 6,
                            vertexCount: 4,
                            attributes: {
                                positions: {
                                    size: 2,
                                    value: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1])
                                }
                            }
                        }),
                        isInstanced: !0
                    })
                }
            }
            pt.layerName = "TextBackgroundLayer", pt.defaultProps = dt;
            const gt = {
                    fontSize: 64,
                    buffer: 4,
                    sdf: !1,
                    radius: 12,
                    cutoff: .25,
                    smoothing: .1
                },
                yt = {
                    start: 1,
                    middle: 0,
                    end: -1
                },
                vt = {
                    top: 1,
                    center: 0,
                    bottom: -1
                },
                mt = [0, 0, 0, 255],
                bt = ["fontSize", "buffer", "sdf", "radius", "cutoff"],
                wt = {
                    billboard: !0,
                    sizeScale: 1,
                    sizeUnits: "pixels",
                    sizeMinPixels: 0,
                    sizeMaxPixels: Number.MAX_SAFE_INTEGER,
                    background: !1,
                    getBackgroundColor: {
                        type: "accessor",
                        value: [255, 255, 255, 255]
                    },
                    getBorderColor: {
                        type: "accessor",
                        value: mt
                    },
                    getBorderWidth: {
                        type: "accessor",
                        value: 0
                    },
                    backgroundPadding: {
                        type: "array",
                        value: [0, 0, 0, 0]
                    },
                    characterSet: {
                        type: "object",
                        value: ot
                    },
                    fontFamily: at,
                    fontWeight: st,
                    lineHeight: 1,
                    outlineWidth: {
                        type: "number",
                        value: 0,
                        min: 0
                    },
                    outlineColor: {
                        type: "color",
                        value: mt
                    },
                    fontSettings: {},
                    wordBreak: "break-word",
                    maxWidth: {
                        type: "number",
                        value: -1
                    },
                    getText: {
                        type: "accessor",
                        value: t => t.text
                    },
                    getPosition: {
                        type: "accessor",
                        value: t => t.position
                    },
                    getColor: {
                        type: "accessor",
                        value: mt
                    },
                    getSize: {
                        type: "accessor",
                        value: 32
                    },
                    getAngle: {
                        type: "accessor",
                        value: 0
                    },
                    getTextAnchor: {
                        type: "accessor",
                        value: "middle"
                    },
                    getAlignmentBaseline: {
                        type: "accessor",
                        value: "center"
                    },
                    getPixelOffset: {
                        type: "accessor",
                        value: [0, 0]
                    },
                    backgroundColor: {
                        deprecatedFor: ["background", "getBackgroundColor"]
                    }
                };
            class _t extends y {
                initializeState() {
                    this.state = {
                        styleVersion: 0,
                        fontAtlasManager: new ht
                    }
                }
                updateState({
                    props: t,
                    oldProps: e,
                    changeFlags: n
                }) {
                    const r = n.dataChanged || n.updateTriggersChanged && (n.updateTriggersChanged.all || n.updateTriggersChanged.getText),
                        i = this.state.characterSet;
                    r && this._updateText();
                    const o = i !== this.state.characterSet || this._fontChanged(e, t);
                    o && this._updateFontAtlas(e, t);
                    (o || t.lineHeight !== e.lineHeight || t.wordBreak !== e.wordBreak || t.maxWidth !== e.maxWidth) && this.setState({
                        styleVersion: this.state.styleVersion + 1
                    })
                }
                getPickingInfo({
                    info: t
                }) {
                    return t.object = t.index >= 0 ? this.props.data[t.index] : null, t
                }
                _updateFontAtlas(t, e) {
                    const {
                        fontSettings: n,
                        fontFamily: r,
                        fontWeight: i
                    } = e, {
                        fontAtlasManager: o,
                        characterSet: a
                    } = this.state;
                    o.setProps({ ...gt,
                        ...n,
                        characterSet: a,
                        fontFamily: r,
                        fontWeight: i
                    })
                }
                _fontChanged(t, e) {
                    if (t.fontFamily !== e.fontFamily || t.fontWeight !== e.fontWeight) return !0;
                    if (t.fontSettings === e.fontSettings) return !1;
                    const n = t.fontSettings || {},
                        r = e.fontSettings || {};
                    return bt.some((t => n[t] !== r[t]))
                }
                _updateText() {
                    const {
                        data: t,
                        characterSet: e
                    } = this.props, n = t.attributes && t.attributes.getText;
                    let r, {
                            getText: i
                        } = this.props,
                        {
                            startIndices: o
                        } = t;
                    const a = "auto" === e && new Set;
                    if (n && o) {
                        const {
                            texts: e,
                            characterCount: s
                        } = function({
                            value: t,
                            length: e,
                            stride: n,
                            offset: r,
                            startIndices: i,
                            characterSet: o
                        }) {
                            const a = t.BYTES_PER_ELEMENT,
                                s = n ? n / a : 1,
                                u = r ? r / a : 0,
                                c = i[e] || Math.ceil((t.length - u) / s),
                                l = o && new Set,
                                f = new Array(e);
                            let h = t;
                            if (s > 1 || u > 0) {
                                h = new t.constructor(c);
                                for (let e = 0; e < c; e++) h[e] = t[e * s + u]
                            }
                            for (let d = 0; d < e; d++) {
                                const t = i[d],
                                    e = i[d + 1] || c,
                                    n = h.subarray(t, e);
                                f[d] = String.fromCodePoint.apply(null, n), l && n.forEach(l.add, l)
                            }
                            if (l)
                                for (const d of l) o.add(String.fromCodePoint(d));
                            return {
                                texts: f,
                                characterCount: c
                            }
                        }({ ...ArrayBuffer.isView(n) ? {
                                value: n
                            } : n,
                            length: t.length,
                            startIndices: o,
                            characterSet: a
                        });
                        r = s, i = (t, {
                            index: n
                        }) => e[n]
                    } else {
                        const {
                            iterable: e,
                            objectInfo: n
                        } = (0, L.jB)(t);
                        o = [0], r = 0;
                        for (const t of e) {
                            n.index++;
                            const e = Array.from(i(t, n) || "");
                            a && e.forEach(a.add, a), r += e.length, o.push(r)
                        }
                    }
                    this.setState({
                        getText: i,
                        startIndices: o,
                        numInstances: r,
                        characterSet: a || e
                    })
                }
                getBoundingRect(t, e) {
                    const n = this.state.fontAtlasManager.mapping,
                        {
                            getText: r
                        } = this.state,
                        {
                            wordBreak: i,
                            maxWidth: o,
                            lineHeight: a,
                            getTextAnchor: s,
                            getAlignmentBaseline: u
                        } = this.props,
                        c = r(t, e) || "",
                        {
                            size: [l, f]
                        } = it(c, a, i, o, n);
                    return [(yt["function" === typeof s ? s(t, e) : s] - 1) * l / 2, (vt["function" === typeof u ? u(t, e) : u] - 1) * f / 2, l, f]
                }
                getIconOffsets(t, e) {
                    const n = this.state.fontAtlasManager.mapping,
                        {
                            getText: r
                        } = this.state,
                        {
                            wordBreak: i,
                            maxWidth: o,
                            lineHeight: a,
                            getTextAnchor: s,
                            getAlignmentBaseline: u
                        } = this.props,
                        c = r(t, e) || "",
                        {
                            x: l,
                            y: f,
                            rowWidth: h,
                            size: [d, p]
                        } = it(c, a, i, o, n),
                        g = yt["function" === typeof s ? s(t, e) : s],
                        y = vt["function" === typeof u ? u(t, e) : u],
                        v = l.length,
                        m = new Array(2 * v);
                    let b = 0;
                    for (let w = 0; w < v; w++) {
                        const t = (1 - g) * (d - h[w]) / 2;
                        m[b++] = (g - 1) * d / 2 + t + l[w], m[b++] = (y - 1) * p / 2 + f[w]
                    }
                    return m
                }
                renderLayers() {
                    const {
                        startIndices: t,
                        numInstances: e,
                        getText: n,
                        fontAtlasManager: {
                            scale: r,
                            texture: i,
                            mapping: o
                        },
                        styleVersion: a
                    } = this.state, {
                        data: s,
                        _dataDiff: u,
                        getPosition: c,
                        getColor: l,
                        getSize: f,
                        getAngle: h,
                        getPixelOffset: d,
                        getBackgroundColor: p,
                        getBorderColor: g,
                        getBorderWidth: y,
                        backgroundPadding: v,
                        background: m,
                        billboard: b,
                        fontSettings: w,
                        outlineWidth: _,
                        outlineColor: P,
                        sizeScale: E,
                        sizeUnits: x,
                        sizeMinPixels: S,
                        sizeMaxPixels: O,
                        transitions: T,
                        updateTriggers: M
                    } = this.props, C = this.getSubLayerClass("characters", $), A = this.getSubLayerClass("background", pt);
                    return [m && new A({
                        getFillColor: p,
                        getLineColor: g,
                        getLineWidth: y,
                        padding: v,
                        getPosition: c,
                        getSize: f,
                        getAngle: h,
                        getPixelOffset: d,
                        billboard: b,
                        sizeScale: E / this.state.fontAtlasManager.props.fontSize,
                        sizeUnits: x,
                        sizeMinPixels: S,
                        sizeMaxPixels: O,
                        transitions: T && {
                            getPosition: T.getPosition,
                            getAngle: T.getAngle,
                            getSize: T.getSize,
                            getFillColor: T.getBackgroundColor,
                            getLineColor: T.getBorderColor,
                            getLineWidth: T.getBorderWidth,
                            getPixelOffset: T.getPixelOffset
                        }
                    }, this.getSubLayerProps({
                        id: "background",
                        updateTriggers: {
                            getPosition: M.getPosition,
                            getAngle: M.getAngle,
                            getSize: M.getSize,
                            getFillColor: M.getBackgroundColor,
                            getLineColor: M.getBorderColor,
                            getLineWidth: M.getBorderWidth,
                            getPixelOffset: M.getPixelOffset,
                            getBoundingRect: {
                                getText: M.getText,
                                getTextAnchor: M.getTextAnchor,
                                getAlignmentBaseline: M.getAlignmentBaseline,
                                styleVersion: a
                            }
                        }
                    }), {
                        data: s.attributes ? {
                            length: s.length,
                            attributes: s.attributes.background || {}
                        } : s,
                        _dataDiff: u,
                        autoHighlight: !1,
                        getBoundingRect: this.getBoundingRect.bind(this)
                    }), new C({
                        sdf: w.sdf,
                        smoothing: Number.isFinite(w.smoothing) ? w.smoothing : gt.smoothing,
                        outlineWidth: _,
                        outlineColor: P,
                        iconAtlas: i,
                        iconMapping: o,
                        getPosition: c,
                        getColor: l,
                        getSize: f,
                        getAngle: h,
                        getPixelOffset: d,
                        billboard: b,
                        sizeScale: E * r,
                        sizeUnits: x,
                        sizeMinPixels: S * r,
                        sizeMaxPixels: O * r,
                        transitions: T && {
                            getPosition: T.getPosition,
                            getAngle: T.getAngle,
                            getColor: T.getColor,
                            getSize: T.getSize,
                            getPixelOffset: T.getPixelOffset
                        }
                    }, this.getSubLayerProps({
                        id: "characters",
                        updateTriggers: {
                            getIcon: M.getText,
                            getPosition: M.getPosition,
                            getAngle: M.getAngle,
                            getColor: M.getColor,
                            getSize: M.getSize,
                            getPixelOffset: M.getPixelOffset,
                            getIconOffsets: {
                                getText: M.getText,
                                getTextAnchor: M.getTextAnchor,
                                getAlignmentBaseline: M.getAlignmentBaseline,
                                styleVersion: a
                            }
                        }
                    }), {
                        data: s,
                        _dataDiff: u,
                        startIndices: t,
                        numInstances: e,
                        getIconOffsets: this.getIconOffsets.bind(this),
                        getIcon: n
                    })]
                }
            }
            _t.layerName = "TextLayer", _t.defaultProps = wt;
            var Pt = n(85242),
                Et = n(47806),
                xt = n(53478);

            function St(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function Ot(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var Tt = function() {
                function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    St(this, t);
                    var n = e.attributes,
                        r = void 0 === n ? {} : n;
                    this.typedArrayManager = Pt.Z, this.indexStarts = null, this.vertexStarts = null, this.vertexCount = 0, this.instanceCount = 0, this.attributes = {}, this._attributeDefs = r, this.opts = e, this.updateGeometry(e), Object.seal(this)
                }
                var e, n, r;
                return e = t, (n = [{
                    key: "updateGeometry",
                    value: function(t) {
                        Object.assign(this.opts, t);
                        var e = this.opts,
                            n = e.data,
                            r = e.buffers,
                            i = void 0 === r ? {} : r,
                            o = e.getGeometry,
                            a = e.geometryBuffer,
                            s = e.positionFormat,
                            u = e.dataChanged,
                            c = e.normalize,
                            l = void 0 === c || c;
                        if (this.data = n, this.getGeometry = o, this.positionSize = a && a.size || ("XY" === s ? 2 : 3), this.buffers = i, this.normalize = l, a && ((0, Et.Z)(n.startIndices), this.getGeometry = this.getGeometryFromBuffer(a), l || (i.positions = a)), this.geometryBuffer = i.positions, Array.isArray(u)) {
                            var f = !0,
                                h = !1,
                                d = void 0;
                            try {
                                for (var p, g = u[Symbol.iterator](); !(f = (p = g.next()).done); f = !0) {
                                    var y = p.value;
                                    this._rebuildGeometry(y)
                                }
                            } catch (v) {
                                h = !0, d = v
                            } finally {
                                try {
                                    f || null == g.return || g.return()
                                } finally {
                                    if (h) throw d
                                }
                            }
                        } else this._rebuildGeometry()
                    }
                }, {
                    key: "updatePartialGeometry",
                    value: function(t) {
                        var e = t.startRow,
                            n = t.endRow;
                        this._rebuildGeometry({
                            startRow: e,
                            endRow: n
                        })
                    }
                }, {
                    key: "normalizeGeometry",
                    value: function(t) {
                        return t
                    }
                }, {
                    key: "updateGeometryAttributes",
                    value: function(t, e, n) {
                        throw new Error("Not implemented")
                    }
                }, {
                    key: "getGeometrySize",
                    value: function(t) {
                        throw new Error("Not implemented")
                    }
                }, {
                    key: "getGeometryFromBuffer",
                    value: function(t) {
                        var e = t.value || t;
                        return (0, Et.Z)(ArrayBuffer.isView(e)), (0, L.jr)(e, {
                            size: this.positionSize,
                            offset: t.offset,
                            stride: t.stride,
                            startIndices: this.data.startIndices
                        })
                    }
                }, {
                    key: "_allocate",
                    value: function(t, e) {
                        var n = this,
                            r = n.attributes,
                            i = n.buffers,
                            o = n._attributeDefs,
                            a = n.typedArrayManager;
                        for (var s in o)
                            if (s in i) a.release(r[s]), r[s] = null;
                            else {
                                var u = o[s];
                                u.copy = e, r[s] = a.allocate(r[s], t, u)
                            }
                    }
                }, {
                    key: "_forEachGeometry",
                    value: function(t, e, n) {
                        var r = this.data,
                            i = this.getGeometry,
                            o = (0, L.jB)(r, e, n),
                            a = o.iterable,
                            s = o.objectInfo,
                            u = !0,
                            c = !1,
                            l = void 0;
                        try {
                            for (var f, h = a[Symbol.iterator](); !(u = (f = h.next()).done); u = !0) {
                                var d = f.value;
                                s.index++, t(i(d, s), s.index)
                            }
                        } catch (p) {
                            c = !0, l = p
                        } finally {
                            try {
                                u || null == h.return || h.return()
                            } finally {
                                if (c) throw l
                            }
                        }
                    }
                }, {
                    key: "_rebuildGeometry",
                    value: function(t) {
                        var e = this;
                        if (this.data && this.getGeometry) {
                            var n, r, i = this,
                                o = i.indexStarts,
                                a = i.vertexStarts,
                                s = i.instanceCount,
                                u = this.data,
                                c = this.geometryBuffer,
                                l = t || {},
                                f = l.startRow,
                                h = void 0 === f ? 0 : f,
                                d = l.endRow,
                                p = void 0 === d ? 1 / 0 : d,
                                g = {};
                            if (t || (o = [0], a = [0]), this.normalize || !c) {
                                var y = this;
                                this._forEachGeometry((function(t, e) {
                                    t = y.normalizeGeometry(t), g[e] = t, a[e + 1] = a[e] + y.getGeometrySize(t)
                                }), h, p), s = a[a.length - 1]
                            } else if (n = c.buffer, null != (r = xt.Z) && "undefined" !== typeof Symbol && r[Symbol.hasInstance] ? r[Symbol.hasInstance](n) : n instanceof r) {
                                var v = c.stride || 4 * this.positionSize;
                                a = u.startIndices, s = a[u.length] || c.buffer.byteLength / v
                            } else {
                                var m = c.value || c,
                                    b = c.stride / m.BYTES_PER_ELEMENT || this.positionSize;
                                a = u.startIndices, s = a[u.length] || m.length / b
                            }
                            this._allocate(s, Boolean(t)), this.indexStarts = o, this.vertexStarts = a, this.instanceCount = s;
                            var w = {};
                            this._forEachGeometry((function(t, n) {
                                t = g[n] || t, w.vertexStart = a[n], w.indexStart = o[n];
                                var r = n < a.length - 1 ? a[n + 1] : s;
                                w.geometrySize = r - a[n], w.geometryIndex = n, e.updateGeometryAttributes(t, w)
                            }), h, p), this.vertexCount = o[o.length - 1]
                        }
                    }
                }]) && Ot(e.prototype, n), r && Ot(e, r), t
            }();
            const Mt = 1,
                Ct = -1;

            function At(t, e, n = {}) {
                return function(t, e = {}) {
                    return Math.sign(function(t, e = {}) {
                        const {
                            start: n = 0,
                            end: r = t.length
                        } = e, i = e.size || 2;
                        let o = 0;
                        for (let a = n, s = r - i; a < r; a += i) o += (t[a] - t[s]) * (t[a + 1] + t[s + 1]), s = a;
                        return o / 2
                    }(t, e))
                }(t, n) !== e && (function(t, e) {
                    const {
                        start: n = 0,
                        end: r = t.length,
                        size: i = 2
                    } = e, o = (r - n) / i, a = Math.floor(o / 2);
                    for (let s = 0; s < a; ++s) {
                        const e = n + s * i,
                            r = n + (o - 1 - s) * i;
                        for (let n = 0; n < i; ++n) {
                            const i = t[e + n];
                            t[e + n] = t[r + n], t[r + n] = i
                        }
                    }
                }(t, n), !0)
            }

            function kt(t, e, n, r, i = []) {
                let o, a;
                if (8 & n) o = (r[3] - t[1]) / (e[1] - t[1]), a = 3;
                else if (4 & n) o = (r[1] - t[1]) / (e[1] - t[1]), a = 1;
                else if (2 & n) o = (r[2] - t[0]) / (e[0] - t[0]), a = 2;
                else {
                    if (!(1 & n)) return null;
                    o = (r[0] - t[0]) / (e[0] - t[0]), a = 0
                }
                for (let s = 0; s < t.length; s++) i[s] = (1 & a) === s ? r[a] : o * (e[s] - t[s]) + t[s];
                return i
            }

            function It(t, e) {
                let n = 0;
                return t[0] < e[0] ? n |= 1 : t[0] > e[2] && (n |= 2), t[1] < e[1] ? n |= 4 : t[1] > e[3] && (n |= 8), n
            }

            function jt(t, e) {
                const n = e.length,
                    r = t.length;
                if (r > 0) {
                    let i = !0;
                    for (let o = 0; o < n; o++)
                        if (t[r - n + o] !== e[o]) {
                            i = !1;
                            break
                        }
                    if (i) return !1
                }
                for (let i = 0; i < n; i++) t[r + i] = e[i];
                return !0
            }

            function Lt(t, e) {
                const n = e.length;
                for (let r = 0; r < n; r++) t[r] = e[r]
            }

            function Rt(t, e, n, r, i = []) {
                const o = r + e * n;
                for (let a = 0; a < n; a++) i[a] = t[o + a];
                return i
            }

            function Dt(t, e = {}) {
                const {
                    size: n = 2,
                    broken: r = !1,
                    gridResolution: i = 10,
                    gridOffset: o = [0, 0],
                    startIndex: a = 0,
                    endIndex: s = t.length
                } = e, u = (s - a) / n;
                let c = [];
                const l = [c],
                    f = Rt(t, 0, n, a);
                let h, d;
                const p = Bt(f, i, o, []),
                    g = [];
                jt(c, f);
                for (let y = 1; y < u; y++) {
                    for (h = Rt(t, y, n, a, h), d = It(h, p); d;) {
                        kt(f, h, d, p, g);
                        const t = It(g, p);
                        t && (kt(f, g, t, p, g), d = t), jt(c, g), Lt(f, g), Ut(p, i, d), r && c.length > n && (c = [], l.push(c), jt(c, f)), d = It(h, p)
                    }
                    jt(c, h), Lt(f, h)
                }
                return r ? l : l[0]
            }

            function Ft(t, e) {
                for (let n = 0; n < e.length; n++) t.push(e[n]);
                return t
            }

            function Nt(t, e, n = {}) {
                if (!t.length) return [];
                const {
                    size: r = 2,
                    gridResolution: i = 10,
                    gridOffset: o = [0, 0],
                    edgeTypes: a = !1
                } = n, s = [], u = [{
                    pos: t,
                    types: a && new Array(t.length / r).fill(1),
                    holes: e || []
                }], c = [
                    [],
                    []
                ];
                let l = [];
                for (; u.length;) {
                    const {
                        pos: t,
                        types: e,
                        holes: n
                    } = u.shift();
                    Gt(t, r, n[0] || t.length, c), l = Bt(c[0], i, o, l);
                    const f = It(c[1], l);
                    if (f) {
                        let i = zt(t, e, r, 0, n[0] || t.length, l, f);
                        const o = {
                                pos: i[0].pos,
                                types: i[0].types,
                                holes: []
                            },
                            s = {
                                pos: i[1].pos,
                                types: i[1].types,
                                holes: []
                            };
                        u.push(o, s);
                        for (let u = 0; u < n.length; u++) i = zt(t, e, r, n[u], n[u + 1] || t.length, l, f), i[0] && (o.holes.push(o.pos.length), o.pos = Ft(o.pos, i[0].pos), a && (o.types = Ft(o.types, i[0].types))), i[1] && (s.holes.push(s.pos.length), s.pos = Ft(s.pos, i[1].pos), a && (s.types = Ft(s.types, i[1].types)))
                    } else {
                        const r = {
                            positions: t
                        };
                        a && (r.edgeTypes = e), n.length && (r.holeIndices = n), s.push(r)
                    }
                }
                return s
            }

            function zt(t, e, n, r, i, o, a) {
                const s = (i - r) / n,
                    u = [],
                    c = [],
                    l = [],
                    f = [],
                    h = [];
                let d, p, g;
                const y = Rt(t, s - 1, n, r);
                let v = Math.sign(8 & a ? y[1] - o[3] : y[0] - o[2]),
                    m = e && e[s - 1],
                    b = 0,
                    w = 0;
                for (let _ = 0; _ < s; _++) d = Rt(t, _, n, r, d), p = Math.sign(8 & a ? d[1] - o[3] : d[0] - o[2]), g = e && e[r / n + _], p && v && v !== p && (kt(y, d, a, o, h), jt(u, h) && l.push(m), jt(c, h) && f.push(m)), p <= 0 ? (jt(u, d) && l.push(g), b -= p) : l.length && (l[l.length - 1] = 0), p >= 0 ? (jt(c, d) && f.push(g), w += p) : f.length && (f[f.length - 1] = 0), Lt(y, d), v = p, m = g;
                return [b ? {
                    pos: u,
                    types: e && l
                } : null, w ? {
                    pos: c,
                    types: e && f
                } : null]
            }

            function Bt(t, e, n, r) {
                const i = Math.floor((t[0] - n[0]) / e) * e + n[0],
                    o = Math.floor((t[1] - n[1]) / e) * e + n[1];
                return r[0] = i, r[1] = o, r[2] = i + e, r[3] = o + e, r
            }

            function Ut(t, e, n) {
                8 & n ? (t[1] += e, t[3] += e) : 4 & n ? (t[1] -= e, t[3] -= e) : 2 & n ? (t[0] += e, t[2] += e) : 1 & n && (t[0] -= e, t[2] -= e)
            }

            function Gt(t, e, n, r) {
                let i = 1 / 0,
                    o = -1 / 0,
                    a = 1 / 0,
                    s = -1 / 0;
                for (let u = 0; u < n; u += e) {
                    const e = t[u],
                        n = t[u + 1];
                    i = e < i ? e : i, o = e > o ? e : o, a = n < a ? n : a, s = n > s ? n : s
                }
                return r[0][0] = i, r[0][1] = a, r[1][0] = o, r[1][1] = s, r
            }

            function Zt(t, e, n, r) {
                let i = -1,
                    o = -1;
                for (let a = n + 1; a < r; a += e) {
                    const e = Math.abs(t[a]);
                    e > i && (i = e, o = a - 1)
                }
                return o
            }

            function Vt(t, e, n, r, i = 85.051129) {
                const o = t[n],
                    a = t[r - e];
                if (Math.abs(o - a) > 180) {
                    const r = Rt(t, 0, e, n);
                    r[0] += 360 * Math.round((a - o) / 360), jt(t, r), r[1] = Math.sign(r[1]) * i, jt(t, r), r[0] = o, jt(t, r)
                }
            }

            function Ht(t, e, n, r) {
                let i, o = t[0];
                for (let a = n; a < r; a += e) {
                    i = t[a];
                    const e = i - o;
                    (e > 180 || e < -180) && (i -= 360 * Math.round(e / 360)), t[a] = o = i
                }
            }

            function Wt(t, e) {
                let n;
                const r = t.length / e;
                for (let o = 0; o < r && (n = t[o * e], (n + 180) % 360 === 0); o++);
                const i = 360 * -Math.round(n / 360);
                if (0 !== i)
                    for (let o = 0; o < r; o++) t[o * e] += i
            }

            function Yt(t, e, n, r) {
                let i = t;
                if (Array.isArray(t[0])) {
                    const n = t.length * e;
                    i = new Array(n);
                    for (let r = 0; r < t.length; r++)
                        for (let n = 0; n < e; n++) i[r * e + n] = t[r][n] || 0
                }
                return n ? Dt(i, {
                    size: e,
                    gridResolution: n
                }) : r ? function(t, e = {}) {
                    const {
                        size: n = 2,
                        startIndex: r = 0,
                        endIndex: i = t.length,
                        normalize: o = !0
                    } = e, a = t.slice(r, i);
                    Ht(a, n, 0, i - r);
                    const s = Dt(a, {
                        size: n,
                        broken: !0,
                        gridResolution: 360,
                        gridOffset: [-180, -180]
                    });
                    if (o)
                        for (const u of s) Wt(u, n);
                    return s
                }(i, {
                    size: e
                }) : i
            }
            class qt extends Tt {
                constructor(t) {
                    super({ ...t,
                        attributes: {
                            positions: {
                                size: 3,
                                padding: 18,
                                initialize: !0,
                                type: t.fp64 ? Float64Array : Float32Array
                            },
                            segmentTypes: {
                                size: 1,
                                type: Uint8ClampedArray
                            }
                        }
                    })
                }
                getGeometryFromBuffer(t) {
                    return this.normalize ? super.getGeometryFromBuffer(t) : () => null
                }
                normalizeGeometry(t) {
                    return this.normalize ? Yt(t, this.positionSize, this.opts.resolution, this.opts.wrapLongitude) : t
                }
                get(t) {
                    return this.attributes[t]
                }
                getGeometrySize(t) {
                    if (Array.isArray(t[0])) {
                        let e = 0;
                        for (const n of t) e += this.getGeometrySize(n);
                        return e
                    }
                    const e = this.getPathLength(t);
                    return e < 2 ? 0 : this.isClosed(t) ? e < 3 ? 0 : e + 2 : e
                }
                updateGeometryAttributes(t, e) {
                    if (0 !== e.geometrySize)
                        if (t && Array.isArray(t[0]))
                            for (const n of t) {
                                const t = this.getGeometrySize(n);
                                e.geometrySize = t, this.updateGeometryAttributes(n, e), e.vertexStart += t
                            } else this._updateSegmentTypes(t, e), this._updatePositions(t, e)
                }
                _updateSegmentTypes(t, e) {
                    const {
                        segmentTypes: n
                    } = this.attributes, r = this.isClosed(t), {
                        vertexStart: i,
                        geometrySize: o
                    } = e;
                    n.fill(0, i, i + o), r ? (n[i] = 4, n[i + o - 2] = 4) : (n[i] += 1, n[i + o - 2] += 2), n[i + o - 1] = 4
                }
                _updatePositions(t, e) {
                    const {
                        positions: n
                    } = this.attributes;
                    if (!n) return;
                    const {
                        vertexStart: r,
                        geometrySize: i
                    } = e, o = new Array(3);
                    for (let a = r, s = 0; s < i; a++, s++) this.getPointOnPath(t, s, o), n[3 * a] = o[0], n[3 * a + 1] = o[1], n[3 * a + 2] = o[2]
                }
                getPathLength(t) {
                    return t.length / this.positionSize
                }
                getPointOnPath(t, e, n = []) {
                    const {
                        positionSize: r
                    } = this;
                    e * r >= t.length && (e += 1 - t.length / r);
                    const i = e * r;
                    return n[0] = t[i], n[1] = t[i + 1], n[2] = 3 === r && t[i + 2] || 0, n
                }
                isClosed(t) {
                    if (!this.normalize) return this.opts.loop;
                    const {
                        positionSize: e
                    } = this, n = t.length - e;
                    return t[0] === t[n] && t[1] === t[n + 1] && (2 === e || t[2] === t[n + 2])
                }
            }
            const $t = [0, 0, 0, 255],
                Xt = {
                    widthUnits: "meters",
                    widthScale: {
                        type: "number",
                        min: 0,
                        value: 1
                    },
                    widthMinPixels: {
                        type: "number",
                        min: 0,
                        value: 0
                    },
                    widthMaxPixels: {
                        type: "number",
                        min: 0,
                        value: Number.MAX_SAFE_INTEGER
                    },
                    jointRounded: !1,
                    capRounded: !1,
                    miterLimit: {
                        type: "number",
                        min: 0,
                        value: 4
                    },
                    billboard: !1,
                    _pathType: null,
                    getPath: {
                        type: "accessor",
                        value: t => t.path
                    },
                    getColor: {
                        type: "accessor",
                        value: $t
                    },
                    getWidth: {
                        type: "accessor",
                        value: 1
                    },
                    rounded: {
                        deprecatedFor: ["jointRounded", "capRounded"]
                    }
                },
                Kt = {
                    enter: (t, e) => e.length ? e.subarray(e.length - t.length) : t
                };
            class Jt extends r.Z {
                getShaders() {
                    return super.getShaders({
                        vs: "#define SHADER_NAME path-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute float instanceTypes;\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec3 instanceLeftPositions64Low;\nattribute vec3 instanceStartPositions64Low;\nattribute vec3 instanceEndPositions64Low;\nattribute vec3 instanceRightPositions64Low;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float capType;\nuniform float miterLimit;\nuniform bool billboard;\nuniform int widthUnits;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\nvec3 lineJoin(\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\n  vec2 width\n) {\n  bool isEnd = positions.x > 0.0;\n  float sideOfPath = positions.y;\n  float isJoint = float(sideOfPath == 0.0);\n\n  vec3 deltaA3 = (currPoint - prevPoint);\n  vec3 deltaB3 = (nextPoint - currPoint);\n\n  mat3 rotationMatrix;\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\n  if (needsRotation) {\n    deltaA3 = deltaA3 * rotationMatrix;\n    deltaB3 = deltaB3 * rotationMatrix;\n  }\n  vec2 deltaA = deltaA3.xy / width;\n  vec2 deltaB = deltaB3.xy / width;\n\n  float lenA = length(deltaA);\n  float lenB = length(deltaB);\n\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n  vec2 tangent = dirA + dirB;\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  vec2 dir = isEnd ? dirA : dirB;\n  vec2 perp = isEnd ? perpA : perpB;\n  float L = isEnd ? lenA : lenB;\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\n  float cornerPosition = sideOfPath * turnDirection;\n\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\n  miterSize = mix(\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\n    miterSize,\n    step(0.0, cornerPosition)\n  );\n\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n    * (sideOfPath + isJoint * turnDirection);\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\n  bool isCap = isStartCap || isEndCap;\n  if (isCap) {\n    offsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\n    vJointType = capType;\n  } else {\n    vJointType = jointType;\n  }\n  vPathLength = L;\n  vCornerOffset = offsetVec;\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\n  vMiterLength = isCap ? isJoint : vMiterLength;\n\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\n  vPathPosition = vec2(\n    dot(offsetFromStartOfPath, perp),\n    dot(offsetFromStartOfPath, dir)\n  );\n  geometry.uv = vPathPosition;\n\n  float isValid = step(instanceTypes, 3.5);\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\n\n  if (needsRotation) {\n    offset = rotationMatrix * offset;\n  }\n  return currPoint + offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\n  if (position.w < EPSILON) {\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\n    position = refPosition + (position - refPosition) * r;\n  }\n}\n\nvoid main() {\n  geometry.pickingColor = instancePickingColors;\n\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n\n  float isEnd = positions.x;\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\n\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\n\n  geometry.worldPosition = currPosition;\n  vec2 widthPixels = vec2(clamp(\n    project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels) / 2.0);\n  vec3 width;\n\n  if (billboard) {\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\n\n    clipLine(prevPositionScreen, currPositionScreen);\n    clipLine(nextPositionScreen, currPositionScreen);\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\n\n    width = vec3(widthPixels, 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 pos = lineJoin(\n      prevPositionScreen.xyz / prevPositionScreen.w,\n      currPositionScreen.xyz / currPositionScreen.w,\n      nextPositionScreen.xyz / nextPositionScreen.w,\n      project_pixel_size_to_clipspace(width.xy)\n    );\n\n    gl_Position = vec4(pos * currPositionScreen.w, currPositionScreen.w);\n  } else {\n    prevPosition = project_position(prevPosition, prevPosition64Low);\n    currPosition = project_position(currPosition, currPosition64Low);\n    nextPosition = project_position(nextPosition, nextPosition64Low);\n\n    width = vec3(project_pixel_size(widthPixels), 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec4 pos = vec4(\n      lineJoin(prevPosition, currPosition, nextPosition, width.xy),\n      1.0);\n    geometry.position = pos;\n    gl_Position = project_common_position_to_clipspace(pos);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",
                        fs: "#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float miterLimit;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nvoid main(void) {\n  geometry.uv = vPathPosition;\n\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\n      discard;\n    }\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\n      discard;\n    }\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                        modules: [b, P]
                    })
                }
                get wrapLongitude() {
                    return !1
                }
                initializeState() {
                    this.getAttributeManager().addInstanced({
                        positions: {
                            size: 3,
                            vertexOffset: 1,
                            type: 5130,
                            fp64: this.use64bitPositions(),
                            transition: Kt,
                            accessor: "getPath",
                            update: this.calculatePositions,
                            noAlloc: true,
                            shaderAttributes: {
                                instanceLeftPositions: {
                                    vertexOffset: 0
                                },
                                instanceStartPositions: {
                                    vertexOffset: 1
                                },
                                instanceEndPositions: {
                                    vertexOffset: 2
                                },
                                instanceRightPositions: {
                                    vertexOffset: 3
                                }
                            }
                        },
                        instanceTypes: {
                            size: 1,
                            type: 5121,
                            update: this.calculateSegmentTypes,
                            noAlloc: true
                        },
                        instanceStrokeWidths: {
                            size: 1,
                            accessor: "getWidth",
                            transition: Kt,
                            defaultValue: 1
                        },
                        instanceColors: {
                            size: this.props.colorFormat.length,
                            type: 5121,
                            normalized: !0,
                            accessor: "getColor",
                            transition: Kt,
                            defaultValue: $t
                        },
                        instancePickingColors: {
                            size: 3,
                            type: 5121,
                            accessor: (t, {
                                index: e,
                                target: n
                            }) => this.encodePickingColor(t && t.__source ? t.__source.index : e, n)
                        }
                    }), this.setState({
                        pathTesselator: new qt({
                            fp64: this.use64bitPositions()
                        })
                    }), this.props.getDashArray && !this.props.extensions.length && v.Z.removed("getDashArray", "PathStyleExtension")()
                }
                updateState({
                    oldProps: t,
                    props: e,
                    changeFlags: n
                }) {
                    super.updateState({
                        props: e,
                        oldProps: t,
                        changeFlags: n
                    });
                    const r = this.getAttributeManager();
                    if (n.dataChanged || n.updateTriggersChanged && (n.updateTriggersChanged.all || n.updateTriggersChanged.getPath)) {
                        const {
                            pathTesselator: t
                        } = this.state, i = e.data.attributes || {};
                        t.updateGeometry({
                            data: e.data,
                            geometryBuffer: i.getPath,
                            buffers: i,
                            normalize: !e._pathType,
                            loop: "loop" === e._pathType,
                            getGeometry: e.getPath,
                            positionFormat: e.positionFormat,
                            wrapLongitude: e.wrapLongitude,
                            resolution: this.context.viewport.resolution,
                            dataChanged: n.dataChanged
                        }), this.setState({
                            numInstances: t.instanceCount,
                            startIndices: t.vertexStarts
                        }), n.dataChanged || r.invalidateAll()
                    }
                    if (n.extensionsChanged) {
                        var i;
                        const {
                            gl: t
                        } = this.context;
                        null === (i = this.state.model) || void 0 === i || i.delete(), this.state.model = this._getModel(t), r.invalidateAll()
                    }
                }
                getPickingInfo(t) {
                    const e = super.getPickingInfo(t),
                        {
                            index: n
                        } = e,
                        {
                            data: r
                        } = this.props;
                    return r[0] && r[0].__source && (e.object = r.find((t => t.__source.index === n))), e
                }
                disablePickingIndex(t) {
                    const {
                        data: e
                    } = this.props;
                    if (e[0] && e[0].__source)
                        for (let n = 0; n < e.length; n++) e[n].__source.index === t && this._disablePickingIndex(n);
                    else this._disablePickingIndex(t)
                }
                draw({
                    uniforms: t
                }) {
                    const {
                        jointRounded: e,
                        capRounded: n,
                        billboard: r,
                        miterLimit: i,
                        widthUnits: o,
                        widthScale: a,
                        widthMinPixels: s,
                        widthMaxPixels: u
                    } = this.props;
                    this.state.model.setUniforms(t).setUniforms({
                        jointType: Number(e),
                        capType: Number(n),
                        billboard: r,
                        widthUnits: E.iI[o],
                        widthScale: a,
                        miterLimit: i,
                        widthMinPixels: s,
                        widthMaxPixels: u
                    }).draw()
                }
                _getModel(t) {
                    return new x.Z(t, { ...this.getShaders(),
                        id: this.props.id,
                        geometry: new M({
                            drawMode: 4,
                            attributes: {
                                indices: new Uint16Array([0, 1, 2, 1, 4, 2, 1, 3, 4, 3, 5, 4]),
                                positions: {
                                    value: new Float32Array([0, 0, 0, -1, 0, 1, 1, -1, 1, 1, 1, 0]),
                                    size: 2
                                }
                            }
                        }),
                        isInstanced: !0
                    })
                }
                calculatePositions(t) {
                    const {
                        pathTesselator: e
                    } = this.state;
                    t.startIndices = e.vertexStarts, t.value = e.get("positions")
                }
                calculateSegmentTypes(t) {
                    const {
                        pathTesselator: e
                    } = this.state;
                    t.startIndices = e.vertexStarts, t.value = e.get("segmentTypes")
                }
            }
            Jt.layerName = "PathLayer", Jt.defaultProps = Xt;
            var Qt = "#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n";
            const te = {
                lightSources: {}
            };

            function ee({
                color: t = [0, 0, 0],
                intensity: e = 1
            } = {}) {
                return t.map((t => t * e / 255))
            }
            const ne = {
                name: "lights",
                vs: Qt,
                fs: Qt,
                getUniforms: function t(e = te) {
                    if ("lightSources" in e) {
                        const {
                            ambientLight: t,
                            pointLights: n,
                            directionalLights: r
                        } = e.lightSources || {};
                        return t || n && n.length > 0 || r && r.length > 0 ? Object.assign({}, function({
                            ambientLight: t,
                            pointLights: e = [],
                            directionalLights: n = []
                        }) {
                            const r = {};
                            return r["lighting_uAmbientLight.color"] = t ? ee(t) : [0, 0, 0], e.forEach(((t, e) => {
                                r[`lighting_uPointLight[${e}].color`] = ee(t), r[`lighting_uPointLight[${e}].position`] = t.position, r[`lighting_uPointLight[${e}].attenuation`] = t.attenuation || [1, 0, 0]
                            })), r.lighting_uPointLightCount = e.length, n.forEach(((t, e) => {
                                r[`lighting_uDirectionalLight[${e}].color`] = ee(t), r[`lighting_uDirectionalLight[${e}].direction`] = t.direction
                            })), r.lighting_uDirectionalLightCount = n.length, r
                        }({
                            ambientLight: t,
                            pointLights: n,
                            directionalLights: r
                        }), {
                            lighting_uEnabled: !0
                        }) : {
                            lighting_uEnabled: !1
                        }
                    }
                    if ("lights" in e) {
                        const n = {
                            pointLights: [],
                            directionalLights: []
                        };
                        for (const t of e.lights || []) switch (t.type) {
                            case "ambient":
                                n.ambientLight = t;
                                break;
                            case "directional":
                                n.directionalLights.push(t);
                                break;
                            case "point":
                                n.pointLights.push(t)
                        }
                        return t({
                            lightSources: n
                        })
                    }
                    return {}
                },
                defines: {
                    MAX_LIGHTS: 3
                }
            };
            var re = "\nuniform float lighting_uAmbient;\nuniform float lighting_uDiffuse;\nuniform float lighting_uShininess;\nuniform vec3  lighting_uSpecularColor;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n    vec3 halfway_direction = normalize(light_direction + view_direction);\n    float lambertian = dot(light_direction, normal_worldspace);\n    float specular = 0.0;\n    if (lambertian > 0.0) {\n      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n      specular = pow(specular_angle, lighting_uShininess);\n    }\n    lambertian = max(lambertian, 0.0);\n    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting_uEnabled) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uPointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_uPointLight[i];\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uDirectionalLightCount) {\n        break;\n      }\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n  return lightColor;\n}\n\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = vec3(0, 0, 0);\n  vec3 surfaceColor = vec3(0, 0, 0);\n\n  if (lighting_uEnabled) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uPointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_uPointLight[i];\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uDirectionalLightCount) {\n        break;\n      }\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n  return lightColor;\n}\n";
            const ie = {};

            function oe(t = ie) {
                if (!("material" in t)) return {};
                const {
                    material: e
                } = t;
                return e ? function(t) {
                    const {
                        ambient: e = .35,
                        diffuse: n = .6,
                        shininess: r = 32,
                        specularColor: i = [30, 30, 30]
                    } = t;
                    return {
                        lighting_uAmbient: e,
                        lighting_uDiffuse: n,
                        lighting_uShininess: r,
                        lighting_uSpecularColor: i.map((t => t / 255))
                    }
                }(e) : {
                    lighting_uEnabled: !1
                }
            }
            const ae = {
                name: "gouraud-lighting",
                dependencies: [ne],
                vs: re,
                defines: {
                    LIGHTING_VERTEX: 1
                },
                getUniforms: oe
            };
            var se = n(44211),
                ue = n(6948),
                ce = n(9187),
                le = n.n(ce);
            const fe = Mt,
                he = Ct,
                de = {
                    isClosed: !0
                };

            function pe(t, e, n, r, i) {
                let o = e;
                const a = n.length;
                for (let s = 0; s < a; s++)
                    for (let e = 0; e < r; e++) t[o++] = n[s][e] || 0;
                if (! function(t) {
                        const e = t[0],
                            n = t[t.length - 1];
                        return e[0] === n[0] && e[1] === n[1] && e[2] === n[2]
                    }(n))
                    for (let s = 0; s < r; s++) t[o++] = n[0][s] || 0;
                return de.start = e, de.end = o, de.size = r, At(t, i, de), o
            }

            function ge(t, e, n, r, i = 0, o, a) {
                const s = (o = o || n.length) - i;
                if (s <= 0) return e;
                let u = e;
                for (let c = 0; c < s; c++) t[u++] = n[i + c];
                if (! function(t, e, n, r) {
                        for (let i = 0; i < e; i++)
                            if (t[n + i] !== t[r - e + i]) return !1;
                        return !0
                    }(n, r, i, o))
                    for (let c = 0; c < r; c++) t[u++] = n[i + c];
                return de.start = e, de.end = u, de.size = r, At(t, a, de), u
            }

            function ye(t, e) {
                ! function(t) {
                    if (t = t && t.positions || t, !Array.isArray(t) && !ArrayBuffer.isView(t)) throw new Error("invalid polygon")
                }(t);
                const n = [],
                    r = [];
                if (t.positions) {
                    const {
                        positions: i,
                        holeIndices: o
                    } = t;
                    if (o) {
                        let t = 0;
                        for (let a = 0; a <= o.length; a++) t = ge(n, t, i, e, o[a - 1], o[a], 0 === a ? fe : he), r.push(t);
                        return r.pop(), {
                            positions: n,
                            holeIndices: r
                        }
                    }
                    t = i
                }
                if (Number.isFinite(t[0])) return ge(n, 0, t, e, 0, n.length, fe), n;
                if (! function(t) {
                        return t.length >= 1 && t[0].length >= 2 && Number.isFinite(t[0][0])
                    }(t)) {
                    let i = 0;
                    for (const [o, a] of t.entries()) i = pe(n, i, a, e, 0 === o ? fe : he), r.push(i);
                    return r.pop(), {
                        positions: n,
                        holeIndices: r
                    }
                }
                return pe(n, 0, t, e, fe), n
            }
            class ve extends Tt {
                constructor(t) {
                    const {
                        fp64: e,
                        IndexType: n = Uint32Array
                    } = t;
                    super({ ...t,
                        attributes: {
                            positions: {
                                size: 3,
                                type: e ? Float64Array : Float32Array
                            },
                            vertexValid: {
                                type: Uint8ClampedArray,
                                size: 1
                            },
                            indices: {
                                type: n,
                                size: 1
                            }
                        }
                    })
                }
                get(t) {
                    const {
                        attributes: e
                    } = this;
                    return "indices" === t ? e.indices && e.indices.subarray(0, this.vertexCount) : e[t]
                }
                updateGeometry(t) {
                    super.updateGeometry(t);
                    const e = this.buffers.indices;
                    e && (this.vertexCount = (e.value || e).length)
                }
                normalizeGeometry(t) {
                    if (this.normalize) {
                        if (t = ye(t, this.positionSize), this.opts.resolution) return Nt(t.positions || t, t.holeIndices, {
                            size: this.positionSize,
                            gridResolution: this.opts.resolution,
                            edgeTypes: !0
                        });
                        if (this.opts.wrapLongitude) return function(t, e, n = {}) {
                            const {
                                size: r = 2,
                                normalize: i = !0,
                                edgeTypes: o = !1
                            } = n;
                            e = e || [];
                            const a = [],
                                s = [];
                            let u = 0,
                                c = 0;
                            for (let f = 0; f <= e.length; f++) {
                                const i = e[f] || t.length,
                                    o = c,
                                    l = Zt(t, r, u, i);
                                for (let e = l; e < i; e++) a[c++] = t[e];
                                for (let e = u; e < l; e++) a[c++] = t[e];
                                Ht(a, r, o, c), Vt(a, r, o, c, n.maxLatitude), u = i, s[f] = c
                            }
                            s.pop();
                            const l = Nt(a, s, {
                                size: r,
                                gridResolution: 360,
                                gridOffset: [-180, -180],
                                edgeTypes: o
                            });
                            if (i)
                                for (const f of l) Wt(f.positions, r);
                            return l
                        }(t.positions || t, t.holeIndices, {
                            size: this.positionSize,
                            maxLatitude: 86,
                            edgeTypes: !0
                        })
                    }
                    return t
                }
                getGeometrySize(t) {
                    if (Array.isArray(t) && !Number.isFinite(t[0])) {
                        let e = 0;
                        for (const n of t) e += this.getGeometrySize(n);
                        return e
                    }
                    return (t.positions || t).length / this.positionSize
                }
                getGeometryFromBuffer(t) {
                    return this.normalize || !this.buffers.indices ? super.getGeometryFromBuffer(t) : () => null
                }
                updateGeometryAttributes(t, e) {
                    if (Array.isArray(t) && !Number.isFinite(t[0]))
                        for (const n of t) {
                            const t = this.getGeometrySize(n);
                            e.geometrySize = t, this.updateGeometryAttributes(n, e), e.vertexStart += t, e.indexStart = this.indexStarts[e.geometryIndex + 1]
                        } else this._updateIndices(t, e), this._updatePositions(t, e), this._updateVertexValid(t, e)
                }
                _updateIndices(t, {
                    geometryIndex: e,
                    vertexStart: n,
                    indexStart: r
                }) {
                    const {
                        attributes: i,
                        indexStarts: o,
                        typedArrayManager: a
                    } = this;
                    let s = i.indices;
                    if (!s) return;
                    let u = r;
                    const c = function(t, e, n) {
                        let r = null;
                        t.holeIndices && (r = t.holeIndices.map((t => t / e)));
                        let i = t.positions || t;
                        if (n) {
                            const t = i.length;
                            i = i.slice();
                            const r = [];
                            for (let o = 0; o < t; o += e) {
                                r[0] = i[o], r[1] = i[o + 1];
                                const t = n(r);
                                i[o] = t[0], i[o + 1] = t[1]
                            }
                        }
                        return le()(i, r, e)
                    }(t, this.positionSize, this.opts.preproject);
                    s = a.allocate(s, r + c.length, {
                        copy: !0
                    });
                    for (let l = 0; l < c.length; l++) s[u++] = c[l] + n;
                    o[e + 1] = r + c.length, i.indices = s
                }
                _updatePositions(t, {
                    vertexStart: e,
                    geometrySize: n
                }) {
                    const {
                        attributes: {
                            positions: r
                        },
                        positionSize: i
                    } = this;
                    if (!r) return;
                    const o = t.positions || t;
                    for (let a = e, s = 0; s < n; a++, s++) {
                        const t = o[s * i],
                            e = o[s * i + 1],
                            n = i > 2 ? o[s * i + 2] : 0;
                        r[3 * a] = t, r[3 * a + 1] = e, r[3 * a + 2] = n
                    }
                }
                _updateVertexValid(t, {
                    vertexStart: e,
                    geometrySize: n
                }) {
                    const {
                        attributes: {
                            vertexValid: r
                        },
                        positionSize: i
                    } = this, o = t && t.holeIndices;
                    if (t && t.edgeTypes ? r.set(t.edgeTypes, e) : r.fill(1, e, e + n), o)
                        for (let a = 0; a < o.length; a++) r[e + o[a] / i - 1] = 0;
                    r[e + n - 1] = 0
                }
            }
            var me = "\nattribute vec2 vertexPositions;\nattribute float vertexValid;\n\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\n\nvarying vec4 vColor;\n\nstruct PolygonProps {\n  vec4 fillColors;\n  vec4 lineColors;\n  vec3 positions;\n  vec3 nextPositions;\n  vec3 pickingColors;\n  vec3 positions64Low;\n  vec3 nextPositions64Low;\n  float elevations;\n};\n\nvec3 project_offset_normal(vec3 vector) {\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\n  }\n  return project_normal(vector);\n}\n\nvoid calculatePosition(PolygonProps props) {\n#ifdef IS_SIDE_VERTEX\n  if(vertexValid < 0.5){\n    gl_Position = vec4(0.);\n    return;\n  }\n#endif\n\n  vec3 pos;\n  vec3 pos64Low;\n  vec3 normal;\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\n\n  geometry.worldPosition = props.positions;\n  geometry.worldPositionAlt = props.nextPositions;\n  geometry.pickingColor = props.pickingColors;\n\n#ifdef IS_SIDE_VERTEX\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\n#else\n  pos = props.positions;\n  pos64Low = props.positions64Low;\n#endif\n\n  if (extruded) {\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\n\n#ifdef IS_SIDE_VERTEX\n    normal = vec3(\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\n      0.0);\n    normal = project_offset_normal(normal);\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n    geometry.normal = normal;\n  }\n\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  if (extruded) {\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\n    vColor = vec4(lightColor, colors.a * opacity);\n  } else {\n    vColor = vec4(colors.rgb, colors.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",
                be = "#define SHADER_NAME solid-polygon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute float elevations;\nattribute vec4 fillColors;\nattribute vec4 lineColors;\nattribute vec3 pickingColors;\n\n".concat(me, "\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = positions;\n  props.positions64Low = positions64Low;\n  props.elevations = elevations;\n  props.fillColors = fillColors;\n  props.lineColors = lineColors;\n  props.pickingColors = pickingColors;\n\n  calculatePosition(props);\n}\n"),
                we = "#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\n\nattribute vec3 instancePositions;\nattribute vec3 nextPositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 nextPositions64Low;\nattribute float instanceElevations;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\n".concat(me, "\n\nvoid main(void) {\n  PolygonProps props;\n\n  #if RING_WINDING_ORDER_CW == 1\n    props.positions = instancePositions;\n    props.positions64Low = instancePositions64Low;\n    props.nextPositions = nextPositions;\n    props.nextPositions64Low = nextPositions64Low;\n  #else\n    props.positions = nextPositions;\n    props.positions64Low = nextPositions64Low;\n    props.nextPositions = instancePositions;\n    props.nextPositions64Low = instancePositions64Low;\n  #endif\n  props.elevations = instanceElevations;\n  props.fillColors = instanceFillColors;\n  props.lineColors = instanceLineColors;\n  props.pickingColors = instancePickingColors;\n\n  calculatePosition(props);\n}\n");
            const _e = [0, 0, 0, 255],
                Pe = {
                    filled: !0,
                    extruded: !1,
                    wireframe: !1,
                    _normalize: !0,
                    _windingOrder: "CW",
                    elevationScale: {
                        type: "number",
                        min: 0,
                        value: 1
                    },
                    getPolygon: {
                        type: "accessor",
                        value: t => t.polygon
                    },
                    getElevation: {
                        type: "accessor",
                        value: 1e3
                    },
                    getFillColor: {
                        type: "accessor",
                        value: _e
                    },
                    getLineColor: {
                        type: "accessor",
                        value: _e
                    },
                    material: !0
                },
                Ee = {
                    enter: (t, e) => e.length ? e.subarray(e.length - t.length) : t
                };
            class xe extends r.Z {
                getShaders(t) {
                    return super.getShaders({
                        vs: "top" === t ? be : we,
                        fs: "#define SHADER_NAME solid-polygon-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                        defines: {
                            RING_WINDING_ORDER_CW: this.props._normalize || "CCW" !== this.props._windingOrder ? 1 : 0
                        },
                        modules: [b, ae, P]
                    })
                }
                get wrapLongitude() {
                    return !1
                }
                initializeState() {
                    const {
                        gl: t,
                        viewport: e
                    } = this.context;
                    let {
                        coordinateSystem: n
                    } = this.props;
                    e.isGeospatial && n === E.Df.DEFAULT && (n = E.Df.LNGLAT), this.setState({
                        numInstances: 0,
                        polygonTesselator: new ve({
                            preproject: n === E.Df.LNGLAT && e.projectFlat,
                            fp64: this.use64bitPositions(),
                            IndexType: !t || (0, se.ag)(t, ue.h.ELEMENT_INDEX_UINT32) ? Uint32Array : Uint16Array
                        })
                    });
                    const r = this.getAttributeManager(),
                        i = !0;
                    r.remove(["instancePickingColors"]), r.add({
                        indices: {
                            size: 1,
                            isIndexed: !0,
                            update: this.calculateIndices,
                            noAlloc: i
                        },
                        positions: {
                            size: 3,
                            type: 5130,
                            fp64: this.use64bitPositions(),
                            transition: Ee,
                            accessor: "getPolygon",
                            update: this.calculatePositions,
                            noAlloc: i,
                            shaderAttributes: {
                                positions: {
                                    vertexOffset: 0,
                                    divisor: 0
                                },
                                instancePositions: {
                                    vertexOffset: 0,
                                    divisor: 1
                                },
                                nextPositions: {
                                    vertexOffset: 1,
                                    divisor: 1
                                }
                            }
                        },
                        vertexValid: {
                            size: 1,
                            divisor: 1,
                            type: 5121,
                            update: this.calculateVertexValid,
                            noAlloc: i
                        },
                        elevations: {
                            size: 1,
                            transition: Ee,
                            accessor: "getElevation",
                            shaderAttributes: {
                                elevations: {
                                    divisor: 0
                                },
                                instanceElevations: {
                                    divisor: 1
                                }
                            }
                        },
                        fillColors: {
                            alias: "colors",
                            size: this.props.colorFormat.length,
                            type: 5121,
                            normalized: !0,
                            transition: Ee,
                            accessor: "getFillColor",
                            defaultValue: _e,
                            shaderAttributes: {
                                fillColors: {
                                    divisor: 0
                                },
                                instanceFillColors: {
                                    divisor: 1
                                }
                            }
                        },
                        lineColors: {
                            alias: "colors",
                            size: this.props.colorFormat.length,
                            type: 5121,
                            normalized: !0,
                            transition: Ee,
                            accessor: "getLineColor",
                            defaultValue: _e,
                            shaderAttributes: {
                                lineColors: {
                                    divisor: 0
                                },
                                instanceLineColors: {
                                    divisor: 1
                                }
                            }
                        },
                        pickingColors: {
                            size: 3,
                            type: 5121,
                            accessor: (t, {
                                index: e,
                                target: n
                            }) => this.encodePickingColor(t && t.__source ? t.__source.index : e, n),
                            shaderAttributes: {
                                pickingColors: {
                                    divisor: 0
                                },
                                instancePickingColors: {
                                    divisor: 1
                                }
                            }
                        }
                    })
                }
                getPickingInfo(t) {
                    const e = super.getPickingInfo(t),
                        {
                            index: n
                        } = e,
                        {
                            data: r
                        } = this.props;
                    return r[0] && r[0].__source && (e.object = r.find((t => t.__source.index === n))), e
                }
                disablePickingIndex(t) {
                    const {
                        data: e
                    } = this.props;
                    if (e[0] && e[0].__source)
                        for (let n = 0; n < e.length; n++) e[n].__source.index === t && this._disablePickingIndex(n);
                    else this._disablePickingIndex(t)
                }
                draw({
                    uniforms: t
                }) {
                    const {
                        extruded: e,
                        filled: n,
                        wireframe: r,
                        elevationScale: i
                    } = this.props, {
                        topModel: o,
                        sideModel: a,
                        polygonTesselator: s
                    } = this.state, u = { ...t,
                        extruded: Boolean(e),
                        elevationScale: i
                    };
                    a && (a.setInstanceCount(s.instanceCount - 1), a.setUniforms(u), r && (a.setDrawMode(3), a.setUniforms({
                        isWireframe: !0
                    }).draw()), n && (a.setDrawMode(6), a.setUniforms({
                        isWireframe: !1
                    }).draw())), o && (o.setVertexCount(s.vertexCount), o.setUniforms(u).draw())
                }
                updateState(t) {
                    super.updateState(t), this.updateGeometry(t);
                    const {
                        props: e,
                        oldProps: n,
                        changeFlags: r
                    } = t, i = this.getAttributeManager();
                    var o;
                    (r.extensionsChanged || e.filled !== n.filled || e.extruded !== n.extruded) && (null === (o = this.state.models) || void 0 === o || o.forEach((t => t.delete())), this.setState(this._getModels(this.context.gl)), i.invalidateAll())
                }
                updateGeometry({
                    props: t,
                    oldProps: e,
                    changeFlags: n
                }) {
                    if (n.dataChanged || n.updateTriggersChanged && (n.updateTriggersChanged.all || n.updateTriggersChanged.getPolygon)) {
                        const {
                            polygonTesselator: e
                        } = this.state, r = t.data.attributes || {};
                        e.updateGeometry({
                            data: t.data,
                            normalize: t._normalize,
                            geometryBuffer: r.getPolygon,
                            buffers: r,
                            getGeometry: t.getPolygon,
                            positionFormat: t.positionFormat,
                            wrapLongitude: t.wrapLongitude,
                            resolution: this.context.viewport.resolution,
                            fp64: this.use64bitPositions(),
                            dataChanged: n.dataChanged
                        }), this.setState({
                            numInstances: e.instanceCount,
                            startIndices: e.vertexStarts
                        }), n.dataChanged || this.getAttributeManager().invalidateAll()
                    }
                }
                _getModels(t) {
                    const {
                        id: e,
                        filled: n,
                        extruded: r
                    } = this.props;
                    let i, o;
                    if (n) {
                        const n = this.getShaders("top");
                        n.defines.NON_INSTANCED_MODEL = 1, i = new x.Z(t, { ...n,
                            id: "".concat(e, "-top"),
                            drawMode: 4,
                            attributes: {
                                vertexPositions: new Float32Array([0, 1])
                            },
                            uniforms: {
                                isWireframe: !1,
                                isSideVertex: !1
                            },
                            vertexCount: 0,
                            isIndexed: !0
                        })
                    }
                    return r && (o = new x.Z(t, { ...this.getShaders("side"),
                        id: "".concat(e, "-side"),
                        geometry: new M({
                            drawMode: 1,
                            vertexCount: 4,
                            attributes: {
                                vertexPositions: {
                                    size: 2,
                                    value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1])
                                }
                            }
                        }),
                        instanceCount: 0,
                        isInstanced: 1
                    }), o.userData.excludeAttributes = {
                        indices: !0
                    }), {
                        models: [o, i].filter(Boolean),
                        topModel: i,
                        sideModel: o
                    }
                }
                calculateIndices(t) {
                    const {
                        polygonTesselator: e
                    } = this.state;
                    t.startIndices = e.indexStarts, t.value = e.get("indices")
                }
                calculatePositions(t) {
                    const {
                        polygonTesselator: e
                    } = this.state;
                    t.startIndices = e.vertexStarts, t.value = e.get("positions")
                }
                calculateVertexValid(t) {
                    t.value = this.state.polygonTesselator.get("vertexValid")
                }
            }
            xe.layerName = "SolidPolygonLayer", xe.defaultProps = Pe;
            const Se = {
                    circle: {
                        type: Y,
                        props: {
                            filled: "filled",
                            stroked: "stroked",
                            lineWidthMaxPixels: "lineWidthMaxPixels",
                            lineWidthMinPixels: "lineWidthMinPixels",
                            lineWidthScale: "lineWidthScale",
                            lineWidthUnits: "lineWidthUnits",
                            pointRadiusMaxPixels: "radiusMaxPixels",
                            pointRadiusMinPixels: "radiusMinPixels",
                            pointRadiusScale: "radiusScale",
                            pointRadiusUnits: "radiusUnits",
                            pointAntialiasing: "antialiasing",
                            pointBillboard: "billboard",
                            getFillColor: "getFillColor",
                            getLineColor: "getLineColor",
                            getLineWidth: "getLineWidth",
                            getPointRadius: "getRadius"
                        }
                    },
                    icon: {
                        type: V,
                        props: {
                            iconAtlas: "iconAtlas",
                            iconMapping: "iconMapping",
                            iconSizeMaxPixels: "sizeMaxPixels",
                            iconSizeMinPixels: "sizeMinPixels",
                            iconSizeScale: "sizeScale",
                            iconSizeUnits: "sizeUnits",
                            iconAlphaCutoff: "alphaCutoff",
                            iconBillboard: "billboard",
                            getIcon: "getIcon",
                            getIconAngle: "getAngle",
                            getIconColor: "getColor",
                            getIconPixelOffset: "getPixelOffset",
                            getIconSize: "getSize"
                        }
                    },
                    text: {
                        type: _t,
                        props: {
                            textSizeMaxPixels: "sizeMaxPixels",
                            textSizeMinPixels: "sizeMinPixels",
                            textSizeScale: "sizeScale",
                            textSizeUnits: "sizeUnits",
                            textBackground: "background",
                            textBackgroundPadding: "backgroundPadding",
                            textFontFamily: "fontFamily",
                            textFontWeight: "fontWeight",
                            textLineHeight: "lineHeight",
                            textMaxWidth: "maxWidth",
                            textOutlineColor: "outlineColor",
                            textOutlineWidth: "outlineWidth",
                            textWordBreak: "wordBreak",
                            textCharacterSet: "characterSet",
                            textBillboard: "billboard",
                            textFontSettings: "fontSettings",
                            getText: "getText",
                            getTextAngle: "getAngle",
                            getTextColor: "getColor",
                            getTextPixelOffset: "getPixelOffset",
                            getTextSize: "getSize",
                            getTextAnchor: "getTextAnchor",
                            getTextAlignmentBaseline: "getAlignmentBaseline",
                            getTextBackgroundColor: "getBackgroundColor",
                            getTextBorderColor: "getBorderColor",
                            getTextBorderWidth: "getBorderWidth"
                        }
                    }
                },
                Oe = {
                    type: Jt,
                    props: {
                        lineWidthUnits: "widthUnits",
                        lineWidthScale: "widthScale",
                        lineWidthMinPixels: "widthMinPixels",
                        lineWidthMaxPixels: "widthMaxPixels",
                        lineJointRounded: "jointRounded",
                        lineCapRounded: "capRounded",
                        lineMiterLimit: "miterLimit",
                        lineBillboard: "billboard",
                        getLineColor: "getColor",
                        getLineWidth: "getWidth"
                    }
                },
                Te = {
                    type: xe,
                    props: {
                        extruded: "extruded",
                        filled: "filled",
                        wireframe: "wireframe",
                        elevationScale: "elevationScale",
                        material: "material",
                        getElevation: "getElevation",
                        getFillColor: "getFillColor",
                        getLineColor: "getLineColor"
                    }
                };

            function Me({
                type: t,
                props: e
            }) {
                const n = {};
                for (const r in e) n[r] = t.defaultProps[e[r]];
                return n
            }

            function Ce(t, e) {
                const {
                    transitions: n,
                    updateTriggers: r
                } = t.props, i = {
                    updateTriggers: {},
                    transitions: n && {
                        getPosition: n.geometry
                    }
                };
                for (const o in e) {
                    const a = e[o];
                    let s = t.props[o];
                    o.startsWith("get") && (s = t.getSubLayerAccessor(s), i.updateTriggers[a] = r[o], n && (i.transitions[a] = n[o])), i[a] = s
                }
                return i
            }

            function Ae(t, e, n = {}) {
                const r = {
                        pointFeatures: [],
                        lineFeatures: [],
                        polygonFeatures: [],
                        polygonOutlineFeatures: []
                    },
                    {
                        startRow: i = 0,
                        endRow: o = t.length
                    } = n;
                for (let a = i; a < o; a++) {
                    const n = t[a];
                    v.Z.assert(n && n.geometry, "GeoJSON does not have geometry");
                    const {
                        geometry: i
                    } = n;
                    if ("GeometryCollection" === i.type) {
                        v.Z.assert(Array.isArray(i.geometries), "GeoJSON does not have geometries array");
                        const {
                            geometries: t
                        } = i;
                        for (let i = 0; i < t.length; i++) {
                            ke(t[i], r, e, n, a)
                        }
                    } else ke(i, r, e, n, a)
                }
                return r
            }

            function ke(t, e, n, r, i) {
                const {
                    type: o,
                    coordinates: a
                } = t, {
                    pointFeatures: s,
                    lineFeatures: u,
                    polygonFeatures: c,
                    polygonOutlineFeatures: l
                } = e;
                if (function(t, e) {
                        let n = Ie[t];
                        v.Z.assert(n, "Unknown GeoJSON type ".concat(t));
                        for (; e && --n > 0;) e = e[0];
                        return e && Number.isFinite(e[0])
                    }(o, a)) switch (o) {
                    case "Point":
                        s.push(n({
                            geometry: t
                        }, r, i));
                        break;
                    case "MultiPoint":
                        a.forEach((t => {
                            s.push(n({
                                geometry: {
                                    type: "Point",
                                    coordinates: t
                                }
                            }, r, i))
                        }));
                        break;
                    case "LineString":
                        u.push(n({
                            geometry: t
                        }, r, i));
                        break;
                    case "MultiLineString":
                        a.forEach((t => {
                            u.push(n({
                                geometry: {
                                    type: "LineString",
                                    coordinates: t
                                }
                            }, r, i))
                        }));
                        break;
                    case "Polygon":
                        c.push(n({
                            geometry: t
                        }, r, i)), a.forEach((t => {
                            l.push(n({
                                geometry: {
                                    type: "LineString",
                                    coordinates: t
                                }
                            }, r, i))
                        }));
                        break;
                    case "MultiPolygon":
                        a.forEach((t => {
                            c.push(n({
                                geometry: {
                                    type: "Polygon",
                                    coordinates: t
                                }
                            }, r, i)), t.forEach((t => {
                                l.push(n({
                                    geometry: {
                                        type: "LineString",
                                        coordinates: t
                                    }
                                }, r, i))
                            }))
                        }))
                } else v.Z.warn("".concat(o, " coordinates are malformed"))()
            }
            const Ie = {
                Point: 1,
                MultiPoint: 2,
                LineString: 2,
                MultiLineString: 3,
                Polygon: 3,
                MultiPolygon: 4
            };

            function je(t) {
                return t.geometry.coordinates
            }

            function Le(t, e) {
                const n = {
                        points: {},
                        lines: {},
                        polygons: {},
                        polygonsOutline: {}
                    },
                    {
                        points: r,
                        lines: i,
                        polygons: o
                    } = t,
                    a = function(t, e) {
                        const n = {
                            points: null,
                            lines: null,
                            polygons: null
                        };
                        for (const r in n) {
                            const i = t[r].globalFeatureIds.value;
                            n[r] = new Uint8ClampedArray(3 * i.length);
                            const o = [];
                            for (let t = 0; t < i.length; t++) e(i[t], o), n[r][3 * t + 0] = o[0], n[r][3 * t + 1] = o[1], n[r][3 * t + 2] = o[2]
                        }
                        return n
                    }(t, e);
                return n.points.data = {
                    length: r.positions.value.length / r.positions.size,
                    attributes: {
                        getPosition: r.positions,
                        instancePickingColors: {
                            size: 3,
                            value: a.points
                        }
                    },
                    properties: r.properties,
                    numericProps: r.numericProps,
                    featureIds: r.featureIds
                }, n.lines.data = {
                    length: i.pathIndices.value.length - 1,
                    startIndices: i.pathIndices.value,
                    attributes: {
                        getPath: i.positions,
                        instancePickingColors: {
                            size: 3,
                            value: a.lines
                        }
                    },
                    properties: i.properties,
                    numericProps: i.numericProps,
                    featureIds: i.featureIds
                }, n.lines._pathType = "open", n.polygons.data = {
                    length: o.polygonIndices.value.length - 1,
                    startIndices: o.polygonIndices.value,
                    attributes: {
                        getPolygon: o.positions,
                        pickingColors: {
                            size: 3,
                            value: a.polygons
                        }
                    },
                    properties: o.properties,
                    numericProps: o.numericProps,
                    featureIds: o.featureIds
                }, n.polygons._normalize = !1, o.triangles && (n.polygons.data.attributes.indices = o.triangles.value), n.polygonsOutline.data = {
                    length: o.primitivePolygonIndices.value.length - 1,
                    startIndices: o.primitivePolygonIndices.value,
                    attributes: {
                        getPath: o.positions,
                        instancePickingColors: {
                            size: 3,
                            value: a.polygons
                        }
                    },
                    properties: o.properties,
                    numericProps: o.numericProps,
                    featureIds: o.featureIds
                }, n.polygonsOutline._pathType = "open", n
            }
            const Re = { ...Me(Se.circle),
                ...Me(Se.icon),
                ...Me(Se.text),
                ...Me(Oe),
                ...Me(Te),
                stroked: !0,
                filled: !0,
                extruded: !1,
                wireframe: !1,
                iconAtlas: {
                    type: "object",
                    value: null
                },
                iconMapping: {
                    type: "object",
                    value: {}
                },
                getIcon: {
                    type: "accessor",
                    value: t => t.properties.icon
                },
                getText: {
                    type: "accessor",
                    value: t => t.properties.text
                },
                pointType: "circle",
                getRadius: {
                    deprecatedFor: "getPointRadius"
                }
            };
            class De extends y {
                initializeState() {
                    this.state = {
                        layerProps: {},
                        features: {}
                    }, this.props.getLineDashArray && v.Z.removed("getLineDashArray", "PathStyleExtension")()
                }
                updateState({
                    props: t,
                    changeFlags: e
                }) {
                    if (!e.dataChanged) return;
                    const {
                        data: n
                    } = this.props, r = n && "points" in n && "polygons" in n && "lines" in n;
                    this.setState({
                        binary: r
                    }), r ? this._updateStateBinary({
                        props: t,
                        changeFlags: e
                    }) : this._updateStateJSON({
                        props: t,
                        changeFlags: e
                    })
                }
                _updateStateBinary({
                    props: t,
                    changeFlags: e
                }) {
                    const n = Le(t.data, this.encodePickingColor);
                    this.setState({
                        layerProps: n
                    })
                }
                _updateStateJSON({
                    props: t,
                    changeFlags: e
                }) {
                    const n = function(t) {
                            if (Array.isArray(t)) return t;
                            switch (v.Z.assert(t.type, "GeoJSON does not have type"), t.type) {
                                case "Feature":
                                    return [t];
                                case "FeatureCollection":
                                    return v.Z.assert(Array.isArray(t.features), "GeoJSON does not have features array"), t.features;
                                default:
                                    return [{
                                        geometry: t
                                    }]
                            }
                        }(t.data),
                        r = this.getSubLayerRow.bind(this);
                    let i = {};
                    const o = {};
                    if (Array.isArray(e.dataChanged)) {
                        const t = this.state.features;
                        for (const e in t) i[e] = t[e].slice(), o[e] = [];
                        for (const a of e.dataChanged) {
                            const e = Ae(n, r, a);
                            for (const n in t) o[n].push(m({
                                data: i[n],
                                getIndex: t => t.__source.index,
                                dataRange: a,
                                replace: e[n]
                            }))
                        }
                    } else i = Ae(n, r);
                    const a = function(t, e) {
                        const n = {
                                points: {},
                                lines: {},
                                polygons: {},
                                polygonsOutline: {}
                            },
                            {
                                pointFeatures: r,
                                lineFeatures: i,
                                polygonFeatures: o,
                                polygonOutlineFeatures: a
                            } = t;
                        return n.points.data = r, n.points._dataDiff = e.pointFeatures && (() => e.pointFeatures), n.points.getPosition = je, n.lines.data = i, n.lines._dataDiff = e.lineFeatures && (() => e.lineFeatures), n.lines.getPath = je, n.polygons.data = o, n.polygons._dataDiff = e.polygonFeatures && (() => e.polygonFeatures), n.polygons.getPolygon = je, n.polygonsOutline.data = a, n.polygonsOutline._dataDiff = e.polygonOutlineFeatures && (() => e.polygonOutlineFeatures), n.polygonsOutline.getPath = je, n
                    }(i, o);
                    this.setState({
                        features: i,
                        featuresDiff: o,
                        layerProps: a
                    })
                }
                _updateAutoHighlight(t) {
                    const e = "".concat(this.id, "-points-"),
                        n = t.sourceLayer.id.startsWith(e);
                    for (const r of this.getSubLayers()) r.id.startsWith(e) === n && r.updateAutoHighlight(t)
                }
                _renderPolygonLayer() {
                    const {
                        extruded: t,
                        wireframe: e
                    } = this.props, {
                        layerProps: n
                    } = this.state, r = "polygons-fill", i = this.shouldRenderSubLayer(r, n.polygons.data) && this.getSubLayerClass(r, Te.type);
                    if (i) {
                        const o = Ce(this, Te.props),
                            a = t && e;
                        return a || delete o.getLineColor, o.updateTriggers.lineColors = a, new i(o, this.getSubLayerProps({
                            id: r,
                            updateTriggers: o.updateTriggers
                        }), n.polygons)
                    }
                    return null
                }
                _renderLineLayers() {
                    const {
                        extruded: t,
                        stroked: e
                    } = this.props, {
                        layerProps: n
                    } = this.state, r = "polygons-stroke", i = "linestrings", o = !t && e && this.shouldRenderSubLayer(r, n.polygonsOutline.data) && this.getSubLayerClass(r, Oe.type), a = this.shouldRenderSubLayer(i, n.lines.data) && this.getSubLayerClass(i, Oe.type);
                    if (o || a) {
                        const t = Ce(this, Oe.props);
                        return [o && new o(t, this.getSubLayerProps({
                            id: r,
                            updateTriggers: t.updateTriggers
                        }), n.polygonsOutline), a && new a(t, this.getSubLayerProps({
                            id: i,
                            updateTriggers: t.updateTriggers
                        }), n.lines)]
                    }
                    return null
                }
                _renderPointLayers() {
                    const {
                        pointType: t
                    } = this.props, {
                        layerProps: e,
                        binary: n
                    } = this.state;
                    let {
                        highlightedObjectIndex: r
                    } = this.props;
                    !n && Number.isFinite(r) && (r = e.points.data.findIndex((t => t.__source.index === r)));
                    const i = new Set(t.split("+")),
                        o = [];
                    for (const a of i) {
                        const t = "points-".concat(a),
                            n = Se[a],
                            i = n && this.shouldRenderSubLayer(t, e.points.data) && this.getSubLayerClass(t, n.type);
                        if (i) {
                            const a = Ce(this, n.props);
                            o.push(new i(a, this.getSubLayerProps({
                                id: t,
                                updateTriggers: a.updateTriggers,
                                highlightedObjectIndex: r
                            }), e.points))
                        }
                    }
                    return o
                }
                renderLayers() {
                    const {
                        extruded: t
                    } = this.props, e = this._renderPolygonLayer();
                    return [!t && e, this._renderLineLayers(), this._renderPointLayers(), t && e]
                }
                getSubLayerAccessor(t) {
                    const {
                        binary: e
                    } = this.state;
                    return e && "function" === typeof t ? (e, n) => {
                        const {
                            data: r,
                            index: i
                        } = n, o = function(t, e) {
                            if (!t) return null;
                            const n = "startIndices" in t ? t.startIndices[e] : e,
                                r = t.featureIds.value[n];
                            return -1 !== n ? function(t, e, n) {
                                const r = {
                                    properties: { ...t.properties[e]
                                    }
                                };
                                for (const i in t.numericProps) r.properties[i] = t.numericProps[i].value[n];
                                return r
                            }(t, r, n) : null
                        }(r, i);
                        return t(o, n)
                    } : super.getSubLayerAccessor(t)
                }
            }
            De.layerName = "GeoJsonLayer", De.defaultProps = Re;
            var Fe, Ne = 4,
                ze = 5,
                Be = 6,
                Ue = 5121,
                Ge = 5130,
                Ze = function() {
                    var t = function(e, n) {
                        return (t = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
                            })(e, n)
                    };
                    return function(e, n) {
                        function r() {
                            this.constructor = e
                        }
                        t(e, n), e.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r)
                    }
                }(),
                Ve = function() {
                    return (Ve = Object.assign || function(t) {
                        for (var e, n = 1, r = arguments.length; n < r; n++)
                            for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                He = [0, 132, 193, 255],
                We = function(t) {
                    function e(e) {
                        return t.call(this, e) || this
                    }
                    return Ze(e, t), e.prototype.getShaders = function() {
                        return t.prototype.getShaders.call(this, {
                            vs: "#define SHADER_NAME animated-flow-lines-layer-vertex-shader\n#define SPEED 0.015\n#define NUM_PARTS 5.0\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instancePickable;\nattribute float instanceStaggering;\n\nuniform float opacity;\nuniform float currentTime;\nuniform float thicknessUnit;\n    \nvarying vec4 vColor;\nvarying float sourceToTarget;\nvarying vec2 uv;\n\n// offset vector by strokeWidth pixels\n// offset_direction is -1 (left) or 1 (right)\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  // normalized direction of the line\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  // rotate by 90 degrees\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  // Position\n  vec4 source_commonspace;\n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(instanceSourcePositions, instanceSourcePositions64Low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(instanceTargetPositions, instanceTargetPositions64Low, vec3(0.), target_commonspace);\n\n  float widthPixels = instanceWidths * thicknessUnit;\n  \n  \n  // linear interpolation of source & target to pick right coord\n  float segmentIndex = positions.x;\n  vec4 p = mix(source, target, segmentIndex);\n  geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\n  uv = positions.xy;\n  geometry.uv = uv;\n  if (instancePickable > 0.5) {\n    geometry.pickingColor = instancePickingColors;\n  }\n  \n  // extrude\n  vec3 offset = vec3(\n    getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Color\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  sourceToTarget = positions.x * length(source - target) * NUM_PARTS - currentTime * SPEED + instanceStaggering; \n}\n",
                            fs: "#define SHADER_NAME animated-flow-lines-layer-fragment-shader\n\nprecision highp float;\n\nuniform float animationTailLength;\n\nvarying vec4 vColor;\nvarying float sourceToTarget;\nvarying vec2 uv;\n                                   \nvoid main(void) {\n  geometry.uv = uv;\n\n  gl_FragColor = vec4(vColor.xyz, vColor.w * smoothstep(1.0 - animationTailLength, 1.0, fract(sourceToTarget)));\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                            modules: [b, P],
                            shaderCache: this.context.shaderCache
                        })
                    }, e.prototype.initializeState = function() {
                        this.getAttributeManager().addInstanced({
                            instanceSourcePositions: {
                                size: 3,
                                transition: !0,
                                accessor: "getSourcePosition"
                            },
                            instanceTargetPositions: {
                                size: 3,
                                transition: !0,
                                accessor: "getTargetPosition"
                            },
                            instanceColors: {
                                size: 4,
                                type: Ue,
                                transition: !0,
                                accessor: "getColor",
                                defaultValue: [0, 0, 0, 255]
                            },
                            instanceWidths: {
                                size: 1,
                                transition: !0,
                                accessor: "getThickness",
                                defaultValue: 1
                            },
                            instanceStaggering: {
                                accessor: "getStaggering",
                                size: 1,
                                transition: !1
                            },
                            instancePickable: {
                                accessor: "getPickable",
                                size: 1,
                                transition: !1
                            }
                        })
                    }, e.prototype.updateState = function(e) {
                        var n = e.props,
                            r = e.oldProps,
                            i = e.changeFlags;
                        if (t.prototype.updateState.call(this, {
                                props: n,
                                oldProps: r,
                                changeFlags: i
                            }), i.extensionsChanged) {
                            var o = this.context.gl;
                            this.state.model && this.state.model.delete(), this.setState({
                                model: this._getModel(o)
                            }), this.getAttributeManager().invalidateAll()
                        }
                    }, e.prototype.draw = function(t) {
                        var e = t.uniforms,
                            n = this.props,
                            r = n.currentTime,
                            i = n.thicknessUnit,
                            o = n.animationTailLength;
                        this.state.model.setUniforms(Ve(Ve({}, e), {
                            thicknessUnit: 4 * i,
                            animationTailLength: o,
                            currentTime: r
                        })).draw()
                    }, e.prototype._getModel = function(t) {
                        return new x.Z(t, Object.assign({}, this.getShaders(), {
                            id: this.props.id,
                            geometry: new M({
                                drawMode: ze,
                                attributes: {
                                    positions: new Float32Array([0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0])
                                }
                            }),
                            isInstanced: !0
                        }))
                    }, e.defaultProps = {
                        currentTime: 0,
                        animationTailLength: .7,
                        getSourcePosition: {
                            type: "accessor",
                            value: function(t) {
                                return t.sourcePosition
                            }
                        },
                        getTargetPosition: {
                            type: "accessor",
                            value: function(t) {
                                return t.targetPosition
                            }
                        },
                        getPickable: {
                            type: "accessor",
                            value: function(t) {
                                return 1
                            }
                        },
                        getStaggering: {
                            type: "accessor",
                            value: function(t, e) {
                                e.index;
                                return Math.random()
                            }
                        },
                        getColor: {
                            type: "accessor",
                            value: He
                        },
                        getThickness: {
                            type: "accessor",
                            value: 1
                        },
                        thicknessUnit: 30,
                        parameters: {
                            depthTest: !1
                        }
                    }, e
                }(r.Z),
                Ye = function() {
                    var t = function(e, n) {
                        return (t = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
                            })(e, n)
                    };
                    return function(e, n) {
                        function r() {
                            this.constructor = e
                        }
                        t(e, n), e.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r)
                    }
                }(),
                qe = [0, 0, 0, 255],
                $e = function(t) {
                    function e(e) {
                        return t.call(this, e) || this
                    }
                    return Ye(e, t), e.prototype.getShaders = function() {
                        return t.prototype.getShaders.call(this, {
                            vs: "#define SHADER_NAME flow-circles-layer-vertex-shader\n#define radiusScale 100\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nvarying vec4 vColor;\nvarying vec2 unitPosition;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  outerRadiusPixels = instanceRadius;  \n\n  // position on the containing square in [-1, 1] space\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n                                                                                                    \n  // Find the center of the point and add the current vertex\n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n                            \n  // Apply opacity to instance color, or return instance picking color\n  vColor = vec4(instanceColors.rgb / 255., instanceColors.a / 255. * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",
                            fs: "#define SHADER_NAME flow-circles-layer-fragment-shader\n#define SOFT_OUTLINE 0.1\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n  float distToCenter = length(unitPosition);\n  if (distToCenter > 1.0) {\n    discard;\n  }\n  gl_FragColor = vColor;\n  gl_FragColor.a *= smoothstep(0.0, SOFT_OUTLINE, 1.0 - distToCenter);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                            modules: [b, P]
                        })
                    }, e.prototype.initializeState = function() {
                        this.getAttributeManager().addInstanced({
                            instancePositions: {
                                size: 3,
                                type: Ge,
                                fp64: this.use64bitPositions(),
                                transition: !0,
                                accessor: "getPosition"
                            },
                            instanceRadius: {
                                size: 1,
                                transition: !0,
                                accessor: "getRadius",
                                defaultValue: 1
                            },
                            instanceColors: {
                                size: 4,
                                transition: !0,
                                type: Ue,
                                accessor: "getColor",
                                defaultValue: qe
                            }
                        })
                    }, e.prototype.updateState = function(e) {
                        var n = e.props,
                            r = e.oldProps,
                            i = e.changeFlags;
                        if (t.prototype.updateState.call(this, {
                                props: n,
                                oldProps: r,
                                changeFlags: i
                            }), i.extensionsChanged) {
                            var o = this.context.gl;
                            this.state.model && this.state.model.delete(), this.setState({
                                model: this._getModel(o)
                            }), this.getAttributeManager().invalidateAll()
                        }
                    }, e.prototype.draw = function(t) {
                        var e = t.uniforms;
                        this.state.model.setUniforms(e).draw()
                    }, e.prototype._getModel = function(t) {
                        return new x.Z(t, Object.assign(this.getShaders(), {
                            id: this.props.id,
                            geometry: new M({
                                drawMode: Be,
                                vertexCount: 4,
                                attributes: {
                                    positions: {
                                        size: 3,
                                        value: new Float32Array([-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0])
                                    }
                                }
                            }),
                            isInstanced: !0
                        }))
                    }, e.layerName = "FlowCirclesLayer", e.defaultProps = {
                        getColor: {
                            type: "accessor",
                            value: qe
                        },
                        getPosition: {
                            type: "accessor",
                            value: function(t) {
                                return t.position
                            }
                        },
                        getRadius: {
                            type: "accessor",
                            value: 1
                        },
                        parameters: {
                            depthTest: !1
                        }
                    }, e
                }(r.Z),
                Xe = function() {
                    var t = function(e, n) {
                        return (t = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
                            })(e, n)
                    };
                    return function(e, n) {
                        function r() {
                            this.constructor = e
                        }
                        t(e, n), e.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r)
                    }
                }(),
                Ke = function() {
                    return (Ke = Object.assign || function(t) {
                        for (var e, n = 1, r = arguments.length; n < r; n++)
                            for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                Je = [0, 132, 193, 255],
                Qe = function(t) {
                    function e(e) {
                        return t.call(this, e) || this
                    }
                    return Xe(e, t), e.prototype.getShaders = function() {
                        return t.prototype.getShaders.call(this, {
                            vs: "#define SHADER_NAME flow-line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec4 instanceColors;\nattribute float instanceThickness;    // 0..0.5\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute vec2 instanceEndpointOffsets;\nattribute float instancePickable;\n\nuniform vec4 outlineColor;\nuniform float thicknessUnit;\nuniform float gap;\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n  \n  // Position\n  vec4 source_commonspace;    \n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(instanceSourcePositions, instanceSourcePositions64Low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(instanceTargetPositions, instanceTargetPositions64Low, vec3(0.), target_commonspace);\n\n  // linear interpolation of source & target to pick right coord\n  float sourceOrTarget = positions.x;\n  geometry.position = mix(source_commonspace, target_commonspace, sourceOrTarget);\n  uv = positions.xy;\n  geometry.uv = uv;\n  if (instancePickable > 0.5) {\n    geometry.pickingColor = instancePickingColors;\n  }\n  \n  // set the clamp limits in pixel size \n  float lengthCommon = length(target_commonspace - source_commonspace);    \n  vec2 offsetDistances = project_pixel_size(positions.yz) * thicknessUnit;\n  \n  vec2 limitedOffsetDistances = clamp(   \n    project_pixel_size(positions.yz) * thicknessUnit,\n    -lengthCommon*.8, lengthCommon*.8\n  );\n  float startOffsetCommon = project_pixel_size(instanceEndpointOffsets[0]);\n  float endOffsetCommon = project_pixel_size(instanceEndpointOffsets[1]);\n  float endpointOffset = mix(\n    clamp(startOffsetCommon, 0.0, lengthCommon*.2),\n    -clamp(endOffsetCommon, 0.0, lengthCommon*.2),\n    positions.x\n  );\n\n  vec2 flowlineDir = normalize(target_commonspace.xy - source_commonspace.xy);\n  vec2 perpendicularDir = vec2(-flowlineDir.y, flowlineDir.x);\n  vec2 normalsCommon = project_pixel_size(normals.xy);\n  float gapCommon = project_pixel_size(gap);\n  vec3 offsetCommon = vec3(\n    flowlineDir * (instanceThickness * limitedOffsetDistances[1] + normalsCommon.y + endpointOffset * 1.05) -\n    perpendicularDir * (instanceThickness * limitedOffsetDistances[0] + gapCommon + normalsCommon.x),\n    0.0\n  );\n  \n  DECKGL_FILTER_SIZE(offsetCommon, geometry);\n  vec4 position_commonspace = mix(source_commonspace, target_commonspace, sourceOrTarget);\n  vec4 offset_commonspace = vec4(offsetCommon, 0.0);\n  gl_Position = project_common_position_to_clipspace(position_commonspace + offset_commonspace);\n      \n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  \n  vec4 fillColor = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  if (instancePickable <= 0.5) {\n    vColor = mix(fillColor, vec4(outlineColor.xyz, instanceThickness), normals.z);\n  } else {\n    vColor = mix(fillColor, vec4(outlineColor.xyz, outlineColor.w * fillColor.w), normals.z);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",
                            fs: "#define SHADER_NAME flow-line-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  if (vColor.a == 0.0) {\n    discard;\n  }\n\n  geometry.uv = uv;\n  gl_FragColor = vColor;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n",
                            modules: [b, P],
                            shaderCache: this.context.shaderCache
                        })
                    }, e.prototype.initializeState = function() {
                        this.state.attributeManager.addInstanced({
                            instanceSourcePositions: {
                                accessor: "getSourcePosition",
                                size: 3,
                                transition: !1,
                                type: Ge
                            },
                            instanceTargetPositions: {
                                accessor: "getTargetPosition",
                                size: 3,
                                transition: !1,
                                type: Ge
                            },
                            instanceThickness: {
                                accessor: "getThickness",
                                size: 1,
                                transition: !1
                            },
                            instanceEndpointOffsets: {
                                accessor: "getEndpointOffsets",
                                size: 2,
                                transition: !1
                            },
                            instanceColors: {
                                accessor: "getColor",
                                size: 4,
                                type: Ue,
                                transition: !1
                            },
                            instancePickable: {
                                accessor: "getPickable",
                                size: 1,
                                transition: !1
                            }
                        })
                    }, e.prototype.updateState = function(e) {
                        var n = e.props,
                            r = e.oldProps,
                            i = e.changeFlags;
                        if (t.prototype.updateState.call(this, {
                                props: n,
                                oldProps: r,
                                changeFlags: i
                            }), i.extensionsChanged) {
                            var o = this.context.gl;
                            this.state.model && this.state.model.delete(), this.setState({
                                model: this._getModel(o)
                            }), this.getAttributeManager().invalidateAll()
                        }
                    }, e.prototype.draw = function(t) {
                        var e = t.uniforms,
                            n = this.context.gl,
                            r = this.props,
                            i = r.outlineColor,
                            o = r.thicknessUnit;
                        n.lineWidth(1), this.state.model.setUniforms(Ke(Ke({}, e), {
                            outlineColor: i.map((function(t) {
                                return t / 255
                            })),
                            thicknessUnit: 2 * o,
                            gap: .5
                        })).draw()
                    }, e.prototype._getModel = function(t) {
                        var e = [],
                            n = [],
                            r = this.props,
                            i = r.drawOutline,
                            o = r.outlineThickness;
                        if (i) {
                            e = e.concat([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, -3, 1, 1, -3, 1, 0, 0, 1, 2, -3, 1, 0, -3]);
                            var a = o;
                            n = n.concat([-1, -a, 1, a, -a, 1, -1, a, 1, a, -a, 1, -1, 0, 1, a, 0, 1, -1, 3 * a, 1, 2 * a, -a, 1, -1, -a, 1])
                        }
                        return e = e.concat([0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, -3, 1, 1, -3, 1, 0, 0, 1, 2, -3, 1, 0, -3]), n = n.concat([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new x.Z(t, Ke(Ke({
                            id: this.props.id
                        }, this.getShaders()), {
                            geometry: new M({
                                drawType: Ne,
                                attributes: {
                                    positions: new Float32Array(e),
                                    normals: new Float32Array(n)
                                }
                            }),
                            isInstanced: !0,
                            shaderCache: this.context.shaderCache
                        }))
                    }, e.layerName = "FlowLinesLayer", e.defaultProps = {
                        getSourcePosition: {
                            type: "accessor",
                            value: function(t) {
                                return t.sourcePosition
                            }
                        },
                        getTargetPosition: {
                            type: "accessor",
                            value: function(t) {
                                return t.targetPosition
                            }
                        },
                        getColor: {
                            type: "accessor",
                            value: Je
                        },
                        getThickness: {
                            type: "accessor",
                            value: function(t) {
                                return t.thickness
                            }
                        },
                        getPickable: {
                            type: "accessor",
                            value: function(t) {
                                return 1
                            }
                        },
                        drawOutline: !0,
                        thicknessUnit: 10,
                        outlineThickness: 1,
                        outlineColor: [255, 255, 255, 255],
                        parameters: {
                            depthTest: !1
                        }
                    }, e
                }(r.Z),
                tn = n(23865),
                en = n(98823),
                nn = n(91077),
                rn = n(55581),
                on = n(66871),
                an = n(55128),
                sn = n(22222),
                un = n(80241),
                cn = n(16372),
                ln = n(88124),
                fn = n(74250),
                hn = function() {
                    return (hn = Object.assign || function(t) {
                        for (var e, n = 1, r = arguments.length; n < r; n++)
                            for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                dn = "rgba(240,240,240,0.5)",
                pn = [dn, "#137CBD"],
                gn = [dn, "#f6654e"],
                yn = [dn, "#00a9cc"],
                vn = [255, 255, 255, 255];

            function mn(t) {
                return void 0 !== t.positive
            }

            function bn(t) {
                var e = !(!t || !t.darkMode);
                return {
                    darkMode: e,
                    locationAreas: Pn(t && t.locationAreas, e),
                    outlineColor: xn(t && t.outlineColor || "#fff"),
                    dimmedOpacity: t && null != t.dimmedOpacity ? t.dimmedOpacity : .4
                }
            }

            function wn(t) {
                var e = bn(t);
                return hn(hn({}, e), En(t, pn, e.darkMode))
            }

            function _n(t) {
                var e = bn(t);
                return hn(hn({}, e), {
                    positive: En(t && t.positive, gn, e.darkMode),
                    negative: En(t && t.negative, yn, e.darkMode)
                })
            }

            function Pn(t, e) {
                var n = t && t.normal || "rgba(220,220,220,0.5)",
                    r = (0, un.Uc)(n),
                    i = xn(n);
                return {
                    normal: i,
                    connected: Sn(t && t.connected, i),
                    highlighted: Sn(t && t.highlighted, Tn(r[e ? "brighter" : "darker"](1).toString(), .5)),
                    selected: Sn(t && t.selected, Tn(r[e ? "brighter" : "darker"](2).toString(), .8)),
                    outline: Sn(t && t.outline, xn(r[e ? "brighter" : "darker"](4).toString()))
                }
            }

            function En(t, e, n) {
                var r = t && t.flows && t.flows.scheme || e,
                    i = (0, un.Uc)(r[r.length - 1]),
                    o = Sn(t && t.flows && t.flows.highlighted, xn(i[n ? "brighter" : "darker"](.7).toString()));
                return {
                    flows: {
                        scheme: r,
                        highlighted: o
                    },
                    locationCircles: {
                        inner: Sn(t && t.locationCircles && t.locationCircles.inner, i.toString()),
                        outgoing: Sn(t && t.locationCircles && t.locationCircles.outgoing, n ? "#000" : "#fff"),
                        incoming: Sn(t && t.locationCircles && t.locationCircles.incoming, i[n ? "brighter" : "darker"](1.25).toString()),
                        highlighted: Sn(t && t.locationCircles && t.locationCircles.highlighted, o)
                    }
                }
            }

            function xn(t) {
                var e = (0, cn.ZP)(t);
                if (!e) return console.warn("Invalid color: ", t), vn;
                var n = e.rgb();
                return [Math.floor(n.r), Math.floor(n.g), Math.floor(n.b), Mn(e.opacity)]
            }

            function Sn(t, e) {
                return t ? xn(t) : "string" === typeof e ? xn(e) : e
            }

            function On(t) {
                return "rgba(" + t.join(",") + ")"
            }

            function Tn(t, e) {
                var n = (0, cn.ZP)(t);
                if (!n) return console.warn("Invalid color: ", t), "rgba(255, 255, 255, " + e + ")";
                var r = n.rgb();
                return "rgba(" + r.r + ", " + r.g + ", " + r.b + ", " + e + ")"
            }

            function Mn(t) {
                return Math.round(255 * t)
            }

            function Cn(t, e) {
                var n = (0, un.Uc)(On(t));
                if (!n) return console.warn("Invalid color: ", t), vn;
                n.c *= .1;
                var r = n.rgb();
                return [Math.floor(r.r), Math.floor(r.g), Math.floor(r.b), Mn(void 0 !== e ? e : .4)]
            }

            function An(t, e, n) {
                var r = (0, fn.UN)((0, ln.hD)(e)).exponent(n ? .5 : 1 / 3).domain(t);
                return function(t) {
                    return xn(r(t))
                }
            }

            function kn(t) {
                return "FeatureCollection" === t.type
            }! function(t) {
                t.LOCATION = "location", t.FLOW = "flow", t.LOCATION_AREA = "location-area"
            }(Fe || (Fe = {}));
            var In, jn = function(t) {
                    return t.diffMode
                },
                Ln = function(t) {
                    return t.colors
                },
                Rn = function(t) {
                    return t.animate
                },
                Dn = function(t) {
                    return kn(t.locations) ? t.locations.features : t.locations
                },
                Fn = function(t) {
                    return t.flows
                },
                Nn = function(t) {
                    return t.highlightedFlow
                },
                zn = function(t) {
                    return t.highlightedLocationId
                },
                Bn = function(t) {
                    return t.selectedLocationIds
                },
                Un = function(t) {
                    return t.showOnlyTopFlows
                },
                Gn = function(t) {
                    return null != t.maxLocationCircleSize ? t.maxLocationCircleSize : Xn.defaultProps.maxLocationCircleSize
                },
                Zn = function() {
                    function t(t) {
                        var e = this;
                        this.inputAccessors = t, this.getColors = (0, sn.P1)([Ln, jn], (function(t, e) {
                            return e ? _n(t) : wn(t)
                        })), this.getLocationByIdGetter = (0, sn.P1)([Dn], (function(t) {
                            var n = (0, rn.b1)().key(e.inputAccessors.getLocationId).rollup((function(t) {
                                return t[0]
                            })).object(t);
                            return function(t) {
                                var e = n[t];
                                return e || console.warn("No location found for id '" + t + "'"), e
                            }
                        })), this.getFilteredFlows = (0, sn.P1)([Fn, Bn], (function(t, n) {
                            var r = e.inputAccessors,
                                i = r.getFlowOriginId,
                                o = r.getFlowDestId;
                            return n ? t.filter((function(t) {
                                return n.indexOf(i(t)) >= 0 || n.indexOf(o(t)) >= 0
                            })) : t
                        })), this.getNonSelfFlows = (0, sn.P1)([this.getFilteredFlows], (function(t) {
                            var n = e.inputAccessors,
                                r = n.getFlowOriginId,
                                i = n.getFlowDestId;
                            return t.filter((function(t) {
                                return r(t) !== i(t)
                            }))
                        })), this.getSortedNonSelfFlows = (0, sn.P1)([this.getNonSelfFlows], (function(t) {
                            return t.slice().sort((function(t, n) {
                                return Math.abs(e.inputAccessors.getFlowMagnitude(t)) - Math.abs(e.inputAccessors.getFlowMagnitude(n))
                            }))
                        })), this.getTopFlows = (0, sn.P1)([this.getSortedNonSelfFlows, Un], (function(t, e) {
                            return null != e && e > 0 && t.length > e ? t.slice(t.length - e, t.length) : t
                        })), this.getHighlightedFlows = (0, sn.P1)([this.getSortedNonSelfFlows, Nn, zn], (function(t, n, r) {
                            var i = e.inputAccessors,
                                o = i.getFlowOriginId,
                                a = i.getFlowDestId;
                            return n ? [n] : r ? t.filter((function(t) {
                                return o(t) === r || a(t) === r
                            })) : void 0
                        })), this.getFlowMagnitudeExtent = (0, sn.P1)([this.getNonSelfFlows, function(t) {
                            return t.flowMagnitudeExtent
                        }], (function(t, n) {
                            return null != n ? n : (0, tn.Z)(t, (function(t) {
                                return e.inputAccessors.getFlowMagnitude(t)
                            }))
                        })), this.getFlowThicknessScale = (0, sn.P1)([this.getFlowMagnitudeExtent], (function(t) {
                            var e = t[0],
                                n = t[1],
                                r = (0, on.Z)().range([.05, .5]).domain([0, Math.max(Math.abs(e || 0), Math.abs(n || 0))]);
                            return function(t) {
                                return r(Math.abs(t))
                            }
                        })), this.getFlowColorScale = (0, sn.P1)([this.getColors, this.getFlowMagnitudeExtent, Rn], (function(t, e, n) {
                            var r = e[0],
                                i = e[1];
                            if (mn(t)) {
                                var o = An([0, i || 0], t.positive.flows.scheme, n),
                                    a = An([0, r || 0], t.negative.flows.scheme, n);
                                return function(t) {
                                    return t >= 0 ? o(t) : a(t)
                                }
                            }
                            var s = An([0, i || 0], t.flows.scheme, n);
                            return function(t) {
                                return s(t)
                            }
                        })), this.getLocationTotals = (0, sn.P1)([Dn, this.getFilteredFlows], (function(t, n) {
                            var r = e.inputAccessors,
                                i = r.getFlowOriginId,
                                o = r.getFlowDestId,
                                a = r.getFlowMagnitude;
                            return n.reduce((function(t, e) {
                                var n = i(e),
                                    r = o(e),
                                    s = a(e);
                                return n === r ? t.within[n] = (t.within[n] || 0) + s : (t.outgoing[n] = (t.outgoing[n] || 0) + s, t.incoming[r] = (t.incoming[r] || 0) + s), t
                            }), {
                                incoming: {},
                                outgoing: {},
                                within: {}
                            })
                        })), this.getHighlightedLocationCircles = (0, sn.P1)([this.getLocationByIdGetter, zn], (function(t, e) {
                            if (e) {
                                var n = t(e);
                                if (!n) return;
                                return [{
                                    location: n,
                                    type: "outline"
                                }, {
                                    location: n,
                                    type: "outer"
                                }, {
                                    location: n,
                                    type: "inner"
                                }]
                            }
                        })), this.getLocationTotalInGetter = function(t) {
                            var n = e.inputAccessors,
                                r = n.getLocationTotalIn,
                                i = n.getLocationId;
                            if (r) return r;
                            var o = e.getLocationTotals(t).incoming;
                            return function(t) {
                                return o[i(t)] || 0
                            }
                        }, this.getLocationTotalOutGetter = function(t) {
                            var n = e.inputAccessors,
                                r = n.getLocationTotalOut,
                                i = n.getLocationId;
                            if (r) return r;
                            var o = e.getLocationTotals(t).outgoing;
                            return function(t) {
                                return o[i(t)] || 0
                            }
                        }, this.getLocationTotalWithinGetter = function(t) {
                            var n = e.inputAccessors,
                                r = n.getLocationTotalWithin,
                                i = n.getLocationId;
                            if (r) return r;
                            var o = e.getLocationTotals(t).within;
                            return function(t) {
                                return o[i(t)] || 0
                            }
                        }, this.getLocationMaxAbsTotalGetter = (0, sn.P1)([Dn, this.getLocationTotalInGetter, this.getLocationTotalOutGetter, this.getLocationTotalWithinGetter], (function(t, e, n, r) {
                            return function(t) {
                                return Math.max(Math.abs(e(t) + r(t)), Math.abs(n(t) + r(t)))
                            }
                        })), this.getMaxLocationMaxAbsTotal = (0, sn.P1)([Dn, this.getLocationMaxAbsTotalGetter, function(t) {
                            return t.locationTotalsExtent
                        }], (function(t, e, n) {
                            return null != n ? (0, en.Z)(n, Math.abs) || 0 : (0, en.Z)(t, e) || 0
                        })), this.getLocationCircles = (0, sn.P1)([Dn, this.getLocationMaxAbsTotalGetter], (function(t, e) {
                            for (var n = [], r = 0, i = t.slice().sort((function(t, n) {
                                    return (0, nn.Z)(e(t), e(n))
                                })); r < i.length; r++) {
                                var o = i[r];
                                n.push({
                                    location: o,
                                    type: "outline"
                                }), n.push({
                                    location: o,
                                    type: "outer"
                                }), n.push({
                                    location: o,
                                    type: "inner"
                                })
                            }
                            return n
                        })), this.getSizeScale = (0, sn.P1)([Gn, this.getMaxLocationMaxAbsTotal], (function(t, e) {
                            var n = (0, an.ZP)().exponent(.5).domain([0, e]).range([0, e > 0 ? t : 1]);
                            return function(t) {
                                return n(Math.abs(t)) || 0
                            }
                        })), this.getLocationCircleRadiusGetter = (0, sn.P1)([this.getSizeScale, this.getLocationTotalInGetter, this.getLocationTotalOutGetter, this.getLocationTotalWithinGetter], (function(t, e, n, r) {
                            return function(i) {
                                var o = i.location,
                                    a = i.type,
                                    s = "inner" === a ? Math.min : Math.max,
                                    u = e(o),
                                    c = n(o),
                                    l = r(o),
                                    f = t(s(Math.abs(u + l), Math.abs(c + l)));
                                return "outline" === a ? f + 1 : f
                            }
                        })), this.getLocationCircleColorGetter = (0, sn.P1)([this.getColors, zn, this.getLocationTotalInGetter, this.getLocationTotalOutGetter, this.getLocationTotalWithinGetter], (function(t, n, r, i, o) {
                            var a = e.inputAccessors.getLocationId;
                            return function(e) {
                                var s, u, c = e.location,
                                    l = e.type,
                                    f = n && n === a(c),
                                    h = n && n !== a(c),
                                    d = o(c),
                                    p = r(c) + d,
                                    g = i(c) + d,
                                    y = "outer" === l && Math.abs(p) > Math.abs(g),
                                    v = !0 === y && p >= 0 || g >= 0,
                                    m = (mn(t) ? v ? t.positive : t.negative : t).locationCircles;
                                return f && "outline" === l ? m.highlighted : h ? "outline" === l ? (s = t.outlineColor, u = t.dimmedOpacity, [s[0], s[1], s[2], s[3] * u * .5]) : function(t, e) {
                                    return Cn(t, .5 * e)
                                }(m.inner, t.dimmedOpacity) : "outline" === l ? y ? m.incoming : m.inner : "inner" === l ? m.inner : !0 === y ? m.incoming : m.outgoing
                            }
                        })), this.isLocationConnectedGetter = (0, sn.P1)([this.getFilteredFlows, zn, Nn, Bn], (function(t, n, r, i) {
                            var o = e.inputAccessors,
                                a = o.getFlowOriginId,
                                s = o.getFlowDestId;
                            if (n) {
                                for (var u = function(t) {
                                        var e = a(t),
                                            r = s(t);
                                        return e === n || i && i.indexOf(e) >= 0 || r === n || i && i.indexOf(r) >= 0
                                    }, c = new Set, l = 0, f = t; l < f.length; l++) {
                                    var h = f[l];
                                    u(h) && (c.add(a(h)), c.add(s(h)))
                                }
                                return function(t) {
                                    return c.has(t)
                                }
                            }
                            return function() {
                                return !1
                            }
                        })), this.getLocationAreaFillColorGetter = (0, sn.P1)([this.getColors, Bn, this.isLocationConnectedGetter], (function(t, n, r) {
                            return function(i) {
                                var o = e.inputAccessors.getLocationId(i);
                                return n && n.indexOf(o) >= 0 ? t.locationAreas.selected : r(o) ? t.locationAreas.connected : t.locationAreas.normal
                            }
                        }))
                    }
                    return t.prototype.getFlowLinesColorGetter = function(t, e, n, r) {
                        var i = this.inputAccessors,
                            o = i.getFlowMagnitude,
                            a = i.getFlowColor;
                        return function(i) {
                            if (a && (l = a(i))) return xn(l);
                            if (n) {
                                if (mn(t)) {
                                    var s = t.positive.flows.highlighted,
                                        u = t.negative.flows.highlighted;
                                    return (c = o(i)) >= 0 ? s : u
                                }
                                return t.flows.highlighted
                            }
                            var c = o(i),
                                l = e(c);
                            return r ? Cn(l, t.dimmedOpacity) : l
                        }
                    }, t.prototype.setInputAccessors = function(t) {
                        this.inputAccessors = t
                    }, t.prototype.getInputAccessors = function() {
                        return this.inputAccessors
                    }, t
                }(),
                Vn = function() {
                    var t = function(e, n) {
                        return (t = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
                            })(e, n)
                    };
                    return function(e, n) {
                        function r() {
                            this.constructor = e
                        }
                        t(e, n), e.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r)
                    }
                }(),
                Hn = function() {
                    return (Hn = Object.assign || function(t) {
                        for (var e, n = 1, r = arguments.length; n < r; n++)
                            for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                };
            ! function(t) {
                t.LOCATIONS = "LOCATIONS", t.LOCATION_AREAS = "LOCATION_AREAS", t.LOCATION_AREAS_OUTLINES = "LOCATION_AREAS_OUTLINES", t.LOCATION_AREAS_SELECTED_AND_HIGHLIGHTED = "LOCATION_AREAS_SELECTED_AND_HIGHLIGHTED", t.FLOWS = "FLOWS", t.LOCATIONS_HIGHLIGHTED = "LOCATIONS_HIGHLIGHTED", t.FLOWS_HIGHLIGHTED = "FLOWS_HIGHLIGHTED"
            }(In || (In = {}));
            var Wn = ":::";

            function Yn(t, e) {
                return "" + t + Wn + e.valueOf()
            }

            function qn(t) {
                switch (function(t) {
                    var e = t.substr(t.lastIndexOf(Wn) + Wn.length);
                    return In[e]
                }(t.id)) {
                    case In.FLOWS:
                    case In.FLOWS_HIGHLIGHTED:
                        return Fe.FLOW;
                    case In.LOCATIONS:
                    case In.LOCATIONS_HIGHLIGHTED:
                        return Fe.LOCATION;
                    case In.LOCATION_AREAS:
                        return Fe.LOCATION_AREA;
                    default:
                        return
                }
            }
            var $n = function(t) {
                    function e(e) {
                        return t.call(this, e) || this
                    }
                    return Vn(e, t), e.prototype.initializeState = function() {
                        var t = this.props,
                            e = t.getLocationTotalIn,
                            n = t.getLocationTotalOut,
                            r = t.getLocationTotalWithin,
                            i = t.getLocationId,
                            o = t.getLocationCentroid,
                            a = t.getFlowOriginId,
                            s = t.getFlowDestId,
                            u = t.getFlowMagnitude,
                            c = t.getFlowColor,
                            l = new Zn({
                                getLocationId: i,
                                getLocationCentroid: o,
                                getLocationTotalIn: e,
                                getLocationTotalOut: n,
                                getLocationTotalWithin: r,
                                getFlowOriginId: a,
                                getFlowDestId: s,
                                getFlowMagnitude: u,
                                getFlowColor: c
                            });
                        this.setState({
                            selectors: l
                        })
                    }, e.prototype.updateState = function(e) {
                        t.prototype.updateState.call(this, e);
                        var n = e.props;
                        if (e.changeFlags.propsChanged) {
                            var r = n.getLocationTotalIn,
                                i = n.getLocationTotalOut,
                                o = n.getLocationTotalWithin,
                                a = n.getLocationId,
                                s = n.getLocationCentroid,
                                u = n.getFlowOriginId,
                                c = n.getFlowDestId,
                                l = n.getFlowMagnitude,
                                f = n.getFlowColor;
                            this.state.selectors.setInputAccessors({
                                getLocationId: a,
                                getLocationCentroid: s,
                                getLocationTotalIn: r,
                                getLocationTotalOut: i,
                                getLocationTotalWithin: o,
                                getFlowOriginId: u,
                                getFlowDestId: c,
                                getFlowMagnitude: l,
                                getFlowColor: f
                            })
                        }
                    }, e.prototype.getPickingInfo = function(t) {
                        var e = qn(t.sourceLayer);
                        if (!e) return t.info;
                        var n = Hn(Hn({}, t.info), {
                                type: e
                            }),
                            r = this.state.selectors;
                        if (e === Fe.FLOW) {
                            var i = r.getLocationByIdGetter(this.props),
                                o = r.getInputAccessors(),
                                a = o.getFlowOriginId,
                                s = o.getFlowDestId,
                                u = n.object;
                            return Hn(Hn({}, n), u && {
                                origin: i(a(u)),
                                dest: i(s(u))
                            })
                        }
                        if (e === Fe.LOCATION || e === Fe.LOCATION_AREA) {
                            var c = e === Fe.LOCATION ? n.object && n.object.location : n.object,
                                l = r.getLocationTotalInGetter(this.props),
                                f = r.getLocationTotalOutGetter(this.props),
                                h = r.getLocationTotalWithinGetter(this.props),
                                d = r.getLocationCircleRadiusGetter(this.props);
                            return Hn(Hn({}, n), c && {
                                object: c,
                                totalIn: l(c),
                                totalOut: f(c),
                                totalWithin: h(c),
                                circleRadius: d({
                                    location: c,
                                    type: "outer"
                                })
                            })
                        }
                        return n
                    }, e.prototype.renderLayers = function() {
                        var t = this.props,
                            e = t.showLocationAreas,
                            n = t.locations,
                            r = t.highlightedLocationId,
                            i = this.state.selectors,
                            o = i.getTopFlows(this.props),
                            a = i.getHighlightedFlows(this.props),
                            s = null != r,
                            u = i.getLocationCircles(this.props),
                            c = [];
                        if (e && kn(n) && c.push(this.getLocationAreasLayer(Yn(this.props.id, In.LOCATION_AREAS), !1)), c.push(this.getFlowLinesLayer(Yn(this.props.id, In.FLOWS), o, !1, s)), e && kn(n) && c.push(this.getHighlightedLocationAreasLayer(Yn(this.props.id, In.LOCATION_AREAS_SELECTED_AND_HIGHLIGHTED))), a && c.push(this.getFlowLinesLayer(Yn(this.props.id, In.FLOWS_HIGHLIGHTED), a, !0, !1)), c.push(this.getLocationCirclesLayer(Yn(this.props.id, In.LOCATIONS), u, !1)), s) {
                            var l = i.getHighlightedLocationCircles(this.props);
                            c.push(this.getLocationCirclesLayer(Yn(this.props.id, In.LOCATIONS_HIGHLIGHTED), l, !0))
                        }
                        return e && kn(n) && c.push(this.getLocationAreasLayer(Yn(this.props.id, In.LOCATION_AREAS_OUTLINES), !0)), c
                    }, e.prototype.getLocationAreasLayer = function(t, e) {
                        var n = this.props,
                            r = n.locations,
                            i = n.selectedLocationIds,
                            o = n.highlightedLocationId,
                            a = n.highlightedFlow,
                            s = n.updateTriggers,
                            u = this.state.selectors,
                            c = u.getColors(this.props);
                        return new De(this.getSubLayerProps(Hn(Hn({
                            id: t,
                            getFillColor: u.getLocationAreaFillColorGetter(this.props),
                            getLineColor: c.locationAreas.outline,
                            lineJointRounded: !0,
                            data: r,
                            stroked: e,
                            filled: !e
                        }, e && {
                            pickable: !1
                        }), {
                            lineWidthMinPixels: 1,
                            pointRadiusMinPixels: 1,
                            updateTriggers: {
                                getFillColor: Hn(Hn({
                                    colors: c
                                }, e && {
                                    selectedLocationIds: i,
                                    highlightedLocationId: o,
                                    highlightedFlow: a
                                }), null === s || void 0 === s ? void 0 : s.getLocationAreasFillColor),
                                getLineColor: Hn({
                                    colors: c
                                }, null === s || void 0 === s ? void 0 : s.getLocationAreasLineColor)
                            }
                        })))
                    }, e.prototype.getHighlightedLocationAreasLayer = function(t) {
                        var e = this.state.selectors,
                            n = this.props,
                            r = n.highlightedLocationId,
                            i = n.highlightedLocationAreaId,
                            o = n.updateTriggers,
                            a = e.getColors(this.props),
                            s = e.getLocationByIdGetter(this.props);
                        return new De(this.getSubLayerProps({
                            id: t,
                            getFillColor: function() {
                                return a.locationAreas.highlighted
                            },
                            getLineColor: a.locationAreas.outline,
                            lineJointRounded: !0,
                            data: r ? s(r) : i ? s(i) : void 0,
                            stroked: !1,
                            filled: !0,
                            pickable: !1,
                            lineWidthMinPixels: 5,
                            updateTriggers: {
                                getFillColor: Hn({
                                    colors: a
                                }, null === o || void 0 === o ? void 0 : o.getLocationAreasFillColor),
                                getLineColor: Hn({
                                    colors: a
                                }, null === o || void 0 === o ? void 0 : o.getLocationAreasLineColor)
                            }
                        }))
                    }, e.prototype.getFlowLinesLayer = function(t, e, n, r) {
                        var i = this.props,
                            o = i.getFlowOriginId,
                            a = i.getFlowDestId,
                            s = i.getFlowMagnitude,
                            u = i.getLocationCentroid,
                            c = i.getAnimatedFlowLineStaggering,
                            l = i.showTotals,
                            f = i.maxLocationCircleSize,
                            h = i.outlineThickness,
                            d = i.minPickableFlowThickness,
                            p = i.maxFlowThickness,
                            g = i.flowMagnitudeExtent,
                            y = i.locationTotalsExtent,
                            v = i.updateTriggers,
                            m = this.state.selectors,
                            b = [(f || 0) + 1, (f || 0) + 1],
                            w = m.getLocationCircleRadiusGetter(this.props),
                            _ = m.getLocationByIdGetter(this.props),
                            P = m.getFlowThicknessScale(this.props),
                            E = function(t, e) {
                                return P(s(t, e))
                            },
                            x = m.getFlowColorScale(this.props),
                            S = m.getColors(this.props),
                            O = m.getFlowLinesColorGetter(S, x, n, r),
                            T = this.props.animate,
                            M = null != p ? p : Qe.defaultProps.thicknessUnit,
                            C = Hn(Hn(Hn(Hn(Hn({
                                id: t,
                                getSourcePosition: function(t, e) {
                                    return u(_(o(t, e)))
                                },
                                getTargetPosition: function(t, e) {
                                    return u(_(a(t, e)))
                                },
                                getThickness: E,
                                getEndpointOffsets: function(t, e) {
                                    return l ? [w({
                                        location: _(o(t, e)),
                                        type: "outline"
                                    }), w({
                                        location: _(a(t, e)),
                                        type: "outline"
                                    })] : b
                                },
                                getColor: O,
                                data: e
                            }, n && {
                                pickable: !1
                            }), {
                                drawOutline: !r,
                                updateTriggers: {
                                    getSourcePosition: null === v || void 0 === v ? void 0 : v.getFlowLinesSourcePosition,
                                    getTargetPosition: null === v || void 0 === v ? void 0 : v.getFlowLinesTargetPosition,
                                    getThickness: Hn({
                                        flowMagnitudeExtent: g,
                                        maxFlowThickness: p
                                    }, null === v || void 0 === v ? void 0 : v.getFlowLinesThickness),
                                    getColor: Hn({
                                        colors: S,
                                        dimmed: r
                                    }, null === v || void 0 === v ? void 0 : v.getFlowLinesColor),
                                    getEndpointOffsets: Hn({
                                        showTotals: l,
                                        locationTotalsExtent: y
                                    }, null === v || void 0 === v ? void 0 : v.getFlowLinesEndpointOffsets)
                                },
                                thicknessUnit: M,
                                outlineColor: S.outlineColor
                            }), h && {
                                outlineThickness: h
                            }), null != d && {
                                getPickable: function(t) {
                                    return M * E(t) >= d ? 1 : 0
                                }
                            }), {
                                parameters: Hn(Hn({}, this.props.parameters), {
                                    depthTest: !1
                                })
                            });
                        return T ? new We(this.getSubLayerProps(Hn(Hn(Hn(Hn({}, C), {
                            currentTime: this.props.animationCurrentTime
                        }), null != this.props.animationTailLength && {
                            animationTailLength: this.props.animationTailLength
                        }), c && {
                            getStaggering: c
                        }))) : new Qe(this.getSubLayerProps(C))
                    }, e.prototype.getLocationCirclesLayer = function(t, e, n) {
                        var r = this.props,
                            i = r.highlightedLocationId,
                            o = r.selectedLocationIds,
                            a = r.getLocationCentroid,
                            s = r.flows,
                            u = r.showTotals,
                            c = r.updateTriggers,
                            l = r.maxLocationCircleSize,
                            f = r.locationTotalsExtent,
                            h = this.state.selectors,
                            d = u ? h.getLocationCircleRadiusGetter(this.props) : function() {
                                return l
                            },
                            p = h.getColors(this.props),
                            g = h.getLocationCircleColorGetter(this.props);
                        return new $e(this.getSubLayerProps({
                            id: t,
                            getColor: g,
                            getPosition: function(t) {
                                return a(t.location)
                            },
                            getRadius: d,
                            data: e,
                            updateTriggers: {
                                getRadius: Hn({
                                    showTotals: u,
                                    selectedLocationIds: o,
                                    maxLocationCircleSize: l,
                                    locationTotalsExtent: f,
                                    flows: s
                                }, null === c || void 0 === c ? void 0 : c.getCirclesRadius),
                                getColor: Hn({
                                    colors: p,
                                    highlightedLocationId: i,
                                    selectedLocationIds: o,
                                    flows: s
                                }, null === c || void 0 === c ? void 0 : c.getCirclesColor)
                            },
                            parameters: Hn(Hn({}, this.props.parameters), {
                                depthTest: !1
                            })
                        }))
                    }, e.layerName = "FlowMapLayer", e.defaultProps = {
                        getLocationId: {
                            type: "accessor",
                            value: function(t) {
                                return t.id || t.properties.id
                            }
                        },
                        getLocationCentroid: {
                            type: "accessor",
                            value: function(t) {
                                return t.properties.centroid
                            }
                        },
                        getFlowOriginId: {
                            type: "accessor",
                            value: function(t) {
                                return t.origin
                            }
                        },
                        getFlowDestId: {
                            type: "accessor",
                            value: function(t) {
                                return t.dest
                            }
                        },
                        getFlowMagnitude: {
                            type: "accessor",
                            value: function(t) {
                                return t.count
                            }
                        },
                        showTotals: !0,
                        maxLocationCircleSize: 15,
                        outlineThickness: 1,
                        showLocationAreas: !0,
                        animationTailLength: .7
                    }, e
                }(y),
                Xn = $n,
                Kn = $n
        },
        11740: function(t, e, n) {
            "use strict";
            n.d(e, {
                eU: function() {
                    return s
                },
                Lz: function() {
                    return lt
                }
            });
            var r = n(86242),
                i = n(67294),
                o = function(t) {
                    var e = t.size,
                        n = t.inner,
                        o = t.outer,
                        a = t.outline;
                    return i.createElement("svg", {
                        width: e,
                        height: e,
                        style: {
                            marginRight: 5
                        }
                    }, i.createElement("circle", {
                        cx: e / 2,
                        cy: e / 2,
                        r: .5 * e,
                        fill: (0, r.Co)(a)
                    }), i.createElement("circle", {
                        cx: e / 2,
                        cy: e / 2,
                        r: .5 * e - 1,
                        fill: (0, r.Co)(o)
                    }), i.createElement("circle", {
                        cx: e / 2,
                        cy: e / 2,
                        r: .5 * e * .6 - 1,
                        fill: (0, r.Co)(n)
                    }))
                },
                a = {
                    outer: {
                        display: "flex",
                        flexDirection: "column"
                    },
                    item: {
                        outer: {
                            display: "flex",
                            flexDirection: "row",
                            padding: "3px 0",
                            alignItems: "center"
                        },
                        caption: {
                            marginLeft: 2
                        }
                    }
                },
                s = function(t) {
                    var e = t.diff,
                        n = t.colors,
                        s = t.aboutEqualText,
                        u = t.moreOutgoingText,
                        c = t.moreIncomingText,
                        l = 20,
                        f = e ? (0, r.SZ)(n) : (0, r.KW)(n),
                        h = (0, r.FQ)(f) ? f.positive.locationCircles : f.locationCircles,
                        d = (0, r.FQ)(f) ? f.negative.locationCircles : void 0;
                    return i.createElement("div", {
                        style: a.outer
                    }, i.createElement("div", null, i.createElement("div", {
                        style: a.item.outer
                    }, i.createElement(o, {
                        size: l,
                        inner: h.inner,
                        outer: h.inner,
                        outline: h.inner
                    }), d && i.createElement(o, {
                        size: l,
                        inner: d.inner,
                        outer: d.inner,
                        outline: d.inner
                    }), i.createElement("div", {
                        style: a.item.caption
                    }, s || "outgoing \u2245 incoming")), i.createElement("div", {
                        style: a.item.outer
                    }, i.createElement(o, {
                        size: l,
                        inner: h.inner,
                        outer: h.outgoing,
                        outline: h.inner
                    }), d && i.createElement(o, {
                        size: l,
                        inner: d.inner,
                        outer: d.outgoing,
                        outline: d.inner
                    }), i.createElement("div", {
                        style: a.item.caption
                    }, u || "more outgoing")), i.createElement("div", {
                        style: a.item.outer
                    }, i.createElement(o, {
                        size: l,
                        inner: h.inner,
                        outer: h.incoming,
                        outline: h.incoming
                    }), d && i.createElement(o, {
                        size: l,
                        inner: d.inner,
                        outer: d.incoming,
                        outline: d.incoming
                    }), i.createElement("div", {
                        style: a.item.caption
                    }, c || "more incoming"))))
                },
                u = n(43911);
            class c {
                constructor() {
                    this._partials = new Float64Array(32), this._n = 0
                }
                add(t) {
                    const e = this._partials;
                    let n = 0;
                    for (let r = 0; r < this._n && r < 32; r++) {
                        const i = e[r],
                            o = t + i,
                            a = Math.abs(t) < Math.abs(i) ? t - (o - i) : i - (o - t);
                        a && (e[n++] = a), t = o
                    }
                    return e[n] = t, this._n = n + 1, this
                }
                valueOf() {
                    const t = this._partials;
                    let e, n, r, i = this._n,
                        o = 0;
                    if (i > 0) {
                        for (o = t[--i]; i > 0 && (e = o, n = t[--i], o = e + n, r = n - (o - e), !r););
                        i > 0 && (r < 0 && t[i - 1] < 0 || r > 0 && t[i - 1] > 0) && (n = 2 * r, e = o + n, n == e - o && (o = e))
                    }
                    return o
                }
            }
            var l = 1e-6,
                f = Math.PI,
                h = f / 2,
                d = f / 4,
                p = 2 * f,
                g = 180 / f,
                y = f / 180,
                v = Math.abs,
                m = (Math.atan, Math.atan2),
                b = Math.cos,
                w = (Math.ceil, Math.exp, Math.floor, Math.hypot, Math.log, Math.pow, Math.sin),
                _ = (Math.sign, Math.sqrt);
            Math.tan;

            function P() {}
            var E, x, S, O, T, M = new c,
                C = new c,
                A = {
                    point: P,
                    lineStart: P,
                    lineEnd: P,
                    polygonStart: function() {
                        M = new c, A.lineStart = k, A.lineEnd = I
                    },
                    polygonEnd: function() {
                        var t = +M;
                        C.add(t < 0 ? p + t : t), this.lineStart = this.lineEnd = this.point = P
                    },
                    sphere: function() {
                        C.add(p)
                    }
                };

            function k() {
                A.point = j
            }

            function I() {
                L(E, x)
            }

            function j(t, e) {
                A.point = L, E = t, x = e, S = t *= y, O = b(e = (e *= y) / 2 + d), T = w(e)
            }

            function L(t, e) {
                var n = (t *= y) - S,
                    r = n >= 0 ? 1 : -1,
                    i = r * n,
                    o = b(e = (e *= y) / 2 + d),
                    a = w(e),
                    s = T * a,
                    u = O * o + s * b(i),
                    c = s * r * w(i);
                M.add(m(c, u)), S = t, O = o, T = a
            }

            function R(t, e) {
                return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]]
            }

            function D(t, e) {
                t && $.hasOwnProperty(t.type) && $[t.type](t, e)
            }
            var F, N, z, B, U, G, Z, V, H, W, Y, q = {
                    Feature: function(t, e) {
                        D(t.geometry, e)
                    },
                    FeatureCollection: function(t, e) {
                        for (var n = t.features, r = -1, i = n.length; ++r < i;) D(n[r].geometry, e)
                    }
                },
                $ = {
                    Sphere: function(t, e) {
                        e.sphere()
                    },
                    Point: function(t, e) {
                        t = t.coordinates, e.point(t[0], t[1], t[2])
                    },
                    MultiPoint: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;) t = n[r], e.point(t[0], t[1], t[2])
                    },
                    LineString: function(t, e) {
                        X(t.coordinates, e, 0)
                    },
                    MultiLineString: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;) X(n[r], e, 0)
                    },
                    Polygon: function(t, e) {
                        K(t.coordinates, e)
                    },
                    MultiPolygon: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;) K(n[r], e)
                    },
                    GeometryCollection: function(t, e) {
                        for (var n = t.geometries, r = -1, i = n.length; ++r < i;) D(n[r], e)
                    }
                };

            function X(t, e, n) {
                var r, i = -1,
                    o = t.length - n;
                for (e.lineStart(); ++i < o;) r = t[i], e.point(r[0], r[1], r[2]);
                e.lineEnd()
            }

            function K(t, e) {
                var n = -1,
                    r = t.length;
                for (e.polygonStart(); ++n < r;) X(t[n], e, 1);
                e.polygonEnd()
            }
            var J = {
                point: Q,
                lineStart: et,
                lineEnd: nt,
                polygonStart: function() {
                    J.point = rt, J.lineStart = it, J.lineEnd = ot, H = new c, A.polygonStart()
                },
                polygonEnd: function() {
                    A.polygonEnd(), J.point = Q, J.lineStart = et, J.lineEnd = nt, M < 0 ? (F = -(z = 180), N = -(B = 90)) : H > l ? B = 90 : H < -l && (N = -90), Y[0] = F, Y[1] = z
                },
                sphere: function() {
                    F = -(z = 180), N = -(B = 90)
                }
            };

            function Q(t, e) {
                W.push(Y = [F = t, z = t]), e < N && (N = e), e > B && (B = e)
            }

            function tt(t, e) {
                var n = function(t) {
                    var e = t[0],
                        n = t[1],
                        r = b(n);
                    return [r * b(e), r * w(e), w(n)]
                }([t * y, e * y]);
                if (V) {
                    var r = R(V, n),
                        i = R([r[1], -r[0], 0], r);
                    ! function(t) {
                        var e = _(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
                        t[0] /= e, t[1] /= e, t[2] /= e
                    }(i), i = function(t) {
                        return [m(t[1], t[0]), (e = t[2], e > 1 ? h : e < -1 ? -h : Math.asin(e))];
                        var e
                    }(i);
                    var o, a = t - U,
                        s = a > 0 ? 1 : -1,
                        u = i[0] * g * s,
                        c = v(a) > 180;
                    c ^ (s * U < u && u < s * t) ? (o = i[1] * g) > B && (B = o) : c ^ (s * U < (u = (u + 360) % 360 - 180) && u < s * t) ? (o = -i[1] * g) < N && (N = o) : (e < N && (N = e), e > B && (B = e)), c ? t < U ? at(F, t) > at(F, z) && (z = t) : at(t, z) > at(F, z) && (F = t) : z >= F ? (t < F && (F = t), t > z && (z = t)) : t > U ? at(F, t) > at(F, z) && (z = t) : at(t, z) > at(F, z) && (F = t)
                } else W.push(Y = [F = t, z = t]);
                e < N && (N = e), e > B && (B = e), V = n, U = t
            }

            function et() {
                J.point = tt
            }

            function nt() {
                Y[0] = F, Y[1] = z, J.point = Q, V = null
            }

            function rt(t, e) {
                if (V) {
                    var n = t - U;
                    H.add(v(n) > 180 ? n + (n > 0 ? 360 : -360) : n)
                } else G = t, Z = e;
                A.point(t, e), tt(t, e)
            }

            function it() {
                A.lineStart()
            }

            function ot() {
                rt(G, Z), A.lineEnd(), v(H) > l && (F = -(z = 180)), Y[0] = F, Y[1] = z, V = null
            }

            function at(t, e) {
                return (e -= t) < 0 ? e + 360 : e
            }

            function st(t, e) {
                return t[0] - e[0]
            }

            function ut(t, e) {
                return t[0] <= t[1] ? t[0] <= e && e <= t[1] : e < t[0] || t[1] < e
            }

            function ct(t) {
                var e, n, r, i, o, a, s;
                if (B = z = -(F = N = 1 / 0), W = [], function(t, e) {
                        t && q.hasOwnProperty(t.type) ? q[t.type](t, e) : D(t, e)
                    }(t, J), n = W.length) {
                    for (W.sort(st), e = 1, o = [r = W[0]]; e < n; ++e) ut(r, (i = W[e])[0]) || ut(r, i[1]) ? (at(r[0], i[1]) > at(r[0], r[1]) && (r[1] = i[1]), at(i[0], r[1]) > at(r[0], r[1]) && (r[0] = i[0])) : o.push(r = i);
                    for (a = -1 / 0, e = 0, r = o[n = o.length - 1]; e <= n; r = i, ++e) i = o[e], (s = at(r[1], i[0])) > a && (a = s, F = i[0], z = r[1])
                }
                return W = Y = null, F === 1 / 0 || N === 1 / 0 ? [
                    [NaN, NaN],
                    [NaN, NaN]
                ] : [
                    [F, N],
                    [z, B]
                ]
            }

            function lt(t, e, n, r) {
                return function(t, e, n) {
                    var r = n || {},
                        i = r.pad,
                        o = void 0 === i ? .05 : i,
                        a = r.tileSize,
                        s = void 0 === a ? 512 : a,
                        c = r.minZoom,
                        l = void 0 === c ? 0 : c,
                        f = r.maxZoom,
                        h = void 0 === f ? 100 : f,
                        d = ct(t),
                        p = d[0],
                        g = p[0],
                        y = p[1],
                        v = d[1],
                        m = v[0],
                        b = v[1],
                        w = [g - o * (m - g), y - o * (b - y), m + o * (m - g), b + o * (b - y)],
                        _ = (0, u.P)(w, e, void 0, void 0, s, !0),
                        P = _.center,
                        E = P[0],
                        x = P[1],
                        S = _.zoom;
                    return {
                        longitude: E,
                        latitude: x,
                        zoom: Math.max(Math.min(h, S), l),
                        bearing: 0,
                        pitch: 0
                    }
                }({
                    type: "GeometryCollection",
                    geometries: t.map((function(t) {
                        return {
                            type: "Point",
                            coordinates: e(t)
                        }
                    }))
                }, n, r)
            }
            var ft = n(45668),
                ht = n(38105),
                dt = function() {
                    var t = function(e, n) {
                        return (t = Object.setPrototypeOf || {
                                __proto__: []
                            }
                            instanceof Array && function(t, e) {
                                t.__proto__ = e
                            } || function(t, e) {
                                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
                            })(e, n)
                    };
                    return function(e, n) {
                        function r() {
                            this.constructor = e
                        }
                        t(e, n), e.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, new r)
                    }
                }(),
                pt = function() {
                    return (pt = Object.assign || function(t) {
                        for (var e, n = 1, r = arguments.length; n < r; n++)
                            for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                gt = function(t, e) {
                    var n = {};
                    for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
                    if (null != t && "function" === typeof Object.getOwnPropertySymbols) {
                        var i = 0;
                        for (r = Object.getOwnPropertySymbols(t); i < r.length; i++) e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[i]) && (n[r[i]] = t[r[i]])
                    }
                    return n
                },
                yt = function() {
                    for (var t = 0, e = 0, n = arguments.length; e < n; e++) t += arguments[e].length;
                    var r = Array(t),
                        i = 0;
                    for (e = 0; e < n; e++)
                        for (var o = arguments[e], a = 0, s = o.length; a < s; a++, i++) r[i] = o[a];
                    return r
                },
                vt = "Escape";
            ! function(t) {
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    return e.state = {
                        viewState: e.props.initialViewState,
                        time: 0
                    }, e.animationFrame = -1, e.animate = function() {
                        var t = Date.now() / 1e3;
                        e.setState({
                            time: t % 60 / 60 * 1800
                        }), e.animationFrame = window.requestAnimationFrame(e.animate)
                    }, e.handleFlowMapHover = function(t) {
                        var n = t.type,
                            i = t.object;
                        switch (n) {
                            case r._8.FLOW:
                                i ? e.highlight({
                                    type: "flow",
                                    flow: i
                                }, t) : e.highlight(void 0);
                                break;
                            case r._8.LOCATION_AREA:
                            case r._8.LOCATION:
                                var o = e.props.getLocationId;
                                i ? e.highlight({
                                    type: n === r._8.LOCATION_AREA ? "locationArea" : "location",
                                    locationId: (o || r.ZP.defaultProps.getLocationId.value)(i)
                                }, t) : e.highlight(void 0)
                        }
                    }, e.handleFlowMapClick = function(t) {
                        var n = t.type,
                            i = t.object;
                        switch (n) {
                            case r._8.LOCATION_AREA:
                            case r._8.LOCATION:
                                if (i) {
                                    var o = e.props,
                                        a = o.getLocationId,
                                        s = o.multiselect,
                                        u = e.state.selectedLocationIds,
                                        c = (a || r.ZP.defaultProps.getLocationId.value)(i),
                                        l = u && u.indexOf(c) >= 0,
                                        f = void 0;
                                    f = s ? u ? l ? u.filter((function(t) {
                                        return t !== c
                                    })) : yt(u, [c]) : [c] : l ? void 0 : [c], e.selectLocations(f), e.highlight(void 0)
                                }
                        }
                    }, e.handleViewStateChange = function(t) {
                        var n = t.viewState;
                        e.setState({
                            viewState: n,
                            highlight: void 0
                        });
                        var r = e.props.onViewStateChange;
                        r && r(n)
                    }, e.handleKeyDown = function(t) {
                        t instanceof KeyboardEvent && t.key === vt && e.setState({
                            selectedLocationIds: void 0,
                            highlight: void 0
                        })
                    }, e
                }
                dt(e, t), e.getDerivedStateFromProps = function(t, e) {
                    return t.selectedLocationIds !== e.selectedLocationIds ? {
                        selectedLocationIds: t.selectedLocationIds
                    } : null
                }, e.prototype.componentDidMount = function() {
                    document.addEventListener("keydown", this.handleKeyDown), this.props.animate && this.animate();
                    var t = this.props.onViewStateChange;
                    if (t) {
                        var e = this.state.viewState;
                        e && t(e)
                    }
                }, e.prototype.componentDidUpdate = function(t, e, n) {
                    var r = this.props.animate;
                    r !== t.animate && (r ? this.animate() : this.stopAnimation())
                }, e.prototype.componentWillUnmount = function() {
                    document.removeEventListener("keydown", this.handleKeyDown), this.stopAnimation()
                }, e.prototype.render = function() {
                    var t = this.props,
                        e = t.mapboxAccessToken,
                        n = t.mapStyle,
                        r = t.mixBlendMode,
                        o = this.getFlowMapLayer();
                    return i.createElement(i.Fragment, null, i.createElement(ft.Z, {
                        style: {
                            mixBlendMode: r
                        },
                        layers: [o],
                        viewState: this.state.viewState,
                        controller: !0,
                        onViewStateChange: this.handleViewStateChange
                    }, i.createElement(ht.StaticMap, {
                        width: "100%",
                        height: "100%",
                        mapboxApiAccessToken: e,
                        mapStyle: n
                    })))
                }, e.prototype.stopAnimation = function() {
                    this.animationFrame && window.cancelAnimationFrame(this.animationFrame)
                }, e.prototype.getFlowMapLayer = function() {
                    var t = this.props,
                        e = (t.initialViewState, t.mapboxAccessToken, t.mixBlendMode, t.multiselect, t.animationTailLength),
                        n = (t.onSelected, t.onHighlighted, gt(t, ["initialViewState", "mapboxAccessToken", "mixBlendMode", "multiselect", "animationTailLength", "onSelected", "onHighlighted"])),
                        i = this.state,
                        o = i.highlight,
                        a = i.selectedLocationIds;
                    return new r.ZP(pt(pt({
                        id: "flow-map-layer",
                        animationCurrentTime: this.state.time
                    }, n), {
                        selectedLocationIds: a,
                        animationTailLength: e,
                        highlightedLocationId: o && "location" === o.type ? o.locationId : void 0,
                        highlightedLocationAreaId: o && "locationArea" === o.type ? o.locationId : void 0,
                        highlightedFlow: o && "flow" === o.type ? o.flow : void 0,
                        onHover: this.handleFlowMapHover,
                        onClick: this.handleFlowMapClick
                    }))
                }, e.prototype.highlight = function(t, e) {
                    this.setState({
                        highlight: t
                    });
                    var n = this.props.onHighlighted;
                    n && n(t, e)
                }, e.prototype.selectLocations = function(t) {
                    this.setState((function(e) {
                        return pt(pt({}, e), {
                            selectedLocationIds: t
                        })
                    }));
                    var e = this.props.onSelected;
                    e && e(t)
                }, e.defaultProps = {
                    mixBlendMode: "multiply"
                }
            }(i.Component)
        },
        36255: function(t, e, n) {
            "use strict";
            n.d(e, {
                Kn: function() {
                    return o
                },
                Ss: function() {
                    return a
                },
                TW: function() {
                    return s
                },
                D0: function() {
                    return u
                },
                Ew: function() {
                    return c
                },
                Lj: function() {
                    return l
                },
                zH: function() {
                    return f
                },
                Os: function() {
                    return h
                }
            });
            const r = t => "boolean" === typeof t,
                i = t => "function" === typeof t,
                o = t => null !== t && "object" === typeof t,
                a = t => o(t) && t.constructor === {}.constructor,
                s = t => t && "function" === typeof t[Symbol.iterator],
                u = t => t && "function" === typeof t[Symbol.asyncIterator],
                c = t => "undefined" !== typeof Response && t instanceof Response || t && t.arrayBuffer && t.text && t.json,
                l = t => "undefined" !== typeof Blob && t instanceof Blob,
                f = t => t && "object" === typeof t && t.isBuffer,
                h = t => (t => "undefined" !== typeof ReadableStream && t instanceof ReadableStream || o(t) && i(t.tee) && i(t.cancel) && i(t.getReader))(t) || (t => o(t) && i(t.read) && i(t.pipe) && r(t.readable))(t)
        },
        49300: function(t, e, n) {
            "use strict";
            n.d(e, {
                z: function() {
                    return H
                }
            });
            var r = n(36255),
                i = n(21774),
                o = n(99597);

            function a(t, e) {
                if (!t) throw new Error(e || "loaders.gl assertion failed.")
            }
            var s = n(4942),
                u = n(83454);
            "undefined" !== typeof self && self, "undefined" !== typeof window && window, "undefined" !== typeof n.g && n.g, "undefined" !== typeof document && document, "object" !== typeof u || String(u);
            const c = "undefined" !== typeof window && "undefined" !== typeof window.orientation,
                l = "undefined" !== typeof u && u.version && /v([0-9]*)/.exec(u.version),
                f = (l && parseFloat(l[1]), new Map);

            function h(t) {
                a(t.source && !t.url || !t.source && t.url);
                let e = f.get(t.source || t.url);
                return e || (t.url && (e = function(t) {
                    if (!t.startsWith("http")) return t;
                    return d((e = t, "try {\n  importScripts('".concat(e, "');\n} catch (error) {\n  console.error(error);\n  throw error;\n}")));
                    var e
                }(t.url), f.set(t.url, e)), t.source && (e = d(t.source), f.set(t.source, e))), a(e), e
            }

            function d(t) {
                const e = new Blob([t], {
                    type: "application/javascript"
                });
                return URL.createObjectURL(e)
            }

            function p(t, e = !0, n) {
                const r = n || new Set;
                if (t) {
                    if (g(t)) r.add(t);
                    else if (g(t.buffer)) r.add(t.buffer);
                    else if (ArrayBuffer.isView(t));
                    else if (e && "object" === typeof t)
                        for (const i in t) p(t[i], e, r)
                } else;
                return void 0 === n ? Array.from(r) : []
            }

            function g(t) {
                return !!t && (t instanceof ArrayBuffer || ("undefined" !== typeof MessagePort && t instanceof MessagePort || ("undefined" !== typeof ImageBitmap && t instanceof ImageBitmap || "undefined" !== typeof OffscreenCanvas && t instanceof OffscreenCanvas)))
            }
            const y = () => {};
            class v {
                static isSupported() {
                    return "undefined" !== typeof Worker
                }
                constructor(t) {
                    (0, s.Z)(this, "name", void 0), (0, s.Z)(this, "source", void 0), (0, s.Z)(this, "url", void 0), (0, s.Z)(this, "terminated", !1), (0, s.Z)(this, "worker", void 0), (0, s.Z)(this, "onMessage", void 0), (0, s.Z)(this, "onError", void 0), (0, s.Z)(this, "_loadableURL", "");
                    const {
                        name: e,
                        source: n,
                        url: r
                    } = t;
                    a(n || r), this.name = e, this.source = n, this.url = r, this.onMessage = y, this.onError = t => console.log(t), this.worker = this._createBrowserWorker()
                }
                destroy() {
                    this.onMessage = y, this.onError = y, this.worker.terminate(), this.terminated = !0
                }
                get isRunning() {
                    return Boolean(this.onMessage)
                }
                postMessage(t, e) {
                    e = e || p(t), this.worker.postMessage(t, e)
                }
                _getErrorFromErrorEvent(t) {
                    let e = "Failed to load ";
                    return e += "worker ".concat(this.name, ". "), t.message && (e += "".concat(t.message, " in ")), t.lineno && (e += ":".concat(t.lineno, ":").concat(t.colno)), new Error(e)
                }
                _createBrowserWorker() {
                    this._loadableURL = h({
                        source: this.source,
                        url: this.url
                    });
                    const t = new Worker(this._loadableURL, {
                        name: this.name
                    });
                    return t.onmessage = t => {
                        t.data ? this.onMessage(t.data) : this.onError(new Error("No data received"))
                    }, t.onerror = t => {
                        this.onError(this._getErrorFromErrorEvent(t)), this.terminated = !0
                    }, t.onmessageerror = t => console.error(t), t
                }
            }
            class m {
                constructor(t, e) {
                    (0, s.Z)(this, "name", void 0), (0, s.Z)(this, "workerThread", void 0), (0, s.Z)(this, "isRunning", void 0), (0, s.Z)(this, "result", void 0), (0, s.Z)(this, "_resolve", void 0), (0, s.Z)(this, "_reject", void 0), this.name = t, this.workerThread = e, this.isRunning = !0, this._resolve = () => {}, this._reject = () => {}, this.result = new Promise(((t, e) => {
                        this._resolve = t, this._reject = e
                    }))
                }
                postMessage(t, e) {
                    this.workerThread.postMessage({
                        source: "loaders.gl",
                        type: t,
                        payload: e
                    })
                }
                done(t) {
                    a(this.isRunning), this.isRunning = !1, this._resolve(t)
                }
                error(t) {
                    a(this.isRunning), this.isRunning = !1, this._reject(t)
                }
            }
            class b {
                constructor(t) {
                    (0, s.Z)(this, "name", "unnamed"), (0, s.Z)(this, "source", void 0), (0, s.Z)(this, "url", void 0), (0, s.Z)(this, "maxConcurrency", 1), (0, s.Z)(this, "maxMobileConcurrency", 1), (0, s.Z)(this, "onDebug", (() => {})), (0, s.Z)(this, "reuseWorkers", !0), (0, s.Z)(this, "props", {}), (0, s.Z)(this, "jobQueue", []), (0, s.Z)(this, "idleQueue", []), (0, s.Z)(this, "count", 0), (0, s.Z)(this, "isDestroyed", !1), this.source = t.source, this.url = t.url, this.setProps(t)
                }
                destroy() {
                    this.idleQueue.forEach((t => t.destroy())), this.isDestroyed = !0
                }
                setProps(t) {
                    this.props = { ...this.props,
                        ...t
                    }, void 0 !== t.name && (this.name = t.name), void 0 !== t.maxConcurrency && (this.maxConcurrency = t.maxConcurrency), void 0 !== t.maxMobileConcurrency && (this.maxMobileConcurrency = t.maxMobileConcurrency), void 0 !== t.reuseWorkers && (this.reuseWorkers = t.reuseWorkers), void 0 !== t.onDebug && (this.onDebug = t.onDebug)
                }
                async startJob(t, e = ((t, e, n) => t.done(n)), n = ((t, e) => t.error(e))) {
                    const r = new Promise((r => (this.jobQueue.push({
                        name: t,
                        onMessage: e,
                        onError: n,
                        onStart: r
                    }), this)));
                    return this._startQueuedJob(), await r
                }
                async _startQueuedJob() {
                    if (!this.jobQueue.length) return;
                    const t = this._getAvailableWorker();
                    if (!t) return;
                    const e = this.jobQueue.shift();
                    if (e) {
                        this.onDebug({
                            message: "Starting job",
                            name: e.name,
                            workerThread: t,
                            backlog: this.jobQueue.length
                        });
                        const n = new m(e.name, t);
                        t.onMessage = t => e.onMessage(n, t.type, t.payload), t.onError = t => e.onError(n, t), e.onStart(n);
                        try {
                            await n.result
                        } finally {
                            this.returnWorkerToQueue(t)
                        }
                    }
                }
                returnWorkerToQueue(t) {
                    this.isDestroyed || !this.reuseWorkers || this.count > this._getMaxConcurrency() ? (t.destroy(), this.count--) : this.idleQueue.push(t), this.isDestroyed || this._startQueuedJob()
                }
                _getAvailableWorker() {
                    if (this.idleQueue.length > 0) return this.idleQueue.shift() || null;
                    if (this.count < this._getMaxConcurrency()) {
                        this.count++;
                        const t = "".concat(this.name.toLowerCase(), " (#").concat(this.count, " of ").concat(this.maxConcurrency, ")");
                        return new v({
                            name: t,
                            source: this.source,
                            url: this.url
                        })
                    }
                    return null
                }
                _getMaxConcurrency() {
                    return c ? this.maxMobileConcurrency : this.maxConcurrency
                }
            }
            const w = {
                maxConcurrency: 3,
                maxMobileConcurrency: 1,
                onDebug: () => {},
                reuseWorkers: !0
            };
            class _ {
                static isSupported() {
                    return v.isSupported()
                }
                static getWorkerFarm(t = {}) {
                    return _._workerFarm = _._workerFarm || new _({}), _._workerFarm.setProps(t), _._workerFarm
                }
                constructor(t) {
                    (0, s.Z)(this, "props", void 0), (0, s.Z)(this, "workerPools", new Map), this.props = { ...w
                    }, this.setProps(t), this.workerPools = new Map
                }
                destroy() {
                    for (const t of this.workerPools.values()) t.destroy()
                }
                setProps(t) {
                    this.props = { ...this.props,
                        ...t
                    };
                    for (const e of this.workerPools.values()) e.setProps(this._getWorkerPoolProps())
                }
                getWorkerPool(t) {
                    const {
                        name: e,
                        source: n,
                        url: r
                    } = t;
                    let i = this.workerPools.get(e);
                    return i || (i = new b({
                        name: e,
                        source: n,
                        url: r
                    }), i.setProps(this._getWorkerPoolProps()), this.workerPools.set(e, i)), i
                }
                _getWorkerPoolProps() {
                    return {
                        maxConcurrency: this.props.maxConcurrency,
                        maxMobileConcurrency: this.props.maxMobileConcurrency,
                        reuseWorkers: this.props.reuseWorkers,
                        onDebug: this.props.onDebug
                    }
                }
            }(0, s.Z)(_, "_workerFarm", void 0);
            async function P(t, e, n, r, i) {
                const o = t.id,
                    s = function(t, e = {}) {
                        const n = e[t.id] || {},
                            r = "".concat(t.id, "-worker.js");
                        let i = n.workerUrl;
                        if (i || "compression" !== t.id || (i = e.workerUrl), "test" === e._workerType && (i = "modules/".concat(t.module, "/dist/").concat(r)), !i) {
                            let e = t.version;
                            "latest" === e && (e = "latest");
                            const n = e ? "@".concat(e) : "";
                            i = "https://unpkg.com/@loaders.gl/".concat(t.module).concat(n, "/dist/").concat(r)
                        }
                        return a(i), i
                    }(t, n),
                    u = _.getWorkerFarm(n).getWorkerPool({
                        name: o,
                        url: s
                    });
                n = JSON.parse(JSON.stringify(n));
                const c = await u.startJob("process-on-worker", E.bind(null, i));
                c.postMessage("process", {
                    input: e,
                    options: n
                });
                const l = await c.result;
                return await l.result
            }
            async function E(t, e, n, r) {
                switch (n) {
                    case "done":
                        e.done(r);
                        break;
                    case "error":
                        e.error(r.error);
                        break;
                    case "process":
                        const {
                            id: o,
                            input: a,
                            options: s
                        } = r;
                        try {
                            const n = await t(a, s);
                            e.postMessage("done", {
                                id: o,
                                result: n
                            })
                        } catch (i) {
                            const t = i instanceof Error ? i.message : "unknown error";
                            e.postMessage("error", {
                                id: o,
                                error: t
                            })
                        }
                        break;
                    default:
                        console.warn("parse-with-worker unknown message ".concat(n))
                }
            }
            var x = n(9521);

            function S(t) {
                var e;
                if ((e = t) && "object" === typeof e && e.isBuffer && (t = function(t) {
                        return x.toArrayBuffer ? x.toArrayBuffer(t) : t
                    }(t)), t instanceof ArrayBuffer) return t;
                if (ArrayBuffer.isView(t)) return 0 === t.byteOffset && t.byteLength === t.buffer.byteLength ? t.buffer : t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength);
                if ("string" === typeof t) {
                    const e = t;
                    return (new TextEncoder).encode(e).buffer
                }
                if (t && "object" === typeof t && t._toArrayBuffer) return t._toArrayBuffer();
                throw new Error("toArrayBuffer")
            }
            async function O(t) {
                const e = [];
                for await (const n of t) e.push(n);
                return function(...t) {
                    const e = t.map((t => t instanceof ArrayBuffer ? new Uint8Array(t) : t)),
                        n = e.reduce(((t, e) => t + e.byteLength), 0),
                        r = new Uint8Array(n);
                    let i = 0;
                    for (const o of e) r.set(o, i), i += o.byteLength;
                    return r.buffer
                }(...e)
            }
            const T = 262144;
            var M = n(84959);

            function C(t, e) {
                return M.jU ? async function*(t, e) {
                    const n = t.getReader();
                    let r;
                    try {
                        for (;;) {
                            const t = r || n.read();
                            null !== e && void 0 !== e && e._streamReadAhead && (r = n.read());
                            const {
                                done: i,
                                value: o
                            } = await t;
                            if (i) return;
                            yield S(o)
                        }
                    } catch (i) {
                        n.releaseLock()
                    }
                }(t, e) : async function*(t, e) {
                    for await (const n of t) yield S(n)
                }(t)
            }

            function A(t, e) {
                if ("string" === typeof t) return function*(t, e) {
                    const n = (null === e || void 0 === e ? void 0 : e.chunkSize) || 262144;
                    let r = 0;
                    const i = new TextEncoder;
                    for (; r < t.length;) {
                        const e = Math.min(t.length - r, n),
                            o = t.slice(r, r + e);
                        r += e, yield i.encode(o)
                    }
                }(t, e);
                if (t instanceof ArrayBuffer) return function*(t, e = {}) {
                    const {
                        chunkSize: n = T
                    } = e;
                    let r = 0;
                    for (; r < t.byteLength;) {
                        const e = Math.min(t.byteLength - r, n),
                            i = new ArrayBuffer(e),
                            o = new Uint8Array(t, r, e);
                        new Uint8Array(i).set(o), r += e, yield i
                    }
                }(t, e);
                if ((0, r.Lj)(t)) return async function*(t, e) {
                    const n = (null === e || void 0 === e ? void 0 : e.chunkSize) || 1048576;
                    let r = 0;
                    for (; r < t.size;) {
                        const e = r + n,
                            i = await t.slice(r, e).arrayBuffer();
                        r = e, yield i
                    }
                }(t, e);
                if ((0, r.Os)(t)) return C(t, e);
                if ((0, r.Ew)(t)) {
                    return C(t.body, e)
                }
                throw new Error("makeIterator")
            }
            var k = n(17927);
            const I = "Cannot convert supplied data type";
            async function j(t, e, n) {
                const i = t instanceof ArrayBuffer || ArrayBuffer.isView(t);
                if ("string" === typeof t || i) return function(t, e, n) {
                    if (e.text && "string" === typeof t) return t;
                    if ((0, r.zH)(t) && (t = t.buffer), t instanceof ArrayBuffer) {
                        const n = t;
                        return e.text && !e.binary ? new TextDecoder("utf8").decode(n) : n
                    }
                    if (ArrayBuffer.isView(t)) {
                        if (e.text && !e.binary) return new TextDecoder("utf8").decode(t);
                        let n = t.buffer;
                        const r = t.byteLength || t.length;
                        return 0 === t.byteOffset && r === n.byteLength || (n = n.slice(t.byteOffset, t.byteOffset + r)), n
                    }
                    throw new Error(I)
                }(t, e);
                if ((0, r.Lj)(t) && (t = await (0, k.L1)(t)), (0, r.Ew)(t)) {
                    const n = t;
                    return await (0, k.mm)(n), e.binary ? await n.arrayBuffer() : await n.text()
                }
                if ((0, r.Os)(t) && (t = A(t, n)), (0, r.TW)(t) || (0, r.D0)(t)) return O(t);
                throw new Error(I)
            }
            var L = n(74642),
                R = n(6228);
            const D = /\.([^.]+)$/;

            function F(t, e = [], n, r) {
                if (!N(t)) return null;
                if (e && !Array.isArray(e)) return (0, i.T)(e);
                let o = [];
                e && (o = o.concat(e)), null !== n && void 0 !== n && n.ignoreRegisteredLoaders || o.push(...(0, R.kO)()),
                    function(t) {
                        for (const e of t)(0, i.T)(e)
                    }(o);
                const a = function(t, e, n, r) {
                    const {
                        url: i,
                        type: o
                    } = (0, L.l)(t), a = i || (null === r || void 0 === r ? void 0 : r.url);
                    let s = null;
                    null !== n && void 0 !== n && n.mimeType && (s = B(e, null === n || void 0 === n ? void 0 : n.mimeType));
                    return s = s || function(t, e) {
                        const n = e && D.exec(e),
                            r = n && n[1];
                        return r ? function(t, e) {
                            e = e.toLowerCase();
                            for (const n of t)
                                for (const t of n.extensions)
                                    if (t.toLowerCase() === e) return n;
                            return null
                        }(t, r) : null
                    }(e, a), s = s || B(e, o), s = s || function(t, e) {
                        if (!e) return null;
                        for (const n of t)
                            if ("string" === typeof e) {
                                if (U(e, n)) return n
                            } else if (ArrayBuffer.isView(e)) {
                            if (G(e.buffer, e.byteOffset, n)) return n
                        } else if (e instanceof ArrayBuffer) {
                            if (G(e, 0, n)) return n
                        }
                        return null
                    }(e, t), s = s || B(e, null === n || void 0 === n ? void 0 : n.fallbackMimeType), s
                }(t, o, n, r);
                if (!a && (null === n || void 0 === n || !n.nothrow)) throw new Error(z(t));
                return a
            }

            function N(t) {
                return !(t instanceof Response && 204 === t.status)
            }

            function z(t) {
                const {
                    url: e,
                    type: n
                } = (0, L.l)(t);
                let r = "No valid loader found";
                return t && (r += ' data: "'.concat(function(t, e = 5) {
                    if ("string" === typeof t) return t.slice(0, e);
                    if (ArrayBuffer.isView(t)) return Z(t.buffer, t.byteOffset, e);
                    if (t instanceof ArrayBuffer) {
                        return Z(t, 0, e)
                    }
                    return ""
                }(t), '", contentType: "').concat(n, '"')), e && (r += " url: ".concat(e)), r
            }

            function B(t, e) {
                for (const n of t) {
                    if (n.mimeTypes && n.mimeTypes.includes(e)) return n;
                    if (e === "application/x.".concat(n.id)) return n
                }
                return null
            }

            function U(t, e) {
                if (e.testText) return e.testText(t);
                return (Array.isArray(e.tests) ? e.tests : [e.tests]).some((e => t.startsWith(e)))
            }

            function G(t, e, n) {
                return (Array.isArray(n.tests) ? n.tests : [n.tests]).some((r => function(t, e, n, r) {
                    if (r instanceof ArrayBuffer) return function(t, e, n) {
                        if (n = n || t.byteLength, t.byteLength < n || e.byteLength < n) return !1;
                        const r = new Uint8Array(t),
                            i = new Uint8Array(e);
                        for (let o = 0; o < r.length; ++o)
                            if (r[o] !== i[o]) return !1;
                        return !0
                    }(r, t, r.byteLength);
                    switch (typeof r) {
                        case "function":
                            return r(t, n);
                        case "string":
                            return r === Z(t, e, r.length);
                        default:
                            return !1
                    }
                }(t, e, n, r)))
            }

            function Z(t, e, n) {
                if (t.byteLength < e + n) return "";
                const r = new DataView(t);
                let i = "";
                for (let o = 0; o < n; o++) i += String.fromCharCode(r.getUint8(e + o));
                return i
            }
            async function V(t, e, n, s) {
                a(!s || "object" === typeof s), !e || Array.isArray(e) || (0, i.C)(e) || (s = void 0, n = e, e = void 0), t = await t, n = n || {};
                const {
                    url: u
                } = (0, L.l)(t), c = function(t, e) {
                    if (!e && t && !Array.isArray(t)) return t;
                    let n;
                    if (t && (n = Array.isArray(t) ? t : [t]), e && e.loaders) {
                        const t = Array.isArray(e.loaders) ? e.loaders : [e.loaders];
                        n = n ? [...n, ...t] : t
                    }
                    return n && n.length ? n : null
                }(e, s), l = await async function(t, e = [], n, i) {
                    if (!N(t)) return null;
                    let o = F(t, e, { ...n,
                        nothrow: !0
                    }, i);
                    if (o) return o;
                    if ((0, r.Lj)(t) && (o = F(t = await t.slice(0, 10).arrayBuffer(), e, n, i)), !o && (null === n || void 0 === n || !n.nothrow)) throw new Error(z(t));
                    return o
                }(t, c, n);
                return l ? (s = function(t, e, n = null) {
                    if (n) return n;
                    const r = {
                        fetch: (0, o.bV)(e, t),
                        ...t
                    };
                    return Array.isArray(r.loaders) || (r.loaders = null), r
                }({
                    url: u,
                    parse: V,
                    loaders: c
                }, n = (0, o.GR)(n, l, c, u), s), await async function(t, e, n, r) {
                    if (function(t, e = "3.0.13") {
                            a(t, "no worker provided");
                            const n = t.version
                        }(t), e = await j(e, t, n), t.parseTextSync && "string" === typeof e) return n.dataType = "text", t.parseTextSync(e, n, r, t);
                    if (function(t, e) {
                            return !!_.isSupported() && t.worker && (null === e || void 0 === e ? void 0 : e.worker)
                        }(t, n)) return await P(t, e, n, 0, V);
                    if (t.parseText && "string" === typeof e) return await t.parseText(e, n, r, t);
                    if (t.parse) return await t.parse(e, n, r, t);
                    throw a(!t.parseSync), new Error("".concat(t.id, " loader - no parser found and worker is disabled"))
                }(l, t, n, s)) : null
            }
            async function H(t, e, n, a) {
                Array.isArray(e) || (0, i.C)(e) || (void 0, n = e, e = void 0);
                const s = (0, o.bV)(n);
                let u = t;
                return "string" === typeof t && (u = await s(t)), (0, r.Lj)(t) && (u = await s(t)), await V(u, e, n)
            }
        },
        6228: function(t, e, n) {
            "use strict";
            n.d(e, {
                fh: function() {
                    return a
                },
                kO: function() {
                    return s
                }
            });
            var r = n(21774),
                i = n(99597);
            const o = () => {
                const t = (0, i.rx)();
                return t.loaderRegistry = t.loaderRegistry || [], t.loaderRegistry
            };

            function a(t) {
                const e = o();
                t = Array.isArray(t) ? t : [t];
                for (const n of t) {
                    const t = (0, r.T)(n);
                    e.find((e => t === e)) || e.unshift(t)
                }
            }

            function s() {
                return o()
            }
        },
        21774: function(t, e, n) {
            "use strict";

            function r(t, e) {
                if (!t) throw new Error(e || "loader assertion failed.")
            }

            function i(t) {
                var e;
                if (!t) return !1;
                Array.isArray(t) && (t = t[0]);
                return Array.isArray(null === (e = t) || void 0 === e ? void 0 : e.extensions)
            }

            function o(t) {
                var e, n;
                let o;
                return r(t, "null loader"), r(i(t), "invalid loader"), Array.isArray(t) && (o = t[1], t = t[0], t = { ...t,
                    options: { ...t.options,
                        ...o
                    }
                }), (null !== (e = t) && void 0 !== e && e.parseTextSync || null !== (n = t) && void 0 !== n && n.parseText) && (t.text = !0), t.text || (t.binary = !0), t
            }
            n.d(e, {
                C: function() {
                    return i
                },
                T: function() {
                    return o
                }
            })
        },
        99597: function(t, e, n) {
            "use strict";
            n.d(e, {
                bV: function() {
                    return v
                },
                rx: function() {
                    return p
                },
                GR: function() {
                    return y
                }
            });
            var r = n(84959),
                i = n(36255);
            let o = "";
            const a = {};
            var s = n(17927);
            async function u(t, e) {
                if ("string" === typeof t) {
                    t = function(t) {
                        for (const e in a)
                            if (t.startsWith(e)) {
                                const n = a[e];
                                t = t.replace(e, n)
                            }
                        return t.startsWith("http://") || t.startsWith("https://") || (t = "".concat(o).concat(t)), t
                    }(t);
                    let n = e;
                    return null !== e && void 0 !== e && e.fetch && "function" !== typeof(null === e || void 0 === e ? void 0 : e.fetch) && (n = e.fetch), await fetch(t, n)
                }
                return await (0, s.L1)(t)
            }
            var c = n(4942);
            const l = new(n(65028).Z)({
                id: "loaders.gl"
            });
            class f {
                log() {
                    return () => {}
                }
                info() {
                    return () => {}
                }
                warn() {
                    return () => {}
                }
                error() {
                    return () => {}
                }
            }
            const h = {
                    fetch: null,
                    mimeType: void 0,
                    nothrow: !1,
                    log: new class {
                        constructor() {
                            (0, c.Z)(this, "console", void 0), this.console = console
                        }
                        log(...t) {
                            return this.console.log.bind(this.console, ...t)
                        }
                        info(...t) {
                            return this.console.info.bind(this.console, ...t)
                        }
                        warn(...t) {
                            return this.console.warn.bind(this.console, ...t)
                        }
                        error(...t) {
                            return this.console.error.bind(this.console, ...t)
                        }
                    },
                    CDN: "https://unpkg.com/@loaders.gl",
                    worker: !0,
                    maxConcurrency: 3,
                    maxMobileConcurrency: 1,
                    reuseWorkers: !0,
                    _workerType: "",
                    limit: 0,
                    _limitMB: 0,
                    batchSize: "auto",
                    batchDebounceMs: 0,
                    metadata: !1,
                    transforms: []
                },
                d = {
                    throws: "nothrow",
                    dataType: "(no longer used)",
                    uri: "baseUri",
                    method: "fetch.method",
                    headers: "fetch.headers",
                    body: "fetch.body",
                    mode: "fetch.mode",
                    credentials: "fetch.credentials",
                    cache: "fetch.cache",
                    redirect: "fetch.redirect",
                    referrer: "fetch.referrer",
                    referrerPolicy: "fetch.referrerPolicy",
                    integrity: "fetch.integrity",
                    keepalive: "fetch.keepalive",
                    signal: "fetch.signal"
                };

            function p() {
                r.CO.loaders = r.CO.loaders || {};
                const {
                    loaders: t
                } = r.CO;
                return t._state = t._state || {}, t._state
            }
            const g = () => {
                const t = p();
                return t.globalOptions = t.globalOptions || { ...h
                }, t.globalOptions
            };

            function y(t, e, n, r) {
                return n = n || [],
                    function(t, e) {
                        m(t, null, h, d, e);
                        for (const n of e) {
                            const r = t && t[n.id] || {},
                                i = n.options && n.options[n.id] || {},
                                o = n.deprecatedOptions && n.deprecatedOptions[n.id] || {};
                            m(r, n.id, i, o, e)
                        }
                    }(t, n = Array.isArray(n) ? n : [n]), w(e, t, r)
            }

            function v(t, e) {
                const n = g(),
                    r = t || n;
                return "function" === typeof r.fetch ? r.fetch : (0, i.Kn)(r.fetch) ? t => u(t, r) : null !== e && void 0 !== e && e.fetch ? null === e || void 0 === e ? void 0 : e.fetch : u
            }

            function m(t, e, n, r, o) {
                const a = e || "Top level",
                    s = e ? "".concat(e, ".") : "";
                for (const u in t) {
                    const c = !e && (0, i.Kn)(t[u]),
                        f = "baseUri" === u && !e,
                        h = "workerUrl" === u && e;
                    if (!(u in n) && !f && !h)
                        if (u in r) l.warn("".concat(a, " loader option '").concat(s).concat(u, "' no longer supported, use '").concat(r[u], "'"))();
                        else if (!c) {
                        const t = b(u, o);
                        l.warn("".concat(a, " loader option '").concat(s).concat(u, "' not recognized. ").concat(t))()
                    }
                }
            }

            function b(t, e) {
                const n = t.toLowerCase();
                let r = "";
                for (const i of e)
                    for (const e in i.options) {
                        if (t === e) return "Did you mean '".concat(i.id, ".").concat(e, "'?");
                        const o = e.toLowerCase();
                        (n.startsWith(o) || o.startsWith(n)) && (r = r || "Did you mean '".concat(i.id, ".").concat(e, "'?"))
                    }
                return r
            }

            function w(t, e, n) {
                const r = { ...t.options || {}
                };
                return function(t, e) {
                    e && !("baseUri" in t) && (t.baseUri = e)
                }(r, n), null === r.log && (r.log = new f), _(r, g()), _(r, e), r
            }

            function _(t, e) {
                for (const n in e)
                    if (n in e) {
                        const r = e[n];
                        (0, i.Ss)(r) && (0, i.Ss)(t[n]) ? t[n] = { ...t[n],
                            ...e[n]
                        }: t[n] = e[n]
                    }
            }
        },
        74642: function(t, e, n) {
            "use strict";
            n.d(e, {
                C: function() {
                    return l
                },
                l: function() {
                    return c
                }
            });
            var r = n(36255);
            const i = /^data:([-\w.]+\/[-\w.+]+)(;|,)/,
                o = /^([-\w.]+\/[-\w.+]+)/;

            function a(t) {
                const e = o.exec(t);
                return e ? e[1] : t
            }

            function s(t) {
                const e = i.exec(t);
                return e ? e[1] : ""
            }
            const u = /\?.*/;

            function c(t) {
                if ((0, r.Ew)(t)) {
                    const e = f(t.url || "");
                    return {
                        url: e,
                        type: a(t.headers.get("content-type") || "") || s(e)
                    }
                }
                return (0, r.Lj)(t) ? {
                    url: f(t.name || ""),
                    type: t.type || ""
                } : "string" === typeof t ? {
                    url: f(t),
                    type: s(t)
                } : {
                    url: "",
                    type: ""
                }
            }

            function l(t) {
                return (0, r.Ew)(t) ? t.headers["content-length"] || -1 : (0, r.Lj)(t) ? t.size : "string" === typeof t ? t.length : t instanceof ArrayBuffer || ArrayBuffer.isView(t) ? t.byteLength : -1
            }

            function f(t) {
                return t.replace(u, "")
            }
        },
        17927: function(t, e, n) {
            "use strict";
            n.d(e, {
                L1: function() {
                    return o
                },
                mm: function() {
                    return a
                }
            });
            var r = n(36255),
                i = n(74642);
            async function o(t) {
                if ((0, r.Ew)(t)) return t;
                const e = {},
                    n = (0, i.C)(t);
                n >= 0 && (e["content-length"] = String(n));
                const {
                    url: o,
                    type: a
                } = (0, i.l)(t);
                a && (e["content-type"] = a);
                const s = await async function(t) {
                    const e = 5;
                    if ("string" === typeof t) return "data:,".concat(t.slice(0, e));
                    if (t instanceof Blob) {
                        const e = t.slice(0, 5);
                        return await new Promise((t => {
                            const n = new FileReader;
                            n.onload = e => {
                                var n;
                                return t(null === e || void 0 === e || null === (n = e.target) || void 0 === n ? void 0 : n.result)
                            }, n.readAsDataURL(e)
                        }))
                    }
                    if (t instanceof ArrayBuffer) {
                        const n = function(t) {
                            let e = "";
                            const n = new Uint8Array(t);
                            for (let r = 0; r < n.byteLength; r++) e += String.fromCharCode(n[r]);
                            return btoa(e)
                        }(t.slice(0, e));
                        return "data:base64,".concat(n)
                    }
                    return null
                }(t);
                s && (e["x-first-bytes"] = s), "string" === typeof t && (t = (new TextEncoder).encode(t));
                const u = new Response(t, {
                    headers: e
                });
                return Object.defineProperty(u, "url", {
                    value: o
                }), u
            }
            async function a(t) {
                if (!t.ok) {
                    const e = await async function(t) {
                        let e = "Failed to fetch resource ".concat(t.url, " (").concat(t.status, "): ");
                        try {
                            const n = t.headers.get("Content-Type");
                            let r = t.statusText;
                            n.includes("application/json") && (r += " ".concat(await t.text())), e += r, e = e.length > 60 ? "".concat(e.slice(60), "...") : e
                        } catch (n) {}
                        return e
                    }(t);
                    throw new Error(e)
                }
            }
        },
        78423: function(t, e, n) {
            "use strict";
            n.d(e, {
                S: function() {
                    return C
                }
            });

            function r(t, e) {
                if (!t) throw new Error(e)
            }
            var i = n(83454);
            const o = {
                    self: "undefined" !== typeof self && self,
                    window: "undefined" !== typeof window && window,
                    global: "undefined" !== typeof n.g && n.g,
                    document: "undefined" !== typeof document && document
                },
                a = o.global || o.self || o.window,
                s = "object" !== typeof i || "[object process]" !== String(i) || !0,
                u = "undefined" !== typeof i && i.version && /v([0-9]*)/.exec(i.version),
                {
                    _parseImageNode: c
                } = (u && parseFloat(u[1]), a),
                l = "undefined" !== typeof Image,
                f = "undefined" !== typeof ImageBitmap,
                h = Boolean(c),
                d = !!s || h;

            function p(t) {
                const e = y(t);
                if (!e) throw new Error("Not an image");
                return e
            }

            function g(t) {
                switch (p(t)) {
                    case "data":
                        return t;
                    case "image":
                    case "imagebitmap":
                        const e = document.createElement("canvas"),
                            n = e.getContext("2d");
                        if (!n) throw new Error("getImageData");
                        return e.width = t.width, e.height = t.height, n.drawImage(t, 0, 0), n.getImageData(0, 0, t.width, t.height);
                    default:
                        throw new Error("getImageData")
                }
            }

            function y(t) {
                return "undefined" !== typeof ImageBitmap && t instanceof ImageBitmap ? "imagebitmap" : "undefined" !== typeof Image && t instanceof Image ? "image" : t && "object" === typeof t && t.data && t.width && t.height ? "data" : null
            }
            const v = /^data:image\/svg\+xml/,
                m = /\.svg((\?|#).*)?$/;

            function b(t) {
                return t && (v.test(t) || m.test(t))
            }

            function w(t, e) {
                if (b(e)) throw new Error("SVG cannot be parsed directly to imagebitmap");
                return new Blob([new Uint8Array(t)])
            }
            async function _(t, e, n) {
                const r = function(t, e) {
                        if (b(e)) {
                            let e = (new TextDecoder).decode(t);
                            try {
                                "function" === typeof unescape && "function" === typeof encodeURIComponent && (e = unescape(encodeURIComponent(e)))
                            } catch (n) {
                                throw new Error(n.message)
                            }
                            return "data:image/svg+xml;base64,".concat(btoa(e))
                        }
                        return w(t, e)
                    }(t, n),
                    i = self.URL || self.webkitURL,
                    o = "string" !== typeof r && i.createObjectURL(r);
                try {
                    return await async function(t, e) {
                        const n = new Image;
                        if (n.src = t, e.image && e.image.decode && n.decode) return await n.decode(), n;
                        return await new Promise(((e, r) => {
                            try {
                                n.onload = () => e(n), n.onerror = e => r(new Error("Could not load image ".concat(t, ": ").concat(e)))
                            } catch (i) {
                                r(i)
                            }
                        }))
                    }(o || r, e)
                } finally {
                    o && i.revokeObjectURL(o)
                }
            }
            const P = {};
            let E = !0;
            async function x(t, e, n) {
                let r;
                if (b(n)) {
                    r = await _(t, e, n)
                } else r = w(t, n);
                const i = e && e.imagebitmap;
                return await async function(t, e = null) {
                    ! function(t) {
                        for (const e in t || P) return !1;
                        return !0
                    }(e) && E || (e = null);
                    if (e) try {
                        return await createImageBitmap(t, e)
                    } catch (n) {
                        console.warn(n), E = !1
                    }
                    return await createImageBitmap(t)
                }(r, i)
            }
            const S = !1,
                O = !0;

            function T(t) {
                const e = M(t);
                return function(t) {
                    const e = M(t);
                    if (!(e.byteLength >= 24 && 2303741511 === e.getUint32(0, S))) return null;
                    return {
                        mimeType: "image/png",
                        width: e.getUint32(16, S),
                        height: e.getUint32(20, S)
                    }
                }(e) || function(t) {
                    const e = M(t);
                    if (!(e.byteLength >= 3 && 65496 === e.getUint16(0, S) && 255 === e.getUint8(2))) return null;
                    const {
                        tableMarkers: n,
                        sofMarkers: r
                    } = function() {
                        const t = new Set([65499, 65476, 65484, 65501, 65534]);
                        for (let n = 65504; n < 65520; ++n) t.add(n);
                        const e = new Set([65472, 65473, 65474, 65475, 65477, 65478, 65479, 65481, 65482, 65483, 65485, 65486, 65487, 65502]);
                        return {
                            tableMarkers: t,
                            sofMarkers: e
                        }
                    }();
                    let i = 2;
                    for (; i + 9 < e.byteLength;) {
                        const t = e.getUint16(i, S);
                        if (r.has(t)) return {
                            mimeType: "image/jpeg",
                            height: e.getUint16(i + 5, S),
                            width: e.getUint16(i + 7, S)
                        };
                        if (!n.has(t)) return null;
                        i += 2, i += e.getUint16(i, S)
                    }
                    return null
                }(e) || function(t) {
                    const e = M(t);
                    if (!(e.byteLength >= 10 && 1195984440 === e.getUint32(0, S))) return null;
                    return {
                        mimeType: "image/gif",
                        width: e.getUint16(6, O),
                        height: e.getUint16(8, O)
                    }
                }(e) || function(t) {
                    const e = M(t);
                    if (!(e.byteLength >= 14 && 16973 === e.getUint16(0, S) && e.getUint32(2, O) === e.byteLength)) return null;
                    return {
                        mimeType: "image/bmp",
                        width: e.getUint32(18, O),
                        height: e.getUint32(22, O)
                    }
                }(e)
            }

            function M(t) {
                if (t instanceof DataView) return t;
                if (ArrayBuffer.isView(t)) return new DataView(t.buffer);
                if (t instanceof ArrayBuffer) return new DataView(t);
                throw new Error("toDataView")
            }
            const C = {
                id: "image",
                module: "images",
                name: "Images",
                version: "3.0.13",
                mimeTypes: ["image/png", "image/jpeg", "image/gif", "image/webp", "image/bmp", "image/vnd.microsoft.icon", "image/svg+xml"],
                extensions: ["png", "jpg", "jpeg", "gif", "webp", "bmp", "ico", "svg"],
                parse: async function(t, e, n) {
                    const i = ((e = e || {}).image || {}).type || "auto",
                        {
                            url: o
                        } = n || {};
                    let s;
                    switch (function(t) {
                        switch (t) {
                            case "auto":
                            case "data":
                                return function() {
                                    if (f) return "imagebitmap";
                                    if (l) return "image";
                                    if (d) return "data";
                                    throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js")
                                }();
                            default:
                                return function(t) {
                                    switch (t) {
                                        case "auto":
                                            return f || l || d;
                                        case "imagebitmap":
                                            return f;
                                        case "image":
                                            return l;
                                        case "data":
                                            return d;
                                        default:
                                            throw new Error("@loaders.gl/images: image ".concat(t, " not supported in this environment"))
                                    }
                                }(t), t
                        }
                    }(i)) {
                        case "imagebitmap":
                            s = await x(t, e, o);
                            break;
                        case "image":
                            s = await _(t, e, o);
                            break;
                        case "data":
                            s = await
                            function(t, e) {
                                const {
                                    mimeType: n
                                } = T(t) || {}, {
                                    _parseImageNode: i
                                } = a;
                                return r(i), i(t, n, e)
                            }(t, e);
                            break;
                        default:
                            r(!1)
                    }
                    return "data" === i && (s = g(s)), s
                },
                tests: [t => Boolean(T(new DataView(t)))],
                options: {
                    image: {
                        type: "auto",
                        decode: !0
                    }
                }
            }
        },
        84959: function(t, e, n) {
            "use strict";
            n.d(e, {
                CO: function() {
                    return o
                },
                jU: function() {
                    return a
                }
            });
            var r = n(83454);
            const i = {
                    self: "undefined" !== typeof self && self,
                    window: "undefined" !== typeof window && window,
                    global: "undefined" !== typeof n.g && n.g,
                    document: "undefined" !== typeof document && document
                },
                o = i.global || i.self || i.window || {},
                a = "object" !== typeof r || "[object process]" !== String(r) || !0,
                s = "undefined" !== typeof r && r.version && /v([0-9]*)/.exec(r.version);
            s && parseFloat(s[1])
        },
        91375: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return D
                }
            });
            var r = n(1418),
                i = n(43426),
                o = n(14072),
                a = n(53478),
                s = n(87577);
            let u = null;

            function c(t, e) {
                var n;
                return new t((n = t.BYTES_PER_ELEMENT * e, (!u || u.byteLength < n) && (u = new ArrayBuffer(n)), u), 0, e)
            }
            var l = n(22525),
                f = n(26073),
                h = n(25989),
                d = n(71202);
            class p extends s.Z {
                static isSupported(t, e = {}) {
                    return !e.constantAttributeZero || ((0, r.D0)(t) || "Chrome" === function(t) {
                        if (!t && !(0, h.Z)()) return "Node";
                        if ((0, d.Z)(t)) return "Electron";
                        const e = "undefined" !== typeof navigator ? navigator : {},
                            n = t || e.userAgent || "";
                        if (n.indexOf("Edge") > -1) return "Edge";
                        const r = -1 !== n.indexOf("MSIE "),
                            i = -1 !== n.indexOf("Trident/");
                        return r || i ? "IE" : f.u9.chrome ? "Chrome" : f.u9.safari ? "Safari" : f.u9.mozInnerScreenX ? "Firefox" : "Unknown"
                    }())
                }
                static getDefaultArray(t) {
                    return t.luma = t.luma || {}, t.luma.defaultVertexArray || (t.luma.defaultVertexArray = new p(t, {
                        handle: null,
                        isDefaultArray: !0
                    })), t.luma.defaultVertexArray
                }
                static getMaxAttributes(t) {
                    return p.MAX_ATTRIBUTES = p.MAX_ATTRIBUTES || t.getParameter(34921), p.MAX_ATTRIBUTES
                }
                static setConstant(t, e, n) {
                    switch (n.constructor) {
                        case Float32Array:
                            p._setConstantFloatArray(t, e, n);
                            break;
                        case Int32Array:
                            p._setConstantIntArray(t, e, n);
                            break;
                        case Uint32Array:
                            p._setConstantUintArray(t, e, n);
                            break;
                        default:
                            (0, l.h)(!1)
                    }
                }
                constructor(t, e = {}) {
                    const n = e.id || e.program && e.program.id;
                    super(t, Object.assign({}, e, {
                        id: n
                    })), this.buffer = null, this.bufferValue = null, this.isDefaultArray = e.isDefaultArray || !1, this.gl2 = t, this.initialize(e), Object.seal(this)
                }
                delete() {
                    return super.delete(), this.buffer && this.buffer.delete(), this
                }
                get MAX_ATTRIBUTES() {
                    return p.getMaxAttributes(this.gl)
                }
                initialize(t = {}) {
                    return this.setProps(t)
                }
                setProps(t) {
                    return this
                }
                setElementBuffer(t = null, e = {}) {
                    return (0, l.h)(!t || 34963 === t.target, "elements must be GL.ELEMENT_ARRAY_BUFFER"), this.bind((() => {
                        this.gl.bindBuffer(34963, t ? t.handle : null)
                    })), this
                }
                setBuffer(t, e, n) {
                    if (34963 === e.target) return this.setElementBuffer(e, n);
                    const {
                        size: i,
                        type: o,
                        stride: a,
                        offset: s,
                        normalized: u,
                        integer: c,
                        divisor: f
                    } = n, {
                        gl: h,
                        gl2: d
                    } = this;
                    return t = Number(t), this.bind((() => {
                        h.bindBuffer(34962, e.handle), c ? ((0, l.h)((0, r.D0)(h)), d.vertexAttribIPointer(t, i, o, a, s)) : h.vertexAttribPointer(t, i, o, u, a, s), h.enableVertexAttribArray(t), d.vertexAttribDivisor(t, f || 0)
                    })), this
                }
                enable(t, e = !0) {
                    return !e && 0 === t && !p.isSupported(this.gl, {
                        constantAttributeZero: !0
                    }) || (t = Number(t), this.bind((() => e ? this.gl.enableVertexAttribArray(t) : this.gl.disableVertexAttribArray(t)))), this
                }
                getConstantBuffer(t, e) {
                    const n = this._normalizeConstantArrayValue(e),
                        r = n.byteLength * t,
                        i = n.length * t;
                    let o = !this.buffer;
                    if (this.buffer = this.buffer || new a.Z(this.gl, r), o = o || this.buffer.reallocate(r), o = o || !this._compareConstantArrayValues(n, this.bufferValue), o) {
                        const t = c(e.constructor, i);
                        ! function({
                            target: t,
                            source: e,
                            start: n = 0,
                            count: r = 1
                        }) {
                            const i = e.length,
                                o = r * i;
                            let a = 0;
                            for (let s = n; a < i; a++) t[s++] = e[a];
                            for (; a < o;) a < o - a ? (t.copyWithin(n + a, n, n + a), a *= 2) : (t.copyWithin(n + a, n, n + o - a), a = o)
                        }({
                            target: t,
                            source: n,
                            start: 0,
                            count: i
                        }), this.buffer.subData(t), this.bufferValue = e
                    }
                    return this.buffer
                }
                _normalizeConstantArrayValue(t) {
                    return Array.isArray(t) ? new Float32Array(t) : t
                }
                _compareConstantArrayValues(t, e) {
                    if (!t || !e || t.length !== e.length || t.constructor !== e.constructor) return !1;
                    for (let n = 0; n < t.length; ++n)
                        if (t[n] !== e[n]) return !1;
                    return !0
                }
                static _setConstantFloatArray(t, e, n) {
                    switch (n.length) {
                        case 1:
                            t.vertexAttrib1fv(e, n);
                            break;
                        case 2:
                            t.vertexAttrib2fv(e, n);
                            break;
                        case 3:
                            t.vertexAttrib3fv(e, n);
                            break;
                        case 4:
                            t.vertexAttrib4fv(e, n);
                            break;
                        default:
                            (0, l.h)(!1)
                    }
                }
                static _setConstantIntArray(t, e, n) {
                    switch ((0, l.h)((0, r.D0)(t)), n.length) {
                        case 1:
                            t.vertexAttribI1iv(e, n);
                            break;
                        case 2:
                            t.vertexAttribI2iv(e, n);
                            break;
                        case 3:
                            t.vertexAttribI3iv(e, n);
                            break;
                        case 4:
                            t.vertexAttribI4iv(e, n);
                            break;
                        default:
                            (0, l.h)(!1)
                    }
                }
                static _setConstantUintArray(t, e, n) {
                    switch ((0, l.h)((0, r.D0)(t)), n.length) {
                        case 1:
                            t.vertexAttribI1uiv(e, n);
                            break;
                        case 2:
                            t.vertexAttribI2uiv(e, n);
                            break;
                        case 3:
                            t.vertexAttribI3uiv(e, n);
                            break;
                        case 4:
                            t.vertexAttribI4uiv(e, n);
                            break;
                        default:
                            (0, l.h)(!1)
                    }
                }
                _createHandle() {
                    return this.gl.createVertexArray()
                }
                _deleteHandle(t) {
                    return this.gl2.deleteVertexArray(t), [this.elements]
                }
                _bindHandle(t) {
                    this.gl2.bindVertexArray(t)
                }
                _getParameter(t, {
                    location: e
                }) {
                    return (0, l.h)(Number.isFinite(e)), this.bind((() => {
                        switch (t) {
                            case 34373:
                                return this.gl.getVertexAttribOffset(e, t);
                            default:
                                return this.gl.getVertexAttrib(e, t)
                        }
                    }))
                }
            }
            var g = n(37469);
            const y = /^(.+)__LOCATION_([0-9]+)$/,
                v = ["setBuffers", "setGeneric", "clearBindings", "setLocations", "setGenericValues", "setDivisor", "enable", "disable"];
            class m {
                constructor(t, e = {}) {
                    const n = e.id || e.program && e.program.id;
                    this.id = n, this.gl = t, this.configuration = null, this.elements = null, this.elementsAccessor = null, this.values = null, this.accessors = null, this.unused = null, this.drawParams = null, this.buffer = null, this.attributes = {}, this.vertexArrayObject = new p(t), (0, g.F)(this, "VertexArray", "v6.0", v), this.initialize(e), Object.seal(this)
                }
                delete() {
                    this.buffer && this.buffer.delete(), this.vertexArrayObject.delete()
                }
                initialize(t = {}) {
                    return this.reset(), this.configuration = null, this.bindOnUse = !1, this.setProps(t)
                }
                reset() {
                    this.elements = null, this.elementsAccessor = null;
                    const {
                        MAX_ATTRIBUTES: t
                    } = this.vertexArrayObject;
                    return this.values = new Array(t).fill(null), this.accessors = new Array(t).fill(null), this.unused = {}, this.drawParams = null, this
                }
                setProps(t) {
                    return "program" in t && (this.configuration = t.program && t.program.configuration), "configuration" in t && (this.configuration = t.configuration), "attributes" in t && this.setAttributes(t.attributes), "elements" in t && this.setElementBuffer(t.elements), "bindOnUse" in t && (t = t.bindOnUse), this
                }
                clearDrawParams() {
                    this.drawParams = null
                }
                getDrawParams() {
                    return this.drawParams = this.drawParams || this._updateDrawParams(), this.drawParams
                }
                setAttributes(t) {
                    return Object.assign(this.attributes, t), this.vertexArrayObject.bind((() => {
                        for (const e in t) {
                            const n = t[e];
                            this._setAttribute(e, n)
                        }
                        this.gl.bindBuffer(34962, null)
                    })), this
                }
                setElementBuffer(t = null, e = {}) {
                    return this.elements = t, this.elementsAccessor = e, this.clearDrawParams(), this.vertexArrayObject.setElementBuffer(t, e), this
                }
                setBuffer(t, e, n = {}) {
                    if (34963 === e.target) return this.setElementBuffer(e, n);
                    const {
                        location: r,
                        accessor: i
                    } = this._resolveLocationAndAccessor(t, e, e.accessor, n);
                    return r >= 0 && (this.values[r] = e, this.accessors[r] = i, this.clearDrawParams(), this.vertexArrayObject.setBuffer(r, e, i)), this
                }
                setConstant(t, e, n = {}) {
                    const {
                        location: r,
                        accessor: i
                    } = this._resolveLocationAndAccessor(t, e, Object.assign({
                        size: e.length
                    }, n));
                    return r >= 0 && (e = this.vertexArrayObject._normalizeConstantArrayValue(e), this.values[r] = e, this.accessors[r] = i, this.clearDrawParams(), this.vertexArrayObject.enable(r, !1)), this
                }
                unbindBuffers() {
                    return this.vertexArrayObject.bind((() => {
                        this.elements && this.vertexArrayObject.setElementBuffer(null), this.buffer = this.buffer || new a.Z(this.gl, {
                            accessor: {
                                size: 4
                            }
                        });
                        for (let t = 0; t < this.vertexArrayObject.MAX_ATTRIBUTES; t++) this.values[t] instanceof a.Z && (this.gl.disableVertexAttribArray(t), this.gl.bindBuffer(34962, this.buffer.handle), this.gl.vertexAttribPointer(t, 1, 5126, !1, 0, 0))
                    })), this
                }
                bindBuffers() {
                    return this.vertexArrayObject.bind((() => {
                        this.elements && this.setElementBuffer(this.elements);
                        for (let t = 0; t < this.vertexArrayObject.MAX_ATTRIBUTES; t++) {
                            const e = this.values[t];
                            e instanceof a.Z && this.setBuffer(t, e)
                        }
                    })), this
                }
                bindForDraw(t, e, n) {
                    let r;
                    return this.vertexArrayObject.bind((() => {
                        this._setConstantAttributes(t, e), r = n()
                    })), r
                }
                _resolveLocationAndAccessor(t, e, n, i) {
                    const a = {
                            location: -1,
                            accessor: null
                        },
                        {
                            location: s,
                            name: u
                        } = this._getAttributeIndex(t);
                    if (!Number.isFinite(s) || s < 0) return this.unused[t] = e, r.cM.once(3, (() => `unused value ${t} in ${this.id}`))(), a;
                    const c = this._getAttributeInfo(u || s);
                    if (!c) return a;
                    const f = this.accessors[s] || {},
                        h = o.Z.resolve(c.accessor, f, n, i),
                        {
                            size: d,
                            type: p
                        } = h;
                    return (0, l.h)(Number.isFinite(d) && Number.isFinite(p)), {
                        location: s,
                        accessor: h
                    }
                }
                _getAttributeInfo(t) {
                    return this.configuration && this.configuration.getAttributeInfo(t)
                }
                _getAttributeIndex(t) {
                    const e = Number(t);
                    if (Number.isFinite(e)) return {
                        location: e
                    };
                    const n = y.exec(t),
                        r = n ? n[1] : t,
                        i = n ? Number(n[2]) : 0;
                    return this.configuration ? {
                        location: this.configuration.getAttributeLocation(r) + i,
                        name: r
                    } : {
                        location: -1
                    }
                }
                _setAttribute(t, e) {
                    if (e instanceof a.Z) this.setBuffer(t, e);
                    else if (Array.isArray(e) && e.length && e[0] instanceof a.Z) {
                        const n = e[0],
                            r = e[1];
                        this.setBuffer(t, n, r)
                    } else if (ArrayBuffer.isView(e) || Array.isArray(e)) {
                        const n = e;
                        this.setConstant(t, n)
                    } else {
                        if (!(e.buffer instanceof a.Z)) throw new Error("VertexArray: attributes must be Buffers or constants (i.e. typed array)"); {
                            const n = e;
                            this.setBuffer(t, n.buffer, n)
                        }
                    }
                }
                _setConstantAttributes(t, e) {
                    const n = Math.max(0 | t, 0 | e);
                    let r = this.values[0];
                    ArrayBuffer.isView(r) && this._setConstantAttributeZero(r, n);
                    for (let i = 1; i < this.vertexArrayObject.MAX_ATTRIBUTES; i++) r = this.values[i], ArrayBuffer.isView(r) && this._setConstantAttribute(i, r)
                }
                _setConstantAttributeZero(t, e) {
                    if (p.isSupported(this.gl, {
                            constantAttributeZero: !0
                        })) return void this._setConstantAttribute(0, t);
                    const n = this.vertexArrayObject.getConstantBuffer(e, t);
                    this.vertexArrayObject.setBuffer(0, n, this.accessors[0])
                }
                _setConstantAttribute(t, e) {
                    p.setConstant(this.gl, t, e)
                }
                _updateDrawParams() {
                    const t = {
                        isIndexed: !1,
                        isInstanced: !1,
                        indexCount: 1 / 0,
                        vertexCount: 1 / 0,
                        instanceCount: 1 / 0
                    };
                    for (let e = 0; e < this.vertexArrayObject.MAX_ATTRIBUTES; e++) this._updateDrawParamsForLocation(t, e);
                    return this.elements && (t.elementCount = this.elements.getElementCount(this.elements.accessor), t.isIndexed = !0, t.indexType = this.elementsAccessor.type || this.elements.accessor.type, t.indexOffset = this.elementsAccessor.offset || 0), t.indexCount === 1 / 0 && (t.indexCount = 0), t.vertexCount === 1 / 0 && (t.vertexCount = 0), t.instanceCount === 1 / 0 && (t.instanceCount = 0), t
                }
                _updateDrawParamsForLocation(t, e) {
                    const n = this.values[e],
                        r = this.accessors[e];
                    if (!n) return;
                    const {
                        divisor: i
                    } = r, o = i > 0;
                    if (t.isInstanced = t.isInstanced || o, n instanceof a.Z) {
                        const e = n;
                        if (o) {
                            const n = e.getVertexCount(r);
                            t.instanceCount = Math.min(t.instanceCount, n)
                        } else {
                            const n = e.getVertexCount(r);
                            t.vertexCount = Math.min(t.vertexCount, n)
                        }
                    }
                }
                setElements(t = null, e = {}) {
                    return r.cM.deprecated("setElements", "setElementBuffer")(), this.setElementBuffer(t, e)
                }
            }
            var b = n(74538),
                w = n(26047),
                _ = n(75433),
                P = n(51053),
                E = n(79579),
                x = n(38522);

            function S(t, e = {}) {
                const {
                    isInteger: n = !1
                } = e;
                if (Array.isArray(t) || ArrayBuffer.isView(t)) return function(t, e) {
                    const {
                        maxElts: n = 16,
                        size: r = 1
                    } = e;
                    let i = "[";
                    for (let o = 0; o < t.length && o < n; ++o) o > 0 && (i += "," + (o % r === 0 ? " " : "")), i += S(t[o], e);
                    return `${i}${t.length>n?"...":"]"}`
                }(t, e);
                if (!Number.isFinite(t)) return String(t);
                if (Math.abs(t) < 1e-16) return n ? "0" : "0.";
                if (n) return t.toFixed(0);
                if (Math.abs(t) > 100 && Math.abs(t) < 1e4) return t.toFixed(0);
                const r = t.toPrecision(2);
                return r.indexOf(".0") === r.length - 2 ? r.slice(0, -1) : r
            }

            function O(t, e, n, r) {
                const {
                    gl: i
                } = t;
                if (!e) return {
                    [r]: "null",
                    "Format ": "N/A"
                };
                let o, s, u, c = "NOT PROVIDED",
                    l = 1,
                    f = 0,
                    h = 0;
                if (n && (c = n.type, l = n.size, c = String(c).replace("Array", ""), o = -1 !== c.indexOf("nt")), e instanceof a.Z) {
                    const t = e,
                        {
                            data: a,
                            changed: d
                        } = t.getDebugData();
                    let p;
                    if (s = d ? "*" : "", u = a, h = t.byteLength, f = h / a.BYTES_PER_ELEMENT / l, n) {
                        p = `${n.divisor>0?"I ":"P "} ${f} (x${l}=${h} bytes ${(0,E.km)(i,c)})`
                    } else o = !0, p = `${h} bytes`;
                    return {
                        [r]: `${s}${S(u,{size:l,isInteger:o})}`,
                        "Format ": p
                    }
                }
                return u = e, l = e.length, c = String(e.constructor.name).replace("Array", ""), o = -1 !== c.indexOf("nt"), {
                    [r]: `${S(u,{size:l,isInteger:o})} (constant)`,
                    "Format ": `${l}x${c} (constant)`
                }
            }

            function T(t, e) {
                const {
                    type: n,
                    size: r
                } = e, i = (0, x.jG)(n, r);
                return i ? `${t} (${i.name})` : t
            }

            function M({
                header: t = "Uniforms",
                program: e,
                uniforms: n,
                undefinedOnly: r = !1
            }) {
                (0, l.h)(e);
                const i = ".*Matrix",
                    o = e._uniformSetters,
                    a = {},
                    s = Object.keys(o).sort();
                let u = 0;
                for (const l of s) l.match(".*_.*") || l.match(i) || C({
                    table: a,
                    header: t,
                    uniforms: n,
                    uniformName: l,
                    undefinedOnly: r
                }) && u++;
                for (const l of s) l.match(i) && C({
                    table: a,
                    header: t,
                    uniforms: n,
                    uniformName: l,
                    undefinedOnly: r
                }) && u++;
                for (const l of s) a[l] || C({
                    table: a,
                    header: t,
                    uniforms: n,
                    uniformName: l,
                    undefinedOnly: r
                }) && u++;
                let c = 0;
                const f = {};
                if (!r)
                    for (const l in n) {
                        const e = n[l];
                        a[l] || (c++, f[l] = {
                            Type: `NOT USED: ${e}`,
                            [t]: S(e)
                        })
                    }
                return {
                    table: a,
                    count: u,
                    unusedTable: f,
                    unusedCount: c
                }
            }

            function C({
                table: t,
                header: e,
                uniforms: n,
                uniformName: r,
                undefinedOnly: i
            }) {
                const o = n[r],
                    a = function(t) {
                        return void 0 !== t && null !== t
                    }(o);
                return (!i || !a) && (t[r] = {
                    [e]: a ? S(o) : "N/A",
                    "Uniform Type": a ? o : "NOT PROVIDED"
                }, !0)
            }

            function A(t) {
                const {
                    type: e,
                    size: n
                } = t.accessor, r = (0, x.jG)(e, n);
                return r ? `${r.name} ${t.name}` : t.name
            }
            const k = {
                POSITION: "positions",
                NORMAL: "normals",
                COLOR_0: "colors",
                TEXCOORD_0: "texCoords",
                TEXCOORD_1: "texCoords1",
                TEXCOORD_2: "texCoords2"
            };

            function I(t, e) {
                const {
                    attributeMap: n = k
                } = e || {};
                return n && n[t] || t
            }

            function j(t, e) {
                let n;
                switch (t) {
                    case "texCoords":
                    case "texCoord1":
                    case "texCoord2":
                    case "texCoord3":
                        n = "uvs";
                        break;
                    case "vertices":
                    case "positions":
                    case "normals":
                    case "pickingColors":
                        n = "vectors"
                }
                switch (n) {
                    case "vectors":
                        e.size = e.size || 3;
                        break;
                    case "uvs":
                        e.size = e.size || 2
                }(0, l.h)(Number.isFinite(e.size), `attribute ${t} needs size`)
            }
            const L = () => {},
                R = {};
            class D {
                constructor(t, e = {}) {
                    const {
                        id: n = (0, b.hQ)("model")
                    } = e;
                    (0, l.h)((0, r.UF)(t)), this.id = n, this.gl = t, this.id = e.id || (0, b.hQ)("Model"), this.lastLogTime = 0, this.animated = !1, this.initialize(e)
                }
                initialize(t) {
                    this.props = {}, this.programManager = t.programManager || i.Z.getDefaultProgramManager(this.gl), this._programManagerState = -1, this._managedProgram = !1;
                    const {
                        program: e = null,
                        vs: n,
                        fs: r,
                        modules: o,
                        defines: a,
                        inject: s,
                        varyings: u,
                        bufferMode: c,
                        transpileToGLSL100: f
                    } = t;
                    this.programProps = {
                        program: e,
                        vs: n,
                        fs: r,
                        modules: o,
                        defines: a,
                        inject: s,
                        varyings: u,
                        bufferMode: c,
                        transpileToGLSL100: f
                    }, this.program = null, this.vertexArray = null, this._programDirty = !0, this.userData = {}, this.needsRedraw = !0, this._attributes = {}, this.attributes = {}, this.uniforms = {}, this.pickable = !0, this._checkProgram(), this.setUniforms(Object.assign({}, this.getModuleUniforms(t.moduleSettings))), this.drawMode = void 0 !== t.drawMode ? t.drawMode : 4, this.vertexCount = t.vertexCount || 0, this.geometryBuffers = {}, this.isInstanced = t.isInstanced || t.instanced || t.instanceCount > 0, this._setModelProps(t), this.geometry = {}, (0, l.h)(void 0 !== this.drawMode && Number.isFinite(this.vertexCount), "Model needs drawMode and vertexCount")
                }
                setProps(t) {
                    this._setModelProps(t)
                }
                delete() {
                    for (const t in this._attributes) this._attributes[t] !== this.attributes[t] && this._attributes[t].delete();
                    this._managedProgram && (this.programManager.release(this.program), this._managedProgram = !1), this.vertexArray.delete(), this._deleteGeometryBuffers()
                }
                getDrawMode() {
                    return this.drawMode
                }
                getVertexCount() {
                    return this.vertexCount
                }
                getInstanceCount() {
                    return this.instanceCount
                }
                getAttributes() {
                    return this.attributes
                }
                getProgram() {
                    return this.program
                }
                setProgram(t) {
                    const {
                        program: e,
                        vs: n,
                        fs: r,
                        modules: i,
                        defines: o,
                        inject: a,
                        varyings: s,
                        bufferMode: u,
                        transpileToGLSL100: c
                    } = t;
                    this.programProps = {
                        program: e,
                        vs: n,
                        fs: r,
                        modules: i,
                        defines: o,
                        inject: a,
                        varyings: s,
                        bufferMode: u,
                        transpileToGLSL100: c
                    }, this._programDirty = !0
                }
                getUniforms() {
                    return this.uniforms
                }
                setDrawMode(t) {
                    return this.drawMode = t, this
                }
                setVertexCount(t) {
                    return (0, l.h)(Number.isFinite(t)), this.vertexCount = t, this
                }
                setInstanceCount(t) {
                    return (0, l.h)(Number.isFinite(t)), this.instanceCount = t, this
                }
                setGeometry(t) {
                    return this.drawMode = t.drawMode, this.vertexCount = t.getVertexCount(), this._deleteGeometryBuffers(), this.geometryBuffers = function(t, e, n) {
                        const r = {};
                        let i = e.indices;
                        for (const o in e.attributes) {
                            const s = e.attributes[o],
                                u = I(o, n);
                            if ("indices" === o) i = s;
                            else if (s.constant) r[u] = s.value;
                            else {
                                const e = s.value,
                                    n = { ...s
                                    };
                                delete n.value, r[u] = [new a.Z(t, e), n], j(o, n)
                            }
                        }
                        if (i) {
                            const e = i.value || i;
                            (0, l.h)(e instanceof Uint16Array || e instanceof Uint32Array, 'attribute array for "indices" must be of integer type');
                            const n = {
                                size: 1,
                                isIndexed: void 0 === i.isIndexed || i.isIndexed
                            };
                            r.indices = [new a.Z(t, {
                                data: e,
                                target: 34963
                            }), n]
                        }
                        return r
                    }(this.gl, t), this.vertexArray.setAttributes(this.geometryBuffers), this
                }
                setAttributes(t = {}) {
                    if ((0, b.nK)(t)) return this;
                    const e = {};
                    for (const n in t) {
                        const r = t[n];
                        e[n] = r.getValue ? r.getValue() : r
                    }
                    return this.vertexArray.setAttributes(e), this
                }
                setUniforms(t = {}) {
                    return Object.assign(this.uniforms, t), this
                }
                getModuleUniforms(t) {
                    this._checkProgram();
                    const e = this.programManager.getUniforms(this.program);
                    return e ? e(t) : {}
                }
                updateModuleSettings(t) {
                    const e = this.getModuleUniforms(t || {});
                    return this.setUniforms(e)
                }
                clear(t) {
                    return (0, w.Z)(this.program.gl, t), this
                }
                draw(t = {}) {
                    this._checkProgram();
                    const {
                        moduleSettings: e = null,
                        framebuffer: n,
                        uniforms: i = {},
                        attributes: o = {},
                        transformFeedback: a = this.transformFeedback,
                        parameters: s = {},
                        vertexArray: u = this.vertexArray
                    } = t;
                    let c;
                    this.setAttributes(o), this.updateModuleSettings(e), this.setUniforms(i), r.cM.priority >= 2 && (c = this._logDrawCallStart(2));
                    const l = this.vertexArray.getDrawParams(),
                        {
                            isIndexed: f = l.isIndexed,
                            indexType: h = l.indexType,
                            indexOffset: d = l.indexOffset,
                            vertexArrayInstanced: p = l.isInstanced
                        } = this.props;
                    p && !this.isInstanced && r.cM.warn("Found instanced attributes on non-instanced model", this.id)();
                    const {
                        isInstanced: g,
                        instanceCount: y
                    } = this, {
                        onBeforeRender: v = L,
                        onAfterRender: m = L
                    } = this.props;
                    v(), this.program.setUniforms(this.uniforms);
                    const b = this.program.draw(Object.assign(R, t, {
                        logPriority: c,
                        uniforms: null,
                        framebuffer: n,
                        parameters: s,
                        drawMode: this.getDrawMode(),
                        vertexCount: this.getVertexCount(),
                        vertexArray: u,
                        transformFeedback: a,
                        isIndexed: f,
                        indexType: h,
                        isInstanced: g,
                        instanceCount: y,
                        offset: f ? d : 0
                    }));
                    return m(), r.cM.priority >= 2 && this._logDrawCallEnd(c, u, n), b
                }
                transform(t = {}) {
                    const {
                        discard: e = !0,
                        feedbackBuffers: n,
                        unbindModels: r = []
                    } = t;
                    let {
                        parameters: i
                    } = t;
                    n && this._setFeedbackBuffers(n), e && (i = Object.assign({}, i, {
                        35977: e
                    })), r.forEach((t => t.vertexArray.unbindBuffers()));
                    try {
                        this.draw(Object.assign({}, t, {
                            parameters: i
                        }))
                    } finally {
                        r.forEach((t => t.vertexArray.bindBuffers()))
                    }
                    return this
                }
                render(t = {}) {
                    return r.cM.warn("Model.render() is deprecated. Use Model.setUniforms() and Model.draw()")(), this.setUniforms(t).draw()
                }
                _setModelProps(t) {
                    Object.assign(this.props, t), "uniforms" in t && this.setUniforms(t.uniforms), "pickable" in t && (this.pickable = t.pickable), "instanceCount" in t && (this.instanceCount = t.instanceCount), "geometry" in t && this.setGeometry(t.geometry), "attributes" in t && this.setAttributes(t.attributes), "_feedbackBuffers" in t && this._setFeedbackBuffers(t._feedbackBuffers)
                }
                _checkProgram() {
                    if (!(this._programDirty || this.programManager.stateHash !== this._programManagerState)) return;
                    let {
                        program: t
                    } = this.programProps;
                    if (t) this._managedProgram = !1;
                    else {
                        const {
                            vs: e,
                            fs: n,
                            modules: r,
                            inject: i,
                            defines: o,
                            varyings: a,
                            bufferMode: s,
                            transpileToGLSL100: u
                        } = this.programProps;
                        t = this.programManager.get({
                            vs: e,
                            fs: n,
                            modules: r,
                            inject: i,
                            defines: o,
                            varyings: a,
                            bufferMode: s,
                            transpileToGLSL100: u
                        }), this.program && this._managedProgram && this.programManager.release(this.program), this._programManagerState = this.programManager.stateHash, this._managedProgram = !0
                    }(0, l.h)(t instanceof _.Z, "Model needs a program"), this._programDirty = !1, t !== this.program && (this.program = t, this.vertexArray ? this.vertexArray.setProps({
                        program: this.program,
                        attributes: this.vertexArray.attributes
                    }) : this.vertexArray = new m(this.gl, {
                        program: this.program
                    }), this.setUniforms(Object.assign({}, this.getModuleUniforms())))
                }
                _deleteGeometryBuffers() {
                    for (const t in this.geometryBuffers) {
                        const e = this.geometryBuffers[t][0] || this.geometryBuffers[t];
                        e instanceof a.Z && e.delete()
                    }
                }
                _setAnimationProps(t) {
                    this.animated && (0, l.h)(t, "Model.draw(): animated uniforms but no animationProps")
                }
                _setFeedbackBuffers(t = {}) {
                    if ((0, b.nK)(t)) return this;
                    const {
                        gl: e
                    } = this.program;
                    return this.transformFeedback = this.transformFeedback || new P.Z(e, {
                        program: this.program
                    }), this.transformFeedback.setBuffers(t), this
                }
                _logDrawCallStart(t) {
                    const e = t > 3 ? 0 : 1e4;
                    if (!(Date.now() - this.lastLogTime < e)) return this.lastLogTime = Date.now(), r.cM.group(2, `>>> DRAWING MODEL ${this.id}`, {
                        collapsed: r.cM.level <= 2
                    })(), t
                }
                _logDrawCallEnd(t, e, n, i) {
                    if (void 0 === t) return;
                    const o = function({
                            vertexArray: t,
                            header: e = "Attributes"
                        }) {
                            if (!t.configuration) return {};
                            const n = {};
                            t.elements && (n.ELEMENT_ARRAY_BUFFER = O(t, t.elements, null, e));
                            const r = t.values;
                            for (const i in r) {
                                const o = t._getAttributeInfo(i);
                                if (o) {
                                    let a = `${i}: ${o.name}`;
                                    const s = t.accessors[o.location];
                                    s && (a = `${i}: ${T(o.name,s)}`), n[a] = O(t, r[i], s, e)
                                }
                            }
                            return n
                        }({
                            vertexArray: e,
                            header: `${this.id} attributes`,
                            attributes: this._attributes
                        }),
                        {
                            table: a,
                            unusedTable: s,
                            unusedCount: u
                        } = M({
                            header: `${this.id} uniforms`,
                            program: this.program,
                            uniforms: Object.assign({}, this.program.uniforms, n)
                        }),
                        {
                            table: c,
                            count: l
                        } = M({
                            header: `${this.id} uniforms`,
                            program: this.program,
                            uniforms: Object.assign({}, this.program.uniforms, n),
                            undefinedOnly: !0
                        });
                    l > 0 && r.cM.log("MISSING UNIFORMS", Object.keys(c))(), u > 0 && r.cM.log("UNUSED UNIFORMS", Object.keys(s))();
                    const f = function(t) {
                        const e = {},
                            n = `Accessors for ${t.id}`;
                        for (const r of t.attributeInfos) r && (e[`in ${A(r)}`] = {
                            [n]: JSON.stringify(r.accessor)
                        });
                        for (const r of t.varyingInfos) r && (e[`out ${A(r)}`] = {
                            [n]: JSON.stringify(r.accessor)
                        });
                        return e
                    }(this.vertexArray.configuration);
                    r.cM.table(t, o)(), r.cM.table(t, a)(), r.cM.table(t + 1, f)(), i && i.log({
                        logLevel: 2,
                        message: `Rendered to ${i.id}`
                    }), r.cM.groupEnd(2, `>>> DRAWING MODEL ${this.id}`)()
                }
            }
        },
        43426: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return F
                }
            });
            var r = n(75682),
                i = n(29047);
            const o = {
                number: {
                    validate: (t, e) => Number.isFinite(t) && (!("max" in e) || t <= e.max) && (!("min" in e) || t >= e.min)
                },
                array: {
                    validate: (t, e) => Array.isArray(t) || ArrayBuffer.isView(t)
                }
            };

            function a(t) {
                let e = s(t);
                return "object" === e ? t ? "type" in t ? Object.assign({}, t, o[t.type]) : "value" in t ? (e = s(t.value), Object.assign({
                    type: e
                }, t, o[e])) : {
                    type: "object",
                    value: t
                } : {
                    type: "object",
                    value: null
                } : Object.assign({
                    type: e,
                    value: t
                }, o[e])
            }

            function s(t) {
                return Array.isArray(t) || ArrayBuffer.isView(t) ? "array" : typeof t
            }
            class u {
                constructor({
                    name: t,
                    vs: e,
                    fs: n,
                    dependencies: r = [],
                    uniforms: o,
                    getUniforms: s,
                    deprecations: u = [],
                    defines: c = {},
                    inject: l = {},
                    vertexShader: f,
                    fragmentShader: h
                }) {
                    (0, i.Z)("string" === typeof t), this.name = t, this.vs = e || f, this.fs = n || h, this.getModuleUniforms = s, this.dependencies = r, this.deprecations = this._parseDeprecationDefinitions(u), this.defines = c, this.injections = function(t) {
                        const e = {
                            vs: {},
                            fs: {}
                        };
                        for (const n in t) {
                            let r = t[n];
                            const i = n.slice(0, 2);
                            "string" === typeof r && (r = {
                                order: 0,
                                injection: r
                            }), e[i][n] = r
                        }
                        return e
                    }(l), o && (this.uniforms = function(t) {
                        const e = {};
                        for (const n in t) {
                            const r = a(t[n]);
                            e[n] = r
                        }
                        return e
                    }(o))
                }
                getModuleSource(t) {
                    let e;
                    switch (t) {
                        case "vs":
                            e = this.vs || "";
                            break;
                        case "fs":
                            e = this.fs || "";
                            break;
                        default:
                            (0, i.Z)(!1)
                    }
                    return `#define MODULE_${this.name.toUpperCase().replace(/[^0-9a-z]/gi,"_")}\n${e}// END MODULE_${this.name}\n\n`
                }
                getUniforms(t, e) {
                    return this.getModuleUniforms ? this.getModuleUniforms(t, e) : this.uniforms ? this._defaultGetUniforms(t) : {}
                }
                getDefines() {
                    return this.defines
                }
                checkDeprecations(t, e) {
                    this.deprecations.forEach((n => {
                        n.regex.test(t) && (n.deprecated ? e.deprecated(n.old, n.new)() : e.removed(n.old, n.new)())
                    }))
                }
                _parseDeprecationDefinitions(t) {
                    return t.forEach((t => {
                        switch (t.type) {
                            case "function":
                                t.regex = new RegExp(`\\b${t.old}\\(`);
                                break;
                            default:
                                t.regex = new RegExp(`${t.type} ${t.old};`)
                        }
                    })), t
                }
                _defaultGetUniforms(t = {}) {
                    const e = {},
                        n = this.uniforms;
                    for (const r in n) {
                        const o = n[r];
                        r in t && !o.private ? (o.validate && (0, i.Z)(o.validate(t[r], o), `${this.name}: invalid ${r}`), e[r] = t[r]) : e[r] = o.value
                    }
                    return e
                }
            }

            function c(t) {
                return l(h(t))
            }

            function l(t) {
                const e = {},
                    n = {};
                return f({
                    modules: t,
                    level: 0,
                    moduleMap: e,
                    moduleDepth: n
                }), Object.keys(n).sort(((t, e) => n[e] - n[t])).map((t => e[t]))
            }

            function f({
                modules: t,
                level: e,
                moduleMap: n,
                moduleDepth: r
            }) {
                if (e >= 5) throw new Error("Possible loop in shader dependency graph");
                for (const i of t) n[i.name] = i, (void 0 === r[i.name] || r[i.name] < e) && (r[i.name] = e);
                for (const i of t) i.dependencies && f({
                    modules: i.dependencies,
                    level: e + 1,
                    moduleMap: n,
                    moduleDepth: r
                })
            }

            function h(t, e) {
                return t.map((t => (t instanceof u || ((0, i.Z)("string" !== typeof t, `Shader module use by name is deprecated. Import shader module '${t}' and use it directly.`), (0, i.Z)(t.name, "shader module has no name"), (t = new u(t)).dependencies = h(t.dependencies)), t)))
            }
            const d = {
                    GLSL_FRAG_DATA: ["WEBGL_draw_buffers", !0],
                    GLSL_FRAG_DEPTH: ["EXT_frag_depth", !0],
                    GLSL_DERIVATIVES: ["OES_standard_derivatives", !0],
                    GLSL_TEXTURE_LOD: ["EXT_shader_texture_lod", !0]
                },
                p = {};
            Object.keys(d).forEach((t => {
                p[t] = t
            }));
            const g = {};

            function y(t, e, n = {}) {
                const r = d[e];
                if ((0, i.Z)(r, e), ! function(t = {}) {
                        const e = "undefined" !== typeof window && window.navigator || {},
                            n = t.userAgent || e.userAgent || "",
                            r = -1 !== n.indexOf("MSIE "),
                            i = -1 !== n.indexOf("Trident/");
                        return r || i
                    }(n)) return !0;
                if (e in g) return g[e];
                const o = `#extension GL_${r[0]} : ${n.behavior||"enable"}\nvoid main(void) {}`,
                    a = t.createShader(35633);
                t.shaderSource(a, o), t.compileShader(a);
                const s = t.getShaderParameter(a, 35713);
                return t.deleteShader(a), g[e] = s, s
            }

            function v(t, e) {
                const n = d[e];
                (0, i.Z)(n, e);
                const r = function(t) {
                        return "undefined" !== typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext || Boolean(t && 2 === t._version)
                    }(t) && n[1] || n[0],
                    o = "string" === typeof r ? Boolean(t.getExtension(r)) : r;
                return (0, i.Z)(!1 === o || !0 === o), o
            }

            function m(t, e) {
                return (e = Array.isArray(e) ? e : [e]).every((e => v(t, e)))
            }
            var b = n(60827);

            function w(t) {
                return new RegExp(`\\b${t}[ \\t]+(\\w+[ \\t]+\\w+(\\[\\w+\\])?;)`, "g")
            }
            const _ = [
                    [/^(#version[ \t]+(100|300[ \t]+es))?[ \t]*\n/, "#version 300 es\n"],
                    [/\btexture(2D|2DProj|Cube)Lod(EXT)?\(/g, "textureLod("],
                    [/\btexture(2D|2DProj|Cube)(EXT)?\(/g, "texture("]
                ],
                P = [..._, [w("attribute"), "in $1"],
                    [w("varying"), "out $1"]
                ],
                E = [..._, [w("varying"), "in $1"]],
                x = [
                    [/^#version[ \t]+300[ \t]+es/, "#version 100"],
                    [/\btexture(2D|2DProj|Cube)Lod\(/g, "texture$1LodEXT("],
                    [/\btexture\(/g, "texture2D("],
                    [/\btextureLod\(/g, "texture2DLodEXT("]
                ],
                S = [...x, [w("in"), "attribute $1"],
                    [w("out"), "varying $1"]
                ],
                O = [...x, [w("in"), "varying $1"]],
                T = "gl_FragColor",
                M = /\bout[ \t]+vec4[ \t]+(\w+)[ \t]*;\n?/,
                C = /void\s+main\s*\([^)]*\)\s*\{\n?/;

            function A(t, e, n) {
                switch (e) {
                    case 300:
                        return n ? k(t, P) : function(t) {
                            const e = (t = k(t, E)).match(M);
                            if (e) {
                                const n = e[1];
                                t = t.replace(new RegExp("\\bgl_FragColor\\b", "g"), n)
                            } else {
                                const e = "fragmentColor";
                                t = t.replace(C, (t => `out vec4 ${e};\n${t}`)).replace(new RegExp("\\bgl_FragColor\\b", "g"), e)
                            }
                            return t
                        }(t);
                    case 100:
                        return n ? k(t, S) : function(t) {
                            const e = (t = k(t, O)).match(M);
                            if (e) {
                                const n = e[1];
                                t = t.replace(M, "").replace(new RegExp(`\\b${n}\\b`, "g"), T)
                            }
                            return t
                        }(t);
                    default:
                        throw new Error(`unknown GLSL version ${e}`)
                }
            }

            function k(t, e) {
                for (const [n, r] of e) t = t.replace(n, r);
                return t
            }
            const I = `\n\n${b.O_}\n\n`,
                j = {
                    [r.H]: "vertex",
                    [r.Y]: "fragment"
                };

            function L(t, {
                id: e,
                source: n,
                type: o,
                modules: a,
                defines: s = {},
                hookFunctions: u = [],
                inject: c = {},
                transpileToGLSL100: l = !1,
                prologue: f = !0,
                log: h
            }) {
                (0, i.Z)("string" === typeof n, "shader source must be a string");
                const d = o === r.H,
                    g = n.split("\n");
                let v = 100,
                    w = "",
                    _ = n;
                0 === g[0].indexOf("#version ") ? (v = 300, w = g[0], _ = g.slice(1).join("\n")) : w = `#version ${v}`;
                const P = {};
                a.forEach((t => {
                    Object.assign(P, t.getDefines())
                })), Object.assign(P, s);
                let E = f ? `${w}\n${function({id:t,source:e,type:n}){return t&&"string"===typeof t&&-1===e.indexOf("SHADER_NAME")?`\
                n# define SHADER_NAME $ {
                    t
                }
                _$ {
                    j[n]
                }\
                n\ n `:""}({id:e,source:n,type:o})}\n${function({type:t}){return`\
                n# define SHADER_TYPE_$ {
                    j[t].toUpperCase()
                }\
                n `}({type:o})}\n${function(t){switch(function(t){const e=t.getExtension("WEBGL_debug_renderer_info"),n=t.getParameter(e&&e.UNMASKED_VENDOR_WEBGL||7936),r=t.getParameter(e&&e.UNMASKED_RENDERER_WEBGL||7937);return{gpuVendor:function(t,e){return t.match(/NVIDIA/i)||e.match(/NVIDIA/i)?"NVIDIA":t.match(/INTEL/i)||e.match(/INTEL/i)?"INTEL":t.match(/AMD/i)||e.match(/AMD/i)||t.match(/ATI/i)||e.match(/ATI/i)?"AMD":"UNKNOWN GPU"}(n,r),vendor:n,renderer:r,version:t.getParameter(7938),shadingLanguageVersion:t.getParameter(35724)}}(t).gpuVendor.toLowerCase()){case"nvidia":return"#define NVIDIA_GPU\n// Nvidia optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n";case"intel":return"#define INTEL_GPU\n// Intel optimizes away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n";case"amd":return"#define AMD_GPU\n";default:return"#define DEFAULT_GPU\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\n// Intel's built-in 'tan' function doesn't have acceptable precision\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\n"}}(t)}\n${function(t,e,n){let r="#if (__VERSION__ > 120)\n\n# define FEATURE_GLSL_DERIVATIVES\n# define FEATURE_GLSL_DRAW_BUFFERS\n# define FEATURE_GLSL_FRAG_DEPTH\n# define FEATURE_GLSL_TEXTURE_LOD\n\n// DEPRECATED FLAGS, remove in v9\n# define FRAG_DEPTH\n# define DERIVATIVES\n# define DRAW_BUFFERS\n# define TEXTURE_LOD\n\n#endif // __VERSION\n";return m(t,p.GLSL_FRAG_DEPTH)&&(r+="\n// FRAG_DEPTH => gl_FragDepth is available\n#ifdef GL_EXT_frag_depth\n#extension GL_EXT_frag_depth : enable\n# define FEATURE_GLSL_FRAG_DEPTH\n# define FRAG_DEPTH\n# define gl_FragDepth gl_FragDepthEXT\n#endif\n"),m(t,p.GLSL_DERIVATIVES)&&y(t,p.GLSL_DERIVATIVES)&&(r+="\n// DERIVATIVES => dxdF, dxdY and fwidth are available\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n# define FEATURE_GLSL_DERIVATIVES\n# define DERIVATIVES\n#endif\n"),m(t,p.GLSL_FRAG_DATA)&&y(t,p.GLSL_FRAG_DATA,{behavior:"require"})&&(r+="\n// DRAW_BUFFERS => gl_FragData[] is available\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers : require\n#define FEATURE_GLSL_DRAW_BUFFERS\n#define DRAW_BUFFERS\n#endif\n"),m(t,p.GLSL_TEXTURE_LOD)&&(r+="// TEXTURE_LOD => texture2DLod etc are available\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n\n# define FEATURE_GLSL_TEXTURE_LOD\n# define TEXTURE_LOD\n\n#endif\n"),r}(t)}\n${function(t={}){let e=0,n="";for(const r in t){0===e&&(n+="\n// APPLICATION DEFINES\n"),e++;const i=t[r];(i||Number.isFinite(i))&&(n+=`#
                define $ {
                    r.toUpperCase()
                }
                $ {
                    t[r]
                }\
                n `)}0===e&&(n+="\n");return n}(P)}\n${d?"":"precision highp float;\n\n"}\n`: `${w}\n`;
                const x = function(t) {
                        const e = {
                            vs: {},
                            fs: {}
                        };
                        return t.forEach((t => {
                            let n;
                            "string" !== typeof t ? (n = t, t = n.hook) : n = {}, t = t.trim();
                            const [r, i] = t.split(":"), o = t.replace(/\(.+/, "");
                            e[r][o] = Object.assign(n, {
                                signature: i
                            })
                        })), e
                    }(u),
                    S = {},
                    O = {},
                    T = {};
                for (const r in c) {
                    const t = "string" === typeof c[r] ? {
                            injection: c[r],
                            order: 0
                        } : c[r],
                        e = r.match(/^(v|f)s:(#)?([\w-]+)$/);
                    if (e) {
                        const n = e[2],
                            i = e[3];
                        n ? "decl" === i ? O[r] = [t] : T[r] = [t] : S[r] = [t]
                    } else T[r] = [t]
                }
                for (const r of a) {
                    h && r.checkDeprecations(_, h);
                    E += r.getModuleSource(o, v);
                    const t = r.injections[o];
                    for (const e in t) {
                        const n = e.match(/^(v|f)s:#([\w-]+)$/);
                        if (n) {
                            const r = "decl" === n[2] ? O : T;
                            r[e] = r[e] || [], r[e].push(t[e])
                        } else S[e] = S[e] || [], S[e].push(t[e])
                    }
                }
                return E += I, E = (0, b.ZP)(E, o, O), E += function(t, e) {
                    let n = "";
                    for (const r in t) {
                        const i = t[r];
                        if (n += `void ${i.signature} {\n`, i.header && (n += `  ${i.header}`), e[r]) {
                            const t = e[r];
                            t.sort(((t, e) => t.order - e.order));
                            for (const e of t) n += `  ${e.injection}\n`
                        }
                        i.footer && (n += `  ${i.footer}`), n += "}\n"
                    }
                    return n
                }(x[o], S), E += _, E = (0, b.ZP)(E, o, T), E = A(E, l ? 100 : v, d), E
            }

            function R(t) {
                return function(e) {
                    const n = {};
                    for (const r of t) {
                        const t = r.getUniforms(e, n);
                        Object.assign(n, t)
                    }
                    return n
                }
            }
            var D = n(75433);
            class F {
                static getDefaultProgramManager(t) {
                    return t.luma = t.luma || {}, t.luma.defaultProgramManager = t.luma.defaultProgramManager || new F(t), t.luma.defaultProgramManager
                }
                constructor(t) {
                    this.gl = t, this._programCache = {}, this._getUniforms = {}, this._registeredModules = {}, this._hookFunctions = [], this._defaultModules = [], this._hashes = {}, this._hashCounter = 0, this.stateHash = 0, this._useCounts = {}
                }
                addDefaultModule(t) {
                    this._defaultModules.find((e => e.name === t.name)) || this._defaultModules.push(t), this.stateHash++
                }
                removeDefaultModule(t) {
                    const e = "string" === typeof t ? t : t.name;
                    this._defaultModules = this._defaultModules.filter((t => t.name !== e)), this.stateHash++
                }
                addShaderHook(t, e) {
                    e && (t = Object.assign(e, {
                        hook: t
                    })), this._hookFunctions.push(t), this.stateHash++
                }
                get(t = {}) {
                    const {
                        vs: e = "",
                        fs: n = "",
                        defines: i = {},
                        inject: o = {},
                        varyings: a = [],
                        bufferMode: s = 35981,
                        transpileToGLSL100: u = !1
                    } = t, l = this._getModuleList(t.modules), f = this._getHash(e), h = this._getHash(n), d = l.map((t => this._getHash(t.name))).sort(), p = a.map((t => this._getHash(t))), g = Object.keys(i).sort(), y = Object.keys(o).sort(), v = [], m = [];
                    for (const r of g) v.push(this._getHash(r)), v.push(this._getHash(i[r]));
                    for (const r of y) m.push(this._getHash(r)), m.push(this._getHash(o[r]));
                    const b = `${f}/${h}D${v.join("/")}M${d.join("/")}I${m.join("/")}V${p.join("/")}H${this.stateHash}B${s}${u?"T":""}`;
                    if (!this._programCache[b]) {
                        const t = function(t, e) {
                            const {
                                vs: n,
                                fs: i
                            } = e, o = c(e.modules || []);
                            return {
                                gl: t,
                                vs: L(t, Object.assign({}, e, {
                                    source: n,
                                    type: r.H,
                                    modules: o
                                })),
                                fs: L(t, Object.assign({}, e, {
                                    source: i,
                                    type: r.Y,
                                    modules: o
                                })),
                                getUniforms: R(o)
                            }
                        }(this.gl, {
                            vs: e,
                            fs: n,
                            modules: l,
                            inject: o,
                            defines: i,
                            hookFunctions: this._hookFunctions,
                            transpileToGLSL100: u
                        });
                        this._programCache[b] = new D.Z(this.gl, {
                            hash: b,
                            vs: t.vs,
                            fs: t.fs,
                            varyings: a,
                            bufferMode: s
                        }), this._getUniforms[b] = t.getUniforms || (t => {}), this._useCounts[b] = 0
                    }
                    return this._useCounts[b]++, this._programCache[b]
                }
                getUniforms(t) {
                    return this._getUniforms[t.hash] || null
                }
                release(t) {
                    const e = t.hash;
                    this._useCounts[e]--, 0 === this._useCounts[e] && (this._programCache[e].delete(), delete this._programCache[e], delete this._getUniforms[e], delete this._useCounts[e])
                }
                _getHash(t) {
                    return void 0 === this._hashes[t] && (this._hashes[t] = this._hashCounter++), this._hashes[t]
                }
                _getModuleList(t = []) {
                    const e = new Array(this._defaultModules.length + t.length),
                        n = {};
                    let r = 0;
                    for (let i = 0, o = this._defaultModules.length; i < o; ++i) {
                        const t = this._defaultModules[i],
                            o = t.name;
                        e[r++] = t, n[o] = !0
                    }
                    for (let i = 0, o = t.length; i < o; ++i) {
                        const o = t[i],
                            a = o.name;
                        n[a] || (e[r++] = o, n[a] = !0)
                    }
                    return e.length = r, e
                }
            }
        },
        1418: function(t, e, n) {
            "use strict";
            n.d(e, {
                KQ: function() {
                    return l
                },
                JD: function() {
                    return c
                },
                s9: function() {
                    return Q
                },
                JY: function() {
                    return Y
                },
                w: function() {
                    return W
                },
                vd: function() {
                    return u
                },
                yW: function() {
                    return tt
                },
                UF: function() {
                    return a
                },
                D0: function() {
                    return s
                },
                cM: function() {
                    return r
                },
                kL: function() {
                    return V
                },
                aQ: function() {
                    return et
                },
                dR: function() {
                    return Z
                },
                s8: function() {
                    return H
                }
            });
            const r = new(n(65028).Z)({
                id: "luma.gl"
            });

            function i(t, e) {
                if (!t) throw new Error(e || "luma.gl: assertion failed.")
            }
            const o = "Invalid WebGLRenderingContext";

            function a(t) {
                return "undefined" !== typeof WebGLRenderingContext && t instanceof WebGLRenderingContext || ("undefined" !== typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext || Boolean(t && Number.isFinite(t._version)))
            }

            function s(t) {
                return "undefined" !== typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext || Boolean(t && 2 === t._version)
            }

            function u(t) {
                return s(t) ? t : null
            }

            function c(t) {
                return i(a(t), o), t
            }

            function l(t) {
                return i(s(t), "Requires WebGL2"), t
            }
            var f = n(89718);
            const h = {};

            function d(t, e) {
                var n;
                h[t] = !0, void 0 !== e && (n = e, f.CO.console && f.CO.console.error && f.CO.console.error(n))
            }
            const p = function t(e) {
                const n = e.gl;
                this.ext = e, this.isAlive = !0, this.hasBeenBound = !1, this.elementArrayBuffer = null, this.attribs = new Array(e.maxVertexAttribs);
                for (let r = 0; r < this.attribs.length; r++) {
                    const e = new t.VertexAttrib(n);
                    this.attribs[r] = e
                }
                this.maxAttrib = 0
            };
            (p.VertexAttrib = function(t) {
                this.enabled = !1, this.buffer = null, this.size = 4, this.type = 5126, this.normalized = !1, this.stride = 16, this.offset = 0, this.cached = "", this.recache()
            }).prototype.recache = function() {
                this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(":")
            };
            const g = function(t) {
                const e = this;
                this.gl = t,
                    function(t) {
                        const e = t.getError;
                        t.getError = function() {
                            let n;
                            do {
                                n = e.apply(t), 0 !== n && (h[n] = !0)
                            } while (0 !== n);
                            for (n in h)
                                if (h[n]) return delete h[n], parseInt(n, 10);
                            return 0
                        }
                    }(t);
                const n = this.original = {
                    getParameter: t.getParameter,
                    enableVertexAttribArray: t.enableVertexAttribArray,
                    disableVertexAttribArray: t.disableVertexAttribArray,
                    bindBuffer: t.bindBuffer,
                    getVertexAttrib: t.getVertexAttrib,
                    vertexAttribPointer: t.vertexAttribPointer
                };
                t.getParameter = function(t) {
                    return t === e.VERTEX_ARRAY_BINDING_OES ? e.currentVertexArrayObject === e.defaultVertexArrayObject ? null : e.currentVertexArrayObject : n.getParameter.apply(this, arguments)
                }, t.enableVertexAttribArray = function(t) {
                    const r = e.currentVertexArrayObject;
                    r.maxAttrib = Math.max(r.maxAttrib, t);
                    const i = r.attribs[t];
                    return i.enabled = !0, n.enableVertexAttribArray.apply(this, arguments)
                }, t.disableVertexAttribArray = function(t) {
                    const r = e.currentVertexArrayObject;
                    r.maxAttrib = Math.max(r.maxAttrib, t);
                    const i = r.attribs[t];
                    return i.enabled = !1, n.disableVertexAttribArray.apply(this, arguments)
                }, t.bindBuffer = function(t, r) {
                    switch (t) {
                        case 34962:
                            e.currentArrayBuffer = r;
                            break;
                        case 34963:
                            e.currentVertexArrayObject.elementArrayBuffer = r
                    }
                    return n.bindBuffer.apply(this, arguments)
                }, t.getVertexAttrib = function(t, r) {
                    const i = e.currentVertexArrayObject,
                        o = i.attribs[t];
                    switch (r) {
                        case 34975:
                            return o.buffer;
                        case 34338:
                            return o.enabled;
                        case 34339:
                            return o.size;
                        case 34340:
                            return o.stride;
                        case 34341:
                            return o.type;
                        case 34922:
                            return o.normalized;
                        default:
                            return n.getVertexAttrib.apply(this, arguments)
                    }
                }, t.vertexAttribPointer = function(t, r, i, o, a, s) {
                    const u = e.currentVertexArrayObject;
                    u.maxAttrib = Math.max(u.maxAttrib, t);
                    const c = u.attribs[t];
                    return c.buffer = e.currentArrayBuffer, c.size = r, c.type = i, c.normalized = o, c.stride = a, c.offset = s, c.recache(), n.vertexAttribPointer.apply(this, arguments)
                }, t.instrumentExtension && t.instrumentExtension(this, "OES_vertex_array_object"), t.canvas && t.canvas.addEventListener("webglcontextrestored", (() => {
                    var t;
                    t = "OESVertexArrayObject emulation library context restored", f.CO.console && f.CO.console.log && f.CO.console.log(t), e.reset_()
                }), !0), this.reset_()
            };
            g.prototype.VERTEX_ARRAY_BINDING_OES = 34229, g.prototype.reset_ = function() {
                if (void 0 !== this.vertexArrayObjects)
                    for (let e = 0; e < this.vertexArrayObjects.length; ++e) this.vertexArrayObjects.isAlive = !1;
                const t = this.gl;
                this.maxVertexAttribs = t.getParameter(34921), this.defaultVertexArrayObject = new p(this), this.currentVertexArrayObject = null, this.currentArrayBuffer = null, this.vertexArrayObjects = [this.defaultVertexArrayObject], this.bindVertexArrayOES(null)
            }, g.prototype.createVertexArrayOES = function() {
                const t = new p(this);
                return this.vertexArrayObjects.push(t), t
            }, g.prototype.deleteVertexArrayOES = function(t) {
                t.isAlive = !1, this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(t), 1), this.currentVertexArrayObject === t && this.bindVertexArrayOES(null)
            }, g.prototype.isVertexArrayOES = function(t) {
                return !!(t && t instanceof p && t.hasBeenBound && t.ext === this)
            }, g.prototype.bindVertexArrayOES = function(t) {
                const e = this.gl;
                if (t && !t.isAlive) return void d(1282, "bindVertexArrayOES: attempt to bind deleted arrayObject");
                const n = this.original,
                    r = this.currentVertexArrayObject;
                this.currentVertexArrayObject = t || this.defaultVertexArrayObject, this.currentVertexArrayObject.hasBeenBound = !0;
                const i = this.currentVertexArrayObject;
                if (r === i) return;
                r && i.elementArrayBuffer === r.elementArrayBuffer || n.bindBuffer.call(e, 34963, i.elementArrayBuffer);
                let o = this.currentArrayBuffer;
                const a = Math.max(r ? r.maxAttrib : 0, i.maxAttrib);
                for (let s = 0; s <= a; s++) {
                    const t = i.attribs[s],
                        a = r ? r.attribs[s] : null;
                    if (r && t.enabled === a.enabled || (t.enabled ? n.enableVertexAttribArray.call(e, s) : n.disableVertexAttribArray.call(e, s)), t.enabled) {
                        let i = !1;
                        r && t.buffer === a.buffer || (o !== t.buffer && (n.bindBuffer.call(e, 34962, t.buffer), o = t.buffer), i = !0), (i || t.cached !== a.cached) && n.vertexAttribPointer.call(e, s, t.size, t.type, t.normalized, t.stride, t.offset)
                    }
                }
                this.currentArrayBuffer !== o && n.bindBuffer.call(e, 34962, this.currentArrayBuffer)
            };
            const y = "OES_element_index",
                v = "WEBGL_draw_buffers",
                m = "WEBGL_debug_renderer_info",
                b = t => s(t) ? void 0 : 0,
                w = {
                    3074: t => s(t) ? void 0 : 36064,
                    35723: t => s(t) ? void 0 : 4352,
                    35977: b,
                    32937: b,
                    36795: (t, e) => {
                        const n = s(t) ? t.getExtension("EXT_disjoint_timer_query_webgl2") : t.getExtension("EXT_disjoint_timer_query");
                        return n && n.GPU_DISJOINT_EXT ? e(n.GPU_DISJOINT_EXT) : 0
                    },
                    37445: (t, e) => {
                        const n = t.getExtension(m);
                        return e(n && n.UNMASKED_VENDOR_WEBGL || 7936)
                    },
                    37446: (t, e) => {
                        const n = t.getExtension(m);
                        return e(n && n.UNMASKED_RENDERER_WEBGL || 7937)
                    },
                    34047: (t, e) => {
                        const n = t.luma.extensions.EXT_texture_filter_anisotropic;
                        return n ? e(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1
                    },
                    32883: b,
                    35071: b,
                    37447: b,
                    36063: (t, e) => {
                        if (!s(t)) {
                            const n = t.getExtension(v);
                            return n ? e(n.MAX_COLOR_ATTACHMENTS_WEBGL) : 0
                        }
                    },
                    35379: b,
                    35374: b,
                    35377: b,
                    34852: t => {
                        if (!s(t)) {
                            const e = t.getExtension(v);
                            return e ? e.MAX_DRAW_BUFFERS_WEBGL : 0
                        }
                    },
                    36203: t => t.getExtension(y) ? 2147483647 : 65535,
                    33001: t => t.getExtension(y) ? 16777216 : 65535,
                    33e3: t => 16777216,
                    37157: b,
                    35373: b,
                    35657: b,
                    36183: b,
                    37137: b,
                    34045: b,
                    35978: b,
                    35979: b,
                    35968: b,
                    35376: b,
                    35375: b,
                    35659: b,
                    37154: b,
                    35371: b,
                    35658: b,
                    35076: b,
                    35077: b,
                    35380: b
                };
            const _ = "ANGLE_instanced_arrays";
            const P = {
                    OES_vertex_array_object: {
                        meta: {
                            suffix: "OES"
                        },
                        createVertexArray: () => {
                            i(!1, "VertexArray requires WebGL2 or OES_vertex_array_object extension")
                        },
                        deleteVertexArray: () => {},
                        bindVertexArray: () => {},
                        isVertexArray: () => !1
                    },
                    [_]: {
                        meta: {
                            suffix: "ANGLE"
                        },
                        vertexAttribDivisor(t, e) {
                            i(0 === e, "WebGL instanced rendering not supported")
                        },
                        drawElementsInstanced: () => {},
                        drawArraysInstanced: () => {}
                    },
                    WEBGL_draw_buffers: {
                        meta: {
                            suffix: "WEBGL"
                        },
                        drawBuffers: () => {
                            i(!1)
                        }
                    },
                    EXT_disjoint_timer_query: {
                        meta: {
                            suffix: "EXT"
                        },
                        createQuery: () => {
                            i(!1)
                        },
                        deleteQuery: () => {
                            i(!1)
                        },
                        beginQuery: () => {
                            i(!1)
                        },
                        endQuery: () => {},
                        getQuery(t, e) {
                            return this.getQueryObject(t, e)
                        },
                        getQueryParameter(t, e) {
                            return this.getQueryObject(t, e)
                        },
                        getQueryObject: () => {}
                    }
                },
                E = {
                    readBuffer: (t, e, n) => {
                        s(t) && e(n)
                    },
                    getVertexAttrib: (t, e, n, r) => {
                        const {
                            webgl2: i,
                            ext: o
                        } = function(t, e) {
                            return {
                                webgl2: s(t),
                                ext: t.getExtension(e)
                            }
                        }(t, _);
                        let a;
                        switch (r) {
                            case 35069:
                                a = !!i && void 0;
                                break;
                            case 35070:
                                a = i || o ? void 0 : 0
                        }
                        return void 0 !== a ? a : e(n, r)
                    },
                    getProgramParameter: (t, e, n, r) => {
                        if (!s(t)) switch (r) {
                            case 35967:
                                return 35981;
                            case 35971:
                            case 35382:
                                return 0
                        }
                        return e(n, r)
                    },
                    getInternalformatParameter: (t, e, n, r, i) => {
                        if (!s(t)) switch (i) {
                            case 32937:
                                return new Int32Array([0])
                        }
                        return t.getInternalformatParameter(n, r, i)
                    },
                    getTexParameter(t, e, n, r) {
                        switch (r) {
                            case 34046:
                                const {
                                    extensions: e
                                } = t.luma, n = e.EXT_texture_filter_anisotropic;
                                r = n && n.TEXTURE_MAX_ANISOTROPY_EXT || 34046
                        }
                        return e(n, r)
                    },
                    getParameter: function(t, e, n) {
                        const r = w[n],
                            i = "function" === typeof r ? r(t, e, n) : r;
                        return void 0 !== i ? i : e(n)
                    },
                    hint: (t, e, n, r) => e(n, r)
                };

            function x(t, {
                extension: e,
                target: n,
                target2: r
            }) {
                const o = P[e];
                i(o);
                const {
                    meta: a = {}
                } = o, {
                    suffix: s = ""
                } = a, u = t.getExtension(e);
                for (const i of Object.keys(o)) {
                    const e = `${i}${s}`;
                    let a = null;
                    "meta" === i || "function" === typeof t[i] || (u && "function" === typeof u[e] ? a = (...t) => u[e](...t) : "function" === typeof o[i] && (a = o[i].bind(n))), a && (n[i] = a, r[i] = a)
                }
            }("undefined" !== typeof n.g ? n.g : window).polyfillContext = function(t) {
                t.luma = t.luma || {};
                const {
                    luma: e
                } = t;
                return e.polyfilled || (! function(t) {
                    if ("function" === typeof t.createVertexArray) return;
                    const e = t.getSupportedExtensions;
                    t.getSupportedExtensions = function() {
                        const t = e.call(this) || [];
                        return t.indexOf("OES_vertex_array_object") < 0 && t.push("OES_vertex_array_object"), t
                    };
                    const n = t.getExtension;
                    t.getExtension = function(e) {
                        return n.call(this, e) || ("OES_vertex_array_object" !== e ? null : (t.__OESVertexArrayObject || (this.__OESVertexArrayObject = new g(this)), this.__OESVertexArrayObject))
                    }
                }(t), function(t) {
                    t.luma.extensions = {};
                    const e = t.getSupportedExtensions() || [];
                    for (const n of e) t.luma[n] = t.getExtension(n)
                }(t), function(t, e) {
                    for (const n of Object.getOwnPropertyNames(e)) "overrides" !== n && x(t, {
                        extension: n,
                        target: t.luma,
                        target2: t
                    })
                }(t, P), function(t, {
                    target: e,
                    target2: n
                }) {
                    Object.keys(E).forEach((r => {
                        if ("function" === typeof E[r]) {
                            const i = t[r] ? t[r].bind(t) : () => {},
                                o = E[r].bind(null, t, i);
                            e[r] = o, n[r] = o
                        }
                    }))
                }(t, {
                    target: e,
                    target2: t
                }), e.polyfilled = !0), t
            };
            const S = {
                    3042: !1,
                    32773: new Float32Array([0, 0, 0, 0]),
                    32777: 32774,
                    34877: 32774,
                    32969: 1,
                    32968: 0,
                    32971: 1,
                    32970: 0,
                    3106: new Float32Array([0, 0, 0, 0]),
                    3107: [!0, !0, !0, !0],
                    2884: !1,
                    2885: 1029,
                    2929: !1,
                    2931: 1,
                    2932: 513,
                    2928: new Float32Array([0, 1]),
                    2930: !0,
                    3024: !0,
                    36006: null,
                    2886: 2305,
                    33170: 4352,
                    2849: 1,
                    32823: !1,
                    32824: 0,
                    10752: 0,
                    32938: 1,
                    32939: !1,
                    3089: !1,
                    3088: new Int32Array([0, 0, 1024, 1024]),
                    2960: !1,
                    2961: 0,
                    2968: 4294967295,
                    36005: 4294967295,
                    2962: 519,
                    2967: 0,
                    2963: 4294967295,
                    34816: 519,
                    36003: 0,
                    36004: 4294967295,
                    2964: 7680,
                    2965: 7680,
                    2966: 7680,
                    34817: 7680,
                    34818: 7680,
                    34819: 7680,
                    2978: [0, 0, 1024, 1024],
                    3333: 4,
                    3317: 4,
                    37440: !1,
                    37441: !1,
                    37443: 37444,
                    35723: 4352,
                    36010: null,
                    35977: !1,
                    3330: 0,
                    3332: 0,
                    3331: 0,
                    3314: 0,
                    32878: 0,
                    3316: 0,
                    3315: 0,
                    32877: 0
                },
                O = (t, e, n) => e ? t.enable(n) : t.disable(n),
                T = (t, e, n) => t.hint(n, e),
                M = (t, e, n) => t.pixelStorei(n, e);

            function C(t) {
                return Array.isArray(t) || ArrayBuffer.isView(t)
            }
            const A = {
                3042: O,
                32773: (t, e) => t.blendColor(...e),
                32777: "blendEquation",
                34877: "blendEquation",
                32969: "blendFunc",
                32968: "blendFunc",
                32971: "blendFunc",
                32970: "blendFunc",
                3106: (t, e) => t.clearColor(...e),
                3107: (t, e) => t.colorMask(...e),
                2884: O,
                2885: (t, e) => t.cullFace(e),
                2929: O,
                2931: (t, e) => t.clearDepth(e),
                2932: (t, e) => t.depthFunc(e),
                2928: (t, e) => t.depthRange(...e),
                2930: (t, e) => t.depthMask(e),
                3024: O,
                35723: T,
                36006: (t, e) => {
                    const n = s(t) ? 36009 : 36160;
                    return t.bindFramebuffer(n, e)
                },
                2886: (t, e) => t.frontFace(e),
                33170: T,
                2849: (t, e) => t.lineWidth(e),
                32823: O,
                32824: "polygonOffset",
                10752: "polygonOffset",
                35977: O,
                32938: "sampleCoverage",
                32939: "sampleCoverage",
                3089: O,
                3088: (t, e) => t.scissor(...e),
                2960: O,
                2961: (t, e) => t.clearStencil(e),
                2968: (t, e) => t.stencilMaskSeparate(1028, e),
                36005: (t, e) => t.stencilMaskSeparate(1029, e),
                2962: "stencilFuncFront",
                2967: "stencilFuncFront",
                2963: "stencilFuncFront",
                34816: "stencilFuncBack",
                36003: "stencilFuncBack",
                36004: "stencilFuncBack",
                2964: "stencilOpFront",
                2965: "stencilOpFront",
                2966: "stencilOpFront",
                34817: "stencilOpBack",
                34818: "stencilOpBack",
                34819: "stencilOpBack",
                2978: (t, e) => t.viewport(...e),
                3333: M,
                3317: M,
                37440: M,
                37441: M,
                37443: M,
                3330: M,
                3332: M,
                3331: M,
                36010: (t, e) => t.bindFramebuffer(36008, e),
                3314: M,
                32878: M,
                3316: M,
                3315: M,
                32877: M,
                framebuffer: (t, e) => {
                    const n = e && "handle" in e ? e.handle : e;
                    return t.bindFramebuffer(36160, n)
                },
                blend: (t, e) => e ? t.enable(3042) : t.disable(3042),
                blendColor: (t, e) => t.blendColor(...e),
                blendEquation: (t, e) => {
                    e = C(e) ? e : [e, e], t.blendEquationSeparate(...e)
                },
                blendFunc: (t, e) => {
                    e = C(e) && 2 === e.length ? [...e, ...e] : e, t.blendFuncSeparate(...e)
                },
                clearColor: (t, e) => t.clearColor(...e),
                clearDepth: (t, e) => t.clearDepth(e),
                clearStencil: (t, e) => t.clearStencil(e),
                colorMask: (t, e) => t.colorMask(...e),
                cull: (t, e) => e ? t.enable(2884) : t.disable(2884),
                cullFace: (t, e) => t.cullFace(e),
                depthTest: (t, e) => e ? t.enable(2929) : t.disable(2929),
                depthFunc: (t, e) => t.depthFunc(e),
                depthMask: (t, e) => t.depthMask(e),
                depthRange: (t, e) => t.depthRange(...e),
                dither: (t, e) => e ? t.enable(3024) : t.disable(3024),
                derivativeHint: (t, e) => {
                    t.hint(35723, e)
                },
                frontFace: (t, e) => t.frontFace(e),
                mipmapHint: (t, e) => t.hint(33170, e),
                lineWidth: (t, e) => t.lineWidth(e),
                polygonOffsetFill: (t, e) => e ? t.enable(32823) : t.disable(32823),
                polygonOffset: (t, e) => t.polygonOffset(...e),
                sampleCoverage: (t, e) => t.sampleCoverage(...e),
                scissorTest: (t, e) => e ? t.enable(3089) : t.disable(3089),
                scissor: (t, e) => t.scissor(...e),
                stencilTest: (t, e) => e ? t.enable(2960) : t.disable(2960),
                stencilMask: (t, e) => {
                    e = C(e) ? e : [e, e];
                    const [n, r] = e;
                    t.stencilMaskSeparate(1028, n), t.stencilMaskSeparate(1029, r)
                },
                stencilFunc: (t, e) => {
                    e = C(e) && 3 === e.length ? [...e, ...e] : e;
                    const [n, r, i, o, a, s] = e;
                    t.stencilFuncSeparate(1028, n, r, i), t.stencilFuncSeparate(1029, o, a, s)
                },
                stencilOp: (t, e) => {
                    e = C(e) && 3 === e.length ? [...e, ...e] : e;
                    const [n, r, i, o, a, s] = e;
                    t.stencilOpSeparate(1028, n, r, i), t.stencilOpSeparate(1029, o, a, s)
                },
                viewport: (t, e) => t.viewport(...e)
            };

            function k(t, e, n) {
                return void 0 !== e[t] ? e[t] : n[t]
            }
            const I = {
                    blendEquation: (t, e, n) => t.blendEquationSeparate(k(32777, e, n), k(34877, e, n)),
                    blendFunc: (t, e, n) => t.blendFuncSeparate(k(32969, e, n), k(32968, e, n), k(32971, e, n), k(32970, e, n)),
                    polygonOffset: (t, e, n) => t.polygonOffset(k(32824, e, n), k(10752, e, n)),
                    sampleCoverage: (t, e, n) => t.sampleCoverage(k(32938, e, n), k(32939, e, n)),
                    stencilFuncFront: (t, e, n) => t.stencilFuncSeparate(1028, k(2962, e, n), k(2967, e, n), k(2963, e, n)),
                    stencilFuncBack: (t, e, n) => t.stencilFuncSeparate(1029, k(34816, e, n), k(36003, e, n), k(36004, e, n)),
                    stencilOpFront: (t, e, n) => t.stencilOpSeparate(1028, k(2964, e, n), k(2965, e, n), k(2966, e, n)),
                    stencilOpBack: (t, e, n) => t.stencilOpSeparate(1029, k(34817, e, n), k(34818, e, n), k(34819, e, n))
                },
                j = {
                    enable: (t, e) => t({
                        [e]: !0
                    }),
                    disable: (t, e) => t({
                        [e]: !1
                    }),
                    pixelStorei: (t, e, n) => t({
                        [e]: n
                    }),
                    hint: (t, e, n) => t({
                        [e]: n
                    }),
                    bindFramebuffer: (t, e, n) => {
                        switch (e) {
                            case 36160:
                                return t({
                                    36006: n,
                                    36010: n
                                });
                            case 36009:
                                return t({
                                    36006: n
                                });
                            case 36008:
                                return t({
                                    36010: n
                                });
                            default:
                                return null
                        }
                    },
                    blendColor: (t, e, n, r, i) => t({
                        32773: new Float32Array([e, n, r, i])
                    }),
                    blendEquation: (t, e) => t({
                        32777: e,
                        34877: e
                    }),
                    blendEquationSeparate: (t, e, n) => t({
                        32777: e,
                        34877: n
                    }),
                    blendFunc: (t, e, n) => t({
                        32969: e,
                        32968: n,
                        32971: e,
                        32970: n
                    }),
                    blendFuncSeparate: (t, e, n, r, i) => t({
                        32969: e,
                        32968: n,
                        32971: r,
                        32970: i
                    }),
                    clearColor: (t, e, n, r, i) => t({
                        3106: new Float32Array([e, n, r, i])
                    }),
                    clearDepth: (t, e) => t({
                        2931: e
                    }),
                    clearStencil: (t, e) => t({
                        2961: e
                    }),
                    colorMask: (t, e, n, r, i) => t({
                        3107: [e, n, r, i]
                    }),
                    cullFace: (t, e) => t({
                        2885: e
                    }),
                    depthFunc: (t, e) => t({
                        2932: e
                    }),
                    depthRange: (t, e, n) => t({
                        2928: new Float32Array([e, n])
                    }),
                    depthMask: (t, e) => t({
                        2930: e
                    }),
                    frontFace: (t, e) => t({
                        2886: e
                    }),
                    lineWidth: (t, e) => t({
                        2849: e
                    }),
                    polygonOffset: (t, e, n) => t({
                        32824: e,
                        10752: n
                    }),
                    sampleCoverage: (t, e, n) => t({
                        32938: e,
                        32939: n
                    }),
                    scissor: (t, e, n, r, i) => t({
                        3088: new Int32Array([e, n, r, i])
                    }),
                    stencilMask: (t, e) => t({
                        2968: e,
                        36005: e
                    }),
                    stencilMaskSeparate: (t, e, n) => t({
                        [1028 === e ? 2968 : 36005]: n
                    }),
                    stencilFunc: (t, e, n, r) => t({
                        2962: e,
                        2967: n,
                        2963: r,
                        34816: e,
                        36003: n,
                        36004: r
                    }),
                    stencilFuncSeparate: (t, e, n, r, i) => t({
                        [1028 === e ? 2962 : 34816]: n,
                        [1028 === e ? 2967 : 36003]: r,
                        [1028 === e ? 2963 : 36004]: i
                    }),
                    stencilOp: (t, e, n, r) => t({
                        2964: e,
                        2965: n,
                        2966: r,
                        34817: e,
                        34818: n,
                        34819: r
                    }),
                    stencilOpSeparate: (t, e, n, r, i) => t({
                        [1028 === e ? 2964 : 34817]: n,
                        [1028 === e ? 2965 : 34818]: r,
                        [1028 === e ? 2966 : 34819]: i
                    }),
                    viewport: (t, e, n, r, i) => t({
                        2978: [e, n, r, i]
                    })
                },
                L = (t, e) => t.isEnabled(e),
                R = {
                    3042: L,
                    2884: L,
                    2929: L,
                    3024: L,
                    32823: L,
                    32926: L,
                    32928: L,
                    3089: L,
                    2960: L,
                    35977: L
                };

            function D(t) {
                for (const e in t) return !1;
                return !0
            }

            function F(t, e) {
                if (t === e) return !0;
                const n = Array.isArray(t) || ArrayBuffer.isView(t),
                    r = Array.isArray(e) || ArrayBuffer.isView(e);
                if (n && r && t.length === e.length) {
                    for (let n = 0; n < t.length; ++n)
                        if (t[n] !== e[n]) return !1;
                    return !0
                }
                return !1
            }

            function N(t, e) {
                const n = t[e].bind(t);
                t[e] = function(...e) {
                    const r = e[0];
                    return r in t.state.cache && t.state.enable ? t.state.cache[r] : n(...e)
                }, Object.defineProperty(t[e], "name", {
                    value: `${e}-from-cache`,
                    configurable: !1
                })
            }

            function z(t, e, n) {
                const r = t[e].bind(t);
                t[e] = function(...e) {
                    const {
                        valueChanged: i,
                        oldValue: o
                    } = n(t.state._updateCache, ...e);
                    return i && r(...e), o
                }, Object.defineProperty(t[e], "name", {
                    value: `${e}-to-cache`,
                    configurable: !1
                })
            }
            class B {
                constructor(t, {
                    copyState: e = !1,
                    log: n = (() => {})
                } = {}) {
                    this.gl = t, this.program = null, this.stateStack = [], this.enable = !0, this.cache = e ? function(t, e) {
                        if ("number" === typeof(e = e || S)) {
                            const n = e,
                                r = R[n];
                            return r ? r(t, n) : t.getParameter(n)
                        }
                        const n = Array.isArray(e) ? e : Object.keys(e),
                            r = {};
                        for (const i of n) {
                            const e = R[i];
                            r[i] = e ? e(t, Number(i)) : t.getParameter(Number(i))
                        }
                        return r
                    }(t) : Object.assign({}, S), this.log = n, this._updateCache = this._updateCache.bind(this), Object.seal(this)
                }
                push(t = {}) {
                    this.stateStack.push({})
                }
                pop() {
                    i(this.stateStack.length > 0);
                    const t = this.stateStack[this.stateStack.length - 1];
                    Z(this.gl, t), this.stateStack.pop()
                }
                _updateCache(t) {
                    let e, n = !1;
                    const r = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];
                    for (const o in t) {
                        i(void 0 !== o);
                        const a = t[o],
                            s = this.cache[o];
                        F(a, s) || (n = !0, e = s, r && !(o in r) && (r[o] = s), this.cache[o] = a)
                    }
                    return {
                        valueChanged: n,
                        oldValue: e
                    }
                }
            }

            function U(t, e = {}) {
                const {
                    enable: r = !0,
                    copyState: o
                } = e;
                if (i(void 0 !== o), !t.state) {
                    const e = "undefined" !== typeof n.g ? n.g : window,
                        {
                            polyfillContext: r
                        } = e;
                    r && r(t), t.state = new B(t, {
                            copyState: o
                        }),
                        function(t) {
                            const e = t.useProgram.bind(t);
                            t.useProgram = function(n) {
                                t.state.program !== n && (e(n), t.state.program = n)
                            }
                        }(t);
                    for (const n in j) {
                        z(t, n, j[n])
                    }
                    N(t, "getParameter"), N(t, "isEnabled")
                }
                return t.state.enable = r, t
            }

            function G(t) {
                i(t.state), t.state.pop()
            }

            function Z(t, e) {
                if (i(a(t), "setParameters requires a WebGL context"), D(e)) return;
                const n = {};
                for (const i in e) {
                    const r = Number(i),
                        o = A[i];
                    o && ("string" === typeof o ? n[o] = !0 : o(t, e[i], r))
                }
                const r = t.state && t.state.cache;
                if (r)
                    for (const i in n) {
                        (0, I[i])(t, e, r)
                    }
            }

            function V(t) {
                Z(t, S)
            }

            function H(t, e, n) {
                if (D(e)) return n(t);
                const {
                    nocatch: r = !0
                } = e;
                let i;
                if (function(t) {
                        t.state || U(t, {
                            copyState: !1
                        }), t.state.push()
                    }(t), Z(t, e), r) i = n(t), G(t);
                else try {
                    i = n(t)
                } finally {
                    G(t)
                }
                return i
            }

            function W(t) {
                const {
                    luma: e
                } = t;
                if (t.canvas && e) {
                    const {
                        clientWidth: n
                    } = e.canvasSizeInfo;
                    return n ? t.drawingBufferWidth / n : 1
                }
                return 1
            }

            function Y(t, e, n = !0) {
                return function(t, e, n, r, i) {
                    const o = q(t[0], e, n);
                    let a = $(t[1], e, r, i),
                        s = q(t[0] + 1, e, n);
                    const u = s === n - 1 ? s : s - 1;
                    let c;
                    s = $(t[1] + 1, e, r, i), i ? (s = 0 === s ? s : s + 1, c = a, a = s) : c = s === r - 1 ? s : s - 1;
                    return {
                        x: o,
                        y: a,
                        width: Math.max(u - o + 1, 1),
                        height: Math.max(c - a + 1, 1)
                    }
                }(e, W(t), t.drawingBufferWidth, t.drawingBufferHeight, n)
            }

            function q(t, e, n) {
                return Math.min(Math.round(t * e), n - 1)
            }

            function $(t, e, n, r) {
                return r ? Math.max(0, n - 1 - Math.round(t * e)) : Math.min(Math.round(t * e), n - 1)
            }
            const X = (0, f.jU)(),
                K = X && "undefined" !== typeof document,
                J = {
                    webgl2: !0,
                    webgl1: !0,
                    throwOnError: !0,
                    manageState: !0,
                    canvas: null,
                    debug: !1,
                    width: 800,
                    height: 600
                };

            function Q(t = {}) {
                i(X, "createGLContext only available in the browser.\nCreate your own headless context or use 'createHeadlessContext' from @luma.gl/test-utils"), t = Object.assign({}, J, t);
                const {
                    width: e,
                    height: n
                } = t;

                function o(e) {
                    if (t.throwOnError) throw new Error(e);
                    return console.error(e), null
                }
                let a;
                t.onError = o;
                const {
                    canvas: u
                } = t;
                return a = function(t, e) {
                    const {
                        onError: n
                    } = e;
                    let r = null;
                    const i = t => r = t.statusMessage || r;
                    t.addEventListener("webglcontextcreationerror", i, !1);
                    const {
                        webgl1: o = !0,
                        webgl2: a = !0
                    } = e;
                    let s = null;
                    a && (s = s || t.getContext("webgl2", e), s = s || t.getContext("experimental-webgl2", e));
                    o && (s = s || t.getContext("webgl", e), s = s || t.getContext("experimental-webgl", e));
                    if (t.removeEventListener("webglcontextcreationerror", i, !1), !s) return n(`Failed to create ${a&&!o?"WebGL2":"WebGL"} context: ${r||"Unknown error"}`);
                    e.onContextLost && t.addEventListener("webglcontextlost", e.onContextLost, !1);
                    e.onContextRestored && t.addEventListener("webglcontextrestored", e.onContextRestored, !1);
                    return s
                }(function({
                    canvas: t,
                    width: e = 800,
                    height: n = 600,
                    onError: r
                }) {
                    let i;
                    if ("string" === typeof t) {
                        K && "complete" === document.readyState || r(`createGLContext called on canvas '${t}' before page was loaded`), i = document.getElementById(t)
                    } else t ? i = t : (i = document.createElement("canvas"), i.id = "lumagl-canvas", i.style.width = Number.isFinite(e) ? `${e}px` : "100%", i.style.height = Number.isFinite(n) ? `${n}px` : "100%", document.body.insertBefore(i, document.body.firstChild));
                    return i
                }({
                    canvas: u,
                    width: e,
                    height: n,
                    onError: o
                }), t), a ? (a = tt(a, t), function(t) {
                    const e = s(t) ? "WebGL2" : "WebGL1",
                        n = function(t) {
                            const e = t.getParameter(7936),
                                n = t.getParameter(7937),
                                r = t.getExtension("WEBGL_debug_renderer_info"),
                                i = r && t.getParameter(r.UNMASKED_VENDOR_WEBGL || 7936),
                                o = r && t.getParameter(r.UNMASKED_RENDERER_WEBGL || 7937);
                            return {
                                vendor: i || e,
                                renderer: o || n,
                                vendorMasked: e,
                                rendererMasked: n,
                                version: t.getParameter(7938),
                                shadingLanguageVersion: t.getParameter(35724)
                            }
                        }(t),
                        i = n ? `(${n.vendor},${n.renderer})` : "",
                        o = t.debug ? " debug" : "";
                    r.info(1, `${e}${o} context ${i}`)()
                }(a), a) : null
            }

            function tt(t, e = {}) {
                if (!t || t._instrumented) return t;
                t._version = t._version || function(t) {
                    if ("undefined" !== typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext) return 2;
                    return 1
                }(t), t.luma = t.luma || {}, t.luma.canvasSizeInfo = t.luma.canvasSizeInfo || {}, e = Object.assign({}, J, e);
                const {
                    manageState: n,
                    debug: i
                } = e;
                return n && U(t, {
                    copyState: !1,
                    log: (...t) => r.log(1, ...t)()
                }), X && i && (f.CO.makeDebugContext ? (t = f.CO.makeDebugContext(t, e), r.level = Math.max(r.level, 1)) : r.warn('WebGL debug mode not activated. import "@luma.gl/debug" to enable.')()), t._instrumented = !0, t
            }

            function et(t, e = {}) {
                if (t.canvas) {
                    return void
                    function(t, e, n) {
                        let i = "width" in n ? n.width : t.canvas.clientWidth,
                            o = "height" in n ? n.height : t.canvas.clientHeight;
                        i && o || (r.log(1, "Canvas clientWidth/clientHeight is 0")(), e = 1, i = t.canvas.width || 1, o = t.canvas.height || 1);
                        t.luma = t.luma || {}, t.luma.canvasSizeInfo = t.luma.canvasSizeInfo || {};
                        const a = t.luma.canvasSizeInfo;
                        if (a.clientWidth !== i || a.clientHeight !== o || a.devicePixelRatio !== e) {
                            let n = e;
                            const a = Math.floor(i * n),
                                s = Math.floor(o * n);
                            t.canvas.width = a, t.canvas.height = s, t.drawingBufferWidth === a && t.drawingBufferHeight === s || (r.warn("Device pixel ratio clamped")(), n = Math.min(t.drawingBufferWidth / i, t.drawingBufferHeight / o), t.canvas.width = Math.floor(i * n), t.canvas.height = Math.floor(o * n)), Object.assign(t.luma.canvasSizeInfo, {
                                clientWidth: i,
                                clientHeight: o,
                                devicePixelRatio: e
                            })
                        }
                    }(t, function(t) {
                        const e = "undefined" === typeof window ? 1 : window.devicePixelRatio || 1;
                        return Number.isFinite(t) ? t <= 0 ? 1 : t : t ? e : 1
                    }(e.useDevicePixels), e)
                }
                const n = t.getExtension("STACKGL_resize_drawingbuffer");
                n && "width" in e && "height" in e && n.resize(e.width, e.height)
            }
        },
        75682: function(t, e, n) {
            "use strict";
            n.d(e, {
                H: function() {
                    return r
                },
                Y: function() {
                    return i
                }
            });
            const r = "vs",
                i = "fs"
        },
        60827: function(t, e, n) {
            "use strict";
            n.d(e, {
                O_: function() {
                    return a
                },
                Lm: function() {
                    return f
                },
                ZP: function() {
                    return l
                }
            });
            var r = n(75682),
                i = n(29047);
            const o = {
                    [r.H]: "#ifdef MODULE_LOGDEPTH\n  logdepth_adjustPosition(gl_Position);\n#endif\n",
                    [r.Y]: "#ifdef MODULE_MATERIAL\n  gl_FragColor = material_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LIGHTING\n  gl_FragColor = lighting_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_FOG\n  gl_FragColor = fog_filterColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_PICKING\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n#endif\n\n#ifdef MODULE_LOGDEPTH\n  logdepth_setFragDepth();\n#endif\n"
                },
                a = "__LUMA_INJECT_DECLARATIONS__",
                s = /void\s+main\s*\([^)]*\)\s*\{\n?/,
                u = /}\n?[^{}]*$/,
                c = [];

            function l(t, e, n, i = !1) {
                const l = e === r.H;
                for (const r in n) {
                    const e = n[r];
                    e.sort(((t, e) => t.order - e.order)), c.length = e.length;
                    for (let t = 0, n = e.length; t < n; ++t) c[t] = e[t].injection;
                    const i = `${c.join("\n")}\n`;
                    switch (r) {
                        case "vs:#decl":
                            l && (t = t.replace(a, i));
                            break;
                        case "vs:#main-start":
                            l && (t = t.replace(s, (t => t + i)));
                            break;
                        case "vs:#main-end":
                            l && (t = t.replace(u, (t => i + t)));
                            break;
                        case "fs:#decl":
                            l || (t = t.replace(a, i));
                            break;
                        case "fs:#main-start":
                            l || (t = t.replace(s, (t => t + i)));
                            break;
                        case "fs:#main-end":
                            l || (t = t.replace(u, (t => i + t)));
                            break;
                        default:
                            t = t.replace(r, (t => t + i))
                    }
                }
                return t = t.replace(a, ""), i && (t = t.replace(/\}\s*$/, (t => t + o[e]))), t
            }

            function f(t) {
                const e = {};
                return (0, i.Z)(Array.isArray(t) && t.length > 1), t.forEach((t => {
                    for (const n in t) e[n] = e[n] ? `${e[n]}\n${t[n]}` : t[n]
                })), e
            }
        },
        29047: function(t, e, n) {
            "use strict";

            function r(t, e) {
                if (!t) throw new Error(e || "shadertools: assertion failed.")
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        14072: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return u
                }
            });
            var r = n(9335),
                i = n(22525),
                o = n(82610);
            const a = {
                    offset: 0,
                    stride: 0,
                    type: 5126,
                    size: 1,
                    divisor: 0,
                    normalized: !1,
                    integer: !1
                },
                s = {
                    deprecatedProps: {
                        instanced: "divisor",
                        isInstanced: "divisor"
                    }
                };
            class u {
                static getBytesPerElement(t) {
                    return (0, r.vN)(t.type || 5126).BYTES_PER_ELEMENT
                }
                static getBytesPerVertex(t) {
                    (0, i.h)(t.size);
                    return (0, r.vN)(t.type || 5126).BYTES_PER_ELEMENT * t.size
                }
                static resolve(...t) {
                    return new u(...[a, ...t])
                }
                constructor(...t) {
                    t.forEach((t => this._assign(t))), Object.freeze(this)
                }
                toString() {
                    return JSON.stringify(this)
                }
                get BYTES_PER_ELEMENT() {
                    return u.getBytesPerElement(this)
                }
                get BYTES_PER_VERTEX() {
                    return u.getBytesPerVertex(this)
                }
                _assign(t = {}) {
                    return void 0 !== (t = (0, o.k)("Accessor", t, s)).type && (this.type = t.type, 5124 !== t.type && 5125 !== t.type || (this.integer = !0)), void 0 !== t.size && (this.size = t.size), void 0 !== t.offset && (this.offset = t.offset), void 0 !== t.stride && (this.stride = t.stride), void 0 !== t.normalized && (this.normalized = t.normalized), void 0 !== t.integer && (this.integer = t.integer), void 0 !== t.divisor && (this.divisor = t.divisor), void 0 !== t.buffer && (this.buffer = t.buffer), void 0 !== t.index && ("boolean" === typeof t.index ? this.index = t.index ? 1 : 0 : this.index = t.index), void 0 !== t.instanced && (this.divisor = t.instanced ? 1 : 0), void 0 !== t.isInstanced && (this.divisor = t.isInstanced ? 1 : 0), this
                }
            }
        },
        53478: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return h
                }
            });
            var r = n(87577),
                i = n(14072),
                o = n(9335),
                a = n(1418),
                s = n(22525),
                u = n(82610);
            const c = {
                    offset: "accessor.offset",
                    stride: "accessor.stride",
                    type: "accessor.type",
                    size: "accessor.size",
                    divisor: "accessor.divisor",
                    normalized: "accessor.normalized",
                    integer: "accessor.integer",
                    instanced: "accessor.divisor",
                    isInstanced: "accessor.divisor"
                },
                l = {
                    removedProps: {},
                    replacedProps: {
                        bytes: "byteLength"
                    },
                    deprecatedProps: c
                },
                f = {
                    removedProps: c
                };
            class h extends r.Z {
                constructor(t, e = {}) {
                    super(t, e), this.stubRemovedMethods("Buffer", "v6.0", ["layout", "setLayout", "getIndexedParameter"]), this.target = e.target || (this.gl.webgl2 ? 36662 : 34962), this.initialize(e), Object.seal(this)
                }
                getElementCount(t = this.accessor) {
                    return Math.round(this.byteLength / i.Z.getBytesPerElement(t))
                }
                getVertexCount(t = this.accessor) {
                    return Math.round(this.byteLength / i.Z.getBytesPerVertex(t))
                }
                initialize(t = {}) {
                    return ArrayBuffer.isView(t) && (t = {
                        data: t
                    }), Number.isFinite(t) && (t = {
                        byteLength: t
                    }), t = (0, u.k)("Buffer", t, l), this.usage = t.usage || 35044, this.debugData = null, this.setAccessor(Object.assign({}, t, t.accessor)), t.data ? this._setData(t.data, t.offset, t.byteLength) : this._setByteLength(t.byteLength || 0), this
                }
                setProps(t) {
                    return "accessor" in (t = (0, u.k)("Buffer", t, f)) && this.setAccessor(t.accessor), this
                }
                setAccessor(t) {
                    return delete(t = Object.assign({}, t)).buffer, this.accessor = new i.Z(t), this
                }
                reallocate(t) {
                    return t > this.byteLength ? (this._setByteLength(t), !0) : (this.bytesUsed = t, !1)
                }
                setData(t) {
                    return this.initialize(t)
                }
                subData(t) {
                    ArrayBuffer.isView(t) && (t = {
                        data: t
                    });
                    const {
                        data: e,
                        offset: n = 0,
                        srcOffset: r = 0
                    } = t, i = t.byteLength || t.length;
                    (0, s.h)(e);
                    const o = this.gl.webgl2 ? 36663 : this.target;
                    return this.gl.bindBuffer(o, this.handle), 0 !== r || void 0 !== i ? ((0, a.KQ)(this.gl), this.gl.bufferSubData(this.target, n, e, r, i)) : this.gl.bufferSubData(o, n, e), this.gl.bindBuffer(o, null), this.debugData = null, this._inferType(e), this
                }
                copyData({
                    sourceBuffer: t,
                    readOffset: e = 0,
                    writeOffset: n = 0,
                    size: r
                }) {
                    const {
                        gl: i
                    } = this;
                    return (0, a.KQ)(i), i.bindBuffer(36662, t.handle), i.bindBuffer(36663, this.handle), i.copyBufferSubData(36662, 36663, e, n, r), i.bindBuffer(36662, null), i.bindBuffer(36663, null), this.debugData = null, this
                }
                getData({
                    dstData: t = null,
                    srcByteOffset: e = 0,
                    dstOffset: n = 0,
                    length: r = 0
                } = {}) {
                    (0, a.KQ)(this.gl);
                    const i = (0, o.vN)(this.accessor.type || 5126, {
                            clamped: !1
                        }),
                        u = this._getAvailableElementCount(e),
                        c = n;
                    let l, f;
                    t ? (f = t.length, l = f - c) : (l = Math.min(u, r || u), f = c + l);
                    const h = Math.min(u, l);
                    return r = r || h, (0, s.h)(r <= h), t = t || new i(f), this.gl.bindBuffer(36662, this.handle), this.gl.getBufferSubData(36662, e, t, n, r), this.gl.bindBuffer(36662, null), t
                }
                bind({
                    target: t = this.target,
                    index: e = this.accessor && this.accessor.index,
                    offset: n = 0,
                    size: r
                } = {}) {
                    return 35345 === t || 35982 === t ? void 0 !== r ? this.gl.bindBufferRange(t, e, this.handle, n, r) : ((0, s.h)(0 === n), this.gl.bindBufferBase(t, e, this.handle)) : this.gl.bindBuffer(t, this.handle), this
                }
                unbind({
                    target: t = this.target,
                    index: e = this.accessor && this.accessor.index
                } = {}) {
                    return 35345 === t || 35982 === t ? this.gl.bindBufferBase(t, e, null) : this.gl.bindBuffer(t, null), this
                }
                getDebugData() {
                    return this.debugData ? {
                        data: this.debugData,
                        changed: !1
                    } : (this.debugData = this.getData({
                        length: Math.min(10, this.byteLength)
                    }), {
                        data: this.debugData,
                        changed: !0
                    })
                }
                invalidateDebugData() {
                    this.debugData = null
                }
                _setData(t, e = 0, n = t.byteLength + e) {
                    (0, s.h)(ArrayBuffer.isView(t)), this._trackDeallocatedMemory();
                    const r = this._getTarget();
                    this.gl.bindBuffer(r, this.handle), this.gl.bufferData(r, n, this.usage), this.gl.bufferSubData(r, e, t), this.gl.bindBuffer(r, null), this.debugData = t.slice(0, 10), this.bytesUsed = n, this._trackAllocatedMemory(n);
                    const a = (0, o.O)(t);
                    return (0, s.h)(a), this.setAccessor(new i.Z(this.accessor, {
                        type: a
                    })), this
                }
                _setByteLength(t, e = this.usage) {
                    (0, s.h)(t >= 0), this._trackDeallocatedMemory();
                    let n = t;
                    0 === t && (n = new Float32Array(0));
                    const r = this._getTarget();
                    return this.gl.bindBuffer(r, this.handle), this.gl.bufferData(r, n, e), this.gl.bindBuffer(r, null), this.usage = e, this.debugData = null, this.bytesUsed = t, this._trackAllocatedMemory(t), this
                }
                _getTarget() {
                    return this.gl.webgl2 ? 36663 : this.target
                }
                _getAvailableElementCount(t) {
                    const e = t / (0, o.vN)(this.accessor.type || 5126, {
                        clamped: !1
                    }).BYTES_PER_ELEMENT;
                    return this.getElementCount() - e
                }
                _inferType(t) {
                    this.accessor.type || this.setAccessor(new i.Z(this.accessor, {
                        type: (0, o.O)(t)
                    }))
                }
                _createHandle() {
                    return this.gl.createBuffer()
                }
                _deleteHandle() {
                    this.gl.deleteBuffer(this.handle), this._trackDeallocatedMemory()
                }
                _getParameter(t) {
                    this.gl.bindBuffer(this.target, this.handle);
                    const e = this.gl.getBufferParameter(this.target, t);
                    return this.gl.bindBuffer(this.target, null), e
                }
                get type() {
                    return a.cM.deprecated("Buffer.type", "Buffer.accessor.type")(), this.accessor.type
                }
                get bytes() {
                    return a.cM.deprecated("Buffer.bytes", "Buffer.byteLength")(), this.byteLength
                }
                setByteLength(t) {
                    return a.cM.deprecated("setByteLength", "reallocate")(), this.reallocate(t)
                }
                updateAccessor(t) {
                    return a.cM.deprecated("updateAccessor(...)", "setAccessor(new Accessor(buffer.accessor, ...)")(), this.accessor = new i.Z(this.accessor, t), this
                }
            }
        },
        26047: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return a
                },
                $: function() {
                    return s
                }
            });
            var r = n(1418),
                i = n(22525);
            const o = "clear: bad arguments";

            function a(t, {
                framebuffer: e = null,
                color: n = null,
                depth: a = null,
                stencil: s = null
            } = {}) {
                const u = {};
                e && (u.framebuffer = e);
                let c = 0;
                n && (c |= 16384, !0 !== n && (u.clearColor = n)), a && (c |= 256, !0 !== a && (u.clearDepth = a)), s && (c |= 1024, !0 !== a && (u.clearStencil = a)), (0, i.h)(0 !== c, o), (0, r.s8)(t, u, (() => {
                    t.clear(c)
                }))
            }

            function s(t, {
                framebuffer: e = null,
                buffer: n = 6144,
                drawBuffer: a = 0,
                value: s = [0, 0, 0, 0]
            } = {}) {
                (0, r.KQ)(t), (0, r.s8)(t, {
                    framebuffer: e
                }, (() => {
                    switch (n) {
                        case 6144:
                            switch (s.constructor) {
                                case Int32Array:
                                    t.clearBufferiv(n, a, s);
                                    break;
                                case Uint32Array:
                                    t.clearBufferuiv(n, a, s);
                                    break;
                                case Float32Array:
                                default:
                                    t.clearBufferfv(n, a, s)
                            }
                            break;
                        case 6145:
                            t.clearBufferfv(6145, 0, [s]);
                            break;
                        case 6146:
                            t.clearBufferiv(6146, 0, [s]);
                            break;
                        case 34041:
                            const [e, r] = s;
                            t.clearBufferfi(34041, 0, e, r);
                            break;
                        default:
                            (0, i.h)(!1, o)
                    }
                }))
            }
        },
        29295: function(t, e, n) {
            "use strict";
            n.d(e, {
                Km: function() {
                    return l
                },
                Lv: function() {
                    return f
                },
                z6: function() {
                    return c
                }
            });
            var r = n(53849),
                i = n(35008),
                o = n(1418),
                a = n(9335),
                s = n(22525);
            var u = n(73462);

            function c(t, e = {}) {
                const {
                    sourceX: n = 0,
                    sourceY: r = 0,
                    sourceFormat: i = 6408
                } = e;
                let {
                    sourceAttachment: o = 36064,
                    target: u = null,
                    sourceWidth: c,
                    sourceHeight: l,
                    sourceType: f
                } = e;
                const {
                    framebuffer: d,
                    deleteFramebuffer: p
                } = h(t);
                (0, s.h)(d);
                const {
                    gl: g,
                    handle: y,
                    attachments: v
                } = d;
                c = c || d.width, l = l || d.height, 36064 === o && null === y && (o = 1028), (0, s.h)(v[o]), f = f || v[o].type, u = function(t, e, n, r, i) {
                    if (t) return t;
                    e = e || 5121;
                    const o = (0, a.vN)(e, {
                            clamped: !1
                        }),
                        u = function(t) {
                            switch (t) {
                                case 6406:
                                case 33326:
                                case 6403:
                                    return 1;
                                case 33328:
                                case 33319:
                                    return 2;
                                case 6407:
                                case 34837:
                                    return 3;
                                case 6408:
                                case 34836:
                                    return 4;
                                default:
                                    return (0, s.h)(!1), 0
                            }
                        }(n);
                    return new o(r * i * u)
                }(u, f, i, c, l), f = f || (0, a.O)(u);
                const m = g.bindFramebuffer(36160, y);
                return g.readPixels(n, r, c, l, i, f, u), g.bindFramebuffer(36160, m || null), p && d.delete(), u
            }

            function l(t, {
                sourceAttachment: e = 36064,
                targetMaxHeight: n = Number.MAX_SAFE_INTEGER
            } = {}) {
                let r = c(t, {
                        sourceAttachment: e
                    }),
                    {
                        width: i,
                        height: o
                    } = t;
                for (; o > n;)({
                    data: r,
                    width: i,
                    height: o
                } = (0, a.KS)({
                    data: r,
                    width: i,
                    height: o
                }));
                (0, a.c$)({
                    data: r,
                    width: i,
                    height: o
                });
                const s = document.createElement("canvas");
                s.width = i, s.height = o;
                const u = s.getContext("2d"),
                    l = u.createImageData(i, o);
                return l.data.set(r), u.putImageData(l, 0, 0), s.toDataURL()
            }

            function f(t, e, n = {}) {
                const {
                    sourceX: r = 0,
                    sourceY: a = 0,
                    targetMipmaplevel: u = 0,
                    targetInternalFormat: c = 6408
                } = n;
                let {
                    targetX: l,
                    targetY: f,
                    targetZ: d,
                    width: p,
                    height: g
                } = n;
                const {
                    framebuffer: y,
                    deleteFramebuffer: v
                } = h(t);
                (0, s.h)(y);
                const {
                    gl: m,
                    handle: b
                } = y, w = "undefined" !== typeof l || "undefined" !== typeof f || "undefined" !== typeof d;
                l = l || 0, f = f || 0, d = d || 0;
                const _ = m.bindFramebuffer(36160, b);
                (0, s.h)(e);
                let P = null;
                if (e instanceof i.Z && (P = e, p = Number.isFinite(p) ? p : P.width, g = Number.isFinite(g) ? g : P.height, P.bind(0), e = P.target), w) switch (e) {
                    case 3553:
                    case 34067:
                        m.copyTexSubImage2D(e, u, l, f, r, a, p, g);
                        break;
                    case 35866:
                    case 32879:
                        (0, o.KQ)(m).copyTexSubImage3D(e, u, l, f, d, r, a, p, g)
                } else m.copyTexImage2D(e, u, c, r, a, p, g, 0);
                return P && P.unbind(), m.bindFramebuffer(36160, _ || null), v && y.delete(), P
            }

            function h(t) {
                return t instanceof r.Z ? {
                    framebuffer: t,
                    deleteFramebuffer: !1
                } : {
                    framebuffer: (0, u.Y)(t),
                    deleteFramebuffer: !0
                }
            }
        },
        53849: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return d
                }
            });
            var r = n(1418),
                i = n(87577),
                o = n(51621),
                a = n(94041),
                s = n(26047),
                u = n(29295),
                c = n(44211),
                l = n(79579),
                f = n(22525);
            const h = "Multiple render targets not supported";
            class d extends i.Z {
                static isSupported(t, e = {}) {
                    const {
                        colorBufferFloat: n,
                        colorBufferHalfFloat: r
                    } = e;
                    let i = !0;
                    return n && (i = Boolean(t.getExtension("EXT_color_buffer_float") || t.getExtension("WEBGL_color_buffer_float") || t.getExtension("OES_texture_float"))), r && (i = i && Boolean(t.getExtension("EXT_color_buffer_float") || t.getExtension("EXT_color_buffer_half_float"))), i
                }
                static getDefaultFramebuffer(t) {
                    return t.luma = t.luma || {}, t.luma.defaultFramebuffer = t.luma.defaultFramebuffer || new d(t, {
                        id: "default-framebuffer",
                        handle: null,
                        attachments: {}
                    }), t.luma.defaultFramebuffer
                }
                get MAX_COLOR_ATTACHMENTS() {
                    const t = (0, r.KQ)(this.gl);
                    return t.getParameter(t.MAX_COLOR_ATTACHMENTS)
                }
                get MAX_DRAW_BUFFERS() {
                    const t = (0, r.KQ)(this.gl);
                    return t.getParameter(t.MAX_DRAW_BUFFERS)
                }
                constructor(t, e = {}) {
                    super(t, e), this.width = null, this.height = null, this.attachments = {}, this.readBuffer = 36064, this.drawBuffers = [36064], this.ownResources = [], this.initialize(e), Object.seal(this)
                }
                get color() {
                    return this.attachments[36064] || null
                }
                get texture() {
                    return this.attachments[36064] || null
                }
                get depth() {
                    return this.attachments[36096] || this.attachments[33306] || null
                }
                get stencil() {
                    return this.attachments[36128] || this.attachments[33306] || null
                }
                initialize({
                    width: t = 1,
                    height: e = 1,
                    attachments: n = null,
                    color: r = !0,
                    depth: i = !0,
                    stencil: o = !1,
                    check: a = !0,
                    readBuffer: s,
                    drawBuffers: u
                }) {
                    if ((0, f.h)(t >= 0 && e >= 0, "Width and height need to be integers"), this.width = t, this.height = e, n)
                        for (const c in n) {
                            const r = n[c];
                            (Array.isArray(r) ? r[0] : r).resize({
                                width: t,
                                height: e
                            })
                        } else n = this._createDefaultAttachments(r, i, o, t, e);
                    this.update({
                        clearAttachments: !0,
                        attachments: n,
                        readBuffer: s,
                        drawBuffers: u
                    }), n && a && this.checkStatus()
                }
                delete() {
                    for (const t of this.ownResources) t.delete();
                    return super.delete(), this
                }
                update({
                    attachments: t = {},
                    readBuffer: e,
                    drawBuffers: n,
                    clearAttachments: r = !1,
                    resizeAttachments: i = !0
                }) {
                    this.attach(t, {
                        clearAttachments: r,
                        resizeAttachments: i
                    });
                    const {
                        gl: o
                    } = this, a = o.bindFramebuffer(36160, this.handle);
                    return e && this._setReadBuffer(e), n && this._setDrawBuffers(n), o.bindFramebuffer(36160, a || null), this
                }
                resize(t = {}) {
                    let {
                        width: e,
                        height: n
                    } = t;
                    if (null === this.handle) return (0, f.h)(void 0 === e && void 0 === n), this.width = this.gl.drawingBufferWidth, this.height = this.gl.drawingBufferHeight, this;
                    void 0 === e && (e = this.gl.drawingBufferWidth), void 0 === n && (n = this.gl.drawingBufferHeight), e !== this.width && n !== this.height && r.cM.log(2, `Resizing framebuffer ${this.id} to ${e}x${n}`)();
                    for (const r in this.attachments) this.attachments[r].resize({
                        width: e,
                        height: n
                    });
                    return this.width = e, this.height = n, this
                }
                attach(t, {
                    clearAttachments: e = !1,
                    resizeAttachments: n = !0
                } = {}) {
                    const r = {};
                    e && Object.keys(this.attachments).forEach((t => {
                        r[t] = null
                    })), Object.assign(r, t);
                    const i = this.gl.bindFramebuffer(36160, this.handle);
                    for (const o in r) {
                        (0, f.h)(void 0 !== o, "Misspelled framebuffer binding point?");
                        const t = Number(o),
                            e = r[t];
                        let i = e;
                        if (i)
                            if (i instanceof a.Z) this._attachRenderbuffer({
                                attachment: t,
                                renderbuffer: i
                            });
                            else if (Array.isArray(e)) {
                            const [n, r = 0, o = 0] = e;
                            i = n, this._attachTexture({
                                attachment: t,
                                texture: n,
                                layer: r,
                                level: o
                            })
                        } else this._attachTexture({
                            attachment: t,
                            texture: i,
                            layer: 0,
                            level: 0
                        });
                        else this._unattach(t);
                        n && i && i.resize({
                            width: this.width,
                            height: this.height
                        })
                    }
                    this.gl.bindFramebuffer(36160, i || null), Object.assign(this.attachments, t), Object.keys(this.attachments).filter((t => !this.attachments[t])).forEach((t => {
                        delete this.attachments[t]
                    }))
                }
                checkStatus() {
                    const {
                        gl: t
                    } = this, e = this.getStatus();
                    if (36053 !== e) throw new Error(function(t) {
                        return (d.STATUS || {})[t] || `Framebuffer error ${t}`
                    }(e));
                    return this
                }
                getStatus() {
                    const {
                        gl: t
                    } = this, e = t.bindFramebuffer(36160, this.handle), n = t.checkFramebufferStatus(36160);
                    return t.bindFramebuffer(36160, e || null), n
                }
                clear(t = {}) {
                    const {
                        color: e,
                        depth: n,
                        stencil: r,
                        drawBuffers: i = []
                    } = t, o = this.gl.bindFramebuffer(36160, this.handle);
                    return (e || n || r) && (0, s.Z)(this.gl, {
                        color: e,
                        depth: n,
                        stencil: r
                    }), i.forEach(((t, e) => {
                        (0, s.$)(this.gl, {
                            drawBuffer: e,
                            value: t
                        })
                    })), this.gl.bindFramebuffer(36160, o || null), this
                }
                readPixels(t = {}) {
                    return r.cM.error("Framebuffer.readPixels() is no logner supported, use readPixelsToArray(framebuffer)")(), null
                }
                readPixelsToBuffer(t = {}) {
                    return r.cM.error("Framebuffer.readPixelsToBuffer()is no logner supported, use readPixelsToBuffer(framebuffer)")(), null
                }
                copyToDataUrl(t = {}) {
                    return r.cM.error("Framebuffer.copyToDataUrl() is no logner supported, use copyToDataUrl(framebuffer)")(), null
                }
                copyToImage(t = {}) {
                    return r.cM.error("Framebuffer.copyToImage() is no logner supported, use copyToImage(framebuffer)")(), null
                }
                copyToTexture(t = {}) {
                    return r.cM.error("Framebuffer.copyToTexture({...}) is no logner supported, use copyToTexture(source, target, opts})")(), null
                }
                blit(t = {}) {
                    return r.cM.error("Framebuffer.blit({...}) is no logner supported, use blit(source, target, opts)")(), null
                }
                invalidate({
                    attachments: t = [],
                    x: e = 0,
                    y: n = 0,
                    width: i,
                    height: o
                }) {
                    const a = (0, r.KQ)(this.gl),
                        s = a.bindFramebuffer(36008, this.handle);
                    return 0 === e && 0 === n && void 0 === i && void 0 === o ? a.invalidateFramebuffer(36008, t) : a.invalidateFramebuffer(36008, t, e, n, i, o), a.bindFramebuffer(36008, s), this
                }
                getAttachmentParameter(t, e, n) {
                    let r = this._getAttachmentParameterFallback(e);
                    return null === r && (this.gl.bindFramebuffer(36160, this.handle), r = this.gl.getFramebufferAttachmentParameter(36160, t, e), this.gl.bindFramebuffer(36160, null)), n && r > 1e3 && (r = (0, l.km)(this.gl, r)), r
                }
                getAttachmentParameters(t = 36064, e, n = this.constructor.ATTACHMENT_PARAMETERS || []) {
                    const r = {};
                    for (const i of n) {
                        r[e ? (0, l.km)(this.gl, i) : i] = this.getAttachmentParameter(t, i, e)
                    }
                    return r
                }
                getParameters(t = !0) {
                    const e = Object.keys(this.attachments),
                        n = {};
                    for (const r of e) {
                        const e = Number(r);
                        n[t ? (0, l.km)(this.gl, e) : e] = this.getAttachmentParameters(e, t)
                    }
                    return n
                }
                show() {
                    return "undefined" !== typeof window && window.open((0, u.Km)(this), "luma-debug-texture"), this
                }
                log(t = 0, e = "") {
                    if (t > r.cM.level || "undefined" === typeof window) return this;
                    e = e || `Framebuffer ${this.id}`;
                    const n = (0, u.Km)(this, {
                        targetMaxHeight: 100
                    });
                    return r.cM.image({
                        logLevel: t,
                        message: e,
                        image: n
                    }, e)(), this
                }
                bind({
                    target: t = 36160
                } = {}) {
                    return this.gl.bindFramebuffer(t, this.handle), this
                }
                unbind({
                    target: t = 36160
                } = {}) {
                    return this.gl.bindFramebuffer(t, null), this
                }
                _createDefaultAttachments(t, e, n, r, i) {
                    let s = null;
                    return t && (s = s || {}, s[36064] = new o.Z(this.gl, {
                        id: `${this.id}-color0`,
                        pixels: null,
                        format: 6408,
                        type: 5121,
                        width: r,
                        height: i,
                        mipmaps: !1,
                        parameters: {
                            10241: 9729,
                            10240: 9729,
                            10242: 33071,
                            10243: 33071
                        }
                    }), this.ownResources.push(s[36064])), e && n ? (s = s || {}, s[33306] = new a.Z(this.gl, {
                        id: `${this.id}-depth-stencil`,
                        format: 35056,
                        width: r,
                        height: 111
                    }), this.ownResources.push(s[33306])) : e ? (s = s || {}, s[36096] = new a.Z(this.gl, {
                        id: `${this.id}-depth`,
                        format: 33189,
                        width: r,
                        height: i
                    }), this.ownResources.push(s[36096])) : n && (0, f.h)(!1), s
                }
                _unattach(t) {
                    const e = this.attachments[t];
                    e && (e instanceof a.Z ? this.gl.framebufferRenderbuffer(36160, t, 36161, null) : this.gl.framebufferTexture2D(36160, t, 3553, null, 0), delete this.attachments[t])
                }
                _attachRenderbuffer({
                    attachment: t = 36064,
                    renderbuffer: e
                }) {
                    const {
                        gl: n
                    } = this;
                    n.framebufferRenderbuffer(36160, t, 36161, e.handle), this.attachments[t] = e
                }
                _attachTexture({
                    attachment: t = 36064,
                    texture: e,
                    layer: n,
                    level: i
                }) {
                    const {
                        gl: o
                    } = this;
                    switch (o.bindTexture(e.target, e.handle), e.target) {
                        case 35866:
                        case 32879:
                            (0, r.KQ)(o).framebufferTextureLayer(36160, t, e.target, i, n);
                            break;
                        case 34067:
                            const a = function(t) {
                                return t < 34069 ? t + 34069 : t
                            }(n);
                            o.framebufferTexture2D(36160, t, a, e.handle, i);
                            break;
                        case 3553:
                            o.framebufferTexture2D(36160, t, 3553, e.handle, i);
                            break;
                        default:
                            (0, f.h)(!1, "Illegal texture type")
                    }
                    o.bindTexture(e.target, null), this.attachments[t] = e
                }
                _setReadBuffer(t) {
                    const e = (0, r.vd)(this.gl);
                    e ? e.readBuffer(t) : (0, f.h)(36064 === t || 1029 === t, h), this.readBuffer = t
                }
                _setDrawBuffers(t) {
                    const {
                        gl: e
                    } = this, n = (0, r.KQ)(e);
                    if (n) n.drawBuffers(t);
                    else {
                        const n = e.getExtension("WEBGL_draw_buffers");
                        n ? n.drawBuffersWEBGL(t) : (0, f.h)(1 === t.length && (36064 === t[0] || 1029 === t[0]), h)
                    }
                    this.drawBuffers = t
                }
                _getAttachmentParameterFallback(t) {
                    const e = (0, c.N$)(this.gl);
                    switch (t) {
                        case 36052:
                            return e.WEBGL2 ? null : 0;
                        case 33298:
                        case 33299:
                        case 33300:
                        case 33301:
                        case 33302:
                        case 33303:
                            return e.WEBGL2 ? null : 8;
                        case 33297:
                            return e.WEBGL2 ? null : 5125;
                        case 33296:
                            return e.WEBGL2 || e.EXT_sRGB ? null : 9729;
                        default:
                            return null
                    }
                }
                _createHandle() {
                    return this.gl.createFramebuffer()
                }
                _deleteHandle() {
                    this.gl.deleteFramebuffer(this.handle)
                }
                _bindHandle(t) {
                    return this.gl.bindFramebuffer(36160, t)
                }
            }
            d.ATTACHMENT_PARAMETERS = [36049, 36048, 33296, 33298, 33299, 33300, 33301, 33302, 33303]
        },
        75433: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return B
                }
            });
            var r = n(87577),
                i = n(35008),
                o = n(53849),
                a = n(1418),
                s = n(94041),
                u = n(22525);
            const c = {
                    5126: E.bind(null, "uniform1fv", g, 1, x),
                    35664: E.bind(null, "uniform2fv", g, 2, x),
                    35665: E.bind(null, "uniform3fv", g, 3, x),
                    35666: E.bind(null, "uniform4fv", g, 4, x),
                    5124: E.bind(null, "uniform1iv", y, 1, x),
                    35667: E.bind(null, "uniform2iv", y, 2, x),
                    35668: E.bind(null, "uniform3iv", y, 3, x),
                    35669: E.bind(null, "uniform4iv", y, 4, x),
                    35670: E.bind(null, "uniform1iv", y, 1, x),
                    35671: E.bind(null, "uniform2iv", y, 2, x),
                    35672: E.bind(null, "uniform3iv", y, 3, x),
                    35673: E.bind(null, "uniform4iv", y, 4, x),
                    35674: E.bind(null, "uniformMatrix2fv", g, 4, S),
                    35675: E.bind(null, "uniformMatrix3fv", g, 9, S),
                    35676: E.bind(null, "uniformMatrix4fv", g, 16, S),
                    35678: P,
                    35680: P,
                    5125: E.bind(null, "uniform1uiv", v, 1, x),
                    36294: E.bind(null, "uniform2uiv", v, 2, x),
                    36295: E.bind(null, "uniform3uiv", v, 3, x),
                    36296: E.bind(null, "uniform4uiv", v, 4, x),
                    35685: E.bind(null, "uniformMatrix2x3fv", g, 6, S),
                    35686: E.bind(null, "uniformMatrix2x4fv", g, 8, S),
                    35687: E.bind(null, "uniformMatrix3x2fv", g, 6, S),
                    35688: E.bind(null, "uniformMatrix3x4fv", g, 12, S),
                    35689: E.bind(null, "uniformMatrix4x2fv", g, 8, S),
                    35690: E.bind(null, "uniformMatrix4x3fv", g, 12, S),
                    35678: P,
                    35680: P,
                    35679: P,
                    35682: P,
                    36289: P,
                    36292: P,
                    36293: P,
                    36298: P,
                    36299: P,
                    36300: P,
                    36303: P,
                    36306: P,
                    36307: P,
                    36308: P,
                    36311: P
                },
                l = {},
                f = {},
                h = {},
                d = [0];

            function p(t, e, n, r) {
                1 === e && "boolean" === typeof t && (t = t ? 1 : 0), Number.isFinite(t) && (d[0] = t, t = d);
                const i = t.length;
                if (i % e && a.cM.warn(`Uniform size should be multiples of ${e}`, t)(), t instanceof n) return t;
                let o = r[i];
                o || (o = new n(i), r[i] = o);
                for (let a = 0; a < i; a++) o[a] = t[a];
                return o
            }

            function g(t, e) {
                return p(t, e, Float32Array, l)
            }

            function y(t, e) {
                return p(t, e, Int32Array, f)
            }

            function v(t, e) {
                return p(t, e, Uint32Array, h)
            }

            function m(t, e, n) {
                const r = c[n.type];
                if (!r) throw new Error(`Unknown GLSL uniform type ${n.type}`);
                return r().bind(null, t, e)
            }

            function b(t) {
                if ("]" !== t[t.length - 1]) return {
                    name: t,
                    length: 1,
                    isArray: !1
                };
                const e = t.match(/([^[]*)(\[[0-9]+\])?/);
                if (!e || e.length < 2) throw new Error(`Failed to parse GLSL uniform name ${t}`);
                return {
                    name: e[1],
                    length: e[2] || 1,
                    isArray: Boolean(e[2])
                }
            }

            function w(t) {
                return Array.isArray(t) || ArrayBuffer.isView(t) ? function(t) {
                    if (0 === t.length) return !1;
                    const e = Math.min(t.length, 16);
                    for (let n = 0; n < e; ++n)
                        if (!Number.isFinite(t[n])) return !1;
                    return !0
                }(t) : !!isFinite(t) || (!0 === t || !1 === t || (t instanceof i.Z || (t instanceof s.Z || t instanceof o.Z && Boolean(t.texture))))
            }

            function _(t, e, n) {
                if (Array.isArray(n) || ArrayBuffer.isView(n))
                    if (t[e]) {
                        const r = t[e];
                        for (let t = 0, e = n.length; t < e; ++t) r[t] = n[t]
                    } else t[e] = n.slice();
                else t[e] = n
            }

            function P() {
                let t = null;
                return (e, n, r) => {
                    const i = t !== r;
                    return i && (e.uniform1i(n, r), t = r), i
                }
            }

            function E(t, e, n, r) {
                let i = null,
                    o = null;
                return (a, s, c) => {
                    const l = e(c, n),
                        f = l.length;
                    let h = !1;
                    if (null === i) i = new Float32Array(f), o = f, h = !0;
                    else {
                        (0, u.h)(o === f, "Uniform length cannot change.");
                        for (let t = 0; t < f; ++t)
                            if (l[t] !== i[t]) {
                                h = !0;
                                break
                            }
                    }
                    return h && (r(a, t, s, l), i.set(l)), h
                }
            }

            function x(t, e, n, r) {
                t[e](n, r)
            }

            function S(t, e, n, r) {
                t[e](n, !1, r)
            }

            function O(t, e = "unnamed") {
                const n = t.match(/#define[\s*]SHADER_NAME[\s*]([A-Za-z0-9_-]+)[\s*]/);
                return n ? n[1] : e
            }

            function T(t, e, n, r) {
                const i = t.split(/\r?\n/),
                    o = {},
                    a = {},
                    s = r || O(e) || "(unnamed)",
                    u = `${function(t){switch(t){case 35632:return"fragment";case 35633:return"vertex";default:return"unknown type"}}(n)} shader ${s}`;
                for (let l = 0; l < i.length; l++) {
                    const e = i[l];
                    if (e.length <= 1) continue;
                    const n = e.split(":"),
                        r = n[0],
                        s = parseInt(n[2], 10);
                    if (isNaN(s)) throw new Error(`GLSL compilation error in ${u}: ${t}`);
                    "WARNING" !== r ? o[s] = e : a[s] = e
                }
                const c = function(t, e = 1, n = ": ") {
                    const r = t.split(/\r?\n/),
                        i = String(r.length + e - 1).length;
                    return r.map(((t, r) => {
                        const o = String(r + e),
                            a = o.length;
                        return C(o, i - a) + n + t
                    }))
                }(e);
                return {
                    shaderName: u,
                    errors: M(o, c),
                    warnings: M(a, c)
                }
            }

            function M(t, e) {
                let n = "";
                for (let r = 0; r < e.length; r++) {
                    const i = e[r];
                    if ((t[r + 3] || t[r + 2] || t[r + 1]) && (n += `${i}\n`, t[r + 1])) {
                        const e = t[r + 1],
                            i = e.split(":", 3),
                            o = i[0],
                            a = parseInt(i[1], 10) || 0;
                        n += C(`^^^ ${o}: ${e.substring(i.join(":").length+1).trim()}\n\n`, a)
                    }
                }
                return n
            }

            function C(t, e) {
                let n = "";
                for (let r = 0; r < e; ++r) n += " ";
                return `${n}${t}`
            }
            var A = n(74538);
            class k extends r.Z {
                static getTypeName(t) {
                    switch (t) {
                        case 35633:
                            return "vertex-shader";
                        case 35632:
                            return "fragment-shader";
                        default:
                            return (0, u.h)(!1), "unknown"
                    }
                }
                constructor(t, e) {
                    (0, a.JD)(t), (0, u.h)("string" === typeof e.source, "Shader: GLSL source code must be a JavaScript string");
                    super(t, {
                        id: O(e.source, null) || e.id || (0, A.hQ)(`unnamed ${k.getTypeName(e.shaderType)}`)
                    }), this.shaderType = e.shaderType, this.source = e.source, this.initialize(e)
                }
                initialize({
                    source: t
                }) {
                    const e = O(t, null);
                    e && (this.id = (0, A.hQ)(e)), this._compile(t)
                }
                getParameter(t) {
                    return this.gl.getShaderParameter(this.handle, t)
                }
                toString() {
                    return `${k.getTypeName(this.shaderType)}:${this.id}`
                }
                getName() {
                    return O(this.source) || "unnamed-shader"
                }
                getSource() {
                    return this.gl.getShaderSource(this.handle)
                }
                getTranslatedSource() {
                    const t = this.gl.getExtension("WEBGL_debug_shaders");
                    return t ? t.getTranslatedShaderSource(this.handle) : "No translated source available. WEBGL_debug_shaders not implemented"
                }
                _compile(t = this.source) {
                    t.startsWith("#version ") || (t = `#version 100\n${t}`), this.source = t, this.gl.shaderSource(this.handle, this.source), this.gl.compileShader(this.handle);
                    if (!this.getParameter(35713)) {
                        const t = this.gl.getShaderInfoLog(this.handle),
                            {
                                shaderName: e,
                                errors: n,
                                warnings: r
                            } = T(t, this.source, this.shaderType, this.id);
                        throw a.cM.error(`GLSL compilation errors in ${e}\n${n}`)(), a.cM.warn(`GLSL compilation warnings in ${e}\n${r}`)(), new Error(`GLSL compilation errors in ${e}`)
                    }
                }
                _deleteHandle() {
                    this.gl.deleteShader(this.handle)
                }
                _getOptsFromHandle() {
                    return {
                        type: this.getParameter(35663),
                        source: this.getSource()
                    }
                }
            }
            class I extends k {
                constructor(t, e) {
                    "string" === typeof e && (e = {
                        source: e
                    }), super(t, Object.assign({}, e, {
                        shaderType: 35633
                    }))
                }
                _createHandle() {
                    return this.gl.createShader(35633)
                }
            }
            class j extends k {
                constructor(t, e) {
                    "string" === typeof e && (e = {
                        source: e
                    }), super(t, Object.assign({}, e, {
                        shaderType: 35632
                    }))
                }
                _createHandle() {
                    return this.gl.createShader(35632)
                }
            }
            var L = n(14072),
                R = n(38522);
            class D {
                constructor(t) {
                    this.id = t.id, this.attributeInfos = [], this.attributeInfosByName = {}, this.attributeInfosByLocation = [], this.varyingInfos = [], this.varyingInfosByName = {}, Object.seal(this), this._readAttributesFromProgram(t), this._readVaryingsFromProgram(t)
                }
                getAttributeInfo(t) {
                    const e = Number(t);
                    return Number.isFinite(e) ? this.attributeInfosByLocation[e] : this.attributeInfosByName[t] || null
                }
                getAttributeLocation(t) {
                    const e = this.getAttributeInfo(t);
                    return e ? e.location : -1
                }
                getAttributeAccessor(t) {
                    const e = this.getAttributeInfo(t);
                    return e ? e.accessor : null
                }
                getVaryingInfo(t) {
                    const e = Number(t);
                    return Number.isFinite(e) ? this.varyingInfos[e] : this.varyingInfosByName[t] || null
                }
                getVaryingIndex(t) {
                    const e = this.getVaryingInfo();
                    return e ? e.location : -1
                }
                getVaryingAccessor(t) {
                    const e = this.getVaryingInfo();
                    return e ? e.accessor : null
                }
                _readAttributesFromProgram(t) {
                    const {
                        gl: e
                    } = t, n = e.getProgramParameter(t.handle, 35721);
                    for (let r = 0; r < n; r++) {
                        const {
                            name: n,
                            type: i,
                            size: o
                        } = e.getActiveAttrib(t.handle, r), a = e.getAttribLocation(t.handle, n);
                        a >= 0 && this._addAttribute(a, n, i, o)
                    }
                    this.attributeInfos.sort(((t, e) => t.location - e.location))
                }
                _readVaryingsFromProgram(t) {
                    const {
                        gl: e
                    } = t;
                    if (!(0, a.D0)(e)) return;
                    const n = e.getProgramParameter(t.handle, 35971);
                    for (let r = 0; r < n; r++) {
                        const {
                            name: n,
                            type: i,
                            size: o
                        } = e.getTransformFeedbackVarying(t.handle, r);
                        this._addVarying(r, n, i, o)
                    }
                    this.varyingInfos.sort(((t, e) => t.location - e.location))
                }
                _addAttribute(t, e, n, r) {
                    const {
                        type: i,
                        components: o
                    } = (0, R.hJ)(n), a = {
                        type: i,
                        size: r * o
                    };
                    this._inferProperties(t, e, a);
                    const s = {
                        location: t,
                        name: e,
                        accessor: new L.Z(a)
                    };
                    this.attributeInfos.push(s), this.attributeInfosByLocation[t] = s, this.attributeInfosByName[s.name] = s
                }
                _inferProperties(t, e, n) {
                    /instance/i.test(e) && (n.divisor = 1)
                }
                _addVarying(t, e, n, r) {
                    const {
                        type: i,
                        components: o
                    } = (0, R.hJ)(n), a = {
                        location: t,
                        name: e,
                        accessor: new L.Z({
                            type: i,
                            size: r * o
                        })
                    };
                    this.varyingInfos.push(a), this.varyingInfosByName[a.name] = a
                }
            }
            var F = n(79579);
            const N = 35981,
                z = ["setVertexArray", "setAttributes", "setBuffers", "unsetBuffers", "use", "getUniformCount", "getUniformInfo", "getUniformLocation", "getUniformValue", "getVarying", "getFragDataLocation", "getAttachedShaders", "getAttributeCount", "getAttributeLocation", "getAttributeInfo"];
            class B extends r.Z {
                constructor(t, e = {}) {
                    super(t, e), this.stubRemovedMethods("Program", "v6.0", z), this._isCached = !1, this.initialize(e), Object.seal(this), this._setId(e.id)
                }
                initialize(t = {}) {
                    const {
                        hash: e,
                        vs: n,
                        fs: r,
                        varyings: i,
                        bufferMode: o = N
                    } = t;
                    return this.hash = e || "", this.vs = "string" === typeof n ? new I(this.gl, {
                        id: `${t.id}-vs`,
                        source: n
                    }) : n, this.fs = "string" === typeof r ? new j(this.gl, {
                        id: `${t.id}-fs`,
                        source: r
                    }) : r, (0, u.h)(this.vs instanceof I), (0, u.h)(this.fs instanceof j), this.uniforms = {}, this._textureUniforms = {}, i && i.length > 0 && ((0, a.KQ)(this.gl), this.varyings = i, this.gl2.transformFeedbackVaryings(this.handle, i, o)), this._compileAndLink(), this._readUniformLocationsFromLinkedProgram(), this.configuration = new D(this), this.setProps(t)
                }
                delete(t = {}) {
                    return this._isCached ? this : super.delete(t)
                }
                setProps(t) {
                    return "uniforms" in t && this.setUniforms(t.uniforms), this
                }
                draw({
                    logPriority: t,
                    drawMode: e = 4,
                    vertexCount: n,
                    offset: r = 0,
                    start: i,
                    end: o,
                    isIndexed: s = !1,
                    indexType: c = 5123,
                    instanceCount: l = 0,
                    isInstanced: f = l > 0,
                    vertexArray: h = null,
                    transformFeedback: d,
                    framebuffer: p,
                    parameters: g = {},
                    uniforms: y,
                    samplers: v
                }) {
                    if ((y || v) && (a.cM.deprecated("Program.draw({uniforms})", "Program.setUniforms(uniforms)")(), this.setUniforms(y || {})), a.cM.priority >= t) {
                        const r = p ? p.id : "default",
                            i = `mode=${(0,F.km)(this.gl,e)} verts=${n} instances=${l} indexType=${(0,F.km)(this.gl,c)} isInstanced=${f} isIndexed=${s} Framebuffer=${r}`;
                        a.cM.log(t, i)()
                    }
                    return (0, u.h)(h), this.gl.useProgram(this.handle), !(!this._areTexturesRenderable() || 0 === n || f && 0 === l) && (h.bindForDraw(n, l, (() => {
                        if (void 0 !== p && (g = Object.assign({}, g, {
                                framebuffer: p
                            })), d) {
                            const t = (0, R.$Z)(e);
                            d.begin(t)
                        }
                        this._bindTextures(), (0, a.s8)(this.gl, g, (() => {
                            s && f ? this.gl2.drawElementsInstanced(e, n, c, r, l) : s && (0, a.D0)(this.gl) && !isNaN(i) && !isNaN(o) ? this.gl2.drawRangeElements(e, i, o, n, c, r) : s ? this.gl.drawElements(e, n, c, r) : f ? this.gl2.drawArraysInstanced(e, r, n, l) : this.gl.drawArrays(e, r, n)
                        })), d && d.end()
                    })), !0)
                }
                setUniforms(t = {}) {
                    a.cM.priority >= 2 && function(t, e, n) {
                        for (const r in t) {
                            const i = t[r];
                            if ((!n || Boolean(n[r])) && !w(i)) throw e = e ? `${e} ` : "", console.error(`${e} Bad uniform ${r}`, i), new Error(`${e} Bad uniform ${r}`)
                        }
                    }(t, this.id, this._uniformSetters), this.gl.useProgram(this.handle);
                    for (const e in t) {
                        const n = t[e],
                            r = this._uniformSetters[e];
                        if (r) {
                            let t = n,
                                a = !1;
                            if (t instanceof o.Z && (t = t.texture), t instanceof i.Z)
                                if (a = this.uniforms[e] !== n, a) {
                                    void 0 === r.textureIndex && (r.textureIndex = this._textureIndexCounter++);
                                    const n = t,
                                        {
                                            textureIndex: i
                                        } = r;
                                    n.bind(i), t = i, this._textureUniforms[e] = n
                                } else t = r.textureIndex;
                            else this._textureUniforms[e] && delete this._textureUniforms[e];
                            (r(t) || a) && _(this.uniforms, e, n)
                        }
                    }
                    return this
                }
                _areTexturesRenderable() {
                    let t = !0;
                    for (const e in this._textureUniforms) {
                        const n = this._textureUniforms[e];
                        n.update(), t = t && n.loaded
                    }
                    return t
                }
                _bindTextures() {
                    for (const t in this._textureUniforms) {
                        const e = this._uniformSetters[t].textureIndex;
                        this._textureUniforms[t].bind(e)
                    }
                }
                _createHandle() {
                    return this.gl.createProgram()
                }
                _deleteHandle() {
                    this.gl.deleteProgram(this.handle)
                }
                _getOptionsFromHandle(t) {
                    const e = this.gl.getAttachedShaders(t),
                        n = {};
                    for (const r of e) {
                        switch (this.gl.getShaderParameter(this.handle, 35663)) {
                            case 35633:
                                n.vs = new I({
                                    handle: r
                                });
                                break;
                            case 35632:
                                n.fs = new j({
                                    handle: r
                                })
                        }
                    }
                    return n
                }
                _getParameter(t) {
                    return this.gl.getProgramParameter(this.handle, t)
                }
                _setId(t) {
                    if (!t) {
                        const t = this._getName();
                        this.id = (0, A.hQ)(t)
                    }
                }
                _getName() {
                    let t = this.vs.getName() || this.fs.getName();
                    return t = t.replace(/shader/i, ""), t = t ? `${t}-program` : "program", t
                }
                _compileAndLink() {
                    const {
                        gl: t
                    } = this;
                    if (t.attachShader(this.handle, this.vs.handle), t.attachShader(this.handle, this.fs.handle), a.cM.time(4, `linkProgram for ${this._getName()}`)(), t.linkProgram(this.handle), a.cM.timeEnd(4, `linkProgram for ${this._getName()}`)(), t.debug || a.cM.level > 0) {
                        if (!t.getProgramParameter(this.handle, 35714)) throw new Error(`Error linking: ${t.getProgramInfoLog(this.handle)}`);
                        t.validateProgram(this.handle);
                        if (!t.getProgramParameter(this.handle, 35715)) throw new Error(`Error validating: ${t.getProgramInfoLog(this.handle)}`)
                    }
                }
                _readUniformLocationsFromLinkedProgram() {
                    const {
                        gl: t
                    } = this;
                    this._uniformSetters = {}, this._uniformCount = this._getParameter(35718);
                    for (let e = 0; e < this._uniformCount; e++) {
                        const n = this.gl.getActiveUniform(this.handle, e),
                            {
                                name: r
                            } = b(n.name);
                        let i = t.getUniformLocation(this.handle, r);
                        if (this._uniformSetters[r] = m(t, i, n), n.size > 1)
                            for (let e = 0; e < n.size; e++) i = t.getUniformLocation(this.handle, `${r}[${e}]`), this._uniformSetters[`${r}[${e}]`] = m(t, i, n)
                    }
                    this._textureIndexCounter = 0
                }
                getActiveUniforms(t, e) {
                    return this.gl2.getActiveUniforms(this.handle, t, e)
                }
                getUniformBlockIndex(t) {
                    return this.gl2.getUniformBlockIndex(this.handle, t)
                }
                getActiveUniformBlockParameter(t, e) {
                    return this.gl2.getActiveUniformBlockParameter(this.handle, t, e)
                }
                uniformBlockBinding(t, e) {
                    this.gl2.uniformBlockBinding(this.handle, t, e)
                }
            }
        },
        94041: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return u
                }
            });
            var r = n(87577);
            const i = "EXT_color_buffer_float";
            var o = {
                    33189: {
                        bpp: 2
                    },
                    33190: {
                        gl2: !0,
                        bpp: 3
                    },
                    36012: {
                        gl2: !0,
                        bpp: 4
                    },
                    36168: {
                        bpp: 1
                    },
                    34041: {
                        bpp: 4
                    },
                    35056: {
                        gl2: !0,
                        bpp: 4
                    },
                    36013: {
                        gl2: !0,
                        bpp: 5
                    },
                    32854: {
                        bpp: 2
                    },
                    36194: {
                        bpp: 2
                    },
                    32855: {
                        bpp: 2
                    },
                    33321: {
                        gl2: !0,
                        bpp: 1
                    },
                    33330: {
                        gl2: !0,
                        bpp: 1
                    },
                    33329: {
                        gl2: !0,
                        bpp: 1
                    },
                    33332: {
                        gl2: !0,
                        bpp: 2
                    },
                    33331: {
                        gl2: !0,
                        bpp: 2
                    },
                    33334: {
                        gl2: !0,
                        bpp: 4
                    },
                    33333: {
                        gl2: !0,
                        bpp: 4
                    },
                    33323: {
                        gl2: !0,
                        bpp: 2
                    },
                    33336: {
                        gl2: !0,
                        bpp: 2
                    },
                    33335: {
                        gl2: !0,
                        bpp: 2
                    },
                    33338: {
                        gl2: !0,
                        bpp: 4
                    },
                    33337: {
                        gl2: !0,
                        bpp: 4
                    },
                    33340: {
                        gl2: !0,
                        bpp: 8
                    },
                    33339: {
                        gl2: !0,
                        bpp: 8
                    },
                    32849: {
                        gl2: !0,
                        bpp: 3
                    },
                    32856: {
                        gl2: !0,
                        bpp: 4
                    },
                    32857: {
                        gl2: !0,
                        bpp: 4
                    },
                    36220: {
                        gl2: !0,
                        bpp: 4
                    },
                    36238: {
                        gl2: !0,
                        bpp: 4
                    },
                    36975: {
                        gl2: !0,
                        bpp: 4
                    },
                    36214: {
                        gl2: !0,
                        bpp: 8
                    },
                    36232: {
                        gl2: !0,
                        bpp: 8
                    },
                    36226: {
                        gl2: !0,
                        bpp: 16
                    },
                    36208: {
                        gl2: !0,
                        bpp: 16
                    },
                    33325: {
                        gl2: i,
                        bpp: 2
                    },
                    33327: {
                        gl2: i,
                        bpp: 4
                    },
                    34842: {
                        gl2: i,
                        bpp: 8
                    },
                    33326: {
                        gl2: i,
                        bpp: 4
                    },
                    33328: {
                        gl2: i,
                        bpp: 8
                    },
                    34836: {
                        gl2: i,
                        bpp: 16
                    },
                    35898: {
                        gl2: i,
                        bpp: 4
                    }
                },
                a = n(1418),
                s = n(22525);
            class u extends r.Z {
                static isSupported(t, {
                    format: e
                } = {
                    format: null
                }) {
                    return !e || function(t, e, n) {
                        const r = n[e];
                        if (!r) return !1;
                        const i = (0, a.D0)(t) && r.gl2 || r.gl1;
                        return "string" === typeof i ? t.getExtension(i) : i
                    }(t, e, o)
                }
                static getSamplesForFormat(t, {
                    format: e
                }) {
                    return t.getInternalformatParameter(36161, e, 32937)
                }
                constructor(t, e = {}) {
                    super(t, e), this.initialize(e), Object.seal(this)
                }
                initialize({
                    format: t,
                    width: e = 1,
                    height: n = 1,
                    samples: r = 0
                }) {
                    return (0, s.h)(t, "Needs format"), this._trackDeallocatedMemory(), this.gl.bindRenderbuffer(36161, this.handle), 0 !== r && (0, a.D0)(this.gl) ? this.gl.renderbufferStorageMultisample(36161, r, t, e, n) : this.gl.renderbufferStorage(36161, t, e, n), this.format = t, this.width = e, this.height = n, this.samples = r, this._trackAllocatedMemory(this.width * this.height * (this.samples || 1) * o[this.format].bpp), this
                }
                resize({
                    width: t,
                    height: e
                }) {
                    return t !== this.width || e !== this.height ? this.initialize({
                        width: t,
                        height: e,
                        format: this.format,
                        samples: this.samples
                    }) : this
                }
                _createHandle() {
                    return this.gl.createRenderbuffer()
                }
                _deleteHandle() {
                    this.gl.deleteRenderbuffer(this.handle), this._trackDeallocatedMemory()
                }
                _bindHandle(t) {
                    this.gl.bindRenderbuffer(36161, t)
                }
                _syncHandle(t) {
                    this.format = this.getParameter(36164), this.width = this.getParameter(36162), this.height = this.getParameter(36163), this.samples = this.getParameter(36011)
                }
                _getParameter(t) {
                    this.gl.bindRenderbuffer(36161, this.handle);
                    return this.gl.getRenderbufferParameter(36161, t)
                }
            }
        },
        87577: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return l
                }
            });
            var r = n(1418),
                i = n(49835),
                o = n(79579),
                a = n(22525),
                s = n(74538),
                u = n(37469);
            const c = "Resource subclass must define virtual methods";
            class l {
                constructor(t, e = {}) {
                    (0, r.JD)(t);
                    const {
                        id: n,
                        userData: i = {}
                    } = e;
                    this.gl = t, this.gl2 = t, this.id = n || (0, s.hQ)(this.constructor.name), this.userData = i, this._bound = !1, this._handle = e.handle, void 0 === this._handle && (this._handle = this._createHandle()), this.byteLength = 0, this._addStats()
                }
                toString() {
                    return `${this.constructor.name}(${this.id})`
                }
                get handle() {
                    return this._handle
                }
                delete({
                    deleteChildren: t = !1
                } = {}) {
                    const e = this._handle && this._deleteHandle(this._handle);
                    return this._handle && this._removeStats(), this._handle = null, e && t && e.filter(Boolean).forEach((t => t.delete())), this
                }
                bind(t = this.handle) {
                    if ("function" !== typeof t) return this._bindHandle(t), this;
                    let e;
                    return this._bound ? e = t() : (this._bindHandle(this.handle), this._bound = !0, e = t(), this._bound = !1, this._bindHandle(null)), e
                }
                unbind() {
                    this.bind(null)
                }
                getParameter(t, e = {}) {
                    t = (0, o.sF)(this.gl, t), (0, a.h)(t);
                    const n = (this.constructor.PARAMETERS || {})[t];
                    if (n) {
                        const t = (0, r.D0)(this.gl);
                        if (!((!("webgl2" in n) || t) && (!("extension" in n) || this.gl.getExtension(n.extension)))) {
                            const e = n.webgl1,
                                r = "webgl2" in n ? n.webgl2 : n.webgl1;
                            return t ? r : e
                        }
                    }
                    return this._getParameter(t, e)
                }
                getParameters(t = {}) {
                    const {
                        parameters: e,
                        keys: n
                    } = t, i = this.constructor.PARAMETERS || {}, a = (0, r.D0)(this.gl), s = {}, u = e || Object.keys(i);
                    for (const r of u) {
                        const e = i[r];
                        if (e && (!("webgl2" in e) || a) && (!("extension" in e) || this.gl.getExtension(e.extension))) {
                            const i = n ? (0, o.km)(this.gl, r) : r;
                            s[i] = this.getParameter(r, t), n && "GLenum" === e.type && (s[i] = (0, o.km)(this.gl, s[i]))
                        }
                    }
                    return s
                }
                setParameter(t, e) {
                    t = (0, o.sF)(this.gl, t), (0, a.h)(t);
                    const n = (this.constructor.PARAMETERS || {})[t];
                    if (n) {
                        const t = (0, r.D0)(this.gl);
                        if (!((!("webgl2" in n) || t) && (!("extension" in n) || this.gl.getExtension(n.extension)))) throw new Error("Parameter not available on this platform");
                        "GLenum" === n.type && (e = (0, o.sF)(e))
                    }
                    return this._setParameter(t, e), this
                }
                setParameters(t) {
                    for (const e in t) this.setParameter(e, t[e]);
                    return this
                }
                stubRemovedMethods(t, e, n) {
                    return (0, u.F)(this, t, e, n)
                }
                initialize(t) {}
                _createHandle() {
                    throw new Error(c)
                }
                _deleteHandle() {
                    throw new Error(c)
                }
                _bindHandle(t) {
                    throw new Error(c)
                }
                _getOptsFromHandle() {
                    throw new Error(c)
                }
                _getParameter(t, e) {
                    throw new Error(c)
                }
                _setParameter(t, e) {
                    throw new Error(c)
                }
                _context() {
                    return this.gl.luma = this.gl.luma || {}, this.gl.luma
                }
                _addStats() {
                    const t = this.constructor.name,
                        e = i.l.get("Resource Counts");
                    e.get("Resources Created").incrementCount(), e.get(`${t}s Created`).incrementCount(), e.get(`${t}s Active`).incrementCount()
                }
                _removeStats() {
                    const t = this.constructor.name;
                    i.l.get("Resource Counts").get(`${t}s Active`).decrementCount()
                }
                _trackAllocatedMemory(t, e = this.constructor.name) {
                    const n = i.l.get("Memory Usage");
                    n.get("GPU Memory").addCount(t), n.get(`${e} Memory`).addCount(t), this.byteLength = t
                }
                _trackDeallocatedMemory(t = this.constructor.name) {
                    const e = i.l.get("Memory Usage");
                    e.get("GPU Memory").subtractCount(this.byteLength), e.get(`${t} Memory`).subtractCount(this.byteLength), this.byteLength = 0
                }
            }
        },
        51621: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return s
                }
            });
            var r = n(1418),
                i = n(35008),
                o = n(22525);
            let a = "";
            class s extends i.Z {
                static isSupported(t, e) {
                    return i.Z.isSupported(t, e)
                }
                constructor(t, e = {}) {
                    var n, i;
                    (0, r.JD)(t), (e instanceof Promise || "string" === typeof e) && (e = {
                        data: e
                    }), "string" === typeof e.data && (e = Object.assign({}, e, {
                        data: (n = e.data, (0, o.h)("string" === typeof n), n = a + n, new Promise(((t, e) => {
                            try {
                                const r = new Image;
                                r.onload = () => t(r), r.onerror = () => e(new Error(`Could not load image ${n}.`)), r.crossOrigin = i && i.crossOrigin || "anonymous", r.src = n
                            } catch (r) {
                                e(r)
                            }
                        })))
                    })), super(t, Object.assign({}, e, {
                        target: 3553
                    })), this.initialize(e), Object.seal(this)
                }
            }
        },
        33889: function(t, e, n) {
            "use strict";
            n.d(e, {
                ae: function() {
                    return i
                },
                C: function() {
                    return o
                },
                pH: function() {
                    return a
                },
                br: function() {
                    return s
                },
                KR: function() {
                    return u
                }
            });
            var r = n(1418);
            const i = {
                    6407: {
                        dataFormat: 6407,
                        types: [5121, 33635]
                    },
                    6408: {
                        dataFormat: 6408,
                        types: [5121, 32819, 32820]
                    },
                    6406: {
                        dataFormat: 6406,
                        types: [5121]
                    },
                    6409: {
                        dataFormat: 6409,
                        types: [5121]
                    },
                    6410: {
                        dataFormat: 6410,
                        types: [5121]
                    },
                    33326: {
                        dataFormat: 6403,
                        types: [5126],
                        gl2: !0
                    },
                    33328: {
                        dataFormat: 33319,
                        types: [5126],
                        gl2: !0
                    },
                    34837: {
                        dataFormat: 6407,
                        types: [5126],
                        gl2: !0
                    },
                    34836: {
                        dataFormat: 6408,
                        types: [5126],
                        gl2: !0
                    }
                },
                o = {
                    6403: 1,
                    36244: 1,
                    33319: 2,
                    33320: 2,
                    6407: 3,
                    36248: 3,
                    6408: 4,
                    36249: 4,
                    6402: 1,
                    34041: 1,
                    6406: 1,
                    6409: 1,
                    6410: 2
                },
                a = {
                    5126: 4,
                    5125: 4,
                    5124: 4,
                    5123: 2,
                    5122: 2,
                    5131: 2,
                    5120: 1,
                    5121: 1
                };

            function s(t, e) {
                const n = i[e];
                if (!n) return !1;
                if (void 0 === n.gl1 && void 0 === n.gl2) return !0;
                const o = (0, r.D0)(t) && n.gl2 || n.gl1;
                return "string" === typeof o ? t.getExtension(o) : o
            }

            function u(t, e) {
                const n = i[e];
                switch (n && n.types[0]) {
                    case 5126:
                        return t.getExtension("OES_texture_float_linear");
                    case 5131:
                        return t.getExtension("OES_texture_half_float_linear");
                    default:
                        return !0
                }
            }
        },
        35008: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return h
                }
            });
            var r = n(1418),
                i = n(89718),
                o = n(87577),
                a = n(53478),
                s = n(33889),
                u = n(22525),
                c = n(74538);
            const l = [9729, 9728],
                f = i.CO.WebGLBuffer || function() {};
            class h extends o.Z {
                static isSupported(t, e = {}) {
                    const {
                        format: n,
                        linearFiltering: r
                    } = e;
                    let i = !0;
                    return n && (i = i && (0, s.br)(t, n), i = i && (!r || (0, s.KR)(t, n))), i
                }
                constructor(t, e) {
                    const {
                        id: n = (0, c.hQ)("texture"),
                        handle: r,
                        target: i
                    } = e;
                    super(t, {
                        id: n,
                        handle: r
                    }), this.target = i, this.textureUnit = void 0, this.loaded = !1, this.width = void 0, this.height = void 0, this.depth = void 0, this.format = void 0, this.type = void 0, this.dataFormat = void 0, this.border = void 0, this.textureUnit = void 0, this.mipmaps = void 0
                }
                toString() {
                    return `Texture(${this.id},${this.width}x${this.height})`
                }
                initialize(t = {}) {
                    let e = t.data;
                    if (e instanceof Promise) return e.then((e => this.initialize(Object.assign({}, t, {
                        pixels: e,
                        data: e
                    })))), this;
                    const n = "undefined" !== typeof HTMLVideoElement && e instanceof HTMLVideoElement;
                    if (n && e.readyState < HTMLVideoElement.HAVE_METADATA) return this._video = null, e.addEventListener("loadeddata", (() => this.initialize(t))), this;
                    const {
                        pixels: i = null,
                        format: o = 6408,
                        border: a = 0,
                        recreate: s = !1,
                        parameters: u = {},
                        pixelStore: c = {},
                        textureUnit: l
                    } = t;
                    e || (e = i);
                    let {
                        width: f,
                        height: h,
                        dataFormat: d,
                        type: p,
                        compressed: g = !1,
                        mipmaps: y = !0
                    } = t;
                    const {
                        depth: v = 0
                    } = t;
                    return ({
                        width: f,
                        height: h,
                        compressed: g,
                        dataFormat: d,
                        type: p
                    } = this._deduceParameters({
                        format: o,
                        type: p,
                        dataFormat: d,
                        compressed: g,
                        data: e,
                        width: f,
                        height: h
                    })), this.width = f, this.height = h, this.depth = v, this.format = o, this.type = p, this.dataFormat = d, this.border = a, this.textureUnit = l, Number.isFinite(this.textureUnit) && (this.gl.activeTexture(33984 + this.textureUnit), this.gl.bindTexture(this.target, this.handle)), y && this._isNPOT() && (r.cM.warn(`texture: ${this} is Non-Power-Of-Two, disabling mipmaping`)(), y = !1, this._updateForNPOT(u)), this.mipmaps = y, this.setImageData({
                        data: e,
                        width: f,
                        height: h,
                        depth: v,
                        format: o,
                        type: p,
                        dataFormat: d,
                        border: a,
                        mipmaps: y,
                        parameters: c,
                        compressed: g
                    }), y && this.generateMipmap(), this.setParameters(u), s && (this.data = e), n && (this._video = {
                        video: e,
                        parameters: u,
                        lastTime: e.readyState >= HTMLVideoElement.HAVE_CURRENT_DATA ? e.currentTime : -1
                    }), this
                }
                update() {
                    if (this._video) {
                        const {
                            video: t,
                            parameters: e,
                            lastTime: n
                        } = this._video;
                        if (n === t.currentTime || t.readyState < HTMLVideoElement.HAVE_CURRENT_DATA) return;
                        this.setSubImageData({
                            data: t,
                            parameters: e
                        }), this.mipmaps && this.generateMipmap(), this._video.lastTime = t.currentTime
                    }
                }
                resize({
                    height: t,
                    width: e,
                    mipmaps: n = !1
                }) {
                    return e !== this.width || t !== this.height ? this.initialize({
                        width: e,
                        height: t,
                        format: this.format,
                        type: this.type,
                        dataFormat: this.dataFormat,
                        border: this.border,
                        mipmaps: n
                    }) : this
                }
                generateMipmap(t = {}) {
                    return this._isNPOT() ? (r.cM.warn(`texture: ${this} is Non-Power-Of-Two, disabling mipmaping`)(), this) : (this.mipmaps = !0, this.gl.bindTexture(this.target, this.handle), (0, r.s8)(this.gl, t, (() => {
                        this.gl.generateMipmap(this.target)
                    })), this.gl.bindTexture(this.target, null), this)
                }
                setImageData(t) {
                    this._trackDeallocatedMemory("Texture");
                    const {
                        target: e = this.target,
                        pixels: n = null,
                        level: i = 0,
                        format: o = this.format,
                        border: a = this.border,
                        offset: c = 0,
                        parameters: l = {}
                    } = t;
                    let {
                        data: f = null,
                        type: h = this.type,
                        width: d = this.width,
                        height: p = this.height,
                        dataFormat: g = this.dataFormat,
                        compressed: y = !1
                    } = t;
                    f || (f = n), ({
                        type: h,
                        dataFormat: g,
                        compressed: y,
                        width: d,
                        height: p
                    } = this._deduceParameters({
                        format: o,
                        type: h,
                        dataFormat: g,
                        compressed: y,
                        data: f,
                        width: d,
                        height: p
                    }));
                    const {
                        gl: v
                    } = this;
                    v.bindTexture(this.target, this.handle);
                    let m, b = null;
                    if (({
                            data: f,
                            dataType: b
                        } = this._getDataType({
                            data: f,
                            compressed: y
                        })), (0, r.s8)(this.gl, l, (() => {
                            switch (b) {
                                case "null":
                                    v.texImage2D(e, i, o, d, p, a, g, h, f);
                                    break;
                                case "typed-array":
                                    v.texImage2D(e, i, o, d, p, a, g, h, f, c);
                                    break;
                                case "buffer":
                                    m = (0, r.KQ)(v), m.bindBuffer(35052, f.handle || f), m.texImage2D(e, i, o, d, p, a, g, h, c), m.bindBuffer(35052, null);
                                    break;
                                case "browser-object":
                                    (0, r.D0)(v) ? v.texImage2D(e, i, o, d, p, a, g, h, f): v.texImage2D(e, i, o, g, h, f);
                                    break;
                                case "compressed":
                                    for (const [t, n] of f.entries()) v.compressedTexImage2D(e, t, n.format, n.width, n.height, a, n.data);
                                    break;
                                default:
                                    (0, u.h)(!1, "Unknown image data type")
                            }
                        })), f && f.byteLength) this._trackAllocatedMemory(f.byteLength, "Texture");
                    else {
                        const t = s.C[this.dataFormat] || 4,
                            e = s.pH[this.type] || 1;
                        this._trackAllocatedMemory(this.width * this.height * t * e, "Texture")
                    }
                    return this.loaded = !0, this
                }
                setSubImageData({
                    target: t = this.target,
                    pixels: e = null,
                    data: n = null,
                    x: i = 0,
                    y: o = 0,
                    width: s = this.width,
                    height: c = this.height,
                    level: l = 0,
                    format: h = this.format,
                    type: d = this.type,
                    dataFormat: p = this.dataFormat,
                    compressed: g = !1,
                    offset: y = 0,
                    border: v = this.border,
                    parameters: m = {}
                }) {
                    if (({
                            type: d,
                            dataFormat: p,
                            compressed: g,
                            width: s,
                            height: c
                        } = this._deduceParameters({
                            format: h,
                            type: d,
                            dataFormat: p,
                            compressed: g,
                            data: n,
                            width: s,
                            height: c
                        })), (0, u.h)(0 === this.depth, "texSubImage not supported for 3D textures"), n || (n = e), n && n.data) {
                        const t = n;
                        n = t.data, s = t.shape[0], c = t.shape[1]
                    }
                    n instanceof a.Z && (n = n.handle), this.gl.bindTexture(this.target, this.handle), (0, r.s8)(this.gl, m, (() => {
                        if (g) this.gl.compressedTexSubImage2D(t, l, i, o, s, c, h, n);
                        else if (null === n) this.gl.texSubImage2D(t, l, i, o, s, c, p, d, null);
                        else if (ArrayBuffer.isView(n)) this.gl.texSubImage2D(t, l, i, o, s, c, p, d, n, y);
                        else if (n instanceof f) {
                            const e = (0, r.KQ)(this.gl);
                            e.bindBuffer(35052, n), e.texSubImage2D(t, l, i, o, s, c, p, d, y), e.bindBuffer(35052, null)
                        } else if ((0, r.D0)(this.gl)) {
                            (0, r.KQ)(this.gl).texSubImage2D(t, l, i, o, s, c, p, d, n)
                        } else this.gl.texSubImage2D(t, l, i, o, p, d, n)
                    })), this.gl.bindTexture(this.target, null)
                }
                copyFramebuffer(t = {}) {
                    return r.cM.error("Texture.copyFramebuffer({...}) is no logner supported, use copyToTexture(source, target, opts})")(), null
                }
                getActiveUnit() {
                    return this.gl.getParameter(34016) - 33984
                }
                bind(t = this.textureUnit) {
                    const {
                        gl: e
                    } = this;
                    return void 0 !== t && (this.textureUnit = t, e.activeTexture(33984 + t)), e.bindTexture(this.target, this.handle), t
                }
                unbind(t = this.textureUnit) {
                    const {
                        gl: e
                    } = this;
                    return void 0 !== t && (this.textureUnit = t, e.activeTexture(33984 + t)), e.bindTexture(this.target, null), t
                }
                _getDataType({
                    data: t,
                    compressed: e = !1
                }) {
                    return e ? {
                        data: t,
                        dataType: "compressed"
                    } : null === t ? {
                        data: t,
                        dataType: "null"
                    } : ArrayBuffer.isView(t) ? {
                        data: t,
                        dataType: "typed-array"
                    } : t instanceof a.Z ? {
                        data: t.handle,
                        dataType: "buffer"
                    } : t instanceof f ? {
                        data: t,
                        dataType: "buffer"
                    } : {
                        data: t,
                        dataType: "browser-object"
                    }
                }
                _deduceParameters(t) {
                    const {
                        format: e,
                        data: n
                    } = t;
                    let {
                        width: r,
                        height: i,
                        dataFormat: o,
                        type: a,
                        compressed: u
                    } = t;
                    const c = s.ae[e];
                    return o = o || c && c.dataFormat, a = a || c && c.types[0], u = u || c && c.compressed, ({
                        width: r,
                        height: i
                    } = this._deduceImageSize(n, r, i)), {
                        dataFormat: o,
                        type: a,
                        compressed: u,
                        width: r,
                        height: i,
                        format: e,
                        data: n
                    }
                }
                _deduceImageSize(t, e, n) {
                    let r;
                    return r = "undefined" !== typeof ImageData && t instanceof ImageData ? {
                        width: t.width,
                        height: t.height
                    } : "undefined" !== typeof HTMLImageElement && t instanceof HTMLImageElement ? {
                        width: t.naturalWidth,
                        height: t.naturalHeight
                    } : "undefined" !== typeof HTMLCanvasElement && t instanceof HTMLCanvasElement || "undefined" !== typeof ImageBitmap && t instanceof ImageBitmap ? {
                        width: t.width,
                        height: t.height
                    } : "undefined" !== typeof HTMLVideoElement && t instanceof HTMLVideoElement ? {
                        width: t.videoWidth,
                        height: t.videoHeight
                    } : t ? {
                        width: e,
                        height: n
                    } : {
                        width: e >= 0 ? e : 1,
                        height: n >= 0 ? n : 1
                    }, (0, u.h)(r, "Could not deduced texture size"), (0, u.h)(void 0 === e || r.width === e, "Deduced texture width does not match supplied width"), (0, u.h)(void 0 === n || r.height === n, "Deduced texture height does not match supplied height"), r
                }
                _createHandle() {
                    return this.gl.createTexture()
                }
                _deleteHandle() {
                    this.gl.deleteTexture(this.handle), this._trackDeallocatedMemory("Texture")
                }
                _getParameter(t) {
                    switch (t) {
                        case 4096:
                            return this.width;
                        case 4097:
                            return this.height;
                        default:
                            this.gl.bindTexture(this.target, this.handle);
                            const e = this.gl.getTexParameter(this.target, t);
                            return this.gl.bindTexture(this.target, null), e
                    }
                }
                _setParameter(t, e) {
                    switch (this.gl.bindTexture(this.target, this.handle), e = this._getNPOTParam(t, e), t) {
                        case 33082:
                        case 33083:
                            this.gl.texParameterf(this.handle, t, e);
                            break;
                        case 4096:
                        case 4097:
                            (0, u.h)(!1);
                            break;
                        default:
                            this.gl.texParameteri(this.target, t, e)
                    }
                    return this.gl.bindTexture(this.target, null), this
                }
                _isNPOT() {
                    return !(0, r.D0)(this.gl) && (!(!this.width || !this.height) && (!(0, c.wt)(this.width) || !(0, c.wt)(this.height)))
                }
                _updateForNPOT(t) {
                    void 0 === t[this.gl.TEXTURE_MIN_FILTER] && (t[this.gl.TEXTURE_MIN_FILTER] = this.gl.LINEAR), void 0 === t[this.gl.TEXTURE_WRAP_S] && (t[this.gl.TEXTURE_WRAP_S] = this.gl.CLAMP_TO_EDGE), void 0 === t[this.gl.TEXTURE_WRAP_T] && (t[this.gl.TEXTURE_WRAP_T] = this.gl.CLAMP_TO_EDGE)
                }
                _getNPOTParam(t, e) {
                    if (this._isNPOT()) switch (t) {
                        case 10241:
                            -1 === l.indexOf(e) && (e = 9729);
                            break;
                        case 10242:
                        case 10243:
                            33071 !== e && (e = 33071)
                    }
                    return e
                }
            }
        },
        51053: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return s
                }
            });
            var r = n(1418),
                i = n(87577),
                o = n(53478),
                a = n(74538);
            class s extends i.Z {
                static isSupported(t) {
                    return (0, r.D0)(t)
                }
                constructor(t, e = {}) {
                    (0, r.KQ)(t), super(t, e), this.initialize(e), this.stubRemovedMethods("TransformFeedback", "v6.0", ["pause", "resume"]), Object.seal(this)
                }
                initialize(t = {}) {
                    return this.buffers = {}, this.unused = {}, this.configuration = null, this.bindOnUse = !0, (0, a.nK)(this.buffers) || this.bind((() => this._unbindBuffers())), this.setProps(t), this
                }
                setProps(t) {
                    "program" in t && (this.configuration = t.program && t.program.configuration), "configuration" in t && (this.configuration = t.configuration), "bindOnUse" in t && (t = t.bindOnUse), "buffers" in t && this.setBuffers(t.buffers)
                }
                setBuffers(t = {}) {
                    return this.bind((() => {
                        for (const e in t) this.setBuffer(e, t[e])
                    })), this
                }
                setBuffer(t, e) {
                    const n = this._getVaryingIndex(t),
                        {
                            buffer: i,
                            byteSize: o,
                            byteOffset: a
                        } = this._getBufferParams(e);
                    return n < 0 ? (this.unused[t] = i, r.cM.warn((() => `${this.id} unused varying buffer ${t}`))(), this) : (this.buffers[n] = e, this.bindOnUse || this._bindBuffer(n, i, a, o), this)
                }
                begin(t = 0) {
                    return this.gl.bindTransformFeedback(36386, this.handle), this._bindBuffers(), this.gl.beginTransformFeedback(t), this
                }
                end() {
                    return this.gl.endTransformFeedback(), this._unbindBuffers(), this.gl.bindTransformFeedback(36386, null), this
                }
                _getBufferParams(t) {
                    let e, n, r;
                    return t instanceof o.Z === !1 ? (r = t.buffer, n = t.byteSize, e = t.byteOffset) : r = t, void 0 === e && void 0 === n || (e = e || 0, n = n || r.byteLength - e), {
                        buffer: r,
                        byteOffset: e,
                        byteSize: n
                    }
                }
                _getVaryingInfo(t) {
                    return this.configuration && this.configuration.getVaryingInfo(t)
                }
                _getVaryingIndex(t) {
                    if (this.configuration) return this.configuration.getVaryingInfo(t).location;
                    const e = Number(t);
                    return Number.isFinite(e) ? e : -1
                }
                _bindBuffers() {
                    if (this.bindOnUse)
                        for (const t in this.buffers) {
                            const {
                                buffer: e,
                                byteSize: n,
                                byteOffset: r
                            } = this._getBufferParams(this.buffers[t]);
                            this._bindBuffer(t, e, r, n)
                        }
                }
                _unbindBuffers() {
                    if (this.bindOnUse)
                        for (const t in this.buffers) this._bindBuffer(t, null)
                }
                _bindBuffer(t, e, n = 0, r) {
                    const i = e && e.handle;
                    return i && void 0 !== r ? this.gl.bindBufferRange(35982, t, i, n, r) : this.gl.bindBufferBase(35982, t, i), this
                }
                _createHandle() {
                    return this.gl.createTransformFeedback()
                }
                _deleteHandle() {
                    this.gl.deleteTransformFeedback(this.handle)
                }
                _bindHandle(t) {
                    this.gl.bindTransformFeedback(36386, this.handle)
                }
            }
        },
        44211: function(t, e, n) {
            "use strict";
            n.d(e, {
                U6: function() {
                    return a
                },
                ag: function() {
                    return s
                },
                N$: function() {
                    return u
                }
            });
            var r = n(6948),
                i = n(1418),
                o = n(22525);

            function a(t, e) {
                return s(t, e)
            }

            function s(t, e) {
                return (e = Array.isArray(e) ? e : [e]).every((e => c(t, e)))
            }

            function u(t) {
                t.luma = t.luma || {}, t.luma.caps = t.luma.caps || {};
                for (const e in r.Z) void 0 === t.luma.caps[e] && (t.luma.caps[e] = c(t, e));
                return t.luma.caps
            }

            function c(t, e) {
                return t.luma = t.luma || {}, t.luma.caps = t.luma.caps || {}, void 0 === t.luma.caps[e] && (t.luma.caps[e] = function(t, e) {
                    const n = r.Z[e];
                    let a;
                    (0, o.h)(n, e);
                    const s = (0, i.D0)(t) && n[1] || n[0];
                    if ("function" === typeof s) a = s(t);
                    else if (Array.isArray(s)) {
                        a = !0;
                        for (const e of s) a = a && Boolean(t.getExtension(e))
                    } else "string" === typeof s ? a = Boolean(t.getExtension(s)) : "boolean" === typeof s ? a = s : (0, o.h)(!1);
                    return a
                }(t, e)), t.luma.caps[e] || i.cM.log(2, `Feature: ${e} not supported`)(), t.luma.caps[e]
            }
        },
        6948: function(t, e, n) {
            "use strict";
            n.d(e, {
                h: function() {
                    return o
                }
            });
            var r = n(53849),
                i = n(51621);
            const o = {
                WEBGL2: "WEBGL2",
                VERTEX_ARRAY_OBJECT: "VERTEX_ARRAY_OBJECT",
                TIMER_QUERY: "TIMER_QUERY",
                INSTANCED_RENDERING: "INSTANCED_RENDERING",
                MULTIPLE_RENDER_TARGETS: "MULTIPLE_RENDER_TARGETS",
                ELEMENT_INDEX_UINT32: "ELEMENT_INDEX_UINT32",
                BLEND_EQUATION_MINMAX: "BLEND_EQUATION_MINMAX",
                FLOAT_BLEND: "FLOAT_BLEND",
                COLOR_ENCODING_SRGB: "COLOR_ENCODING_SRGB",
                TEXTURE_DEPTH: "TEXTURE_DEPTH",
                TEXTURE_FLOAT: "TEXTURE_FLOAT",
                TEXTURE_HALF_FLOAT: "TEXTURE_HALF_FLOAT",
                TEXTURE_FILTER_LINEAR_FLOAT: "TEXTURE_FILTER_LINEAR_FLOAT",
                TEXTURE_FILTER_LINEAR_HALF_FLOAT: "TEXTURE_FILTER_LINEAR_HALF_FLOAT",
                TEXTURE_FILTER_ANISOTROPIC: "TEXTURE_FILTER_ANISOTROPIC",
                COLOR_ATTACHMENT_RGBA32F: "COLOR_ATTACHMENT_RGBA32F",
                COLOR_ATTACHMENT_FLOAT: "COLOR_ATTACHMENT_FLOAT",
                COLOR_ATTACHMENT_HALF_FLOAT: "COLOR_ATTACHMENT_HALF_FLOAT",
                GLSL_FRAG_DATA: "GLSL_FRAG_DATA",
                GLSL_FRAG_DEPTH: "GLSL_FRAG_DEPTH",
                GLSL_DERIVATIVES: "GLSL_DERIVATIVES",
                GLSL_TEXTURE_LOD: "GLSL_TEXTURE_LOD"
            };
            e.Z = {
                [o.WEBGL2]: [!1, !0],
                [o.VERTEX_ARRAY_OBJECT]: ["OES_vertex_array_object", !0],
                [o.TIMER_QUERY]: ["EXT_disjoint_timer_query", "EXT_disjoint_timer_query_webgl2"],
                [o.INSTANCED_RENDERING]: ["ANGLE_instanced_arrays", !0],
                [o.MULTIPLE_RENDER_TARGETS]: ["WEBGL_draw_buffers", !0],
                [o.ELEMENT_INDEX_UINT32]: ["OES_element_index_uint", !0],
                [o.BLEND_EQUATION_MINMAX]: ["EXT_blend_minmax", !0],
                [o.FLOAT_BLEND]: ["EXT_float_blend"],
                [o.COLOR_ENCODING_SRGB]: ["EXT_sRGB", !0],
                [o.TEXTURE_DEPTH]: ["WEBGL_depth_texture", !0],
                [o.TEXTURE_FLOAT]: ["OES_texture_float", !0],
                [o.TEXTURE_HALF_FLOAT]: ["OES_texture_half_float", !0],
                [o.TEXTURE_FILTER_LINEAR_FLOAT]: ["OES_texture_float_linear"],
                [o.TEXTURE_FILTER_LINEAR_HALF_FLOAT]: ["OES_texture_half_float_linear"],
                [o.TEXTURE_FILTER_ANISOTROPIC]: ["EXT_texture_filter_anisotropic"],
                [o.COLOR_ATTACHMENT_RGBA32F]: [function(t) {
                    const e = new i.Z(t, {
                            format: 6408,
                            type: 5126,
                            dataFormat: 6408
                        }),
                        n = new r.Z(t, {
                            id: "test-framebuffer",
                            check: !1,
                            attachments: {
                                36064: e
                            }
                        }),
                        o = n.getStatus();
                    return e.delete(), n.delete(), 36053 === o
                }, "EXT_color_buffer_float"],
                [o.COLOR_ATTACHMENT_FLOAT]: [!1, "EXT_color_buffer_float"],
                [o.COLOR_ATTACHMENT_HALF_FLOAT]: ["EXT_color_buffer_half_float"],
                [o.GLSL_FRAG_DATA]: ["WEBGL_draw_buffers", !0],
                [o.GLSL_FRAG_DEPTH]: ["EXT_frag_depth", !0],
                [o.GLSL_DERIVATIVES]: ["OES_standard_derivatives", !0],
                [o.GLSL_TEXTURE_LOD]: ["EXT_shader_texture_lod", !0]
            }
        },
        49835: function(t, e, n) {
            "use strict";
            n.d(e, {
                l: function() {
                    return s
                }
            });
            var r = n(1418),
                i = n(50009),
                o = n(89718);
            const a = "8.5.10";
            const s = new class {
                constructor() {
                    this.stats = new Map
                }
                get(t) {
                    return this.stats.has(t) || this.stats.set(t, new i.jk({
                        id: t
                    })), this.stats.get(t)
                }
            };
            if (o.CO.luma && o.CO.luma.VERSION !== a) throw new Error(`luma.gl - multiple VERSIONs detected: ${o.CO.luma.VERSION} vs 8.5.10`);
            o.CO.luma || ((0, o.jU)() && r.cM.log(1, "luma.gl 8.5.10 - set luma.log.level=1 (or higher) to trace rendering")(), o.CO.luma = o.CO.luma || {
                VERSION: a,
                version: a,
                log: r.cM,
                stats: s,
                globals: {
                    modules: {},
                    nodeIO: {}
                }
            });
            o.CO.luma
        },
        22525: function(t, e, n) {
            "use strict";

            function r(t, e) {
                if (!t) throw new Error(e || "luma.gl: assertion failed.")
            }
            n.d(e, {
                h: function() {
                    return r
                }
            })
        },
        82610: function(t, e, n) {
            "use strict";
            n.d(e, {
                k: function() {
                    return i
                }
            });
            var r = n(1418);

            function i(t, e, n) {
                const {
                    removedProps: i = {},
                    deprecatedProps: o = {},
                    replacedProps: a = {}
                } = n;
                for (const u in i)
                    if (u in e) {
                        const e = i[u] ? `${t}.${i[u]}` : "N/A";
                        r.cM.removed(`${t}.${u}`, e)()
                    }
                for (const u in o)
                    if (u in e) {
                        const e = o[u];
                        r.cM.deprecated(`${t}.${u}`, `${t}.${e}`)()
                    }
                let s = null;
                for (const u in a)
                    if (u in e) {
                        const n = a[u];
                        r.cM.deprecated(`${t}.${u}`, `${t}.${n}`)(), s = s || Object.assign({}, e), s[n] = e[u], delete s[u]
                    }
                return s || e
            }
        },
        37469: function(t, e, n) {
            "use strict";
            n.d(e, {
                F: function() {
                    return i
                }
            });
            var r = n(1418);

            function i(t, e, n, i) {
                const o = `See luma.gl ${n} Upgrade Guide at https://luma.gl/docs/upgrade-guide`,
                    a = Object.getPrototypeOf(t);
                i.forEach((t => {
                    a.methodName || (a[t] = () => {
                        throw r.cM.removed(`Calling removed method ${e}.${t}: `, o)(), new Error(t)
                    })
                }))
            }
        },
        74538: function(t, e, n) {
            "use strict";
            n.d(e, {
                hQ: function() {
                    return o
                },
                wt: function() {
                    return a
                },
                nK: function() {
                    return s
                }
            });
            var r = n(22525);
            const i = {};

            function o(t = "id") {
                i[t] = i[t] || 1;
                return `${t}-${i[t]++}`
            }

            function a(t) {
                return (0, r.h)("number" === typeof t, "Input must be a number"), t && 0 === (t & t - 1)
            }

            function s(t) {
                let e = !0;
                for (const n in t) {
                    e = !1;
                    break
                }
                return e
            }
        },
        38522: function(t, e, n) {
            "use strict";
            n.d(e, {
                $Z: function() {
                    return u
                },
                hJ: function() {
                    return c
                },
                jG: function() {
                    return l
                }
            });
            var r = n(22525);
            const i = 5126,
                o = 5124,
                a = 5125,
                s = {
                    [i]: [i, 1, "float"],
                    35664: [i, 2, "vec2"],
                    35665: [i, 3, "vec3"],
                    35666: [i, 4, "vec4"],
                    [o]: [o, 1, "int"],
                    35667: [o, 2, "ivec2"],
                    35668: [o, 3, "ivec3"],
                    35669: [o, 4, "ivec4"],
                    [a]: [a, 1, "uint"],
                    36294: [a, 2, "uvec2"],
                    36295: [a, 3, "uvec3"],
                    36296: [a, 4, "uvec4"],
                    35670: [i, 1, "bool"],
                    35671: [i, 2, "bvec2"],
                    35672: [i, 3, "bvec3"],
                    35673: [i, 4, "bvec4"],
                    35674: [i, 8, "mat2"],
                    35685: [i, 8, "mat2x3"],
                    35686: [i, 8, "mat2x4"],
                    35675: [i, 12, "mat3"],
                    35687: [i, 12, "mat3x2"],
                    35688: [i, 12, "mat3x4"],
                    35676: [i, 16, "mat4"],
                    35689: [i, 16, "mat4x2"],
                    35690: [i, 16, "mat4x3"]
                };

            function u(t) {
                switch (t) {
                    case 0:
                        return 0;
                    case 1:
                    case 3:
                    case 2:
                        return 1;
                    case 4:
                    case 5:
                    case 6:
                        return 4;
                    default:
                        return (0, r.h)(!1), 0
                }
            }

            function c(t) {
                const e = s[t];
                if (!e) return null;
                const [n, r] = e;
                return {
                    type: n,
                    components: r
                }
            }

            function l(t, e) {
                switch (t) {
                    case 5120:
                    case 5121:
                    case 5122:
                    case 5123:
                        t = i
                }
                for (const n in s) {
                    const [r, i, o] = s[n];
                    if (r === t && i === e) return {
                        glType: n,
                        name: o
                    }
                }
                return null
            }
        },
        79579: function(t, e, n) {
            "use strict";
            n.d(e, {
                sF: function() {
                    return i
                },
                km: function() {
                    return o
                }
            });
            var r = n(22525);

            function i(t, e) {
                if ("string" !== typeof e) return e;
                const n = Number(e);
                if (!isNaN(n)) return n;
                const i = t[e = e.replace(/^.*\./, "")];
                return (0, r.h)(void 0 !== i, `Accessing undefined constant GL.${e}`), i
            }

            function o(t, e) {
                e = Number(e);
                for (const n in t)
                    if (t[n] === e) return `GL.${n}`;
                return String(e)
            }
        },
        73462: function(t, e, n) {
            "use strict";
            n.d(e, {
                h: function() {
                    return d
                },
                Y: function() {
                    return p
                }
            });
            var r = n(51621),
                i = n(1418),
                o = n(35008);
            const a = [34069, 34070, 34071, 34072, 34073, 34074];
            class s extends o.Z {
                constructor(t, e = {}) {
                    (0, i.JD)(t), super(t, Object.assign({}, e, {
                        target: 34067
                    })), this.initialize(e), Object.seal(this)
                }
                initialize(t = {}) {
                    const {
                        mipmaps: e = !0,
                        parameters: n = {}
                    } = t;
                    return this.opts = t, this.setCubeMapImageData(t).then((() => {
                        this.loaded = !0, e && this.generateMipmap(t), this.setParameters(n)
                    })), this
                }
                subImage({
                    face: t,
                    data: e,
                    x: n = 0,
                    y: r = 0,
                    mipmapLevel: i = 0
                }) {
                    return this._subImage({
                        target: t,
                        data: e,
                        x: n,
                        y: r,
                        mipmapLevel: i
                    })
                }
                async setCubeMapImageData({
                    width: t,
                    height: e,
                    pixels: n,
                    data: r,
                    border: o = 0,
                    format: s = 6408,
                    type: u = 5121
                }) {
                    const {
                        gl: c
                    } = this, l = n || r, f = await Promise.all(a.map((t => {
                        const e = l[t];
                        return Promise.all(Array.isArray(e) ? e : [e])
                    })));
                    this.bind(), a.forEach(((n, r) => {
                        f[r].length > 1 && !1 !== this.opts.mipmaps && i.cM.warn(`${this.id} has mipmap and multiple LODs.`)(), f[r].forEach(((r, i) => {
                            t && e ? c.texImage2D(n, i, s, t, e, o, s, u, r) : c.texImage2D(n, i, s, s, u, r)
                        }))
                    })), this.unbind()
                }
                setImageDataForFace(t) {
                    const {
                        face: e,
                        width: n,
                        height: r,
                        pixels: i,
                        data: o,
                        border: a = 0,
                        format: s = 6408,
                        type: u = 5121
                    } = t, {
                        gl: c
                    } = this, l = i || o;
                    return this.bind(), l instanceof Promise ? l.then((n => this.setImageDataForFace(Object.assign({}, t, {
                        face: e,
                        data: n,
                        pixels: n
                    })))) : this.width || this.height ? c.texImage2D(e, 0, s, n, r, a, s, u, l) : c.texImage2D(e, 0, s, s, u, l), this
                }
            }
            s.FACES = a;
            var u = n(33889),
                c = n(53478);
            class l extends o.Z {
                static isSupported(t) {
                    return (0, i.D0)(t)
                }
                constructor(t, e = {}) {
                    (0, i.KQ)(t), super(t, e = Object.assign({
                        depth: 1
                    }, e, {
                        target: 32879,
                        unpackFlipY: !1
                    })), this.initialize(e), Object.seal(this)
                }
                setImageData({
                    level: t = 0,
                    dataFormat: e = 6408,
                    width: n,
                    height: r,
                    depth: o = 1,
                    border: a = 0,
                    format: s,
                    type: l = 5121,
                    offset: f = 0,
                    data: h,
                    parameters: d = {}
                }) {
                    if (this._trackDeallocatedMemory("Texture"), this.gl.bindTexture(this.target, this.handle), (0, i.s8)(this.gl, d, (() => {
                            ArrayBuffer.isView(h) && this.gl.texImage3D(this.target, t, e, n, r, o, a, s, l, h), h instanceof c.Z && (this.gl.bindBuffer(35052, h.handle), this.gl.texImage3D(this.target, t, e, n, r, o, a, s, l, f))
                        })), h && h.byteLength) this._trackAllocatedMemory(h.byteLength, "Texture");
                    else {
                        const t = u.C[this.dataFormat] || 4,
                            e = u.pH[this.type] || 1;
                        this._trackAllocatedMemory(this.width * this.height * this.depth * t * e, "Texture")
                    }
                    return this.loaded = !0, this
                }
            }
            var f = n(53849),
                h = n(22525);

            function d(t, e) {
                (0, h.h)(t instanceof r.Z || t instanceof s || t instanceof l);
                const n = t.constructor,
                    {
                        gl: i,
                        width: o,
                        height: a,
                        format: u,
                        type: c,
                        dataFormat: f,
                        border: d,
                        mipmaps: p
                    } = t;
                return new n(i, Object.assign({
                    width: o,
                    height: a,
                    format: u,
                    type: c,
                    dataFormat: f,
                    border: d,
                    mipmaps: p
                }, e))
            }

            function p(t, e) {
                const {
                    gl: n,
                    width: r,
                    height: i,
                    id: o
                } = t;
                return new f.Z(n, Object.assign({}, e, {
                    id: `framebuffer-for-${o}`,
                    width: r,
                    height: i,
                    attachments: {
                        36064: t
                    }
                }))
            }
        },
        9335: function(t, e, n) {
            "use strict";
            n.d(e, {
                O: function() {
                    return r
                },
                vN: function() {
                    return i
                },
                c$: function() {
                    return o
                },
                KS: function() {
                    return a
                }
            });

            function r(t) {
                switch (ArrayBuffer.isView(t) ? t.constructor : t) {
                    case Float32Array:
                        return 5126;
                    case Uint16Array:
                        return 5123;
                    case Uint32Array:
                        return 5125;
                    case Uint8Array:
                    case Uint8ClampedArray:
                        return 5121;
                    case Int8Array:
                        return 5120;
                    case Int16Array:
                        return 5122;
                    case Int32Array:
                        return 5124;
                    default:
                        throw new Error("Failed to deduce GL constant from typed array")
                }
            }

            function i(t, {
                clamped: e = !0
            } = {}) {
                switch (t) {
                    case 5126:
                        return Float32Array;
                    case 5123:
                    case 33635:
                    case 32819:
                    case 32820:
                        return Uint16Array;
                    case 5125:
                        return Uint32Array;
                    case 5121:
                        return e ? Uint8ClampedArray : Uint8Array;
                    case 5120:
                        return Int8Array;
                    case 5122:
                        return Int16Array;
                    case 5124:
                        return Int32Array;
                    default:
                        throw new Error("Failed to deduce typed array type from GL constant")
                }
            }

            function o({
                data: t,
                width: e,
                height: n,
                bytesPerPixel: r = 4,
                temp: i
            }) {
                const o = e * r;
                i = i || new Uint8Array(o);
                for (let a = 0; a < n / 2; ++a) {
                    const e = a * o,
                        r = (n - a - 1) * o;
                    i.set(t.subarray(e, e + o)), t.copyWithin(e, r, r + o), t.set(i, r)
                }
            }

            function a({
                data: t,
                width: e,
                height: n
            }) {
                const r = Math.round(e / 2),
                    i = Math.round(n / 2),
                    o = new Uint8Array(r * i * 4);
                for (let a = 0; a < i; a++)
                    for (let n = 0; n < r; n++)
                        for (let i = 0; i < 4; i++) o[4 * (a * r + n) + i] = t[4 * (2 * a * e + 2 * n) + i];
                return {
                    data: o,
                    width: r,
                    height: i
                }
            }
        },
        43911: function(t, e, n) {
            var r = n(23673),
                i = {};

            function o(t) {
                return i[t = t || 256] || (i[t] = new r({
                    size: t
                })), i[t]
            }
            t.exports.P = function(t, e, n, r, i, a) {
                n = void 0 === n ? 0 : n, r = void 0 === r ? 20 : r;
                var s = o(i),
                    u = r,
                    c = s.px([t[0], t[1]], u),
                    l = s.px([t[2], t[3]], u),
                    f = l[0] - c[0],
                    h = c[1] - l[1],
                    d = c[0] + f / 2,
                    p = l[1] + h / 2,
                    g = [f / e[0], h / e[1]],
                    y = function(t, e, n) {
                        var r = Math.min(t - Math.log(e[0]) / Math.log(2), t - Math.log(e[1]) / Math.log(2));
                        return n ? r : Math.floor(r)
                    }(u, g, a),
                    v = s.ll([d, p], u),
                    m = Math.max(n, Math.min(r, y));
                return {
                    center: v,
                    zoom: m
                }
            }, t.exports.A = function(t, e, n, r) {
                void 0 !== t.lon && (t = [t.lon, t.lat]);
                var i = o(r),
                    a = i.px(t, e),
                    s = i.ll([a[0] - n[0] / 2, a[1] - n[1] / 2], e),
                    u = i.ll([a[0] + n[0] / 2, a[1] + n[1] / 2], e);
                return [s[0], u[1], u[0], s[1]]
            }
        },
        23673: function(t, e) {
            var n = function() {
                var t = {},
                    e = Math.PI / 180,
                    n = 180 / Math.PI,
                    r = 6378137,
                    i = 20037508.342789244;

                function o(t) {
                    return Number(t) === t && t % 1 !== 0
                }

                function a(e) {
                    if (e = e || {}, this.size = e.size || 256, !t[this.size]) {
                        var n = this.size,
                            r = t[this.size] = {};
                        r.Bc = [], r.Cc = [], r.zc = [], r.Ac = [];
                        for (var i = 0; i < 30; i++) r.Bc.push(n / 360), r.Cc.push(n / (2 * Math.PI)), r.zc.push(n / 2), r.Ac.push(n), n *= 2
                    }
                    this.Bc = t[this.size].Bc, this.Cc = t[this.size].Cc, this.zc = t[this.size].zc, this.Ac = t[this.size].Ac
                }
                return a.prototype.px = function(t, n) {
                    if (o(n)) {
                        var r = this.size * Math.pow(2, n),
                            i = r / 2,
                            a = r / 360,
                            s = r / (2 * Math.PI),
                            u = r,
                            c = Math.min(Math.max(Math.sin(e * t[1]), -.9999), .9999);
                        return (l = i + t[0] * a) > u && (l = u), (f = i + .5 * Math.log((1 + c) / (1 - c)) * -s) > u && (f = u), [l, f]
                    }
                    i = this.zc[n], c = Math.min(Math.max(Math.sin(e * t[1]), -.9999), .9999);
                    var l = Math.round(i + t[0] * this.Bc[n]),
                        f = Math.round(i + .5 * Math.log((1 + c) / (1 - c)) * -this.Cc[n]);
                    return l > this.Ac[n] && (l = this.Ac[n]), f > this.Ac[n] && (f = this.Ac[n]), [l, f]
                }, a.prototype.ll = function(t, e) {
                    if (o(e)) {
                        var r = this.size * Math.pow(2, e),
                            i = r / 360,
                            a = r / (2 * Math.PI),
                            s = r / 2,
                            u = (t[1] - s) / -a;
                        return [(t[0] - s) / i, n * (2 * Math.atan(Math.exp(u)) - .5 * Math.PI)]
                    }
                    u = (t[1] - this.zc[e]) / -this.Cc[e];
                    return [(t[0] - this.zc[e]) / this.Bc[e], n * (2 * Math.atan(Math.exp(u)) - .5 * Math.PI)]
                }, a.prototype.bbox = function(t, e, n, r, i) {
                    r && (e = Math.pow(2, n) - 1 - e);
                    var o = [t * this.size, (+e + 1) * this.size],
                        a = [(+t + 1) * this.size, e * this.size],
                        s = this.ll(o, n).concat(this.ll(a, n));
                    return "900913" === i ? this.convert(s, "900913") : s
                }, a.prototype.xyz = function(t, e, n, r) {
                    "900913" === r && (t = this.convert(t, "WGS84"));
                    var i = [t[0], t[1]],
                        o = [t[2], t[3]],
                        a = this.px(i, e),
                        s = this.px(o, e),
                        u = [Math.floor(a[0] / this.size), Math.floor((s[0] - 1) / this.size)],
                        c = [Math.floor(s[1] / this.size), Math.floor((a[1] - 1) / this.size)],
                        l = {
                            minX: Math.min.apply(Math, u) < 0 ? 0 : Math.min.apply(Math, u),
                            minY: Math.min.apply(Math, c) < 0 ? 0 : Math.min.apply(Math, c),
                            maxX: Math.max.apply(Math, u),
                            maxY: Math.max.apply(Math, c)
                        };
                    if (n) {
                        var f = {
                            minY: Math.pow(2, e) - 1 - l.maxY,
                            maxY: Math.pow(2, e) - 1 - l.minY
                        };
                        l.minY = f.minY, l.maxY = f.maxY
                    }
                    return l
                }, a.prototype.convert = function(t, e) {
                    return "900913" === e ? this.forward(t.slice(0, 2)).concat(this.forward(t.slice(2, 4))) : this.inverse(t.slice(0, 2)).concat(this.inverse(t.slice(2, 4)))
                }, a.prototype.forward = function(t) {
                    var n = [r * t[0] * e, r * Math.log(Math.tan(.25 * Math.PI + .5 * t[1] * e))];
                    return n[0] > i && (n[0] = i), n[0] < -i && (n[0] = -i), n[1] > i && (n[1] = i), n[1] < -i && (n[1] = -i), n
                }, a.prototype.inverse = function(t) {
                    return [t[0] * n / r, (.5 * Math.PI - 2 * Math.atan(Math.exp(-t[1] / r))) * n]
                }, a
            }();
            t.exports = n
        },
        49296: function(t) {
            "use strict";
            t.exports = n, t.exports.default = n;
            var e = 1e20;

            function n(t, e, n, r, i, o) {
                this.fontSize = t || 24, this.buffer = void 0 === e ? 3 : e, this.cutoff = r || .25, this.fontFamily = i || "sans-serif", this.fontWeight = o || "normal", this.radius = n || 8;
                var a = this.size = this.fontSize + 2 * this.buffer,
                    s = a + 2 * this.buffer;
                this.canvas = document.createElement("canvas"), this.canvas.width = this.canvas.height = a, this.ctx = this.canvas.getContext("2d"), this.ctx.font = this.fontWeight + " " + this.fontSize + "px " + this.fontFamily, this.ctx.textAlign = "left", this.ctx.fillStyle = "black", this.gridOuter = new Float64Array(s * s), this.gridInner = new Float64Array(s * s), this.f = new Float64Array(s), this.z = new Float64Array(s + 1), this.v = new Uint16Array(s), this.useMetrics = void 0 !== this.ctx.measureText("A").actualBoundingBoxLeft, this.middle = Math.round(a / 2 * (navigator.userAgent.indexOf("Gecko/") >= 0 ? 1.2 : 1))
            }

            function r(t, e, n, r, o, a) {
                for (var s = 0; s < e; s++) i(t, s, e, n, r, o, a);
                for (var u = 0; u < n; u++) i(t, u * e, 1, e, r, o, a)
            }

            function i(t, n, r, i, o, a, s) {
                var u, c, l, f;
                for (a[0] = 0, s[0] = -e, s[1] = e, u = 0; u < i; u++) o[u] = t[n + u * r];
                for (u = 1, c = 0, l = 0; u < i; u++) {
                    do {
                        f = a[c], l = (o[u] - o[f] + u * u - f * f) / (u - f) / 2
                    } while (l <= s[c] && --c > -1);
                    a[++c] = u, s[c] = l, s[c + 1] = e
                }
                for (u = 0, c = 0; u < i; u++) {
                    for (; s[c + 1] < u;) c++;
                    f = a[c], t[n + u * r] = o[f] + (u - f) * (u - f)
                }
            }
            n.prototype._draw = function(t, n) {
                var i, o, a, s, u, c, l, f, h, d = this.ctx.measureText(t),
                    p = d.width,
                    g = 2 * this.buffer;
                n && this.useMetrics ? (u = Math.floor(d.actualBoundingBoxAscent), f = this.buffer + Math.ceil(d.actualBoundingBoxAscent), c = this.buffer, l = this.buffer, i = (o = Math.min(this.size, Math.ceil(d.actualBoundingBoxRight - d.actualBoundingBoxLeft))) + g, a = (s = Math.min(this.size - c, Math.ceil(d.actualBoundingBoxAscent + d.actualBoundingBoxDescent))) + g, this.ctx.textBaseline = "alphabetic") : (i = o = this.size, a = s = this.size, u = 19 * this.fontSize / 24, c = l = 0, f = this.middle, this.ctx.textBaseline = "middle"), o && s && (this.ctx.clearRect(l, c, o, s), this.ctx.fillText(t, this.buffer, f), h = this.ctx.getImageData(l, c, o, s));
                var y = new Uint8ClampedArray(i * a);
                return function(t, n, r, i, o, a, s) {
                        a.fill(e, 0, n * r), s.fill(0, 0, n * r);
                        for (var u = (n - i) / 2, c = 0; c < o; c++)
                            for (var l = 0; l < i; l++) {
                                var f = (c + u) * n + l + u,
                                    h = t.data[4 * (c * i + l) + 3] / 255;
                                if (1 === h) a[f] = 0, s[f] = e;
                                else if (0 === h) a[f] = e, s[f] = 0;
                                else {
                                    var d = Math.max(0, .5 - h),
                                        p = Math.max(0, h - .5);
                                    a[f] = d * d, s[f] = p * p
                                }
                            }
                    }(h, i, a, o, s, this.gridOuter, this.gridInner), r(this.gridOuter, i, a, this.f, this.v, this.z), r(this.gridInner, i, a, this.f, this.v, this.z),
                    function(t, e, n, r, i, o, a) {
                        for (var s = 0; s < e * n; s++) {
                            var u = Math.sqrt(r[s]) - Math.sqrt(i[s]);
                            t[s] = Math.round(255 - 255 * (u / o + a))
                        }
                    }(y, i, a, this.gridOuter, this.gridInner, this.radius, this.cutoff), {
                        data: y,
                        metrics: {
                            width: o,
                            height: s,
                            sdfWidth: i,
                            sdfHeight: a,
                            top: u,
                            left: 0,
                            advance: p
                        }
                    }
            }, n.prototype.draw = function(t) {
                return this._draw(t, !1).data
            }, n.prototype.drawWithMetrics = function(t) {
                return this._draw(t, !0)
            }
        },
        6357: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return o
                }
            });
            var r = n(14034),
                i = n(50394);
            class o extends(function(t) {
                function e() {
                    var e = Reflect.construct(t, Array.from(arguments));
                    return Object.setPrototypeOf(e, Object.getPrototypeOf(this)), e
                }
                return e.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t, e
            }(Array)) {
                get ELEMENTS() {
                    return (0, i.Z)(!1), 0
                }
                clone() {
                    return (new this.constructor).copy(this)
                }
                from(t) {
                    return Array.isArray(t) ? this.copy(t) : this.fromObject(t)
                }
                fromArray(t, e = 0) {
                    for (let n = 0; n < this.ELEMENTS; ++n) this[n] = t[n + e];
                    return this.check()
                }
                to(t) {
                    return t === this ? this : (0, r.kJ)(t) ? this.toArray(t) : this.toObject(t)
                }
                toTarget(t) {
                    return t ? this.to(t) : this
                }
                toArray(t = [], e = 0) {
                    for (let n = 0; n < this.ELEMENTS; ++n) t[e + n] = this[n];
                    return t
                }
                toFloat32Array() {
                    return new Float32Array(this)
                }
                toString() {
                    return this.formatString(r.vc)
                }
                formatString(t) {
                    let e = "";
                    for (let n = 0; n < this.ELEMENTS; ++n) e += (n > 0 ? ", " : "") + (0, r.Bw)(this[n], t);
                    return "".concat(t.printTypes ? this.constructor.name : "", "[").concat(e, "]")
                }
                equals(t) {
                    if (!t || this.length !== t.length) return !1;
                    for (let e = 0; e < this.ELEMENTS; ++e)
                        if (!(0, r.fS)(this[e], t[e])) return !1;
                    return !0
                }
                exactEquals(t) {
                    if (!t || this.length !== t.length) return !1;
                    for (let e = 0; e < this.ELEMENTS; ++e)
                        if (this[e] !== t[e]) return !1;
                    return !0
                }
                negate() {
                    for (let t = 0; t < this.ELEMENTS; ++t) this[t] = -this[t];
                    return this.check()
                }
                lerp(t, e, n) {
                    void 0 === n && (n = e, e = t, t = this);
                    for (let r = 0; r < this.ELEMENTS; ++r) {
                        const i = t[r];
                        this[r] = i + n * (e[r] - i)
                    }
                    return this.check()
                }
                min(t) {
                    for (let e = 0; e < this.ELEMENTS; ++e) this[e] = Math.min(t[e], this[e]);
                    return this.check()
                }
                max(t) {
                    for (let e = 0; e < this.ELEMENTS; ++e) this[e] = Math.max(t[e], this[e]);
                    return this.check()
                }
                clamp(t, e) {
                    for (let n = 0; n < this.ELEMENTS; ++n) this[n] = Math.min(Math.max(this[n], t[n]), e[n]);
                    return this.check()
                }
                add(...t) {
                    for (const e of t)
                        for (let t = 0; t < this.ELEMENTS; ++t) this[t] += e[t];
                    return this.check()
                }
                subtract(...t) {
                    for (const e of t)
                        for (let t = 0; t < this.ELEMENTS; ++t) this[t] -= e[t];
                    return this.check()
                }
                scale(t) {
                    if (Array.isArray(t)) return this.multiply(t);
                    for (let e = 0; e < this.ELEMENTS; ++e) this[e] *= t;
                    return this.check()
                }
                sub(t) {
                    return this.subtract(t)
                }
                setScalar(t) {
                    for (let e = 0; e < this.ELEMENTS; ++e) this[e] = t;
                    return this.check()
                }
                addScalar(t) {
                    for (let e = 0; e < this.ELEMENTS; ++e) this[e] += t;
                    return this.check()
                }
                subScalar(t) {
                    return this.addScalar(-t)
                }
                multiplyScalar(t) {
                    for (let e = 0; e < this.ELEMENTS; ++e) this[e] *= t;
                    return this.check()
                }
                divideScalar(t) {
                    return this.scale(1 / t)
                }
                clampScalar(t, e) {
                    for (let n = 0; n < this.ELEMENTS; ++n) this[n] = Math.min(Math.max(this[n], t), e);
                    return this.check()
                }
                multiplyByScalar(t) {
                    return this.scale(t)
                }
                get elements() {
                    return this
                }
                check() {
                    if (r.vc.debug && !this.validate()) throw new Error("math.gl: ".concat(this.constructor.name, " some fields set to invalid numbers'"));
                    return this
                }
                validate() {
                    let t = this.length === this.ELEMENTS;
                    for (let e = 0; e < this.ELEMENTS; ++e) t = t && Number.isFinite(this[e]);
                    return t
                }
            }
        },
        99572: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return v
                }
            });
            var r = n(86281),
                i = n(6357),
                o = n(14034),
                a = n(50394);
            class s extends i.Z {
                get ELEMENTS() {
                    return (0, a.Z)(!1), 0
                }
                get RANK() {
                    return (0, a.Z)(!1), 0
                }
                toString() {
                    let t = "[";
                    if (o.vc.printRowMajor) {
                        t += "row-major:";
                        for (let e = 0; e < this.RANK; ++e)
                            for (let n = 0; n < this.RANK; ++n) t += " ".concat(this[n * this.RANK + e])
                    } else {
                        t += "column-major:";
                        for (let e = 0; e < this.ELEMENTS; ++e) t += " ".concat(this[e])
                    }
                    return t += "]", t
                }
                getElementIndex(t, e) {
                    return e * this.RANK + t
                }
                getElement(t, e) {
                    return this[e * this.RANK + t]
                }
                setElement(t, e, n) {
                    return this[e * this.RANK + t] = (0, r.u5)(n), this
                }
                getColumn(t, e = new Array(this.RANK).fill(-0)) {
                    const n = t * this.RANK;
                    for (let r = 0; r < this.RANK; ++r) e[r] = this[n + r];
                    return e
                }
                setColumn(t, e) {
                    const n = t * this.RANK;
                    for (let r = 0; r < this.RANK; ++r) this[n + r] = e[r];
                    return this
                }
            }
            var u = n(1031),
                c = n(85975),
                l = n(31437),
                f = n(77160),
                h = n(98333);
            const d = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
                p = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                g = Object.freeze({
                    COL0ROW0: 0,
                    COL0ROW1: 1,
                    COL0ROW2: 2,
                    COL0ROW3: 3,
                    COL1ROW0: 4,
                    COL1ROW1: 5,
                    COL1ROW2: 6,
                    COL1ROW3: 7,
                    COL2ROW0: 8,
                    COL2ROW1: 9,
                    COL2ROW2: 10,
                    COL2ROW3: 11,
                    COL3ROW0: 12,
                    COL3ROW1: 13,
                    COL3ROW2: 14,
                    COL3ROW3: 15
                }),
                y = {};
            class v extends s {
                static get IDENTITY() {
                    return y.IDENTITY = y.IDENTITY || Object.freeze(new v(d)), y.IDENTITY
                }
                static get ZERO() {
                    return y.ZERO = y.ZERO || Object.freeze(new v(p)), y.ZERO
                }
                get INDICES() {
                    return g
                }
                get ELEMENTS() {
                    return 16
                }
                get RANK() {
                    return 4
                }
                constructor(t) {
                    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0), 1 === arguments.length && Array.isArray(t) ? this.copy(t) : this.identity()
                }
                copy(t) {
                    return this[0] = t[0], this[1] = t[1], this[2] = t[2], this[3] = t[3], this[4] = t[4], this[5] = t[5], this[6] = t[6], this[7] = t[7], this[8] = t[8], this[9] = t[9], this[10] = t[10], this[11] = t[11], this[12] = t[12], this[13] = t[13], this[14] = t[14], this[15] = t[15], this.check()
                }
                set(t, e, n, r, i, o, a, s, u, c, l, f, h, d, p, g) {
                    return this[0] = t, this[1] = e, this[2] = n, this[3] = r, this[4] = i, this[5] = o, this[6] = a, this[7] = s, this[8] = u, this[9] = c, this[10] = l, this[11] = f, this[12] = h, this[13] = d, this[14] = p, this[15] = g, this.check()
                }
                setRowMajor(t, e, n, r, i, o, a, s, u, c, l, f, h, d, p, g) {
                    return this[0] = t, this[1] = i, this[2] = u, this[3] = h, this[4] = e, this[5] = o, this[6] = c, this[7] = d, this[8] = n, this[9] = a, this[10] = l, this[11] = p, this[12] = r, this[13] = s, this[14] = f, this[15] = g, this.check()
                }
                toRowMajor(t) {
                    return t[0] = this[0], t[1] = this[4], t[2] = this[8], t[3] = this[12], t[4] = this[1], t[5] = this[5], t[6] = this[9], t[7] = this[13], t[8] = this[2], t[9] = this[6], t[10] = this[10], t[11] = this[14], t[12] = this[3], t[13] = this[7], t[14] = this[11], t[15] = this[15], t
                }
                identity() {
                    return this.copy(d)
                }
                fromQuaternion(t) {
                    return c.en(this, t), this.check()
                }
                frustum({
                    left: t,
                    right: e,
                    bottom: n,
                    top: r,
                    near: i,
                    far: o
                }) {
                    return o === 1 / 0 ? v._computeInfinitePerspectiveOffCenter(this, t, e, n, r, i) : c.oy(this, t, e, n, r, i, o), this.check()
                }
                static _computeInfinitePerspectiveOffCenter(t, e, n, r, i, o) {
                    const a = 2 * o / (n - e),
                        s = 2 * o / (i - r),
                        u = (n + e) / (n - e),
                        c = (i + r) / (i - r),
                        l = -2 * o;
                    return t[0] = a, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = s, t[6] = 0, t[7] = 0, t[8] = u, t[9] = c, t[10] = -1, t[11] = -1, t[12] = 0, t[13] = 0, t[14] = l, t[15] = 0, t
                }
                lookAt(t, e, n) {
                    return 1 === arguments.length && ({
                        eye: t,
                        center: e,
                        up: n
                    } = t), e = e || [0, 0, 0], n = n || [0, 1, 0], c.zB(this, t, e, n), this.check()
                }
                ortho({
                    left: t,
                    right: e,
                    bottom: n,
                    top: r,
                    near: i = .1,
                    far: o = 500
                }) {
                    return c.M5(this, t, e, n, r, i, o), this.check()
                }
                orthographic({
                    fovy: t = 45 * Math.PI / 180,
                    aspect: e = 1,
                    focalDistance: n = 1,
                    near: r = .1,
                    far: i = 500
                }) {
                    if (t > 2 * Math.PI) throw Error("radians");
                    const o = t / 2,
                        a = n * Math.tan(o),
                        s = a * e;
                    return (new v).ortho({
                        left: -s,
                        right: s,
                        bottom: -a,
                        top: a,
                        near: r,
                        far: i
                    })
                }
                perspective({
                    fovy: t,
                    fov: e = 45 * Math.PI / 180,
                    aspect: n = 1,
                    near: r = .1,
                    far: i = 500
                } = {}) {
                    if ((t = t || e) > 2 * Math.PI) throw Error("radians");
                    return c.G3(this, t, n, r, i), this.check()
                }
                determinant() {
                    return c.GH(this)
                }
                getScale(t = [-0, -0, -0]) {
                    return t[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]), t[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]), t[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]), t
                }
                getTranslation(t = [-0, -0, -0]) {
                    return t[0] = this[12], t[1] = this[13], t[2] = this[14], t
                }
                getRotation(t = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], e = null) {
                    const n = this.getScale(e || [-0, -0, -0]),
                        r = 1 / n[0],
                        i = 1 / n[1],
                        o = 1 / n[2];
                    return t[0] = this[0] * r, t[1] = this[1] * i, t[2] = this[2] * o, t[3] = 0, t[4] = this[4] * r, t[5] = this[5] * i, t[6] = this[6] * o, t[7] = 0, t[8] = this[8] * r, t[9] = this[9] * i, t[10] = this[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
                }
                getRotationMatrix3(t = [-0, -0, -0, -0, -0, -0, -0, -0, -0], e = null) {
                    const n = this.getScale(e || [-0, -0, -0]),
                        r = 1 / n[0],
                        i = 1 / n[1],
                        o = 1 / n[2];
                    return t[0] = this[0] * r, t[1] = this[1] * i, t[2] = this[2] * o, t[3] = this[4] * r, t[4] = this[5] * i, t[5] = this[6] * o, t[6] = this[8] * r, t[7] = this[9] * i, t[8] = this[10] * o, t
                }
                transpose() {
                    return c.p4(this, this), this.check()
                }
                invert() {
                    return c.U_(this, this), this.check()
                }
                multiplyLeft(t) {
                    return c.Jp(this, t, this), this.check()
                }
                multiplyRight(t) {
                    return c.Jp(this, this, t), this.check()
                }
                rotateX(t) {
                    return c.lM(this, this, t), this.check()
                }
                rotateY(t) {
                    return c.uD(this, this, t), this.check()
                }
                rotateZ(t) {
                    return c.jI(this, this, t), this.check()
                }
                rotateXYZ([t, e, n]) {
                    return this.rotateX(t).rotateY(e).rotateZ(n)
                }
                rotateAxis(t, e) {
                    return c.U1(this, this, t, e), this.check()
                }
                scale(t) {
                    return Array.isArray(t) ? c.bA(this, this, t) : c.bA(this, this, [t, t, t]), this.check()
                }
                translate(t) {
                    return c.Iu(this, this, t), this.check()
                }
                transform(t, e) {
                    return 4 === t.length ? (e = h.fF(e || [-0, -0, -0, -0], t, this), (0, r.IL)(e, 4), e) : this.transformAsPoint(t, e)
                }
                transformAsPoint(t, e) {
                    const {
                        length: n
                    } = t;
                    switch (n) {
                        case 2:
                            e = l.fF(e || [-0, -0], t, this);
                            break;
                        case 3:
                            e = f.fF(e || [-0, -0, -0], t, this);
                            break;
                        default:
                            throw new Error("Illegal vector")
                    }
                    return (0, r.IL)(e, t.length), e
                }
                transformAsVector(t, e) {
                    switch (t.length) {
                        case 2:
                            e = (0, u.pb)(e || [-0, -0], t, this);
                            break;
                        case 3:
                            e = (0, u.pL)(e || [-0, -0, -0], t, this);
                            break;
                        default:
                            throw new Error("Illegal vector")
                    }
                    return (0, r.IL)(e, t.length), e
                }
                makeRotationX(t) {
                    return this.identity().rotateX(t)
                }
                makeTranslation(t, e, n) {
                    return this.identity().translate([t, e, n])
                }
                transformPoint(t, e) {
                    return (0, r.x9)("Matrix4.transformPoint", "3.0"), this.transformAsPoint(t, e)
                }
                transformVector(t, e) {
                    return (0, r.x9)("Matrix4.transformVector", "3.0"), this.transformAsPoint(t, e)
                }
                transformDirection(t, e) {
                    return (0, r.x9)("Matrix4.transformDirection", "3.0"), this.transformAsVector(t, e)
                }
            }
        },
        76695: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return h
                }
            });
            var r = n(6357),
                i = n(86281),
                o = n(50394);
            class a extends r.Z {
                get ELEMENTS() {
                    return (0, o.Z)(!1), 0
                }
                copy(t) {
                    return (0, o.Z)(!1), this
                }
                get x() {
                    return this[0]
                }
                set x(t) {
                    this[0] = (0, i.u5)(t)
                }
                get y() {
                    return this[1]
                }
                set y(t) {
                    this[1] = (0, i.u5)(t)
                }
                len() {
                    return Math.sqrt(this.lengthSquared())
                }
                magnitude() {
                    return this.len()
                }
                lengthSquared() {
                    let t = 0;
                    for (let e = 0; e < this.ELEMENTS; ++e) t += this[e] * this[e];
                    return t
                }
                magnitudeSquared() {
                    return this.lengthSquared()
                }
                distance(t) {
                    return Math.sqrt(this.distanceSquared(t))
                }
                distanceSquared(t) {
                    let e = 0;
                    for (let n = 0; n < this.ELEMENTS; ++n) {
                        const r = this[n] - t[n];
                        e += r * r
                    }
                    return (0, i.u5)(e)
                }
                dot(t) {
                    let e = 0;
                    for (let n = 0; n < this.ELEMENTS; ++n) e += this[n] * t[n];
                    return (0, i.u5)(e)
                }
                normalize() {
                    const t = this.magnitude();
                    if (0 !== t)
                        for (let e = 0; e < this.ELEMENTS; ++e) this[e] /= t;
                    return this.check()
                }
                multiply(...t) {
                    for (const e of t)
                        for (let t = 0; t < this.ELEMENTS; ++t) this[t] *= e[t];
                    return this.check()
                }
                divide(...t) {
                    for (const e of t)
                        for (let t = 0; t < this.ELEMENTS; ++t) this[t] /= e[t];
                    return this.check()
                }
                lengthSq() {
                    return this.lengthSquared()
                }
                distanceTo(t) {
                    return this.distance(t)
                }
                distanceToSquared(t) {
                    return this.distanceSquared(t)
                }
                getComponent(t) {
                    return (0, o.Z)(t >= 0 && t < this.ELEMENTS, "index is out of range"), (0, i.u5)(this[t])
                }
                setComponent(t, e) {
                    return (0, o.Z)(t >= 0 && t < this.ELEMENTS, "index is out of range"), this[t] = e, this.check()
                }
                addVectors(t, e) {
                    return this.copy(t).add(e)
                }
                subVectors(t, e) {
                    return this.copy(t).subtract(e)
                }
                multiplyVectors(t, e) {
                    return this.copy(t).multiply(e)
                }
                addScaledVector(t, e) {
                    return this.add(new this.constructor(t).multiplyScalar(e))
                }
            }
            var s = n(14034),
                u = n(77160),
                c = n(1031);
            const l = [0, 0, 0],
                f = {};
            class h extends a {
                static get ZERO() {
                    return f.ZERO = f.ZERO || Object.freeze(new h(0, 0, 0, 0))
                }
                constructor(t = 0, e = 0, n = 0) {
                    super(-0, -0, -0), 1 === arguments.length && (0, s.kJ)(t) ? this.copy(t) : (s.vc.debug && ((0, i.u5)(t), (0, i.u5)(e), (0, i.u5)(n)), this[0] = t, this[1] = e, this[2] = n)
                }
                set(t, e, n) {
                    return this[0] = t, this[1] = e, this[2] = n, this.check()
                }
                copy(t) {
                    return this[0] = t[0], this[1] = t[1], this[2] = t[2], this.check()
                }
                fromObject(t) {
                    return s.vc.debug && ((0, i.u5)(t.x), (0, i.u5)(t.y), (0, i.u5)(t.z)), this[0] = t.x, this[1] = t.y, this[2] = t.z, this.check()
                }
                toObject(t) {
                    return t.x = this[0], t.y = this[1], t.z = this[2], t
                }
                get ELEMENTS() {
                    return 3
                }
                get z() {
                    return this[2]
                }
                set z(t) {
                    this[2] = (0, i.u5)(t)
                }
                angle(t) {
                    return u.EU(this, t)
                }
                cross(t) {
                    return u.kC(this, this, t), this.check()
                }
                rotateX({
                    radians: t,
                    origin: e = l
                }) {
                    return u.lM(this, this, e, t), this.check()
                }
                rotateY({
                    radians: t,
                    origin: e = l
                }) {
                    return u.uD(this, this, e, t), this.check()
                }
                rotateZ({
                    radians: t,
                    origin: e = l
                }) {
                    return u.jI(this, this, e, t), this.check()
                }
                transform(t) {
                    return this.transformAsPoint(t)
                }
                transformAsPoint(t) {
                    return u.fF(this, this, t), this.check()
                }
                transformAsVector(t) {
                    return (0, c.pL)(this, this, t), this.check()
                }
                transformByMatrix3(t) {
                    return u.kK(this, this, t), this.check()
                }
                transformByMatrix2(t) {
                    return (0, c.eQ)(this, this, t), this.check()
                }
                transformByQuaternion(t) {
                    return u.VC(this, this, t), this.check()
                }
            }
        },
        50394: function(t, e, n) {
            "use strict";

            function r(t, e) {
                if (!t) throw new Error("math.gl assertion ".concat(e))
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        14034: function(t, e, n) {
            "use strict";
            n.d(e, {
                vc: function() {
                    return r
                },
                Bw: function() {
                    return i
                },
                kJ: function() {
                    return o
                },
                uZ: function() {
                    return s
                },
                t7: function() {
                    return u
                },
                fS: function() {
                    return c
                }
            });
            Math.PI, Math.PI;
            const r = {};

            function i(t, {
                precision: e = r.precision || 4
            } = {}) {
                return t = function(t) {
                    return Math.round(t / r.EPSILON) * r.EPSILON
                }(t), "".concat(parseFloat(t.toPrecision(e)))
            }

            function o(t) {
                return Array.isArray(t) || ArrayBuffer.isView(t) && !(t instanceof DataView)
            }

            function a(t, e, n) {
                if (o(t)) {
                    n = n || ((r = t).clone ? r.clone() : new Array(r.length));
                    for (let r = 0; r < n.length && r < t.length; ++r) n[r] = e(t[r], r, n);
                    return n
                }
                var r;
                return e(t)
            }

            function s(t, e, n) {
                return a(t, (t => Math.max(e, Math.min(n, t))))
            }

            function u(t, e, n) {
                return o(t) ? t.map(((t, r) => u(t, e[r], n))) : n * e + (1 - n) * t
            }

            function c(t, e, n) {
                const i = r.EPSILON;
                n && (r.EPSILON = n);
                try {
                    if (t === e) return !0;
                    if (o(t) && o(e)) {
                        if (t.length !== e.length) return !1;
                        for (let n = 0; n < t.length; ++n)
                            if (!c(t[n], e[n])) return !1;
                        return !0
                    }
                    return t && t.equals ? t.equals(e) : e && e.equals ? e.equals(t) : !(!Number.isFinite(t) || !Number.isFinite(e)) && Math.abs(t - e) <= r.EPSILON * Math.max(1, Math.abs(t), Math.abs(e))
                } finally {
                    r.EPSILON = i
                }
            }
            r.EPSILON = 1e-12, r.debug = !1, r.precision = 4, r.printTypes = !1, r.printDegrees = !1, r.printRowMajor = !0
        },
        1031: function(t, e, n) {
            "use strict";

            function r(t, e, n) {
                const r = e[0],
                    i = e[1],
                    o = n[3] * r + n[7] * i || 1;
                return t[0] = (n[0] * r + n[4] * i) / o, t[1] = (n[1] * r + n[5] * i) / o, t
            }

            function i(t, e, n) {
                const r = e[0],
                    i = e[1],
                    o = e[2],
                    a = n[3] * r + n[7] * i + n[11] * o || 1;
                return t[0] = (n[0] * r + n[4] * i + n[8] * o) / a, t[1] = (n[1] * r + n[5] * i + n[9] * o) / a, t[2] = (n[2] * r + n[6] * i + n[10] * o) / a, t
            }

            function o(t, e, n) {
                const r = e[0],
                    i = e[1];
                return t[0] = n[0] * r + n[2] * i, t[1] = n[1] * r + n[3] * i, t[2] = e[2], t
            }
            n.d(e, {
                pb: function() {
                    return r
                },
                pL: function() {
                    return i
                },
                eQ: function() {
                    return o
                }
            })
        },
        86281: function(t, e, n) {
            "use strict";
            n.d(e, {
                u5: function() {
                    return i
                },
                IL: function() {
                    return o
                },
                x9: function() {
                    return s
                }
            });
            var r = n(14034);

            function i(t) {
                if (!Number.isFinite(t)) throw new Error("Invalid number ".concat(t));
                return t
            }

            function o(t, e, n = "") {
                if (r.vc.debug && ! function(t, e) {
                        if (t.length !== e) return !1;
                        for (let n = 0; n < t.length; ++n)
                            if (!Number.isFinite(t[n])) return !1;
                        return !0
                    }(t, e)) throw new Error("math.gl: ".concat(n, " some fields set to invalid numbers'"));
                return t
            }
            const a = {};

            function s(t, e) {
                a[t] || (a[t] = !0, console.warn("".concat(t, " has been removed in version ").concat(e, ", see upgrade guide for more information")))
            }
        },
        78866: function(t, e, n) {
            "use strict";
            n.d(e, {
                DW: function() {
                    return R
                },
                eG: function() {
                    return E
                },
                Lu: function() {
                    return T
                },
                ZP: function() {
                    return R
                },
                Xg: function() {
                    return k
                },
                if: function() {
                    return z
                },
                sj: function() {
                    return M
                },
                zX: function() {
                    return j
                },
                ro: function() {
                    return P
                },
                up: function() {
                    return B
                },
                Bf: function() {
                    return _
                },
                c7: function() {
                    return O
                },
                wl: function() {
                    return S
                },
                lf: function() {
                    return x
                },
                w5: function() {
                    return b
                },
                QA: function() {
                    return D
                },
                CT: function() {
                    return A
                },
                sO: function() {
                    return m
                },
                es: function() {
                    return w
                },
                aW: function() {
                    return C
                },
                EO: function() {
                    return v
                }
            });
            var r = n(98333);

            function i(t, e) {
                const n = r.fF([], e, t);
                return r.bA(n, n, 1 / n[3]), n
            }

            function o(t, e) {
                const n = t % e;
                return n < 0 ? e + n : n
            }
            const a = Math.log2 || function(t) {
                return Math.log(t) * Math.LOG2E
            };
            var s = n(85975),
                u = n(31437),
                c = n(77160);

            function l(t, e) {
                if (!t) throw new Error(e || "@math.gl/web-mercator: assertion failed.")
            }
            const f = Math.PI,
                h = f / 4,
                d = f / 180,
                p = 180 / f,
                g = 512,
                y = 4003e4;

            function v(t) {
                return Math.pow(2, t)
            }

            function m(t) {
                return a(t)
            }

            function b([t, e]) {
                l(Number.isFinite(t)), l(Number.isFinite(e) && e >= -90 && e <= 90, "invalid latitude");
                const n = e * d;
                return [g * (t * d + f) / (2 * f), g * (f + Math.log(Math.tan(h + .5 * n))) / (2 * f)]
            }

            function w([t, e]) {
                const n = t / g * (2 * f) - f,
                    r = 2 * (Math.atan(Math.exp(e / g * (2 * f) - f)) - h);
                return [n * p, r * p]
            }

            function _({
                latitude: t
            }) {
                l(Number.isFinite(t));
                const e = Math.cos(t * d);
                return m(y * e) - 9
            }

            function P({
                latitude: t,
                longitude: e,
                highPrecision: n = !1
            }) {
                l(Number.isFinite(t) && Number.isFinite(e));
                const r = {},
                    i = Math.cos(t * d),
                    o = 512 / 360,
                    a = o / i,
                    s = 12790407194604047e-21 / i;
                if (r.unitsPerMeter = [s, s, s], r.metersPerUnit = [1 / s, 1 / s, 1 / s], r.unitsPerDegree = [o, a, s], r.degreesPerUnit = [.703125, 1 / a, 1 / s], n) {
                    const e = d * Math.tan(t * d) / i,
                        n = o * e / 2,
                        u = 12790407194604047e-21 * e,
                        c = u / a * s;
                    r.unitsPerDegree2 = [0, n, u], r.unitsPerMeter2 = [c, 0, c]
                }
                return r
            }

            function E(t, e) {
                const [n, r, i] = t, [o, a, s] = e, {
                    unitsPerMeter: u,
                    unitsPerMeter2: c
                } = P({
                    longitude: n,
                    latitude: r,
                    highPrecision: !0
                }), l = b(t);
                l[0] += o * (u[0] + c[0] * a), l[1] += a * (u[1] + c[1] * a);
                const f = w(l),
                    h = (i || 0) + (s || 0);
                return Number.isFinite(i) || Number.isFinite(s) ? [f[0], f[1], h] : f
            }

            function x({
                height: t,
                pitch: e,
                bearing: n,
                altitude: r,
                scale: i,
                center: o = null
            }) {
                const a = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                return s.Iu(a, a, [0, 0, -r]), s.lM(a, a, -e * d), s.jI(a, a, n * d), i /= t, s.bA(a, a, [i, i, i]), o && s.Iu(a, a, c.tk([], o)), a
            }

            function S({
                width: t,
                height: e,
                fovy: n = T(1.5),
                altitude: r,
                pitch: i = 0,
                nearZMultiplier: o = 1,
                farZMultiplier: a = 1
            }) {
                void 0 !== r && (n = T(r));
                const s = .5 * n * d,
                    u = M(n),
                    c = i * d,
                    l = Math.sin(s) * u / Math.sin(Math.min(Math.max(Math.PI / 2 - c - s, .01), Math.PI - .01));
                return {
                    fov: 2 * s,
                    aspect: t / e,
                    focalDistance: u,
                    near: o,
                    far: (Math.sin(c) * l + u) * a
                }
            }

            function O({
                width: t,
                height: e,
                pitch: n,
                altitude: r,
                fovy: i,
                nearZMultiplier: o,
                farZMultiplier: a
            }) {
                const {
                    fov: u,
                    aspect: c,
                    near: l,
                    far: f
                } = S({
                    width: t,
                    height: e,
                    altitude: r,
                    fovy: i,
                    pitch: n,
                    nearZMultiplier: o,
                    farZMultiplier: a
                });
                return s.G3([], u, c, l, f)
            }

            function T(t) {
                return 2 * Math.atan(.5 / t) * p
            }

            function M(t) {
                return .5 / Math.tan(.5 * t * d)
            }

            function C(t, e) {
                const [n, r, o = 0] = t;
                return l(Number.isFinite(n) && Number.isFinite(r) && Number.isFinite(o)), i(e, [n, r, o, 1])
            }

            function A(t, e, n = 0) {
                const [r, o, a] = t;
                if (l(Number.isFinite(r) && Number.isFinite(o), "invalid pixel coordinate"), Number.isFinite(a)) {
                    return i(e, [r, o, a, 1])
                }
                const s = i(e, [r, o, 0, 1]),
                    c = i(e, [r, o, 1, 1]),
                    f = s[2],
                    h = c[2],
                    d = f === h ? 0 : ((n || 0) - f) / (h - f);
                return u.t7([], s, c, d)
            }

            function k({
                width: t,
                height: e,
                bounds: n,
                minExtent: r = 0,
                maxZoom: i = 24,
                padding: o = 0,
                offset: s = [0, 0]
            }) {
                const [
                    [u, c],
                    [f, h]
                ] = n;
                if (Number.isFinite(o)) {
                    o = {
                        top: o,
                        bottom: o,
                        left: o,
                        right: o
                    }
                } else l(Number.isFinite(o.top) && Number.isFinite(o.bottom) && Number.isFinite(o.left) && Number.isFinite(o.right));
                const d = new R({
                        width: t,
                        height: e,
                        longitude: 0,
                        latitude: 0,
                        zoom: 0
                    }),
                    p = d.project([u, h]),
                    g = d.project([f, c]),
                    y = [Math.max(Math.abs(g[0] - p[0]), r), Math.max(Math.abs(g[1] - p[1]), r)],
                    v = [t - o.left - o.right - 2 * Math.abs(s[0]), e - o.top - o.bottom - 2 * Math.abs(s[1])];
                l(v[0] > 0 && v[1] > 0);
                const m = v[0] / y[0],
                    b = v[1] / y[1],
                    w = (o.right - o.left) / 2 / m,
                    _ = (o.bottom - o.top) / 2 / b,
                    P = [(g[0] + p[0]) / 2 + w, (g[1] + p[1]) / 2 + _],
                    E = d.unproject(P),
                    x = Math.min(i, d.zoom + a(Math.abs(Math.min(m, b))));
                return l(Number.isFinite(x)), {
                    longitude: E[0],
                    latitude: E[1],
                    zoom: x
                }
            }
            const I = Math.PI / 180;

            function j(t, e = 0) {
                const {
                    width: n,
                    height: r,
                    unproject: i
                } = t, o = {
                    targetZ: e
                }, a = i([0, r], o), s = i([n, r], o);
                let u, c;
                return (t.fovy ? .5 * t.fovy * I : Math.atan(.5 / t.altitude)) > (90 - t.pitch) * I - .01 ? (u = L(t, 0, e), c = L(t, n, e)) : (u = i([0, 0], o), c = i([n, 0], o)), [a, s, c, u]
            }

            function L(t, e, n) {
                const {
                    pixelUnprojectionMatrix: r
                } = t, o = i(r, [e, 0, 1, 1]), a = i(r, [e, t.height, 1, 1]), s = (n * t.distanceScales.unitsPerMeter[2] - o[2]) / (a[2] - o[2]), c = w(u.t7([], o, a, s));
                return c[2] = n, c
            }
            class R {
                constructor({
                    width: t,
                    height: e,
                    latitude: n = 0,
                    longitude: r = 0,
                    zoom: i = 0,
                    pitch: o = 0,
                    bearing: a = 0,
                    altitude: s = null,
                    fovy: u = null,
                    position: l = null,
                    nearZMultiplier: f = .02,
                    farZMultiplier: h = 1.01
                } = {
                    width: 1,
                    height: 1
                }) {
                    t = t || 1, e = e || 1, null === u && null === s ? u = T(s = 1.5) : null === u ? u = T(s) : null === s && (s = M(u));
                    const d = v(i);
                    s = Math.max(.75, s);
                    const p = P({
                            longitude: r,
                            latitude: n
                        }),
                        g = b([r, n]);
                    g[2] = 0, l && c.IH(g, g, c.dC([], l, p.unitsPerMeter)), this.projectionMatrix = O({
                        width: t,
                        height: e,
                        pitch: o,
                        fovy: u,
                        nearZMultiplier: f,
                        farZMultiplier: h
                    }), this.viewMatrix = x({
                        height: e,
                        scale: d,
                        center: g,
                        pitch: o,
                        bearing: a,
                        altitude: s
                    }), this.width = t, this.height = e, this.scale = d, this.latitude = n, this.longitude = r, this.zoom = i, this.pitch = o, this.bearing = a, this.altitude = s, this.fovy = u, this.center = g, this.meterOffset = l || [0, 0, 0], this.distanceScales = p, this._initMatrices(), this.equals = this.equals.bind(this), this.project = this.project.bind(this), this.unproject = this.unproject.bind(this), this.projectPosition = this.projectPosition.bind(this), this.unprojectPosition = this.unprojectPosition.bind(this), Object.freeze(this)
                }
                _initMatrices() {
                    const {
                        width: t,
                        height: e,
                        projectionMatrix: n,
                        viewMatrix: r
                    } = this, i = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                    s.Jp(i, i, n), s.Jp(i, i, r), this.viewProjectionMatrix = i;
                    const o = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
                    s.bA(o, o, [t / 2, -e / 2, 1]), s.Iu(o, o, [1, -1, 0]), s.Jp(o, o, i);
                    const a = s.U_([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], o);
                    if (!a) throw new Error("Pixel project matrix not invertible");
                    this.pixelProjectionMatrix = o, this.pixelUnprojectionMatrix = a
                }
                equals(t) {
                    return t instanceof R && (t.width === this.width && t.height === this.height && s.fS(t.projectionMatrix, this.projectionMatrix) && s.fS(t.viewMatrix, this.viewMatrix))
                }
                project(t, {
                    topLeft: e = !0
                } = {}) {
                    const n = C(this.projectPosition(t), this.pixelProjectionMatrix),
                        [r, i] = n,
                        o = e ? i : this.height - i;
                    return 2 === t.length ? [r, o] : [r, o, n[2]]
                }
                unproject(t, {
                    topLeft: e = !0,
                    targetZ: n
                } = {}) {
                    const [r, i, o] = t, a = e ? i : this.height - i, s = n && n * this.distanceScales.unitsPerMeter[2], u = A([r, a, o], this.pixelUnprojectionMatrix, s), [c, l, f] = this.unprojectPosition(u);
                    return Number.isFinite(o) ? [c, l, f] : Number.isFinite(n) ? [c, l, n] : [c, l]
                }
                projectPosition(t) {
                    const [e, n] = b(t);
                    return [e, n, (t[2] || 0) * this.distanceScales.unitsPerMeter[2]]
                }
                unprojectPosition(t) {
                    const [e, n] = w(t);
                    return [e, n, (t[2] || 0) * this.distanceScales.metersPerUnit[2]]
                }
                projectFlat(t) {
                    return b(t)
                }
                unprojectFlat(t) {
                    return w(t)
                }
                getMapCenterByLngLatPosition({
                    lngLat: t,
                    pos: e
                }) {
                    const n = A(e, this.pixelUnprojectionMatrix),
                        r = b(t),
                        i = u.IH([], r, u.tk([], n));
                    return w(u.IH([], this.center, i))
                }
                getLocationAtPoint({
                    lngLat: t,
                    pos: e
                }) {
                    return this.getMapCenterByLngLatPosition({
                        lngLat: t,
                        pos: e
                    })
                }
                fitBounds(t, e = {}) {
                    const {
                        width: n,
                        height: r
                    } = this, {
                        longitude: i,
                        latitude: o,
                        zoom: a
                    } = k(Object.assign({
                        width: n,
                        height: r,
                        bounds: t
                    }, e));
                    return new R({
                        width: n,
                        height: r,
                        longitude: i,
                        latitude: o,
                        zoom: a
                    })
                }
                getBounds(t) {
                    const e = this.getBoundingRegion(t),
                        n = Math.min(...e.map((t => t[0]))),
                        r = Math.max(...e.map((t => t[0])));
                    return [
                        [n, Math.min(...e.map((t => t[1])))],
                        [r, Math.max(...e.map((t => t[1])))]
                    ]
                }
                getBoundingRegion(t = {}) {
                    return j(this, t.z || 0)
                }
            }

            function D({
                width: t,
                height: e,
                longitude: n,
                latitude: r,
                zoom: i,
                pitch: s = 0,
                bearing: u = 0
            }) {
                (n < -180 || n > 180) && (n = o(n + 180, 360) - 180), (u < -180 || u > 180) && (u = o(u + 180, 360) - 180);
                const c = a(e / 512);
                if (i <= c) i = c, r = 0;
                else {
                    const t = e / 2 / Math.pow(2, i),
                        n = w([0, t])[1];
                    if (r < n) r = n;
                    else {
                        const e = w([0, 512 - t])[1];
                        r > e && (r = e)
                    }
                }
                return {
                    width: t,
                    height: e,
                    longitude: n,
                    latitude: r,
                    zoom: i,
                    pitch: s,
                    bearing: u
                }
            }
            const F = ["longitude", "latitude", "zoom"],
                N = {
                    curve: 1.414,
                    speed: 1.2
                };

            function z(t, e, n, r = {}) {
                const i = {},
                    {
                        startZoom: o,
                        startCenterXY: a,
                        uDelta: s,
                        w0: c,
                        u1: l,
                        S: f,
                        rho: h,
                        rho2: d,
                        r0: p
                    } = U(t, e, r);
                if (l < .01) {
                    for (const r of F) {
                        const o = t[r],
                            a = e[r];
                        i[r] = (g = n) * a + (1 - g) * o
                    }
                    return i
                }
                var g;
                const y = n * f,
                    v = Math.cosh(p) / Math.cosh(p + h * y),
                    b = c * ((Math.cosh(p) * Math.tanh(p + h * y) - Math.sinh(p)) / d) / l,
                    _ = o + m(1 / v),
                    P = u.bA([], s, b);
                u.IH(P, P, a);
                const E = w(P);
                return i.longitude = E[0], i.latitude = E[1], i.zoom = _, i
            }

            function B(t, e, n = {}) {
                n = Object.assign({}, N, n);
                const {
                    screenSpeed: r,
                    speed: i,
                    maxDuration: o
                } = n, {
                    S: a,
                    rho: s
                } = U(t, e, n), u = 1e3 * a;
                let c;
                return c = Number.isFinite(r) ? u / (r / s) : u / i, Number.isFinite(o) && c > o ? 0 : c
            }

            function U(t, e, n) {
                const r = (n = Object.assign({}, N, n)).curve,
                    i = t.zoom,
                    o = [t.longitude, t.latitude],
                    a = v(i),
                    s = e.zoom,
                    c = [e.longitude, e.latitude],
                    l = v(s - i),
                    f = b(o),
                    h = b(c),
                    d = u.lu([], h, f),
                    p = Math.max(t.width, t.height),
                    g = p / l,
                    y = u.kE(d) * a,
                    m = Math.max(y, .01),
                    w = r * r,
                    _ = (g * g - p * p + w * w * m * m) / (2 * p * w * m),
                    P = (g * g - p * p - w * w * m * m) / (2 * g * w * m),
                    E = Math.log(Math.sqrt(_ * _ + 1) - _),
                    x = Math.log(Math.sqrt(P * P + 1) - P);
                return {
                    startZoom: i,
                    startCenterXY: f,
                    uDelta: d,
                    w0: p,
                    u1: y,
                    S: (x - E) / r,
                    rho: r,
                    rho2: w,
                    r0: E,
                    r1: x
                }
            }
        },
        87359: function(t, e, n) {
            "use strict";

            function r(t) {
                return (r = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), Object.defineProperty(e, "GeoJsonEditMode", {
                enumerable: !0,
                get: function() {
                    return o.GeoJsonEditMode
                }
            }), Object.defineProperty(e, "ModifyMode", {
                enumerable: !0,
                get: function() {
                    return a.ModifyMode
                }
            }), Object.defineProperty(e, "TranslateMode", {
                enumerable: !0,
                get: function() {
                    return s.TranslateMode
                }
            }), Object.defineProperty(e, "ScaleMode", {
                enumerable: !0,
                get: function() {
                    return u.ScaleMode
                }
            }), Object.defineProperty(e, "RotateMode", {
                enumerable: !0,
                get: function() {
                    return c.RotateMode
                }
            }), Object.defineProperty(e, "DuplicateMode", {
                enumerable: !0,
                get: function() {
                    return l.DuplicateMode
                }
            }), Object.defineProperty(e, "ExtendLineStringMode", {
                enumerable: !0,
                get: function() {
                    return f.ExtendLineStringMode
                }
            }), Object.defineProperty(e, "SplitPolygonMode", {
                enumerable: !0,
                get: function() {
                    return h.SplitPolygonMode
                }
            }), Object.defineProperty(e, "ExtrudeMode", {
                enumerable: !0,
                get: function() {
                    return d.ExtrudeMode
                }
            }), Object.defineProperty(e, "ElevationMode", {
                enumerable: !0,
                get: function() {
                    return p.ElevationMode
                }
            }), Object.defineProperty(e, "TransformMode", {
                enumerable: !0,
                get: function() {
                    return g.TransformMode
                }
            }), Object.defineProperty(e, "DrawPointMode", {
                enumerable: !0,
                get: function() {
                    return y.DrawPointMode
                }
            }), Object.defineProperty(e, "DrawLineStringMode", {
                enumerable: !0,
                get: function() {
                    return v.DrawLineStringMode
                }
            }), Object.defineProperty(e, "DrawPolygonMode", {
                enumerable: !0,
                get: function() {
                    return m.DrawPolygonMode
                }
            }), Object.defineProperty(e, "DrawRectangleMode", {
                enumerable: !0,
                get: function() {
                    return b.DrawRectangleMode
                }
            }), Object.defineProperty(e, "DrawCircleByDiameterMode", {
                enumerable: !0,
                get: function() {
                    return w.DrawCircleByDiameterMode
                }
            }), Object.defineProperty(e, "DrawCircleFromCenterMode", {
                enumerable: !0,
                get: function() {
                    return _.DrawCircleFromCenterMode
                }
            }), Object.defineProperty(e, "DrawEllipseByBoundingBoxMode", {
                enumerable: !0,
                get: function() {
                    return P.DrawEllipseByBoundingBoxMode
                }
            }), Object.defineProperty(e, "DrawEllipseUsingThreePointsMode", {
                enumerable: !0,
                get: function() {
                    return E.DrawEllipseUsingThreePointsMode
                }
            }), Object.defineProperty(e, "DrawRectangleUsingThreePointsMode", {
                enumerable: !0,
                get: function() {
                    return x.DrawRectangleUsingThreePointsMode
                }
            }), Object.defineProperty(e, "Draw90DegreePolygonMode", {
                enumerable: !0,
                get: function() {
                    return S.Draw90DegreePolygonMode
                }
            }), Object.defineProperty(e, "DrawPolygonByDraggingMode", {
                enumerable: !0,
                get: function() {
                    return O.DrawPolygonByDraggingMode
                }
            }), Object.defineProperty(e, "ImmutableFeatureCollection", {
                enumerable: !0,
                get: function() {
                    return T.ImmutableFeatureCollection
                }
            }), Object.defineProperty(e, "ViewMode", {
                enumerable: !0,
                get: function() {
                    return M.ViewMode
                }
            }), Object.defineProperty(e, "MeasureDistanceMode", {
                enumerable: !0,
                get: function() {
                    return C.MeasureDistanceMode
                }
            }), Object.defineProperty(e, "MeasureAreaMode", {
                enumerable: !0,
                get: function() {
                    return A.MeasureAreaMode
                }
            }), Object.defineProperty(e, "MeasureAngleMode", {
                enumerable: !0,
                get: function() {
                    return k.MeasureAngleMode
                }
            }), Object.defineProperty(e, "CompositeMode", {
                enumerable: !0,
                get: function() {
                    return I.CompositeMode
                }
            }), Object.defineProperty(e, "SnappableMode", {
                enumerable: !0,
                get: function() {
                    return j.SnappableMode
                }
            }), Object.defineProperty(e, "_memoize", {
                enumerable: !0,
                get: function() {
                    return L.default
                }
            }), e.utils = void 0;
            var i, o = n(32254),
                a = n(57366),
                s = n(76166),
                u = n(45892),
                c = n(10083),
                l = n(72511),
                f = n(24546),
                h = n(6548),
                d = n(56601),
                p = n(11370),
                g = n(44061),
                y = n(65521),
                v = n(92116),
                m = n(65282),
                b = n(38725),
                w = n(65790),
                _ = n(76950),
                P = n(3199),
                E = n(55184),
                x = n(29050),
                S = n(71991),
                O = n(23039),
                T = n(76302),
                M = n(15279),
                C = n(20063),
                A = n(60244),
                k = n(99857),
                I = n(48874),
                j = n(93816),
                L = (i = n(23916)) && i.__esModule ? i : {
                    default: i
                },
                R = function(t) {
                    if (t && t.__esModule) return t;
                    if (null === t || "object" !== r(t) && "function" !== typeof t) return {
                        default: t
                    };
                    var e = D();
                    if (e && e.has(t)) return e.get(t);
                    var n = {},
                        i = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var o in t)
                        if (Object.prototype.hasOwnProperty.call(t, o)) {
                            var a = i ? Object.getOwnPropertyDescriptor(t, o) : null;
                            a && (a.get || a.set) ? Object.defineProperty(n, o, a) : n[o] = t[o]
                        }
                    n.default = t, e && e.set(t, n);
                    return n
                }(n(70875));

            function D() {
                if ("function" !== typeof WeakMap) return null;
                var t = new WeakMap;
                return D = function() {
                    return t
                }, t
            }
            e.utils = R
        },
        48874: function(t, e, n) {
            "use strict";

            function r(t) {
                return (r = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function i(t) {
                return function(t) {
                    if (Array.isArray(t)) return a(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || o(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function o(t, e) {
                if (t) {
                    if ("string" === typeof t) return a(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? a(t, e) : void 0
                }
            }

            function a(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function s(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function u(t, e) {
                return !e || "object" !== r(e) && "function" !== typeof e ? c(t) : e
            }

            function c(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function l() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function f(t) {
                return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function h(t, e) {
                return (h = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.CompositeMode = void 0;
            var d = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && h(t, e)
                }(p, t);
                var e, n, r, a, d = (e = p, function() {
                    var t, n = f(e);
                    if (l()) {
                        var r = f(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return u(this, t)
                });

                function p(t) {
                    var e, n, r, i;
                    return function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, p), e = d.call(this), n = c(e), i = void 0, (r = "_modes") in n ? Object.defineProperty(n, r, {
                        value: i,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : n[r] = i, e._modes = t, e
                }
                return n = p, (r = [{
                    key: "_coalesce",
                    value: function(t) {
                        for (var e, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, r = 0; r < this._modes.length && (e = t(this._modes[r]), !(n ? n(e) : e)); r++);
                        return e
                    }
                }, {
                    key: "handleClick",
                    value: function(t, e) {
                        this._coalesce((function(n) {
                            return n.handleClick(t, e)
                        }))
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        return this._coalesce((function(n) {
                            return n.handlePointerMove(t, e)
                        }))
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        return this._coalesce((function(n) {
                            return n.handleStartDragging(t, e)
                        }))
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        return this._coalesce((function(n) {
                            return n.handleStopDragging(t, e)
                        }))
                    }
                }, {
                    key: "handleDragging",
                    value: function(t, e) {
                        return this._coalesce((function(n) {
                            return n.handleDragging(t, e)
                        }))
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e, n = [],
                            r = function(t) {
                                if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                                    if (Array.isArray(t) || (t = o(t))) {
                                        var e = 0,
                                            n = function() {};
                                        return {
                                            s: n,
                                            n: function() {
                                                return e >= t.length ? {
                                                    done: !0
                                                } : {
                                                    done: !1,
                                                    value: t[e++]
                                                }
                                            },
                                            e: function(t) {
                                                throw t
                                            },
                                            f: n
                                        }
                                    }
                                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                }
                                var r, i, a = !0,
                                    s = !1;
                                return {
                                    s: function() {
                                        r = t[Symbol.iterator]()
                                    },
                                    n: function() {
                                        var t = r.next();
                                        return a = t.done, t
                                    },
                                    e: function(t) {
                                        s = !0, i = t
                                    },
                                    f: function() {
                                        try {
                                            a || null == r.return || r.return()
                                        } finally {
                                            if (s) throw i
                                        }
                                    }
                                }
                            }(this._modes);
                        try {
                            for (r.s(); !(e = r.n()).done;) {
                                var a = e.value;
                                n.push.apply(n, i(a.getGuides(t).features))
                            }
                        } catch (s) {
                            r.e(s)
                        } finally {
                            r.f()
                        }
                        return {
                            type: "FeatureCollection",
                            features: n
                        }
                    }
                }]) && s(n.prototype, r), a && s(n, a), p
            }(n(32254).GeoJsonEditMode);
            e.CompositeMode = d
        },
        71991: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Draw90DegreePolygonMode = void 0;
            var r = c(n(93737)),
                i = c(n(51208)),
                o = c(n(73663)),
                a = c(n(31013)),
                s = n(84102),
                u = n(70875);

            function c(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function l(t) {
                return (l = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function f(t) {
                return function(t) {
                    if (Array.isArray(t)) return p(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || d(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function h(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    if ("undefined" === typeof Symbol || !(Symbol.iterator in Object(t))) return;
                    var n = [],
                        r = !0,
                        i = !1,
                        o = void 0;
                    try {
                        for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0);
                    } catch (u) {
                        i = !0, o = u
                    } finally {
                        try {
                            r || null == s.return || s.return()
                        } finally {
                            if (i) throw o
                        }
                    }
                    return n
                }(t, e) || d(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function d(t, e) {
                if (t) {
                    if ("string" === typeof t) return p(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? p(t, e) : void 0
                }
            }

            function p(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function g(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function y(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function v(t, e) {
                return !e || "object" !== l(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function m() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function b(t) {
                return (b = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function w(t, e) {
                return (w = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var _ = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && w(t, e)
                }(p, t);
                var e, n, c, l, d = (e = p, function() {
                    var t, n = b(e);
                    if (m()) {
                        var r = b(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return v(this, t)
                });

                function p() {
                    return g(this, p), d.apply(this, arguments)
                }
                return n = p, (c = [{
                    key: "getGuides",
                    value: function(t) {
                        var e = {
                                type: "FeatureCollection",
                                features: []
                            },
                            n = this.getClickSequence();
                        if (0 === n.length || !t.lastPointerMoveEvent) return e;
                        var r, i, o = t.lastPointerMoveEvent.mapCoords;
                        if (1 === n.length) r = o;
                        else {
                            var a = n[n.length - 2],
                                s = n[n.length - 1];
                            r = h((0, u.generatePointsParallelToLinePoints)(a, s, o), 1)[0]
                        }
                        return i = n.length < 3 ? {
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "LineString",
                                coordinates: [].concat(f(n), [r])
                            }
                        } : {
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "Polygon",
                                coordinates: [
                                    [].concat(f(n), [r, n[0]])
                                ]
                            }
                        }, e.features.push(i), e.features = e.features.concat((0, u.getEditHandlesForGeometry)(i.geometry, -1)), e.features = e.features.slice(0, -1), e
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        t.mapCoords, e.onUpdateCursor("cell")
                    }
                }, {
                    key: "handleClick",
                    value: function(t, e) {
                        var n = t.picks,
                            r = this.getTentativeGuide(e);
                        this.addClickSequence(t);
                        var i = this.getClickSequence();
                        if (r) {
                            if (3 === i.length && "LineString" === r.geometry.type) {
                                var o = r.geometry;
                                i[i.length - 1] = o.coordinates[o.coordinates.length - 1]
                            } else if (i.length > 3 && "Polygon" === r.geometry.type) {
                                var a = r.geometry;
                                i[i.length - 1] = a.coordinates[0][a.coordinates[0].length - 2];
                                var s = (0, u.getPickedEditHandle)(n);
                                if (s && Array.isArray(s.properties.positionIndexes) && (0 === s.properties.positionIndexes[1] || s.properties.positionIndexes[1] === a.coordinates[0].length - 3)) {
                                    var c = {
                                        type: "Polygon",
                                        coordinates: this.finalizedCoordinates(f(a.coordinates[0]))
                                    };
                                    this.resetClickSequence();
                                    var l = this.getAddFeatureOrBooleanPolygonAction(c, e);
                                    l && e.onEdit(l)
                                }
                            }
                            var h = {
                                screenCoords: [-1, -1],
                                mapCoords: t.mapCoords,
                                picks: [],
                                pointerDownPicks: null,
                                pointerDownScreenCoords: null,
                                pointerDownMapCoords: null,
                                cancelPan: function() {},
                                sourceEvent: null
                            };
                            this.handlePointerMove(h, e)
                        }
                    }
                }, {
                    key: "finalizedCoordinates",
                    value: function(t) {
                        var e = [
                                [].concat(f(t.slice(0, -2)), [t[0]])
                            ],
                            n = this.getIntermediatePoint(f(t));
                        if (n) e = [
                            [].concat(f(t.slice(0, -2)), [n, t[0]])
                        ];
                        else {
                            var r = f(t);
                            r.splice(-3, 1), (n = this.getIntermediatePoint(f(r))) && (e = [
                                [].concat(f(t.slice(0, -3)), [n, t[0]])
                            ])
                        }
                        return e
                    }
                }, {
                    key: "getIntermediatePoint",
                    value: function(t) {
                        var e;
                        if (t.length > 4) {
                            var n = f(t),
                                u = n[0],
                                c = n[1],
                                l = (0, i.default)(u, c),
                                h = t[t.length - 3],
                                d = t[t.length - 4],
                                p = (0, i.default)(h, d),
                                g = {
                                    first: [],
                                    second: []
                                };
                            [1, 2, 3].forEach((function(t) {
                                var e = l + 90 * t;
                                g.first.push(e > 180 ? e - 360 : e);
                                var n = p + 90 * t;
                                g.second.push(n > 180 ? n - 360 : n)
                            }));
                            var y = (0, a.default)((0, s.point)(u), (0, s.point)(h));
                            [0, 1, 2].forEach((function(t) {
                                var n = (0, s.lineString)([u, (0, r.default)(u, y, g.first[t]).geometry.coordinates]);
                                [0, 1, 2].forEach((function(t) {
                                    var i = (0, s.lineString)([h, (0, r.default)(h, y, g.second[t]).geometry.coordinates]),
                                        a = (0, o.default)(n, i);
                                    a && a.features.length && (e = a.features[0].geometry.coordinates)
                                }))
                            }))
                        }
                        return e
                    }
                }]) && y(n.prototype, c), l && y(n, l), p
            }(n(32254).GeoJsonEditMode);
            e.Draw90DegreePolygonMode = _
        },
        65790: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawCircleByDiameterMode = void 0;
            var r = a(n(90265)),
                i = a(n(31013)),
                o = n(32254);

            function a(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function s(t) {
                return (s = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function u(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function c(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function l(t, e) {
                return !e || "object" !== s(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function f() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function h(t) {
                return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function d(t, e) {
                return (d = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var p = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && d(t, e)
                }(g, t);
                var e, n, a, s, p = (e = g, function() {
                    var t, n = h(e);
                    if (f()) {
                        var r = h(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return l(this, t)
                });

                function g() {
                    return u(this, g), p.apply(this, arguments)
                }
                return n = g, (a = [{
                    key: "getTwoClickPolygon",
                    value: function(t, e, n) {
                        var a = (n || {}).steps,
                            s = void 0 === a ? 64 : a,
                            u = {
                                steps: s
                            };
                        s < 4 && (console.warn("Minimum steps to draw a circle is 4 "), u.steps = 4);
                        var c = (0, o.getIntermediatePosition)(t, e),
                            l = Math.max((0, i.default)(t, c), .001),
                            f = (0, r.default)(c, l, u);
                        return f.properties = f.properties || {}, f.properties.shape = "Circle", f
                    }
                }]) && c(n.prototype, a), s && c(n, s), g
            }(n(23124).TwoClickPolygonMode);
            e.DrawCircleByDiameterMode = p
        },
        76950: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawCircleFromCenterMode = void 0;
            var r = o(n(90265)),
                i = o(n(31013));

            function o(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function a(t) {
                return (a = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function s(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function u(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function c(t, e) {
                return !e || "object" !== a(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function l() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function f(t) {
                return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function h(t, e) {
                return (h = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var d = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && h(t, e)
                }(p, t);
                var e, n, o, a, d = (e = p, function() {
                    var t, n = f(e);
                    if (l()) {
                        var r = f(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return c(this, t)
                });

                function p() {
                    return s(this, p), d.apply(this, arguments)
                }
                return n = p, (o = [{
                    key: "getTwoClickPolygon",
                    value: function(t, e, n) {
                        var o = (n || {}).steps,
                            a = void 0 === o ? 64 : o,
                            s = {
                                steps: a
                            };
                        a < 4 && (console.warn("Minimum steps to draw a circle is 4 "), s.steps = 4);
                        var u = Math.max((0, i.default)(t, e), .001),
                            c = (0, r.default)(t, u, s);
                        return c.properties = c.properties || {}, c.properties.shape = "Circle", c
                    }
                }]) && u(n.prototype, o), a && u(n, a), p
            }(n(23124).TwoClickPolygonMode);
            e.DrawCircleFromCenterMode = d
        },
        3199: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawEllipseByBoundingBoxMode = void 0;
            var r = u(n(13652)),
                i = u(n(31013)),
                o = u(n(61211)),
                a = n(84102),
                s = n(32254);

            function u(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function c(t) {
                return (c = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function l(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function f(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function h(t, e) {
                return !e || "object" !== c(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function d() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function p(t) {
                return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function g(t, e) {
                return (g = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var y = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && g(t, e)
                }(v, t);
                var e, n, u, c, y = (e = v, function() {
                    var t, n = p(e);
                    if (d()) {
                        var r = p(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return h(this, t)
                });

                function v() {
                    return l(this, v), y.apply(this, arguments)
                }
                return n = v, (u = [{
                    key: "getTwoClickPolygon",
                    value: function(t, e, n) {
                        var u = Math.min(t[0], e[0]),
                            c = Math.min(t[1], e[1]),
                            l = Math.max(t[0], e[0]),
                            f = Math.max(t[1], e[1]),
                            h = (0, r.default)([u, c, l, f]).geometry.coordinates[0],
                            d = (0, s.getIntermediatePosition)(t, e),
                            p = Math.max((0, i.default)((0, a.point)(h[0]), (0, a.point)(h[1])), .001),
                            g = Math.max((0, i.default)((0, a.point)(h[0]), (0, a.point)(h[3])), .001);
                        return (0, o.default)(d, p, g)
                    }
                }]) && f(n.prototype, u), c && f(n, c), v
            }(n(23124).TwoClickPolygonMode);
            e.DrawEllipseByBoundingBoxMode = y
        },
        55184: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawEllipseUsingThreePointsMode = void 0;
            var r = u(n(31013)),
                i = u(n(61211)),
                o = u(n(51208)),
                a = n(84102),
                s = n(32254);

            function u(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function c(t) {
                return (c = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function l(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function f(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function h(t, e) {
                return !e || "object" !== c(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function d() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function p(t) {
                return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function g(t, e) {
                return (g = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var y = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && g(t, e)
                }(v, t);
                var e, n, u, c, y = (e = v, function() {
                    var t, n = p(e);
                    if (d()) {
                        var r = p(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return h(this, t)
                });

                function v() {
                    return l(this, v), y.apply(this, arguments)
                }
                return n = v, (u = [{
                    key: "getThreeClickPolygon",
                    value: function(t, e, n, u) {
                        var c = (0, s.getIntermediatePosition)(t, e),
                            l = Math.max((0, r.default)(c, (0, a.point)(n)), .001),
                            f = Math.max((0, r.default)(t, e), .001) / 2,
                            h = {
                                angle: (0, o.default)(t, e)
                            };
                        return (0, i.default)(c, l, f, h)
                    }
                }]) && f(n.prototype, u), c && f(n, c), v
            }(n(1658).ThreeClickPolygonMode);
            e.DrawEllipseUsingThreePointsMode = y
        },
        92116: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawLineStringMode = void 0;
            var r = n(70875);

            function i(t) {
                return (i = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function o(t) {
                return function(t) {
                    if (Array.isArray(t)) return a(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return a(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return a(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function a(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function s(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function u(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function c(t, e) {
                return !e || "object" !== i(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function l() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function f(t) {
                return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function h(t, e) {
                return (h = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var d = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && h(t, e)
                }(p, t);
                var e, n, i, a, d = (e = p, function() {
                    var t, n = f(e);
                    if (l()) {
                        var r = f(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return c(this, t)
                });

                function p() {
                    return s(this, p), d.apply(this, arguments)
                }
                return n = p, (i = [{
                    key: "handleClick",
                    value: function(t, e) {
                        var n = t.picks,
                            i = (0, r.getPickedEditHandle)(n),
                            a = !1;
                        i || (this.addClickSequence(t), a = !0);
                        var s = this.getClickSequence();
                        if (s.length > 1 && i && Array.isArray(i.properties.positionIndexes) && i.properties.positionIndexes[0] === s.length - 1) {
                            var u = {
                                type: "LineString",
                                coordinates: o(s)
                            };
                            this.resetClickSequence();
                            var c = this.getAddFeatureAction(u, e.data);
                            c && e.onEdit(c)
                        } else a && e.onEdit({
                            updatedData: e.data,
                            editType: "addTentativePosition",
                            editContext: {
                                position: t.mapCoords
                            }
                        })
                    }
                }, {
                    key: "handleKeyUp",
                    value: function(t, e) {
                        if ("Enter" === t.key) {
                            var n = this.getClickSequence();
                            if (n.length > 1) {
                                var r = {
                                    type: "LineString",
                                    coordinates: o(n)
                                };
                                this.resetClickSequence();
                                var i = this.getAddFeatureAction(r, e.data);
                                i && e.onEdit(i)
                            }
                        }
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e, n, r = t.lastPointerMoveEvent,
                            i = this.getClickSequence(),
                            a = r ? [r.mapCoords] : [],
                            s = {
                                type: "FeatureCollection",
                                features: []
                            };
                        i.length > 0 && (n = {
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "LineString",
                                coordinates: [].concat(o(i), a)
                            }
                        }), n && s.features.push(n);
                        var u = i.map((function(t, e) {
                            return {
                                type: "Feature",
                                properties: {
                                    guideType: "editHandle",
                                    editHandleType: "existing",
                                    featureIndex: -1,
                                    positionIndexes: [e]
                                },
                                geometry: {
                                    type: "Point",
                                    coordinates: t
                                }
                            }
                        }));
                        return (e = s.features).push.apply(e, o(u)), s
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        e.onUpdateCursor("cell")
                    }
                }]) && u(n.prototype, i), a && u(n, a), p
            }(n(32254).GeoJsonEditMode);
            e.DrawLineStringMode = d
        },
        65521: function(t, e, n) {
            "use strict";

            function r(t) {
                return (r = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function i(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function o(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function a(t, e) {
                return !e || "object" !== r(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function s() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function u(t) {
                return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function c(t, e) {
                return (c = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawPointMode = void 0;
            var l = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && c(t, e)
                }(h, t);
                var e, n, r, l, f = (e = h, function() {
                    var t, n = u(e);
                    if (s()) {
                        var r = u(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return a(this, t)
                });

                function h() {
                    return i(this, h), f.apply(this, arguments)
                }
                return n = h, (r = [{
                    key: "handleClick",
                    value: function(t, e) {
                        var n = {
                            type: "Point",
                            coordinates: t.mapCoords
                        };
                        e.onEdit(this.getAddFeatureAction(n, e.data))
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        e.onUpdateCursor("cell")
                    }
                }]) && o(n.prototype, r), l && o(n, l), h
            }(n(32254).GeoJsonEditMode);
            e.DrawPointMode = l
        },
        23039: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawPolygonByDraggingMode = void 0;
            var r, i = (r = n(93096)) && r.__esModule ? r : {
                    default: r
                },
                o = n(70875);

            function a(t) {
                return (a = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function s(t) {
                return function(t) {
                    if (Array.isArray(t)) return u(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return u(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return u(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function u(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function c(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function l(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function f(t, e) {
                return !e || "object" !== a(e) && "function" !== typeof e ? h(t) : e
            }

            function h(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function d() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function p(t) {
                return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function g(t, e) {
                return (g = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function y(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var v = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && g(t, e)
                }(v, t);
                var e, n, r, a, u = (e = v, function() {
                    var t, n = p(e);
                    if (d()) {
                        var r = p(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return f(this, t)
                });

                function v() {
                    var t;
                    c(this, v);
                    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                    return y(h(t = u.call.apply(u, [this].concat(n))), "handleDraggingThrottled", null), t
                }
                return n = v, (r = [{
                    key: "handleClick",
                    value: function(t, e) {}
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        t.cancelPan(), e.modeConfig && e.modeConfig.throttleMs ? this.handleDraggingThrottled = (0, i.default)(this.handleDraggingAux, e.modeConfig.throttleMs) : this.handleDraggingThrottled = this.handleDraggingAux
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        this.addClickSequence(t);
                        var n = this.getClickSequence();
                        if (this.handleDraggingThrottled && this.handleDraggingThrottled.cancel && this.handleDraggingThrottled.cancel(), n.length > 2) {
                            var r = {
                                type: "Polygon",
                                coordinates: [
                                    [].concat(s(n), [n[0]])
                                ]
                            };
                            this.resetClickSequence();
                            var i = this.getAddFeatureOrBooleanPolygonAction(r, e);
                            i && e.onEdit(i)
                        }
                    }
                }, {
                    key: "handleDraggingAux",
                    value: function(t, e) {
                        var n = t.picks;
                        (0, o.getPickedEditHandle)(n) || this.addClickSequence(t)
                    }
                }, {
                    key: "handleDragging",
                    value: function(t, e) {
                        this.handleDraggingThrottled && this.handleDraggingThrottled(t, e)
                    }
                }]) && l(n.prototype, r), a && l(n, a), v
            }(n(65282).DrawPolygonMode);
            e.DrawPolygonByDraggingMode = v
        },
        65282: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawPolygonMode = void 0;
            var r = n(70875);

            function i(t) {
                return (i = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function o(t) {
                return function(t) {
                    if (Array.isArray(t)) return a(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return a(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return a(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function a(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function s(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function u(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function c(t, e) {
                return !e || "object" !== i(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function l() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function f(t) {
                return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function h(t, e) {
                return (h = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var d = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && h(t, e)
                }(p, t);
                var e, n, i, a, d = (e = p, function() {
                    var t, n = f(e);
                    if (l()) {
                        var r = f(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return c(this, t)
                });

                function p() {
                    return s(this, p), d.apply(this, arguments)
                }
                return n = p, (i = [{
                    key: "getGuides",
                    value: function(t) {
                        var e, n, r = t.lastPointerMoveEvent,
                            i = this.getClickSequence(),
                            a = r ? [r.mapCoords] : [],
                            s = {
                                type: "FeatureCollection",
                                features: []
                            };
                        1 === i.length || 2 === i.length ? n = {
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "LineString",
                                coordinates: [].concat(o(i), a)
                            }
                        } : i.length > 2 && (n = {
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "Polygon",
                                coordinates: [
                                    [].concat(o(i), a, [i[0]])
                                ]
                            }
                        }), n && s.features.push(n);
                        var u = i.map((function(t, e) {
                            return {
                                type: "Feature",
                                properties: {
                                    guideType: "editHandle",
                                    editHandleType: "existing",
                                    featureIndex: -1,
                                    positionIndexes: [e]
                                },
                                geometry: {
                                    type: "Point",
                                    coordinates: t
                                }
                            }
                        }));
                        return (e = s.features).push.apply(e, o(u)), s
                    }
                }, {
                    key: "handleClick",
                    value: function(t, e) {
                        var n = t.picks,
                            i = (0, r.getPickedEditHandle)(n),
                            a = !1;
                        i || (this.addClickSequence(t), a = !0);
                        var s = this.getClickSequence();
                        if (s.length > 2 && i && Array.isArray(i.properties.positionIndexes) && (0 === i.properties.positionIndexes[0] || i.properties.positionIndexes[0] === s.length - 1)) {
                            var u = {
                                type: "Polygon",
                                coordinates: [
                                    [].concat(o(s), [s[0]])
                                ]
                            };
                            this.resetClickSequence();
                            var c = this.getAddFeatureOrBooleanPolygonAction(u, e);
                            c && e.onEdit(c)
                        } else a && e.onEdit({
                            updatedData: e.data,
                            editType: "addTentativePosition",
                            editContext: {
                                position: t.mapCoords
                            }
                        })
                    }
                }, {
                    key: "handleKeyUp",
                    value: function(t, e) {
                        if ("Enter" === t.key) {
                            var n = this.getClickSequence();
                            if (n.length > 2) {
                                var r = {
                                    type: "Polygon",
                                    coordinates: [
                                        [].concat(o(n), [n[0]])
                                    ]
                                };
                                this.resetClickSequence();
                                var i = this.getAddFeatureOrBooleanPolygonAction(r, e);
                                i && e.onEdit(i)
                            }
                        }
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        t.mapCoords, e.onUpdateCursor("cell")
                    }
                }]) && u(n.prototype, i), a && u(n, a), p
            }(n(32254).GeoJsonEditMode);
            e.DrawPolygonMode = d
        },
        38725: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawRectangleMode = void 0;
            var r, i = (r = n(13652)) && r.__esModule ? r : {
                default: r
            };

            function o(t) {
                return (o = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function a(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function s(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function u(t, e) {
                return !e || "object" !== o(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function c() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function l(t) {
                return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function f(t, e) {
                return (f = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var h = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && f(t, e)
                }(d, t);
                var e, n, r, o, h = (e = d, function() {
                    var t, n = l(e);
                    if (c()) {
                        var r = l(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return u(this, t)
                });

                function d() {
                    return a(this, d), h.apply(this, arguments)
                }
                return n = d, (r = [{
                    key: "getTwoClickPolygon",
                    value: function(t, e, n) {
                        var r = (0, i.default)([t[0], t[1], e[0], e[1]]);
                        return r.properties = r.properties || {}, r.properties.shape = "Rectangle", r
                    }
                }]) && s(n.prototype, r), o && s(n, o), d
            }(n(23124).TwoClickPolygonMode);
            e.DrawRectangleMode = h
        },
        29050: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DrawRectangleUsingThreePointsMode = void 0;
            var r = n(70875);

            function i(t) {
                return (i = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function o(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    if ("undefined" === typeof Symbol || !(Symbol.iterator in Object(t))) return;
                    var n = [],
                        r = !0,
                        i = !1,
                        o = void 0;
                    try {
                        for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0);
                    } catch (u) {
                        i = !0, o = u
                    } finally {
                        try {
                            r || null == s.return || s.return()
                        } finally {
                            if (i) throw o
                        }
                    }
                    return n
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return a(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return a(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function a(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function s(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function u(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function c(t, e) {
                return !e || "object" !== i(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function l() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function f(t) {
                return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function h(t, e) {
                return (h = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var d = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && h(t, e)
                }(p, t);
                var e, n, i, a, d = (e = p, function() {
                    var t, n = f(e);
                    if (l()) {
                        var r = f(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return c(this, t)
                });

                function p() {
                    return s(this, p), d.apply(this, arguments)
                }
                return n = p, (i = [{
                    key: "getThreeClickPolygon",
                    value: function(t, e, n, i) {
                        var a = o((0, r.generatePointsParallelToLinePoints)(t, e, n), 2);
                        return {
                            type: "Feature",
                            properties: {
                                shape: "Rectangle"
                            },
                            geometry: {
                                type: "Polygon",
                                coordinates: [
                                    [t, e, a[0], a[1], t]
                                ]
                            }
                        }
                    }
                }]) && u(n.prototype, i), a && u(n, a), p
            }(n(1658).ThreeClickPolygonMode);
            e.DrawRectangleUsingThreePointsMode = d
        },
        72511: function(t, e, n) {
            "use strict";

            function r(t) {
                return (r = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function i(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function o(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function a(t, e, n) {
                return (a = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = c(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function s(t, e) {
                return !e || "object" !== r(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function u() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function c(t) {
                return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function l(t, e) {
                return (l = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.DuplicateMode = void 0;
            var f = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && l(t, e)
                }(d, t);
                var e, n, r, f, h = (e = d, function() {
                    var t, n = c(e);
                    if (u()) {
                        var r = c(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return s(this, t)
                });

                function d() {
                    return i(this, d), h.apply(this, arguments)
                }
                return n = d, (r = [{
                    key: "handleStartDragging",
                    value: function(t, e) {
                        a(c(d.prototype), "handleStartDragging", this).call(this, t, e), this._geometryBeforeTranslate && e.onEdit(this.getAddManyFeaturesAction(this._geometryBeforeTranslate, e.data))
                    }
                }, {
                    key: "updateCursor",
                    value: function(t) {
                        this._isTranslatable ? t.onUpdateCursor("copy") : t.onUpdateCursor(null)
                    }
                }]) && o(n.prototype, r), f && o(n, f), d
            }(n(76166).TranslateMode);
            e.DuplicateMode = f
        },
        11370: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ElevationMode = void 0;
            var r = n(70875);

            function i(t) {
                return (i = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function a(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function s(t, e, n) {
                return (s = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = l(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function u(t, e) {
                return !e || "object" !== i(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function c() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function l(t) {
                return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function f(t, e) {
                return (f = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function h(t) {
                var e = t.pointerDownScreenCoords,
                    n = t.screenCoords;
                return 10 * (e[1] - n[1])
            }
            var d = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && f(t, e)
                }(g, t);
                var e, n, i, d, p = (e = g, function() {
                    var t, n = l(e);
                    if (c()) {
                        var r = l(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return u(this, t)
                });

                function g() {
                    return o(this, g), p.apply(this, arguments)
                }
                return n = g, d = [{
                    key: "calculateElevationChangeWithViewport",
                    value: function(t, e) {
                        var n = e.pointerDownScreenCoords,
                            r = e.screenCoords;
                        return 156543.03392 * Math.cos(t.latitude * Math.PI / 180) / Math.pow(2, t.zoom) * (n[1] - r[1]) / 2
                    }
                }], (i = [{
                    key: "makeElevatedEvent",
                    value: function(t, e, n) {
                        var r = n.modeConfig || {},
                            i = r.minElevation,
                            o = void 0 === i ? 0 : i,
                            a = r.maxElevation,
                            s = void 0 === a ? 2e4 : a,
                            u = r.calculateElevationChange,
                            c = void 0 === u ? h : u;
                        if (!t.pointerDownScreenCoords) return t;
                        var l = 3 === e.length ? e[2] : 0;
                        return l += c({
                            pointerDownScreenCoords: t.pointerDownScreenCoords,
                            screenCoords: t.screenCoords
                        }), l = Math.min(l, s), l = Math.max(l, o), Object.assign({}, t, {
                            mapCoords: [e[0], e[1], l]
                        })
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        var n = (0, r.getPickedEditHandle)(t.pointerDownPicks),
                            i = n ? n.geometry.coordinates : t.mapCoords;
                        s(l(g.prototype), "handlePointerMove", this).call(this, this.makeElevatedEvent(t, i, e), e)
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        var n = (0, r.getPickedEditHandle)(t.picks),
                            i = n ? n.geometry.coordinates : t.mapCoords;
                        s(l(g.prototype), "handleStopDragging", this).call(this, this.makeElevatedEvent(t, i, e), e)
                    }
                }, {
                    key: "getCursor",
                    value: function(t) {
                        var e = s(l(g.prototype), "getCursor", this).call(this, t);
                        return "cell" === e && (e = "ns-resize"), e
                    }
                }]) && a(n.prototype, i), d && a(n, d), g
            }(n(57366).ModifyMode);
            e.ElevationMode = d
        },
        24546: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ExtendLineStringMode = void 0;
            var r = n(32254),
                i = n(76302);

            function o(t) {
                return (o = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function a(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function s(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function u(t, e) {
                return !e || "object" !== o(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function c() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function l(t) {
                return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function f(t, e) {
                return (f = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var h = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && f(t, e)
                }(d, t);
                var e, n, r, o, h = (e = d, function() {
                    var t, n = l(e);
                    if (c()) {
                        var r = l(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return u(this, t)
                });

                function d() {
                    return a(this, d), h.apply(this, arguments)
                }
                return n = d, (r = [{
                    key: "getSingleSelectedLineString",
                    value: function(t) {
                        var e = this.getSelectedGeometry(t);
                        return e && "LineString" === e.type ? e : null
                    }
                }, {
                    key: "handleClick",
                    value: function(t, e) {
                        var n = e.selectedIndexes,
                            r = this.getSingleSelectedLineString(e);
                        if (r) {
                            var o = [r.coordinates.length],
                                a = e.modeConfig;
                            a && a.drawAtFront && (o = [0]);
                            var s = n[0],
                                u = new i.ImmutableFeatureCollection(e.data).addPosition(s, o, t.mapCoords).getObject();
                            e.onEdit({
                                updatedData: u,
                                editType: "addPosition",
                                editContext: {
                                    featureIndexes: [s],
                                    positionIndexes: o,
                                    position: t.mapCoords
                                }
                            })
                        } else console.warn("ExtendLineStringMode only supported for single LineString selection")
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e = {
                                type: "FeatureCollection",
                                features: []
                            },
                            n = this.getSingleSelectedLineString(t);
                        if (!n) return e;
                        var r = t.lastPointerMoveEvent && t.lastPointerMoveEvent.mapCoords,
                            i = null,
                            o = t.modeConfig;
                        return i = o && o.drawAtFront ? n.coordinates[0] : n.coordinates[n.coordinates.length - 1], e.features.push({
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "LineString",
                                coordinates: [i, r]
                            }
                        }), e
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        e.onUpdateCursor("cell")
                    }
                }]) && s(n.prototype, r), o && s(n, o), d
            }(r.GeoJsonEditMode);
            e.ExtendLineStringMode = h
        },
        56601: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ExtrudeMode = void 0;
            var r, i = (r = n(51208)) && r.__esModule ? r : {
                    default: r
                },
                o = n(70875),
                a = n(57366),
                s = n(76302);

            function u(t) {
                return (u = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function c(t) {
                return function(t) {
                    if (Array.isArray(t)) return h(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || f(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function l(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    if ("undefined" === typeof Symbol || !(Symbol.iterator in Object(t))) return;
                    var n = [],
                        r = !0,
                        i = !1,
                        o = void 0;
                    try {
                        for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0);
                    } catch (u) {
                        i = !0, o = u
                    } finally {
                        try {
                            r || null == s.return || s.return()
                        } finally {
                            if (i) throw o
                        }
                    }
                    return n
                }(t, e) || f(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function f(t, e) {
                if (t) {
                    if ("string" === typeof t) return h(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? h(t, e) : void 0
                }
            }

            function h(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function d(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function p(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function g(t, e) {
                return !e || "object" !== u(e) && "function" !== typeof e ? y(t) : e
            }

            function y(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function v() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function m(t) {
                return (m = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function b(t, e) {
                return (b = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function w(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var _ = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && b(t, e)
                }(f, t);
                var e, n, r, a, u = (e = f, function() {
                    var t, n = m(e);
                    if (v()) {
                        var r = m(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return g(this, t)
                });

                function f() {
                    var t;
                    d(this, f);
                    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                    return w(y(t = u.call.apply(u, [this].concat(n))), "isPointAdded", !1), t
                }
                return n = f, (r = [{
                    key: "handleDragging",
                    value: function(t, e) {
                        var n = (0, o.getPickedEditHandle)(t.pointerDownPicks);
                        if (n) {
                            var r = n.properties.featureIndex,
                                i = n.properties.positionIndexes,
                                a = this.coordinatesSize(i, r, e.data);
                            i = this.isPointAdded ? this.nextPositionIndexes(i, a) : i;
                            var u = this.getPointForPositionIndexes(this.prevPositionIndexes(i, a), r, e.data),
                                c = this.getPointForPositionIndexes(i, r, e.data);
                            if (u && c) {
                                var f = l((0, o.generatePointsParallelToLinePoints)(u, c, t.mapCoords), 2),
                                    h = f[0],
                                    d = f[1],
                                    p = new s.ImmutableFeatureCollection(e.data).replacePosition(r, this.prevPositionIndexes(i, a), d).replacePosition(r, i, h).getObject();
                                e.onEdit({
                                    updatedData: p,
                                    editType: "extruding",
                                    editContext: {
                                        featureIndexes: [r],
                                        positionIndexes: this.nextPositionIndexes(i, a),
                                        position: h
                                    }
                                }), t.cancelPan()
                            }
                        }
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        var n = e.selectedIndexes,
                            r = (0, o.getPickedIntermediateEditHandle)(t.picks);
                        if (n.length && r) {
                            var i = r.properties,
                                a = i.positionIndexes,
                                u = i.featureIndex,
                                c = this.coordinatesSize(a, u, e.data),
                                l = this.getPointForPositionIndexes(this.prevPositionIndexes(a, c), u, e.data),
                                f = this.getPointForPositionIndexes(a, u, e.data);
                            if (l && f) {
                                var h = new s.ImmutableFeatureCollection(e.data);
                                this.isOrthogonal(a, u, c, e.data) || (h = h.addPosition(u, a, f)), this.isOrthogonal(this.prevPositionIndexes(a, c), u, c, e.data) || (h = h.addPosition(u, a, l), this.isPointAdded = !0), e.onEdit({
                                    updatedData: h.getObject(),
                                    editType: "startExtruding",
                                    editContext: {
                                        featureIndexes: [u],
                                        positionIndexes: a,
                                        position: l
                                    }
                                })
                            }
                        }
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        var n = e.selectedIndexes,
                            r = (0, o.getPickedEditHandle)(t.pointerDownPicks);
                        if (n.length && r) {
                            var i = r.properties.featureIndex,
                                a = r.properties.positionIndexes,
                                u = this.coordinatesSize(a, i, e.data);
                            a = this.isPointAdded ? this.nextPositionIndexes(a, u) : a;
                            var c = this.getPointForPositionIndexes(this.prevPositionIndexes(a, u), i, e.data),
                                f = this.getPointForPositionIndexes(a, i, e.data);
                            if (c && f) {
                                var h = l((0, o.generatePointsParallelToLinePoints)(c, f, t.mapCoords), 2),
                                    d = h[0],
                                    p = h[1],
                                    g = new s.ImmutableFeatureCollection(e.data).replacePosition(i, this.prevPositionIndexes(a, u), p).replacePosition(i, a, d).getObject();
                                e.onEdit({
                                    updatedData: g,
                                    editType: "extruded",
                                    editContext: {
                                        featureIndexes: [i],
                                        positionIndexes: a,
                                        position: d
                                    }
                                })
                            }
                        }
                        this.isPointAdded = !1
                    }
                }, {
                    key: "coordinatesSize",
                    value: function(t, e, n) {
                        var r = n.features,
                            i = 0;
                        if (Array.isArray(t)) {
                            var o = r[e].geometry.coordinates;
                            if (3 === t.length) {
                                var a = l(t, 2),
                                    s = a[0],
                                    u = a[1];
                                o.length && o[s].length && (i = o[s][u].length)
                            } else {
                                var c = l(t, 1)[0];
                                o.length && o[c].length && (i = o[c].length)
                            }
                        }
                        return i
                    }
                }, {
                    key: "getBearing",
                    value: function(t, e) {
                        var n = (0, i.default)(t, e);
                        return n < 0 ? Math.floor(360 + n) : Math.floor(n)
                    }
                }, {
                    key: "isOrthogonal",
                    value: function(t, e, n, r) {
                        if (!Array.isArray(t)) return !1;
                        t[t.length - 1] === n - 1 && (t[t.length - 1] = 0);
                        var i = this.getPointForPositionIndexes(this.prevPositionIndexes(t, n), e, r),
                            o = this.getPointForPositionIndexes(this.nextPositionIndexes(t, n), e, r),
                            a = this.getPointForPositionIndexes(t, e, r),
                            s = this.getBearing(a, i),
                            u = this.getBearing(a, o);
                        return [89, 90, 91, 269, 270, 271].includes(Math.abs(s - u))
                    }
                }, {
                    key: "nextPositionIndexes",
                    value: function(t, e) {
                        if (!Array.isArray(t)) return [];
                        var n = c(t);
                        return n.length && (n[n.length - 1] = n[n.length - 1] === e - 1 ? 0 : n[n.length - 1] + 1), n
                    }
                }, {
                    key: "prevPositionIndexes",
                    value: function(t, e) {
                        if (!Array.isArray(t)) return [];
                        var n = c(t);
                        return n.length && (n[n.length - 1] = 0 === n[n.length - 1] ? e - 2 : n[n.length - 1] - 1), n
                    }
                }, {
                    key: "getPointForPositionIndexes",
                    value: function(t, e, n) {
                        var r, i = n.features;
                        if (Array.isArray(t)) {
                            var o = i[e].geometry.coordinates;
                            if (3 === t.length) {
                                var a = l(t, 3),
                                    s = a[0],
                                    u = a[1],
                                    c = a[2];
                                o.length && o[s].length && (r = o[s][u][c])
                            } else {
                                var f = l(t, 2),
                                    h = f[0],
                                    d = f[1];
                                o.length && o[h].length && (r = o[h][d])
                            }
                        }
                        return r
                    }
                }]) && p(n.prototype, r), a && p(n, a), f
            }(a.ModifyMode);
            e.ExtrudeMode = _
        },
        32254: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.getIntermediatePosition = function(t, e) {
                return [(t[0] + e[0]) / 2, (t[1] + e[1]) / 2]
            }, e.GeoJsonEditMode = void 0;
            var r = c(n(71959)),
                i = c(n(68727)),
                o = c(n(74170)),
                a = c(n(51138)),
                s = n(70875),
                u = n(76302);

            function c(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function l(t) {
                return function(t) {
                    if (Array.isArray(t)) return h(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || f(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function f(t, e) {
                if (t) {
                    if ("string" === typeof t) return h(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? h(t, e) : void 0
                }
            }

            function h(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function d(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var p = {
                    type: "FeatureCollection",
                    features: []
                },
                g = [],
                y = function() {
                    function t() {
                        var e, n, r;
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), r = [], (n = "_clickSequence") in (e = this) ? Object.defineProperty(e, n, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : e[n] = r
                    }
                    var e, n, c;
                    return e = t, (n = [{
                        key: "getGuides",
                        value: function(t) {
                            return p
                        }
                    }, {
                        key: "getTooltips",
                        value: function(t) {
                            return g
                        }
                    }, {
                        key: "getSelectedFeature",
                        value: function(t) {
                            return 1 === t.selectedIndexes.length ? t.data.features[t.selectedIndexes[0]] : null
                        }
                    }, {
                        key: "getSelectedGeometry",
                        value: function(t) {
                            var e = this.getSelectedFeature(t);
                            return e ? e.geometry : null
                        }
                    }, {
                        key: "getSelectedFeaturesAsFeatureCollection",
                        value: function(t) {
                            var e = t.data.features;
                            return {
                                type: "FeatureCollection",
                                features: t.selectedIndexes.map((function(t) {
                                    return e[t]
                                }))
                            }
                        }
                    }, {
                        key: "getClickSequence",
                        value: function() {
                            return this._clickSequence
                        }
                    }, {
                        key: "addClickSequence",
                        value: function(t) {
                            var e = t.mapCoords;
                            this._clickSequence.push(e)
                        }
                    }, {
                        key: "resetClickSequence",
                        value: function() {
                            this._clickSequence = []
                        }
                    }, {
                        key: "getTentativeGuide",
                        value: function(t) {
                            return this.getGuides(t).features.find((function(t) {
                                return t.properties && "tentative" === t.properties.guideType
                            }))
                        }
                    }, {
                        key: "isSelectionPicked",
                        value: function(t, e) {
                            if (!t.length) return !1;
                            var n = (0, s.getNonGuidePicks)(t).map((function(t) {
                                    return t.index
                                })),
                                r = (0, s.getPickedEditHandles)(t).map((function(t) {
                                    return t.properties.featureIndex
                                })),
                                i = new Set([].concat(l(n), l(r)));
                            return e.selectedIndexes.some((function(t) {
                                return i.has(t)
                            }))
                        }
                    }, {
                        key: "rewindPolygon",
                        value: function(t) {
                            var e = t.geometry;
                            return "Polygon" === e.type || "MultiPolygon" === e.type ? (0, a.default)(t) : t
                        }
                    }, {
                        key: "getAddFeatureAction",
                        value: function(t, e) {
                            var n = t,
                                r = "Feature" === n.type ? n : {
                                    type: "Feature",
                                    properties: {},
                                    geometry: n
                                },
                                i = this.rewindPolygon(r),
                                o = new u.ImmutableFeatureCollection(e).addFeature(i).getObject();
                            return {
                                updatedData: o,
                                editType: "addFeature",
                                editContext: {
                                    featureIndexes: [o.features.length - 1]
                                }
                            }
                        }
                    }, {
                        key: "getAddManyFeaturesAction",
                        value: function(t, e) {
                            var n, r = t.features,
                                i = new u.ImmutableFeatureCollection(e),
                                o = i.getObject().features.length,
                                a = [],
                                s = function(t) {
                                    if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                                        if (Array.isArray(t) || (t = f(t))) {
                                            var e = 0,
                                                n = function() {};
                                            return {
                                                s: n,
                                                n: function() {
                                                    return e >= t.length ? {
                                                        done: !0
                                                    } : {
                                                        done: !1,
                                                        value: t[e++]
                                                    }
                                                },
                                                e: function(t) {
                                                    throw t
                                                },
                                                f: n
                                            }
                                        }
                                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                    }
                                    var r, i, o = !0,
                                        a = !1;
                                    return {
                                        s: function() {
                                            r = t[Symbol.iterator]()
                                        },
                                        n: function() {
                                            var t = r.next();
                                            return o = t.done, t
                                        },
                                        e: function(t) {
                                            a = !0, i = t
                                        },
                                        f: function() {
                                            try {
                                                o || null == r.return || r.return()
                                            } finally {
                                                if (a) throw i
                                            }
                                        }
                                    }
                                }(r);
                            try {
                                for (s.s(); !(n = s.n()).done;) {
                                    var c = n.value,
                                        l = c.properties,
                                        h = c.geometry;
                                    i = i.addFeature({
                                        type: "Feature",
                                        properties: l,
                                        geometry: h
                                    }), a.push(o + a.length)
                                }
                            } catch (d) {
                                s.e(d)
                            } finally {
                                s.f()
                            }
                            return {
                                updatedData: i.getObject(),
                                editType: "addFeature",
                                editContext: {
                                    featureIndexes: a
                                }
                            }
                        }
                    }, {
                        key: "getAddFeatureOrBooleanPolygonAction",
                        value: function(t, e) {
                            var n = t,
                                a = this.getSelectedFeature(e),
                                s = e.modeConfig;
                            if (s && s.booleanOperation) {
                                if (!a || "Polygon" !== a.geometry.type && "MultiPolygon" !== a.geometry.type) return console.warn("booleanOperation only supported for single Polygon or MultiPolygon selection"), null;
                                var c, l = "Feature" === n.type ? n : {
                                    type: "Feature",
                                    geometry: n
                                };
                                if ("union" === s.booleanOperation) c = (0, r.default)(a, l);
                                else if ("difference" === s.booleanOperation) c = (0, i.default)(a, l);
                                else {
                                    if ("intersection" !== s.booleanOperation) return console.warn("Invalid booleanOperation ".concat(s.booleanOperation)), null;
                                    c = (0, o.default)(a, l)
                                }
                                if (!c) return console.warn("Canceling edit. Boolean operation erased entire polygon."), null;
                                var f = e.selectedIndexes[0];
                                return {
                                    updatedData: new u.ImmutableFeatureCollection(e.data).replaceGeometry(f, c.geometry).getObject(),
                                    editType: "unionGeometry",
                                    editContext: {
                                        featureIndexes: [f]
                                    }
                                }
                            }
                            return this.getAddFeatureAction(t, e.data)
                        }
                    }, {
                        key: "handleClick",
                        value: function(t, e) {}
                    }, {
                        key: "handlePointerMove",
                        value: function(t, e) {}
                    }, {
                        key: "handleStartDragging",
                        value: function(t, e) {}
                    }, {
                        key: "handleStopDragging",
                        value: function(t, e) {}
                    }, {
                        key: "handleDragging",
                        value: function(t, e) {}
                    }, {
                        key: "handleKeyUp",
                        value: function(t, e) {
                            "Escape" === t.key && (this.resetClickSequence(), e.onEdit({
                                updatedData: e.data,
                                editType: "cancelFeature",
                                editContext: {}
                            }))
                        }
                    }]) && d(e.prototype, n), c && d(e, c), t
                }();
            e.GeoJsonEditMode = y
        },
        76302: function(t, e) {
            "use strict";

            function n(t) {
                return function(t) {
                    if (Array.isArray(t)) return r(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return r(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return r(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function r(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function i(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function o(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? i(Object(n), !0).forEach((function(e) {
                        s(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }

            function a(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function s(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ImmutableFeatureCollection = void 0;
            var u = function() {
                function t(e) {
                    ! function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), s(this, "featureCollection", void 0), this.featureCollection = e
                }
                var e, r, i;
                return e = t, (r = [{
                    key: "getObject",
                    value: function() {
                        return this.featureCollection
                    }
                }, {
                    key: "replacePosition",
                    value: function(t, e, n) {
                        var r = this.featureCollection.features[t].geometry,
                            i = "Polygon" === r.type || "MultiPolygon" === r.type,
                            a = o({}, r, {
                                coordinates: l(r.coordinates, e, n, i)
                            });
                        return this.replaceGeometry(t, a)
                    }
                }, {
                    key: "removePosition",
                    value: function(t, e) {
                        var n = this.featureCollection.features[t].geometry;
                        if ("Point" === n.type) throw Error("Can't remove a position from a Point or there'd be nothing left");
                        if ("MultiPoint" === n.type && n.coordinates.length < 2) throw Error("Can't remove the last point of a MultiPoint or there'd be nothing left");
                        if ("LineString" === n.type && n.coordinates.length < 3) throw Error("Can't remove position. LineString must have at least two positions");
                        if ("Polygon" === n.type && n.coordinates[0].length < 5 && Array.isArray(e) && 0 === e[0]) throw Error("Can't remove position. Polygon's outer ring must have at least four positions");
                        if ("MultiLineString" === n.type && 1 === n.coordinates.length && n.coordinates[0].length < 3) throw Error("Can't remove position. MultiLineString must have at least two positions");
                        if ("MultiPolygon" === n.type && 1 === n.coordinates.length && n.coordinates[0][0].length < 5 && Array.isArray(e) && 0 === e[0] && 0 === e[1]) throw Error("Can't remove position. MultiPolygon's outer ring must have at least four positions");
                        var r = "Polygon" === n.type || "MultiPolygon" === n.type,
                            i = o({}, n, {
                                coordinates: f(n.coordinates, e, r)
                            });
                        return function(t) {
                            switch (t.type) {
                                case "Polygon":
                                    ! function(t) {
                                        for (var e = t.coordinates, n = 1; n < e.length; n++) d(e, n) && n--
                                    }(t);
                                    break;
                                case "MultiLineString":
                                    ! function(t) {
                                        for (var e = 0; e < t.coordinates.length; e++) 1 === t.coordinates[e].length && (t.coordinates.splice(e, 1), e--)
                                    }(t);
                                    break;
                                case "MultiPolygon":
                                    ! function(t) {
                                        for (var e = 0; e < t.coordinates.length; e++) {
                                            var n = t.coordinates[e];
                                            n[0].length <= 3 && (t.coordinates.splice(e, 1), e--);
                                            for (var r = 1; r < n.length; r++) d(n, r) && r--
                                        }
                                    }(t)
                            }
                        }(i), this.replaceGeometry(t, i)
                    }
                }, {
                    key: "addPosition",
                    value: function(t, e, n) {
                        var r = this.featureCollection.features[t].geometry;
                        if ("Point" === r.type) throw new Error("Unable to add a position to a Point feature");
                        var i = "Polygon" === r.type || "MultiPolygon" === r.type,
                            a = o({}, r, {
                                coordinates: h(r.coordinates, e, n, i)
                            });
                        return this.replaceGeometry(t, a)
                    }
                }, {
                    key: "replaceGeometry",
                    value: function(e, r) {
                        var i = o({}, this.featureCollection.features[e], {
                            geometry: r
                        });
                        return new t(o({}, this.featureCollection, {
                            features: [].concat(n(this.featureCollection.features.slice(0, e)), [i], n(this.featureCollection.features.slice(e + 1)))
                        }))
                    }
                }, {
                    key: "addFeature",
                    value: function(t) {
                        return this.addFeatures([t])
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        return new t(o({}, this.featureCollection, {
                            features: [].concat(n(this.featureCollection.features), n(e))
                        }))
                    }
                }, {
                    key: "deleteFeature",
                    value: function(t) {
                        return this.deleteFeatures([t])
                    }
                }, {
                    key: "deleteFeatures",
                    value: function(e) {
                        var r = n(this.featureCollection.features);
                        e.sort();
                        for (var i = e.length - 1; i >= 0; i--) {
                            var a = e[i];
                            a >= 0 && a < r.length && r.splice(a, 1)
                        }
                        return new t(o({}, this.featureCollection, {
                            features: r
                        }))
                    }
                }]) && a(e.prototype, r), i && a(e, i), t
            }();

            function c(t, e) {
                if (2 === t.length && 3 === e.length) {
                    var n = e[2];
                    return [t[0], t[1], n]
                }
                return t
            }

            function l(t, e, r, i) {
                if (!e) return t;
                if (0 === e.length) return c(r, t);
                if (1 === e.length) {
                    var o = [].concat(n(t.slice(0, e[0])), [c(r, t[e[0]])], n(t.slice(e[0] + 1)));
                    return !i || 0 !== e[0] && e[0] !== t.length - 1 || (o[0] = c(r, t[0]), o[t.length - 1] = c(r, t[0])), o
                }
                return [].concat(n(t.slice(0, e[0])), [l(t[e[0]], e.slice(1, e.length), r, i)], n(t.slice(e[0] + 1)))
            }

            function f(t, e, r) {
                if (!e) return t;
                if (0 === e.length) throw Error("Must specify the index of the position to remove");
                if (1 === e.length) {
                    var i = [].concat(n(t.slice(0, e[0])), n(t.slice(e[0] + 1)));
                    return !r || 0 !== e[0] && e[0] !== t.length - 1 || (0 === e[0] ? i[i.length - 1] = i[0] : e[0] === t.length - 1 && (i[0] = i[i.length - 1])), i
                }
                return [].concat(n(t.slice(0, e[0])), [f(t[e[0]], e.slice(1, e.length), r)], n(t.slice(e[0] + 1)))
            }

            function h(t, e, r, i) {
                if (!e) return t;
                if (0 === e.length) throw Error("Must specify the index of the position to remove");
                return 1 === e.length ? [].concat(n(t.slice(0, e[0])), [r], n(t.slice(e[0]))) : [].concat(n(t.slice(0, e[0])), [h(t[e[0]], e.slice(1, e.length), r, i)], n(t.slice(e[0] + 1)))
            }

            function d(t, e) {
                return t[e].length <= 3 && (t.splice(e, 1), !0)
            }
            e.ImmutableFeatureCollection = u
        },
        99857: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.MeasureAngleMode = void 0;
            var r = s(n(51208)),
                i = s(n(78230)),
                o = s(n(23916)),
                a = n(32254);

            function s(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function u(t) {
                return (u = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function c(t) {
                return function(t) {
                    if (Array.isArray(t)) return l(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return l(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return l(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function l(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function f(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function h(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function d(t, e) {
                return !e || "object" !== u(e) && "function" !== typeof e ? p(t) : e
            }

            function p(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function g() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function y(t) {
                return (y = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function v(t, e) {
                return (v = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function m(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var b = [],
                w = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && v(t, e)
                    }(l, t);
                    var e, n, a, s, u = (e = l, function() {
                        var t, n = y(e);
                        if (g()) {
                            var r = y(this).constructor;
                            t = Reflect.construct(n, arguments, r)
                        } else t = n.apply(this, arguments);
                        return d(this, t)
                    });

                    function l() {
                        var t;
                        f(this, l);
                        for (var e = arguments.length, n = new Array(e), a = 0; a < e; a++) n[a] = arguments[a];
                        return m(p(t = u.call.apply(u, [this].concat(n))), "_getTooltips", (0, o.default)((function(t) {
                            var e = t.modeConfig,
                                n = t.vertex,
                                o = t.point1,
                                a = t.point2,
                                s = b;
                            if (n && o && a) {
                                var u, c = e || {},
                                    l = c.formatTooltip,
                                    f = c.measurementCallback,
                                    h = (0, r.default)(n, o),
                                    d = (0, r.default)(n, a),
                                    p = Math.abs(h - d);
                                p > 180 && (p = 360 - p), u = l ? l(p) : "".concat(parseFloat(p).toFixed(2), " ").concat("deg"), f && f(p), s = [{
                                    position: (0, i.default)({
                                        type: "FeatureCollection",
                                        features: [o, a].map((function(t) {
                                            return {
                                                type: "Feature",
                                                geometry: {
                                                    type: "Point",
                                                    coordinates: t
                                                }
                                            }
                                        }))
                                    }).geometry.coordinates,
                                    text: u
                                }]
                            }
                            return s
                        }))), t
                    }
                    return n = l, (a = [{
                        key: "handleClick",
                        value: function(t, e) {
                            this.getClickSequence().length >= 3 && this.resetClickSequence(), this.addClickSequence(t)
                        }
                    }, {
                        key: "handlePointerMove",
                        value: function(t, e) {
                            e.onUpdateCursor("cell")
                        }
                    }, {
                        key: "getPoints",
                        value: function(t) {
                            var e = this.getClickSequence(),
                                n = c(e);
                            return e.length < 3 && t.lastPointerMoveEvent && n.push(t.lastPointerMoveEvent.mapCoords), n
                        }
                    }, {
                        key: "getGuides",
                        value: function(t) {
                            var e = {
                                    type: "FeatureCollection",
                                    features: []
                                },
                                n = e.features,
                                r = this.getPoints(t);
                            return r.length > 2 ? n.push({
                                type: "Feature",
                                properties: {
                                    guideType: "tentative"
                                },
                                geometry: {
                                    type: "LineString",
                                    coordinates: [r[1], r[0], r[2]]
                                }
                            }) : r.length > 1 && n.push({
                                type: "Feature",
                                properties: {
                                    guideType: "tentative"
                                },
                                geometry: {
                                    type: "LineString",
                                    coordinates: [r[1], r[0]]
                                }
                            }), e
                        }
                    }, {
                        key: "getTooltips",
                        value: function(t) {
                            var e = this.getPoints(t);
                            return this._getTooltips({
                                modeConfig: t.modeConfig,
                                vertex: e[0],
                                point1: e[1],
                                point2: e[2]
                            })
                        }
                    }]) && h(n.prototype, a), s && h(n, s), l
                }(a.GeoJsonEditMode);
            e.MeasureAngleMode = w
        },
        60244: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.MeasureAreaMode = void 0;
            var r = a(n(41070)),
                i = a(n(66338)),
                o = n(65282);

            function a(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function s(t) {
                return (s = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function u(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function c(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function l(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function f(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function h(t, e, n) {
                return (h = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = g(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function d(t, e) {
                return !e || "object" !== s(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function p() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function g(t) {
                return (g = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function y(t, e) {
                return (y = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var v = [],
                m = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && y(t, e)
                    }(m, t);
                    var e, n, o, a, s = (e = m, function() {
                        var t, n = g(e);
                        if (p()) {
                            var r = g(this).constructor;
                            t = Reflect.construct(n, arguments, r)
                        } else t = n.apply(this, arguments);
                        return d(this, t)
                    });

                    function m() {
                        return l(this, m), s.apply(this, arguments)
                    }
                    return n = m, (o = [{
                        key: "handleClick",
                        value: function(t, e) {
                            var n = function(t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var n = null != arguments[e] ? arguments[e] : {};
                                    e % 2 ? u(Object(n), !0).forEach((function(e) {
                                        c(t, e, n[e])
                                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : u(Object(n)).forEach((function(e) {
                                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                                    }))
                                }
                                return t
                            }({}, e, {
                                onEdit: function() {}
                            });
                            h(g(m.prototype), "handleClick", this).call(this, t, n)
                        }
                    }, {
                        key: "getTooltips",
                        value: function(t) {
                            var e = this.getTentativeGuide(t);
                            if (e && "Polygon" === e.geometry.type) {
                                var n, o = t.modeConfig || {},
                                    a = o.formatTooltip,
                                    s = o.measurementCallback,
                                    u = (0, i.default)(e),
                                    c = (0, r.default)(e);
                                return n = a ? a(c) : "".concat(parseFloat(c).toFixed(2), " ").concat("sq. m"), s && s(c), [{
                                    position: u.geometry.coordinates,
                                    text: n
                                }]
                            }
                            return v
                        }
                    }]) && f(n.prototype, o), a && f(n, a), m
                }(o.DrawPolygonMode);
            e.MeasureAreaMode = m
        },
        20063: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.MeasureDistanceMode = void 0;
            var r = a(n(31013)),
                i = a(n(23916)),
                o = n(32254);

            function a(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function s(t) {
                return (s = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function u(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function c(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function l(t, e) {
                return !e || "object" !== s(e) && "function" !== typeof e ? f(t) : e
            }

            function f(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function h() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function d(t) {
                return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function p(t, e) {
                return (p = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function g(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var y = [],
                v = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && p(t, e)
                    }(v, t);
                    var e, n, o, a, s = (e = v, function() {
                        var t, n = d(e);
                        if (h()) {
                            var r = d(this).constructor;
                            t = Reflect.construct(n, arguments, r)
                        } else t = n.apply(this, arguments);
                        return l(this, t)
                    });

                    function v() {
                        var t;
                        u(this, v);
                        for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++) n[o] = arguments[o];
                        return g(f(t = s.call.apply(s, [this].concat(n))), "startingPoint", null), g(f(t), "endingPoint", null), g(f(t), "endingPointLocked", !1), g(f(t), "_getTooltips", (0, i.default)((function(t) {
                            var e = t.modeConfig,
                                n = t.startingPoint,
                                i = t.endingPoint,
                                o = y;
                            if (n && i) {
                                var a, s = e || {},
                                    u = s.formatTooltip,
                                    c = s.turfOptions,
                                    l = s.measurementCallback,
                                    f = c && c.units || "kilometers",
                                    h = (0, r.default)(n, i, c);
                                a = u ? u(h) : "".concat(parseFloat(h).toFixed(2), " ").concat(f), l && l(h), o = [{
                                    position: i.geometry.coordinates,
                                    text: a
                                }]
                            }
                            return o
                        }))), t
                    }
                    return n = v, (o = [{
                        key: "_setEndingPoint",
                        value: function(t) {
                            this.endingPoint = {
                                type: "Feature",
                                properties: {
                                    guideType: "editHandle",
                                    editHandleType: "existing",
                                    featureIndex: -1,
                                    positionIndexes: []
                                },
                                geometry: {
                                    type: "Point",
                                    coordinates: t
                                }
                            }
                        }
                    }, {
                        key: "handleClick",
                        value: function(t, e) {
                            !this.startingPoint || this.endingPointLocked ? (this.startingPoint = {
                                type: "Feature",
                                properties: {
                                    guideType: "editHandle",
                                    editHandleType: "existing",
                                    featureIndex: -1,
                                    positionIndexes: []
                                },
                                geometry: {
                                    type: "Point",
                                    coordinates: t.mapCoords
                                }
                            }, this.endingPoint = null, this.endingPointLocked = !1) : this.startingPoint && (this._setEndingPoint(t.mapCoords), this.endingPointLocked = !0)
                        }
                    }, {
                        key: "handlePointerMove",
                        value: function(t, e) {
                            this.startingPoint && !this.endingPointLocked && this._setEndingPoint(t.mapCoords), e.onUpdateCursor("cell")
                        }
                    }, {
                        key: "getGuides",
                        value: function(t) {
                            var e = {
                                    type: "FeatureCollection",
                                    features: []
                                },
                                n = e.features;
                            return this.startingPoint && n.push(this.startingPoint), this.endingPoint && n.push(this.endingPoint), this.startingPoint && this.endingPoint && n.push({
                                type: "Feature",
                                properties: {
                                    guideType: "tentative"
                                },
                                geometry: {
                                    type: "LineString",
                                    coordinates: [this.startingPoint.geometry.coordinates, this.endingPoint.geometry.coordinates]
                                }
                            }), e
                        }
                    }, {
                        key: "getTooltips",
                        value: function(t) {
                            return this._getTooltips({
                                modeConfig: t.modeConfig,
                                startingPoint: this.startingPoint,
                                endingPoint: this.endingPoint
                            })
                        }
                    }]) && c(n.prototype, o), a && c(n, a), v
                }(o.GeoJsonEditMode);
            e.MeasureDistanceMode = v
        },
        57366: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ModifyMode = void 0;
            var r, i = (r = n(13807)) && r.__esModule ? r : {
                    default: r
                },
                o = n(84102),
                a = n(70875),
                s = n(32254),
                u = n(76302);

            function c(t) {
                return (c = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function l(t) {
                return function(t) {
                    if (Array.isArray(t)) return h(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || f(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function f(t, e) {
                if (t) {
                    if ("string" === typeof t) return h(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? h(t, e) : void 0
                }
            }

            function h(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function d(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function p(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function g(t, e) {
                return !e || "object" !== c(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function y() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function v(t) {
                return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function m(t, e) {
                return (m = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var b = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && m(t, e)
                }(h, t);
                var e, n, r, s, c = (e = h, function() {
                    var t, n = v(e);
                    if (y()) {
                        var r = v(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return g(this, t)
                });

                function h() {
                    return d(this, h), c.apply(this, arguments)
                }
                return n = h, (r = [{
                    key: "getGuides",
                    value: function(t) {
                        var e, n = this,
                            r = [],
                            i = t.data,
                            s = t.lastPointerMoveEvent,
                            u = i.features,
                            c = s && s.picks,
                            h = s && s.mapCoords,
                            d = function(t) {
                                if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                                    if (Array.isArray(t) || (t = f(t))) {
                                        var e = 0,
                                            n = function() {};
                                        return {
                                            s: n,
                                            n: function() {
                                                return e >= t.length ? {
                                                    done: !0
                                                } : {
                                                    done: !1,
                                                    value: t[e++]
                                                }
                                            },
                                            e: function(t) {
                                                throw t
                                            },
                                            f: n
                                        }
                                    }
                                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                }
                                var r, i, o = !0,
                                    a = !1;
                                return {
                                    s: function() {
                                        r = t[Symbol.iterator]()
                                    },
                                    n: function() {
                                        var t = r.next();
                                        return o = t.done, t
                                    },
                                    e: function(t) {
                                        a = !0, i = t
                                    },
                                    f: function() {
                                        try {
                                            o || null == r.return || r.return()
                                        } finally {
                                            if (a) throw i
                                        }
                                    }
                                }
                            }(t.selectedIndexes);
                        try {
                            for (d.s(); !(e = d.n()).done;) {
                                var p = e.value;
                                if (p < u.length) {
                                    var g = u[p].geometry;
                                    r.push.apply(r, l((0, a.getEditHandlesForGeometry)(g, p)))
                                } else console.warn("selectedFeatureIndexes out of range ".concat(p))
                            }
                        } catch (E) {
                            d.e(E)
                        } finally {
                            d.f()
                        }
                        if (c && c.length && h) {
                            var y = !(0, a.getPickedExistingEditHandle)(c) && c.find((function(t) {
                                return !t.isGuide
                            }));
                            if (y && !y.object.geometry.type.includes("Point") && t.selectedIndexes.includes(y.index)) {
                                var v = null,
                                    m = [],
                                    b = (0, o.point)(h);
                                if ((0, a.recursivelyTraverseNestedArrays)(y.object.geometry.coordinates, [], (function(e, r) {
                                        var i = (0, o.lineString)(e),
                                            a = n.nearestPointOnLine(i, b, t.modeConfig && t.modeConfig.viewport);
                                        (!v || a.properties.dist < v.properties.dist) && (v = a, m = r)
                                    })), v) {
                                    var w = v,
                                        _ = w.geometry.coordinates,
                                        P = w.properties.index;
                                    r.push({
                                        type: "Feature",
                                        properties: {
                                            guideType: "editHandle",
                                            editHandleType: "intermediate",
                                            featureIndex: y.index,
                                            positionIndexes: [].concat(l(m), [P + 1])
                                        },
                                        geometry: {
                                            type: "Point",
                                            coordinates: _
                                        }
                                    })
                                }
                            }
                        }
                        return {
                            type: "FeatureCollection",
                            features: r
                        }
                    }
                }, {
                    key: "nearestPointOnLine",
                    value: function(t, e, n) {
                        if (t.geometry.coordinates.some((function(t) {
                                return t.length > 2
                            }))) {
                            if (n) return (0, a.nearestPointOnProjectedLine)(t, e, n);
                            console.log("Editing 3D point but modeConfig.viewport not provided. Falling back to 2D logic.")
                        }
                        return (0, i.default)(t, e)
                    }
                }, {
                    key: "handleClick",
                    value: function(t, e) {
                        var n = (0, a.getPickedExistingEditHandle)(t.picks),
                            r = (0, a.getPickedIntermediateEditHandle)(t.picks);
                        if (n) {
                            var i, o = n.properties,
                                s = o.featureIndex,
                                c = o.positionIndexes;
                            try {
                                i = new u.ImmutableFeatureCollection(e.data).removePosition(s, c).getObject()
                            } catch (p) {}
                            i && e.onEdit({
                                updatedData: i,
                                editType: "removePosition",
                                editContext: {
                                    featureIndexes: [s],
                                    positionIndexes: c,
                                    position: n.geometry.coordinates
                                }
                            })
                        } else if (r) {
                            var l = r.properties,
                                f = l.featureIndex,
                                h = l.positionIndexes,
                                d = new u.ImmutableFeatureCollection(e.data).addPosition(f, h, r.geometry.coordinates).getObject();
                            d && e.onEdit({
                                updatedData: d,
                                editType: "addPosition",
                                editContext: {
                                    featureIndexes: [f],
                                    positionIndexes: h,
                                    position: r.geometry.coordinates
                                }
                            })
                        }
                    }
                }, {
                    key: "handleDragging",
                    value: function(t, e) {
                        var n = (0, a.getPickedEditHandle)(t.pointerDownPicks);
                        if (n) {
                            t.cancelPan();
                            var r = n.properties,
                                i = new u.ImmutableFeatureCollection(e.data).replacePosition(r.featureIndex, r.positionIndexes, t.mapCoords).getObject();
                            e.onEdit({
                                updatedData: i,
                                editType: "movePosition",
                                editContext: {
                                    featureIndexes: [r.featureIndex],
                                    positionIndexes: r.positionIndexes,
                                    position: t.mapCoords
                                }
                            })
                        }
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        var n = this.getCursor(t);
                        e.onUpdateCursor(n)
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        var n = e.selectedIndexes,
                            r = (0, a.getPickedIntermediateEditHandle)(t.picks);
                        if (n.length && r) {
                            var i = r.properties,
                                o = new u.ImmutableFeatureCollection(e.data).addPosition(i.featureIndex, i.positionIndexes, t.mapCoords).getObject();
                            e.onEdit({
                                updatedData: o,
                                editType: "addPosition",
                                editContext: {
                                    featureIndexes: [i.featureIndex],
                                    positionIndexes: i.positionIndexes,
                                    position: t.mapCoords
                                }
                            })
                        }
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        var n = e.selectedIndexes,
                            r = (0, a.getPickedEditHandle)(t.picks);
                        if (n.length && r) {
                            var i = r.properties,
                                o = new u.ImmutableFeatureCollection(e.data).replacePosition(i.featureIndex, i.positionIndexes, t.mapCoords).getObject();
                            e.onEdit({
                                updatedData: o,
                                editType: "finishMovePosition",
                                editContext: {
                                    featureIndexes: [i.featureIndex],
                                    positionIndexes: i.positionIndexes,
                                    position: t.mapCoords
                                }
                            })
                        }
                    }
                }, {
                    key: "getCursor",
                    value: function(t) {
                        var e = t && t.picks || [];
                        return (0, a.getPickedEditHandles)(e).length ? "cell" : null
                    }
                }]) && p(n.prototype, r), s && p(n, s), h
            }(s.GeoJsonEditMode);
            e.ModifyMode = b
        },
        10083: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.RotateMode = void 0;
            var r = y(n(35419)),
                i = y(n(9705)),
                o = y(n(66338)),
                a = y(n(51208)),
                s = y(n(13652)),
                u = y(n(31013)),
                c = n(31540),
                l = n(10611),
                f = n(84102),
                h = y(n(90067)),
                d = n(70875),
                p = n(32254),
                g = n(76302);

            function y(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function v(t) {
                return (v = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function m(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function b(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function w(t, e) {
                return !e || "object" !== v(e) && "function" !== typeof e ? _(t) : e
            }

            function _(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function P() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function E(t) {
                return (E = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function x(t, e) {
                return (x = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function S(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var O = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && x(t, e)
                }(T, t);
                var e, n, y, v, O = (e = T, function() {
                    var t, n = E(e);
                    if (P()) {
                        var r = E(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return w(this, t)
                });

                function T() {
                    var t;
                    m(this, T);
                    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                    return S(_(t = O.call.apply(O, [this].concat(n))), "_selectedEditHandle", void 0), S(_(t), "_geometryBeingRotated", void 0), S(_(t), "_isRotating", !1), S(_(t), "_isSinglePointGeometrySelected", (function(t) {
                        var e = (t || {}).features;
                        return !(!Array.isArray(e) || 1 !== e.length) && "Point" === (0, l.getGeom)(e[0]).type
                    })), S(_(t), "getIsRotating", (function() {
                        return t._isRotating
                    })), t
                }
                return n = T, (y = [{
                    key: "getGuides",
                    value: function(t) {
                        var e = this._geometryBeingRotated || this.getSelectedFeaturesAsFeatureCollection(t);
                        if (this._isRotating) return (0, f.featureCollection)([(0, o.default)(e)]);
                        var n = this._isSinglePointGeometrySelected(e) ? (0, r.default)(e, 1) : e,
                            a = (0, s.default)((0, i.default)(n)),
                            l = null,
                            h = null,
                            d = 0;
                        (0, c.coordEach)(a, (function(t, e) {
                            if (l) {
                                var n = (0, p.getIntermediatePosition)(t, l);
                                (!h || n[1] > h[1]) && (h = n);
                                var r = (0, u.default)(t, l);
                                d = Math.max(d, r)
                            }
                            l = t
                        }));
                        var g = h && [h[0], h[1] + d / 1e3],
                            y = (0, f.lineString)([h, g]),
                            v = (0, f.point)(g, {
                                guideType: "editHandle",
                                editHandleType: "rotate"
                            });
                        return (0, f.featureCollection)([a, v, y])
                    }
                }, {
                    key: "handleDragging",
                    value: function(t, e) {
                        if (this._isRotating) {
                            var n = this.getRotateAction(t.pointerDownMapCoords, t.mapCoords, "rotating", e);
                            n && e.onEdit(n), t.cancelPan()
                        }
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        if (!this._isRotating) {
                            var n = (0, d.getPickedEditHandle)(t.picks);
                            this._selectedEditHandle = n && "rotate" === n.properties.editHandleType ? n : null
                        }
                        this.updateCursor(e)
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        this._selectedEditHandle && (this._isRotating = !0, this._geometryBeingRotated = this.getSelectedFeaturesAsFeatureCollection(e))
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        if (this._isRotating) {
                            var n = this.getRotateAction(t.pointerDownMapCoords, t.mapCoords, "rotated", e);
                            n && e.onEdit(n), this._geometryBeingRotated = null, this._selectedEditHandle = null, this._isRotating = !1
                        }
                    }
                }, {
                    key: "updateCursor",
                    value: function(t) {
                        this._selectedEditHandle ? t.onUpdateCursor("crosshair") : t.onUpdateCursor(null)
                    }
                }, {
                    key: "getRotateAction",
                    value: function(t, e, n, r) {
                        if (!this._geometryBeingRotated) return null;
                        for (var i = (0, o.default)(this._geometryBeingRotated), s = function(t, e, n) {
                                var r = (0, a.default)(t, e);
                                return (0, a.default)(t, n) - r
                            }(i, t, e), u = (0, h.default)(this._geometryBeingRotated, s, {
                                pivot: i
                            }), c = new g.ImmutableFeatureCollection(r.data), l = r.selectedIndexes, f = 0; f < l.length; f++) {
                            var d = l[f],
                                p = u.features[f];
                            c = c.replaceGeometry(d, p.geometry)
                        }
                        return {
                            updatedData: c.getObject(),
                            editType: n,
                            editContext: {
                                featureIndexes: l
                            }
                        }
                    }
                }]) && b(n.prototype, y), v && b(n, v), T
            }(p.GeoJsonEditMode);
            e.RotateMode = O
        },
        45892: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ScaleMode = void 0;
            var r = y(n(35419)),
                i = y(n(9705)),
                o = y(n(66338)),
                a = y(n(51208)),
                s = y(n(13652)),
                u = n(84102),
                c = n(31540),
                l = y(n(31013)),
                f = y(n(67517)),
                h = n(10611),
                d = n(70875),
                p = n(32254),
                g = n(76302);

            function y(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function v(t) {
                return (v = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function m(t) {
                return function(t) {
                    if (Array.isArray(t)) return b(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return b(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return b(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function b(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function w(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function _(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function P(t, e) {
                return !e || "object" !== v(e) && "function" !== typeof e ? E(t) : e
            }

            function E(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function x() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function S(t) {
                return (S = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function O(t, e) {
                return (O = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function T(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var M = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && O(t, e)
                }(v, t);
                var e, n, l, p, y = (e = v, function() {
                    var t, n = S(e);
                    if (x()) {
                        var r = S(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return P(this, t)
                });

                function v() {
                    var t;
                    w(this, v);
                    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                    return T(E(t = y.call.apply(y, [this].concat(n))), "_geometryBeingScaled", void 0), T(E(t), "_selectedEditHandle", void 0), T(E(t), "_cornerGuidePoints", void 0), T(E(t), "_cursor", void 0), T(E(t), "_isScaling", !1), T(E(t), "_isSinglePointGeometrySelected", (function(t) {
                        var e = (t || {}).features;
                        return !(!Array.isArray(e) || 1 !== e.length) && "Point" === (0, h.getGeom)(e[0]).type
                    })), T(E(t), "_getOppositeScaleHandle", (function(e) {
                        var n = e && e.properties && Array.isArray(e.properties.positionIndexes) && e.properties.positionIndexes[0];
                        if ("number" !== typeof n) return null;
                        var r = t._cornerGuidePoints.length,
                            i = (n + r / 2) % r;
                        return t._cornerGuidePoints.find((function(t) {
                            return !!Array.isArray(t.properties.positionIndexes) && t.properties.positionIndexes[0] === i
                        }))
                    })), T(E(t), "_getUpdatedData", (function(t, e) {
                        for (var n = new g.ImmutableFeatureCollection(t.data), r = t.selectedIndexes, i = 0; i < r.length; i++) {
                            var o = r[i],
                                a = e.features[i];
                            n = n.replaceGeometry(o, a.geometry)
                        }
                        return n.getObject()
                    })), T(E(t), "isEditHandleSelcted", (function() {
                        return Boolean(t._selectedEditHandle)
                    })), T(E(t), "getScaleAction", (function(e, n, r, i) {
                        if (!t._selectedEditHandle || t._isSinglePointGeometrySelected(t._geometryBeingScaled)) return null;
                        var o = t._getOppositeScaleHandle(t._selectedEditHandle),
                            a = (0, h.getCoord)(o),
                            s = C(a, e, n),
                            u = (0, f.default)(t._geometryBeingScaled, s, {
                                origin: a
                            });
                        return {
                            updatedData: t._getUpdatedData(i, u),
                            editType: r,
                            editContext: {
                                featureIndexes: i.selectedIndexes
                            }
                        }
                    })), T(E(t), "updateCursor", (function(e) {
                        if (t._selectedEditHandle) {
                            t._cursor && e.onUpdateCursor(t._cursor);
                            var n = t.getSelectedFeaturesAsFeatureCollection(e),
                                r = (0, o.default)(n),
                                i = (0, a.default)(r, t._selectedEditHandle),
                                s = i < 0 ? i + 180 : i;
                            s >= 0 && s <= 90 || s >= 180 && s <= 270 ? (t._cursor = "nesw-resize", e.onUpdateCursor("nesw-resize")) : (t._cursor = "nwse-resize", e.onUpdateCursor("nwse-resize"))
                        } else e.onUpdateCursor(null), t._cursor = null
                    })), t
                }
                return n = v, (l = [{
                    key: "handlePointerMove",
                    value: function(t, e) {
                        if (!this._isScaling) {
                            var n = (0, d.getPickedEditHandle)(t.picks);
                            this._selectedEditHandle = n && "scale" === n.properties.editHandleType ? n : null
                        }
                        this.updateCursor(e)
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        this._selectedEditHandle && (this._isScaling = !0, this._geometryBeingScaled = this.getSelectedFeaturesAsFeatureCollection(e))
                    }
                }, {
                    key: "handleDragging",
                    value: function(t, e) {
                        if (this._isScaling) {
                            var n = this.getScaleAction(t.pointerDownMapCoords, t.mapCoords, "scaling", e);
                            n && e.onEdit(n), t.cancelPan()
                        }
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        if (this._isScaling) {
                            var n = this.getScaleAction(t.pointerDownMapCoords, t.mapCoords, "scaled", e);
                            n && e.onEdit(n), this._geometryBeingScaled = null, this._selectedEditHandle = null, this._cursor = null, this._isScaling = !1
                        }
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        this._cornerGuidePoints = [];
                        var e = this.getSelectedFeaturesAsFeatureCollection(t),
                            n = this._isSinglePointGeometrySelected(e) ? (0, r.default)(e, 1) : e,
                            o = (0, s.default)((0, i.default)(n));
                        o.properties.mode = "scale";
                        var a = [];
                        return (0, c.coordEach)(o, (function(t, e) {
                            if (e < 4) {
                                var n = (0, u.point)(t, {
                                    guideType: "editHandle",
                                    editHandleType: "scale",
                                    positionIndexes: [e]
                                });
                                a.push(n)
                            }
                        })), this._cornerGuidePoints = a, (0, u.featureCollection)([o].concat(m(this._cornerGuidePoints)))
                    }
                }]) && _(n.prototype, l), p && _(n, p), v
            }(p.GeoJsonEditMode);

            function C(t, e, n) {
                var r = (0, l.default)(t, e);
                return (0, l.default)(t, n) / r
            }
            e.ScaleMode = M
        },
        93816: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.SnappableMode = void 0;
            var r = n(70875);

            function i(t) {
                return (i = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function o(t) {
                return function(t) {
                    if (Array.isArray(t)) return s(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || a(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function a(t, e) {
                if (t) {
                    if ("string" === typeof t) return s(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? s(t, e) : void 0
                }
            }

            function s(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function u(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function c(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function l(t, e) {
                return !e || "object" !== i(e) && "function" !== typeof e ? f(t) : e
            }

            function f(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function h() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function d(t) {
                return (d = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function p(t, e) {
                return (p = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function g(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var y = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && p(t, e)
                }(v, t);
                var e, n, i, s, y = (e = v, function() {
                    var t, n = d(e);
                    if (h()) {
                        var r = d(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return l(this, t)
                });

                function v(t) {
                    var e;
                    return function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, v), g(f(e = y.call(this)), "_handler", void 0), e._handler = t, e
                }
                return n = v, (i = [{
                    key: "_getSnappedMouseEvent",
                    value: function(t, e, n) {
                        return Object.assign(t, {
                            mapCoords: n.geometry.coordinates,
                            pointerDownMapCoords: e && e.geometry.coordinates
                        })
                    }
                }, {
                    key: "_getPickedSnapTarget",
                    value: function(t) {
                        return (0, r.getPickedEditHandles)(t).find((function(t) {
                            return "snap-target" === t.properties.editHandleType
                        }))
                    }
                }, {
                    key: "_getPickedSnapSource",
                    value: function(t) {
                        return (0, r.getPickedSnapSourceEditHandle)(t)
                    }
                }, {
                    key: "_getUpdatedSnapSourceHandle",
                    value: function(t, e) {
                        var n = t.properties,
                            r = n.featureIndex,
                            i = n.positionIndexes;
                        if (!Array.isArray(i)) return t;
                        var o = e.features[r];
                        return function(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var n = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? u(Object(n), !0).forEach((function(e) {
                                    g(t, e, n[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : u(Object(n)).forEach((function(e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                                }))
                            }
                            return t
                        }({}, t, {
                            geometry: {
                                type: "Point",
                                coordinates: i.reduce((function(t, e) {
                                    return t[e]
                                }), o.geometry.coordinates)
                            }
                        })
                    }
                }, {
                    key: "_getSnapTargets",
                    value: function(t) {
                        var e = (t.modeConfig || {}).additionalSnapTargets;
                        return e = e || [], [].concat(o(t.data.features), o(e))
                    }
                }, {
                    key: "_getSnapTargetHandles",
                    value: function(t) {
                        for (var e = [], n = this._getSnapTargets(t), i = 0; i < n.length; i++)
                            if (!t.selectedIndexes.includes(i)) {
                                var a = n[i].geometry;
                                e.push.apply(e, o((0, r.getEditHandlesForGeometry)(a, i, "snap-target")))
                            }
                        return e
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e = t.modeConfig,
                            n = t.lastPointerMoveEvent,
                            i = (e || {}).enableSnapping,
                            s = {
                                type: "FeatureCollection",
                                features: o(this._handler.getGuides(t).features)
                            };
                        if (!i) return s;
                        var u, c = n && this._getPickedSnapSource(n.pointerDownPicks);
                        if (c) return (u = s.features).push.apply(u, o(this._getSnapTargetHandles(t)).concat([this._getUpdatedSnapSourceHandle(c, t.data)])), s;
                        var l, f = t.data.features,
                            h = function(t) {
                                if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                                    if (Array.isArray(t) || (t = a(t))) {
                                        var e = 0,
                                            n = function() {};
                                        return {
                                            s: n,
                                            n: function() {
                                                return e >= t.length ? {
                                                    done: !0
                                                } : {
                                                    done: !1,
                                                    value: t[e++]
                                                }
                                            },
                                            e: function(t) {
                                                throw t
                                            },
                                            f: n
                                        }
                                    }
                                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                }
                                var r, i, o = !0,
                                    s = !1;
                                return {
                                    s: function() {
                                        r = t[Symbol.iterator]()
                                    },
                                    n: function() {
                                        var t = r.next();
                                        return o = t.done, t
                                    },
                                    e: function(t) {
                                        s = !0, i = t
                                    },
                                    f: function() {
                                        try {
                                            o || null == r.return || r.return()
                                        } finally {
                                            if (s) throw i
                                        }
                                    }
                                }
                            }(t.selectedIndexes);
                        try {
                            for (h.s(); !(l = h.n()).done;) {
                                var d = l.value;
                                if (d < f.length) {
                                    var p, g = f[d].geometry;
                                    (p = s.features).push.apply(p, o((0, r.getEditHandlesForGeometry)(g, d, "snap-source")))
                                }
                            }
                        } catch (y) {
                            h.e(y)
                        } finally {
                            h.f()
                        }
                        return s
                    }
                }, {
                    key: "_getSnapAwareEvent",
                    value: function(t, e) {
                        var n = this._getPickedSnapSource(e.lastPointerMoveEvent.pointerDownPicks),
                            r = this._getPickedSnapTarget(t.picks);
                        return n && r ? this._getSnappedMouseEvent(t, n, r) : t
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        this._handler.handleStartDragging(t, e)
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        this._handler.handleStopDragging(this._getSnapAwareEvent(t, e), e)
                    }
                }, {
                    key: "handleDragging",
                    value: function(t, e) {
                        this._handler.handleDragging(this._getSnapAwareEvent(t, e), e)
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        this._handler.handlePointerMove(this._getSnapAwareEvent(t, e), e)
                    }
                }]) && c(n.prototype, i), s && c(n, s), v
            }(n(32254).GeoJsonEditMode);
            e.SnappableMode = y
        },
        6548: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.SplitPolygonMode = void 0;
            var r = y(n(88147)),
                i = y(n(68727)),
                o = y(n(35419)),
                a = y(n(73663)),
                s = n(84102),
                u = y(n(51208)),
                c = y(n(31013)),
                l = y(n(93737)),
                f = y(n(97383)),
                h = y(n(13807)),
                d = n(70875),
                p = n(32254),
                g = n(76302);

            function y(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function v(t) {
                return (v = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function m(t) {
                return function(t) {
                    if (Array.isArray(t)) return _(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || w(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function b(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    if ("undefined" === typeof Symbol || !(Symbol.iterator in Object(t))) return;
                    var n = [],
                        r = !0,
                        i = !1,
                        o = void 0;
                    try {
                        for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0);
                    } catch (u) {
                        i = !0, o = u
                    } finally {
                        try {
                            r || null == s.return || s.return()
                        } finally {
                            if (i) throw o
                        }
                    }
                    return n
                }(t, e) || w(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function w(t, e) {
                if (t) {
                    if ("string" === typeof t) return _(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _(t, e) : void 0
                }
            }

            function _(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function P(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function E(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function x(t, e) {
                return !e || "object" !== v(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function S() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function O(t) {
                return (O = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function T(t, e) {
                return (T = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var M = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && T(t, e)
                }(w, t);
                var e, n, p, y, v = (e = w, function() {
                    var t, n = O(e);
                    if (S()) {
                        var r = O(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return x(this, t)
                });

                function w() {
                    return P(this, w), v.apply(this, arguments)
                }
                return n = w, (p = [{
                    key: "calculateMapCoords",
                    value: function(t, e, n) {
                        var r = n.modeConfig;
                        if (!r || !r.lock90Degree || !t.length) return e;
                        if (1 === t.length) {
                            var i = t[0],
                                o = this.getSelectedGeometry(n),
                                a = (0, f.default)(o),
                                p = "FeatureCollection" === a.type ? a.features : [a],
                                g = Number.MAX_SAFE_INTEGER,
                                y = null;
                            if (p.forEach((function(t) {
                                    var e = (0, h.default)(t, i),
                                        n = (0, c.default)(e, i);
                                    g > n && (g = n, y = e)
                                })), y) {
                                var v = (0, u.default)(i, y),
                                    m = (0, c.default)(i, e, {
                                        units: "meters"
                                    });
                                return (0, l.default)(i, m, v, {
                                    units: "meters"
                                }).geometry.coordinates
                            }
                            return e
                        }
                        var w = t[t.length - 1],
                            _ = b((0, d.generatePointsParallelToLinePoints)(t[t.length - 2], w, e), 1)[0];
                        return (0, h.default)((0, s.lineString)([w, _]), e).geometry.coordinates
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e = this.getClickSequence(),
                            n = {
                                type: "FeatureCollection",
                                features: []
                            };
                        if (0 === e.length || !t.lastPointerMoveEvent) return n;
                        var r = t.lastPointerMoveEvent.mapCoords;
                        return n.features.push({
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "LineString",
                                coordinates: [].concat(m(e), [this.calculateMapCoords(e, r, t)])
                            }
                        }), n
                    }
                }, {
                    key: "handleClick",
                    value: function(t, e) {
                        var n = this.getTentativeGuide(e),
                            i = this.getSelectedGeometry(e);
                        if (i) {
                            var o = this.getClickSequence();
                            n && "LineString" === n.geometry.type ? o.push(n.geometry.coordinates[n.geometry.coordinates.length - 1]) : this.addClickSequence(t);
                            var s = {
                                    type: "Point",
                                    coordinates: o[o.length - 1]
                                },
                                u = (0, r.default)(s, i);
                            if (o.length > 1 && n && !u) {
                                if (this.resetClickSequence(), 0 === (0, a.default)(n, i).features.length) return;
                                var c = this.splitPolygon(n, e);
                                c && e.onEdit(c)
                            }
                        } else console.warn("A polygon must be selected for splitting")
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        e.onUpdateCursor("cell")
                    }
                }, {
                    key: "splitPolygon",
                    value: function(t, e) {
                        var n = this.getSelectedGeometry(e),
                            r = e.selectedIndexes[0],
                            a = e.modeConfig || {},
                            s = a.gap,
                            u = void 0 === s ? .1 : s,
                            c = a.units,
                            l = void 0 === c ? "centimeters" : c;
                        0 === u && (u = .1, l = "centimeters");
                        var f = (0, o.default)(t, u, {
                                units: l
                            }),
                            h = (0, i.default)(n, f);
                        if (!h) return console.warn("Canceling edit. Split Polygon erased"), null;
                        var d = h.geometry,
                            p = d.type,
                            y = d.coordinates,
                            v = [];
                        return v = "Polygon" === p ? y.map((function(t) {
                            return [t]
                        })) : y.reduce((function(t, e) {
                            return e.forEach((function(e) {
                                t.push([e])
                            })), t
                        }), []), {
                            updatedData: new g.ImmutableFeatureCollection(e.data).replaceGeometry(r, {
                                type: "MultiPolygon",
                                coordinates: v
                            }).getObject(),
                            editType: "split",
                            editContext: {
                                featureIndexes: [r]
                            }
                        }
                    }
                }]) && E(n.prototype, p), y && E(n, y), w
            }(p.GeoJsonEditMode);
            e.SplitPolygonMode = M
        },
        1658: function(t, e, n) {
            "use strict";

            function r(t) {
                return (r = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function i(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function o(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function a(t, e) {
                return !e || "object" !== r(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function s() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function u(t) {
                return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function c(t, e) {
                return (c = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ThreeClickPolygonMode = void 0;
            var l = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && c(t, e)
                }(h, t);
                var e, n, r, l, f = (e = h, function() {
                    var t, n = u(e);
                    if (s()) {
                        var r = u(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return a(this, t)
                });

                function h() {
                    return i(this, h), f.apply(this, arguments)
                }
                return n = h, (r = [{
                    key: "handleClick",
                    value: function(t, e) {
                        this.addClickSequence(t);
                        var n = this.getClickSequence(),
                            r = this.getTentativeGuide(e);
                        if (n.length > 2 && r && "Polygon" === r.geometry.type) {
                            var i = this.getAddFeatureOrBooleanPolygonAction(r.geometry, e);
                            this.resetClickSequence(), i && e.onEdit(i)
                        }
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e = t.lastPointerMoveEvent,
                            n = t.modeConfig,
                            r = this.getClickSequence(),
                            i = {
                                type: "FeatureCollection",
                                features: []
                            };
                        if (0 === r.length) return i;
                        var o = e.mapCoords;
                        if (1 === r.length) i.features.push({
                            type: "Feature",
                            properties: {
                                guideType: "tentative"
                            },
                            geometry: {
                                type: "LineString",
                                coordinates: [r[0], o]
                            }
                        });
                        else {
                            var a = this.getThreeClickPolygon(r[0], r[1], o, n);
                            a && i.features.push({
                                type: "Feature",
                                properties: {
                                    guideType: "tentative"
                                },
                                geometry: a.geometry
                            })
                        }
                        return i
                    }
                }, {
                    key: "getThreeClickPolygon",
                    value: function(t, e, n, r) {
                        return null
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        e.onUpdateCursor("cell")
                    }
                }]) && o(n.prototype, r), l && o(n, l), h
            }(n(32254).GeoJsonEditMode);
            e.ThreeClickPolygonMode = l
        },
        44061: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.TransformMode = void 0;
            var r = n(84102),
                i = n(76166),
                o = n(45892),
                a = n(10083);

            function s(t) {
                return (s = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function u(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function c(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function l(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function f(t, e, n) {
                return (f = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = p(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function h(t, e) {
                return !e || "object" !== s(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function d() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function p(t) {
                return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function g(t, e) {
                return (g = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var y = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && g(t, e)
                }(m, t);
                var e, n, s, y, v = (e = m, function() {
                    var t, n = p(e);
                    if (d()) {
                        var r = p(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return h(this, t)
                });

                function m() {
                    return function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, m), v.call(this, [new i.TranslateMode, new o.ScaleMode, new a.RotateMode])
                }
                return n = m, (s = [{
                    key: "handlePointerMove",
                    value: function(t, e) {
                        var n = null;
                        f(p(m.prototype), "handlePointerMove", this).call(this, t, function(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var n = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? u(Object(n), !0).forEach((function(e) {
                                    c(t, e, n[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : u(Object(n)).forEach((function(e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                                }))
                            }
                            return t
                        }({}, e, {
                            onUpdateCursor: function(t) {
                                n = t || n
                            }
                        })), e.onUpdateCursor(n)
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        var n = null,
                            r = null,
                            a = [];
                        this._modes.forEach((function(t) {
                            t instanceof i.TranslateMode ? r = t : (t instanceof o.ScaleMode && (n = t), a.push(t))
                        })), n instanceof o.ScaleMode && !n.isEditHandleSelcted() && a.push(r), a.filter(Boolean).forEach((function(n) {
                            return n.handleStartDragging(t, e)
                        }))
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e = f(p(m.prototype), "getGuides", this).call(this, t),
                            n = (this._modes || []).find((function(t) {
                                return t instanceof a.RotateMode
                            }));
                        if (n instanceof a.RotateMode) {
                            var i = e.features.filter((function(t) {
                                var e = t.properties || {},
                                    r = e.editHandleType,
                                    i = [e.mode];
                                return n.getIsRotating() && i.push(r), !i.includes("scale")
                            }));
                            e = (0, r.featureCollection)(i)
                        }
                        return e
                    }
                }]) && l(n.prototype, s), y && l(n, y), m
            }(n(48874).CompositeMode);
            e.TransformMode = y
        },
        76166: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.TranslateMode = void 0;
            var r = c(n(51208)),
                i = c(n(31013)),
                o = c(n(92418)),
                a = n(84102),
                s = n(32254),
                u = n(76302);

            function c(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function l(t) {
                return (l = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function f(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function h(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function d(t, e) {
                return !e || "object" !== l(e) && "function" !== typeof e ? p(t) : e
            }

            function p(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function g() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function y(t) {
                return (y = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function v(t, e) {
                return (v = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function m(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var b = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && v(t, e)
                }(b, t);
                var e, n, s, c, l = (e = b, function() {
                    var t, n = y(e);
                    if (g()) {
                        var r = y(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return d(this, t)
                });

                function b() {
                    var t;
                    f(this, b);
                    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                    return m(p(t = l.call.apply(l, [this].concat(n))), "_geometryBeforeTranslate", void 0), m(p(t), "_isTranslatable", void 0), t
                }
                return n = b, (s = [{
                    key: "handleDragging",
                    value: function(t, e) {
                        if (this._isTranslatable) {
                            if (this._geometryBeforeTranslate) {
                                var n = this.getTranslateAction(t.pointerDownMapCoords, t.mapCoords, "translating", e);
                                n && e.onEdit(n)
                            }
                            t.cancelPan()
                        }
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        this._isTranslatable = this.isSelectionPicked(t.pointerDownPicks || t.picks, e), this.updateCursor(e)
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        this._isTranslatable && (this._geometryBeforeTranslate = this.getSelectedFeaturesAsFeatureCollection(e))
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        if (this._geometryBeforeTranslate) {
                            var n = this.getTranslateAction(t.pointerDownMapCoords, t.mapCoords, "translated", e);
                            n && e.onEdit(n), this._geometryBeforeTranslate = null
                        }
                    }
                }, {
                    key: "updateCursor",
                    value: function(t) {
                        this._isTranslatable ? t.onUpdateCursor("move") : t.onUpdateCursor(null)
                    }
                }, {
                    key: "getTranslateAction",
                    value: function(t, e, n, s) {
                        if (!this._geometryBeforeTranslate) return null;
                        for (var c = (0, a.point)(t), l = (0, a.point)(e), f = (0, i.default)(c, l), h = (0, r.default)(c, l), d = (0, o.default)(this._geometryBeforeTranslate, f, h), p = new u.ImmutableFeatureCollection(s.data), g = s.selectedIndexes, y = 0; y < g.length; y++) {
                            var v = g[y],
                                m = d.features[y];
                            p = p.replaceGeometry(v, m.geometry)
                        }
                        return {
                            updatedData: p.getObject(),
                            editType: n,
                            editContext: {
                                featureIndexes: g
                            }
                        }
                    }
                }]) && h(n.prototype, s), c && h(n, c), b
            }(s.GeoJsonEditMode);
            e.TranslateMode = b
        },
        23124: function(t, e, n) {
            "use strict";

            function r(t) {
                return (r = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function i(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function o(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function a(t, e) {
                return !e || "object" !== r(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function s() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function u(t) {
                return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function c(t, e) {
                return (c = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.TwoClickPolygonMode = void 0;
            var l = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && c(t, e)
                }(h, t);
                var e, n, r, l, f = (e = h, function() {
                    var t, n = u(e);
                    if (s()) {
                        var r = u(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return a(this, t)
                });

                function h() {
                    return i(this, h), f.apply(this, arguments)
                }
                return n = h, (r = [{
                    key: "handleClick",
                    value: function(t, e) {
                        e.modeConfig && e.modeConfig.dragToDraw || (this.addClickSequence(t), this.checkAndFinishPolygon(e))
                    }
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {
                        e.modeConfig && e.modeConfig.dragToDraw && (this.addClickSequence(t), t.cancelPan())
                    }
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {
                        e.modeConfig && e.modeConfig.dragToDraw && (this.addClickSequence(t), this.checkAndFinishPolygon(e))
                    }
                }, {
                    key: "checkAndFinishPolygon",
                    value: function(t) {
                        var e = this.getClickSequence(),
                            n = this.getTentativeGuide(t);
                        if (e.length > 1 && n && "Polygon" === n.geometry.type) {
                            var r = {
                                    type: "Feature",
                                    properties: {
                                        shape: n.properties.shape
                                    },
                                    geometry: {
                                        type: "Polygon",
                                        coordinates: n.geometry.coordinates
                                    }
                                },
                                i = this.getAddFeatureOrBooleanPolygonAction(r, t);
                            this.resetClickSequence(), i && t.onEdit(i)
                        }
                    }
                }, {
                    key: "getGuides",
                    value: function(t) {
                        var e = t.lastPointerMoveEvent,
                            n = t.modeConfig,
                            r = this.getClickSequence(),
                            i = {
                                type: "FeatureCollection",
                                features: []
                            };
                        if (0 === r.length) return i;
                        var o = r[0],
                            a = e.mapCoords,
                            s = this.getTwoClickPolygon(o, a, n);
                        return s && i.features.push({
                            type: "Feature",
                            properties: {
                                shape: s.properties && s.properties.shape,
                                guideType: "tentative"
                            },
                            geometry: s.geometry
                        }), i
                    }
                }, {
                    key: "getTwoClickPolygon",
                    value: function(t, e, n) {
                        return null
                    }
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {
                        e.onUpdateCursor("cell")
                    }
                }]) && o(n.prototype, r), l && o(n, l), h
            }(n(32254).GeoJsonEditMode);
            e.TwoClickPolygonMode = l
        },
        15279: function(t, e, n) {
            "use strict";

            function r(t) {
                return (r = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function i(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function o(t, e) {
                return !e || "object" !== r(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function a() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function s(t) {
                return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function u(t, e) {
                return (u = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.ViewMode = void 0;
            var c = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && u(t, e)
                }(r, t);
                var e, n = (e = r, function() {
                    var t, n = s(e);
                    if (a()) {
                        var r = s(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return o(this, t)
                });

                function r() {
                    return i(this, r), n.apply(this, arguments)
                }
                return r
            }(n(32254).GeoJsonEditMode);
            e.ViewMode = c
        },
        23916: function(t, e) {
            "use strict";

            function n(t, e) {
                if (t === e) return !0;
                if (Array.isArray(t)) {
                    var n = t.length;
                    if (!e || e.length !== n) return !1;
                    for (var r = 0; r < n; r++)
                        if (t[r] !== e[r]) return !1;
                    return !0
                }
                return !1
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = function(t) {
                var e, r = {};
                return function(i) {
                    for (var o in i)
                        if (!n(i[o], r[o])) {
                            e = t(i), r = i;
                            break
                        }
                    return e
                }
            }
        },
        70875: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.toDeckColor = function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [255, 0, 0, 255];
                if (!Array.isArray(t)) return e;
                return [255 * t[0], 255 * t[1], 255 * t[2], 255 * t[3]]
            }, e.recursivelyTraverseNestedArrays = function t(e, n, r) {
                if (!Array.isArray(e[0])) return !0;
                for (var i = 0; i < e.length; i++)
                    if (t(e[i], [].concat(l(n), [i]), r)) {
                        r(e, n);
                        break
                    }
                return !1
            }, e.generatePointsParallelToLinePoints = function(t, e, n) {
                var s = {
                        type: "LineString",
                        coordinates: [t, e]
                    },
                    u = (0, a.point)(n),
                    c = (0, o.default)(u, s),
                    l = (0, i.default)(t, e),
                    f = (n[0] - t[0]) * (e[1] - t[1]) - (n[1] - t[1]) * (e[0] - t[0]) < 0 ? l - 90 : l - 270,
                    h = (0, r.default)(e, c, f),
                    d = (0, r.default)(t, c, f);
                return [h.geometry.coordinates, d.geometry.coordinates]
            }, e.distance2d = d, e.mix = p, e.nearestPointOnProjectedLine = function(t, e, n) {
                var r = new s.default(n),
                    i = t.geometry.coordinates.map((function(t) {
                        var e = c(t, 3),
                            n = e[0],
                            i = e[1],
                            o = e[2],
                            a = void 0 === o ? 0 : o;
                        return r.project([n, i, a])
                    })),
                    o = c(r.project(e.geometry.coordinates), 2),
                    a = o[0],
                    u = o[1],
                    l = 1 / 0,
                    f = {};
                i.forEach((function(t, e) {
                    var n = c(t, 2),
                        r = n[0],
                        o = n[1];
                    if (0 !== e) {
                        var s = c(i[e - 1], 2),
                            h = s[0],
                            d = s[1],
                            p = d - o,
                            g = r - h,
                            y = h * o - r * d,
                            v = p * p + g * g,
                            m = Math.abs(p * a + g * u + y) / Math.sqrt(v);
                        m < l && (l = m, f = {
                            index: e,
                            x0: (g * (g * a - p * u) - p * y) / v,
                            y0: (p * (-g * a + p * u) - g * y) / v
                        })
                    }
                }));
                var h = f,
                    g = h.index,
                    y = h.x0,
                    v = h.y0,
                    m = c(i[g - 1], 3),
                    b = m[0],
                    w = m[1],
                    _ = m[2],
                    P = void 0 === _ ? 0 : _,
                    E = c(i[g], 3),
                    x = E[0],
                    S = E[1],
                    O = E[2],
                    T = void 0 === O ? 0 : O,
                    M = d(b, w, x, S),
                    C = d(b, w, y, v),
                    A = p(P, T, C / M);
                return {
                    type: "Feature",
                    geometry: {
                        type: "Point",
                        coordinates: r.unproject([y, v, A])
                    },
                    properties: {
                        dist: l,
                        index: g - 1
                    }
                }
            }, e.getPickedEditHandle = function(t) {
                var e = g(t);
                return e.length ? e[0] : null
            }, e.getPickedSnapSourceEditHandle = function(t) {
                return g(t).find((function(t) {
                    return "snap-source" === t.properties.editHandleType
                }))
            }, e.getNonGuidePicks = function(t) {
                return t && t.filter((function(t) {
                    return !t.isGuide
                }))
            }, e.getPickedExistingEditHandle = function(t) {
                return g(t).find((function(t) {
                    var e = t.properties;
                    return e.featureIndex >= 0 && "existing" === e.editHandleType
                }))
            }, e.getPickedIntermediateEditHandle = function(t) {
                return g(t).find((function(t) {
                    var e = t.properties;
                    return e.featureIndex >= 0 && "intermediate" === e.editHandleType
                }))
            }, e.getPickedEditHandles = g, e.getEditHandlesForGeometry = function(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "existing",
                    r = [];
                switch (t.type) {
                    case "Point":
                        r = [{
                            type: "Feature",
                            properties: {
                                guideType: "editHandle",
                                editHandleType: n,
                                positionIndexes: [],
                                featureIndex: e
                            },
                            geometry: {
                                type: "Point",
                                coordinates: t.coordinates
                            }
                        }];
                        break;
                    case "MultiPoint":
                    case "LineString":
                        r = r.concat(y(t.coordinates, [], e, n));
                        break;
                    case "Polygon":
                    case "MultiLineString":
                        for (var i = 0; i < t.coordinates.length; i++) r = r.concat(y(t.coordinates[i], [i], e, n)), "Polygon" === t.type && (r = r.slice(0, -1));
                        break;
                    case "MultiPolygon":
                        for (var o = 0; o < t.coordinates.length; o++)
                            for (var a = 0; a < t.coordinates[o].length; a++) r = (r = r.concat(y(t.coordinates[o][a], [o, a], e, n))).slice(0, -1);
                        break;
                    default:
                        throw Error("Unhandled geometry type: ".concat(t.type))
                }
                return r
            };
            var r = u(n(93737)),
                i = u(n(51208)),
                o = u(n(63892)),
                a = n(84102),
                s = u(n(56475));

            function u(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function c(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    if ("undefined" === typeof Symbol || !(Symbol.iterator in Object(t))) return;
                    var n = [],
                        r = !0,
                        i = !1,
                        o = void 0;
                    try {
                        for (var a, s = t[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0);
                    } catch (u) {
                        i = !0, o = u
                    } finally {
                        try {
                            r || null == s.return || s.return()
                        } finally {
                            if (i) throw o
                        }
                    }
                    return n
                }(t, e) || f(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function l(t) {
                return function(t) {
                    if (Array.isArray(t)) return h(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || f(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function f(t, e) {
                if (t) {
                    if ("string" === typeof t) return h(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(n) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? h(t, e) : void 0
                }
            }

            function h(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function d(t, e, n, r) {
                var i = t - n,
                    o = e - r;
                return Math.sqrt(i * i + o * o)
            }

            function p(t, e, n) {
                return e * n + t * (1 - n)
            }

            function g(t) {
                return t && t.filter((function(t) {
                    return t.isGuide && "editHandle" === t.object.properties.guideType
                })).map((function(t) {
                    return t.object
                })) || []
            }

            function y(t, e, n) {
                for (var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "existing", i = [], o = 0; o < t.length; o++) {
                    var a = t[o];
                    i.push({
                        type: "Feature",
                        properties: {
                            guideType: "editHandle",
                            positionIndexes: [].concat(l(e), [o]),
                            featureIndex: n,
                            editHandleType: r
                        },
                        geometry: {
                            type: "Point",
                            coordinates: a
                        }
                    })
                }
                return i
            }
        },
        56475: function(t, e, n) {
            "use strict";
            n.r(e), n.d(e, {
                default: function() {
                    return r.DW
                },
                WebMercatorViewport: function() {
                    return r.DW
                },
                addMetersToLngLat: function() {
                    return r.eG
                },
                altitudeToFovy: function() {
                    return r.Lu
                },
                fitBounds: function() {
                    return r.Xg
                },
                flyToViewport: function() {
                    return r.if
                },
                fovyToAltitude: function() {
                    return r.sj
                },
                getBounds: function() {
                    return r.zX
                },
                getDistanceScales: function() {
                    return r.ro
                },
                getFlyToDuration: function() {
                    return r.up
                },
                getMeterZoom: function() {
                    return r.Bf
                },
                getProjectionMatrix: function() {
                    return r.c7
                },
                getProjectionParameters: function() {
                    return r.wl
                },
                getViewMatrix: function() {
                    return r.lf
                },
                lngLatToWorld: function() {
                    return r.w5
                },
                normalizeViewportProps: function() {
                    return r.QA
                },
                pixelsToWorld: function() {
                    return r.CT
                },
                scaleToZoom: function() {
                    return r.sO
                },
                worldToLngLat: function() {
                    return r.es
                },
                worldToPixels: function() {
                    return r.aW
                },
                zoomToScale: function() {
                    return r.EO
                }
            });
            var r = n(78866)
        },
        50009: function(t, e, n) {
            "use strict";
            n.d(e, {
                jk: function() {
                    return a
                }
            });
            var r = n(83454);

            function i() {
                let t;
                if ("undefined" !== typeof window && window.performance) t = window.performance.now();
                else if ("undefined" !== typeof r && r.hrtime) {
                    const e = r.hrtime();
                    t = 1e3 * e[0] + e[1] / 1e6
                } else t = Date.now();
                return t
            }
            class o {
                constructor(t, e) {
                    this.name = t, this.type = e, this.sampleSize = 1, this.reset()
                }
                setSampleSize(t) {
                    return this.sampleSize = t, this
                }
                incrementCount() {
                    return this.addCount(1), this
                }
                decrementCount() {
                    return this.subtractCount(1), this
                }
                addCount(t) {
                    return this._count += t, this._samples++, this._checkSampling(), this
                }
                subtractCount(t) {
                    return this._count -= t, this._samples++, this._checkSampling(), this
                }
                addTime(t) {
                    return this._time += t, this.lastTiming = t, this._samples++, this._checkSampling(), this
                }
                timeStart() {
                    return this._startTime = i(), this._timerPending = !0, this
                }
                timeEnd() {
                    return this._timerPending ? (this.addTime(i() - this._startTime), this._timerPending = !1, this._checkSampling(), this) : this
                }
                getSampleAverageCount() {
                    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0
                }
                getSampleAverageTime() {
                    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0
                }
                getSampleHz() {
                    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1e3) : 0
                }
                getAverageCount() {
                    return this.samples > 0 ? this.count / this.samples : 0
                }
                getAverageTime() {
                    return this.samples > 0 ? this.time / this.samples : 0
                }
                getHz() {
                    return this.time > 0 ? this.samples / (this.time / 1e3) : 0
                }
                reset() {
                    return this.time = 0, this.count = 0, this.samples = 0, this.lastTiming = 0, this.lastSampleTime = 0, this.lastSampleCount = 0, this._count = 0, this._time = 0, this._samples = 0, this._startTime = 0, this._timerPending = !1, this
                }
                _checkSampling() {
                    this._samples === this.sampleSize && (this.lastSampleTime = this._time, this.lastSampleCount = this._count, this.count += this._count, this.time += this._time, this.samples += this._samples, this._time = 0, this._count = 0, this._samples = 0)
                }
            }
            class a {
                constructor({
                    id: t,
                    stats: e
                }) {
                    this.id = t, this.stats = {}, this._initializeStats(e), Object.seal(this)
                }
                get(t, e = "count") {
                    return this._getOrCreate({
                        name: t,
                        type: e
                    })
                }
                get size() {
                    return Object.keys(this.stats).length
                }
                reset() {
                    for (const t in this.stats) this.stats[t].reset();
                    return this
                }
                forEach(t) {
                    for (const e in this.stats) t(this.stats[e])
                }
                getTable() {
                    const t = {};
                    return this.forEach((e => {
                        t[e.name] = {
                            time: e.time || 0,
                            count: e.count || 0,
                            average: e.getAverageTime() || 0,
                            hz: e.getHz() || 0
                        }
                    })), t
                }
                _initializeStats(t = []) {
                    t.forEach((t => this._getOrCreate(t)))
                }
                _getOrCreate(t) {
                    if (!t || !t.name) return null;
                    const {
                        name: e,
                        type: n
                    } = t;
                    return this.stats[e] || (this.stats[e] = t instanceof o ? t : new o(e, n)), this.stats[e]
                }
            }
        },
        41070: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(31540),
                i = 6378137;

            function o(t) {
                var e = 0;
                if (t && t.length > 0) {
                    e += Math.abs(a(t[0]));
                    for (var n = 1; n < t.length; n++) e -= Math.abs(a(t[n]))
                }
                return e
            }

            function a(t) {
                var e, n, r, o, a, u, c = 0,
                    l = t.length;
                if (l > 2) {
                    for (u = 0; u < l; u++) u === l - 2 ? (r = l - 2, o = l - 1, a = 0) : u === l - 1 ? (r = l - 1, o = 0, a = 1) : (r = u, o = u + 1, a = u + 2), e = t[r], n = t[o], c += (s(t[a][0]) - s(e[0])) * Math.sin(s(n[1]));
                    c = c * i * i / 2
                }
                return c
            }

            function s(t) {
                return t * Math.PI / 180
            }
            e.default = function(t) {
                return r.geomReduce(t, (function(t, e) {
                    return t + function(t) {
                        var e, n = 0;
                        switch (t.type) {
                            case "Polygon":
                                return o(t.coordinates);
                            case "MultiPolygon":
                                for (e = 0; e < t.coordinates.length; e++) n += o(t.coordinates[e]);
                                return n;
                            case "Point":
                            case "MultiPoint":
                            case "LineString":
                            case "MultiLineString":
                                return 0
                        }
                        return 0
                    }(e)
                }), 0)
            }
        },
        13652: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102);
            e.default = function(t, e) {
                void 0 === e && (e = {});
                var n = Number(t[0]),
                    i = Number(t[1]),
                    o = Number(t[2]),
                    a = Number(t[3]);
                if (6 === t.length) throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");
                var s = [n, i],
                    u = [n, a],
                    c = [o, a],
                    l = [o, i];
                return r.polygon([
                    [s, l, c, u, s]
                ], e.properties, {
                    bbox: t,
                    id: e.id
                })
            }
        },
        9705: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(31540);

            function i(t) {
                var e = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                return r.coordEach(t, (function(t) {
                    e[0] > t[0] && (e[0] = t[0]), e[1] > t[1] && (e[1] = t[1]), e[2] < t[0] && (e[2] = t[0]), e[3] < t[1] && (e[3] = t[1])
                })), e
            }
            i.default = i, e.default = i
        },
        51208: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102),
                i = n(10611);

            function o(t, e, n) {
                if (void 0 === n && (n = {}), !0 === n.final) return function(t, e) {
                    var n = o(e, t);
                    return n = (n + 180) % 360
                }(t, e);
                var a = i.getCoord(t),
                    s = i.getCoord(e),
                    u = r.degreesToRadians(a[0]),
                    c = r.degreesToRadians(s[0]),
                    l = r.degreesToRadians(a[1]),
                    f = r.degreesToRadians(s[1]),
                    h = Math.sin(c - u) * Math.cos(f),
                    d = Math.cos(l) * Math.sin(f) - Math.sin(l) * Math.cos(f) * Math.cos(c - u);
                return r.radiansToDegrees(Math.atan2(h, d))
            }
            e.default = o
        },
        3809: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(10611);
            e.default = function(t) {
                for (var e, n, i = r.getCoords(t), o = 0, a = 1; a < i.length;) e = n || i[0], o += ((n = i[a])[0] - e[0]) * (n[1] + e[1]), a++;
                return o > 0
            }
        },
        88147: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(10611);

            function i(t, e, n) {
                var r = !1;
                e[0][0] === e[e.length - 1][0] && e[0][1] === e[e.length - 1][1] && (e = e.slice(0, e.length - 1));
                for (var i = 0, o = e.length - 1; i < e.length; o = i++) {
                    var a = e[i][0],
                        s = e[i][1],
                        u = e[o][0],
                        c = e[o][1];
                    if (t[1] * (a - u) + s * (u - t[0]) + c * (t[0] - a) === 0 && (a - t[0]) * (u - t[0]) <= 0 && (s - t[1]) * (c - t[1]) <= 0) return !n;
                    s > t[1] !== c > t[1] && t[0] < (u - a) * (t[1] - s) / (c - s) + a && (r = !r)
                }
                return r
            }
            e.default = function(t, e, n) {
                if (void 0 === n && (n = {}), !t) throw new Error("point is required");
                if (!e) throw new Error("polygon is required");
                var o = r.getCoord(t),
                    a = r.getGeom(e),
                    s = a.type,
                    u = e.bbox,
                    c = a.coordinates;
                if (u && !1 === function(t, e) {
                        return e[0] <= t[0] && e[1] <= t[1] && e[2] >= t[0] && e[3] >= t[1]
                    }(o, u)) return !1;
                "Polygon" === s && (c = [c]);
                for (var l = !1, f = 0; f < c.length && !l; f++)
                    if (i(o, c[f][0], n.ignoreBoundary)) {
                        for (var h = !1, d = 1; d < c[f].length && !h;) i(o, c[f][d], !n.ignoreBoundary) && (h = !0), d++;
                        h || (l = !0)
                    }
                return l
            }
        },
        35419: function(t, e, n) {
            "use strict";
            var r, i = (r = n(78230)) && "object" === typeof r && "default" in r ? r.default : r,
                o = n(20675),
                a = n(31540),
                s = n(32267),
                u = n(84102);

            function c(t, e, n, r) {
                var d = t.properties || {},
                    p = "Feature" === t.type ? t.geometry : t;
                if ("GeometryCollection" === p.type) {
                    var g = [];
                    return a.geomEach(t, (function(t) {
                        var i = c(t, e, n, r);
                        i && g.push(i)
                    })), u.featureCollection(g)
                }
                var y = function(t) {
                        var e = i(t).geometry.coordinates,
                            n = [-e[0], -e[1]];
                        return s.geoAzimuthalEquidistant().rotate(n).scale(u.earthRadius)
                    }(p),
                    v = {
                        type: p.type,
                        coordinates: f(p.coordinates, y)
                    },
                    m = (new o.GeoJSONReader).read(v),
                    b = u.radiansToLength(u.lengthToRadians(e, n), "meters"),
                    w = o.BufferOp.bufferOp(m, b, r);
                if (!l((w = (new o.GeoJSONWriter).write(w)).coordinates)) {
                    var _ = {
                        type: w.type,
                        coordinates: h(w.coordinates, y)
                    };
                    return u.feature(_, d)
                }
            }

            function l(t) {
                return Array.isArray(t[0]) ? l(t[0]) : isNaN(t[0])
            }

            function f(t, e) {
                return "object" !== typeof t[0] ? e(t) : t.map((function(t) {
                    return f(t, e)
                }))
            }

            function h(t, e) {
                return "object" !== typeof t[0] ? e.invert(t) : t.map((function(t) {
                    return h(t, e)
                }))
            }
            t.exports = function(t, e, n) {
                var r = (n = n || {}).units || "kilometers",
                    i = n.steps || 8;
                if (!t) throw new Error("geojson is required");
                if ("object" !== typeof n) throw new Error("options must be an object");
                if ("number" !== typeof i) throw new Error("steps must be an number");
                if (void 0 === e) throw new Error("radius is required");
                if (i <= 0) throw new Error("steps must be greater than 0");
                var o = [];
                switch (t.type) {
                    case "GeometryCollection":
                        return a.geomEach(t, (function(t) {
                            var n = c(t, e, r, i);
                            n && o.push(n)
                        })), u.featureCollection(o);
                    case "FeatureCollection":
                        return a.featureEach(t, (function(t) {
                            var n = c(t, e, r, i);
                            n && a.featureEach(n, (function(t) {
                                t && o.push(t)
                            }))
                        })), u.featureCollection(o)
                }
                return c(t, e, r, i)
            }
        },
        32267: function(t, e, n) {
            "use strict";

            function r() {
                return new i
            }

            function i() {
                this.reset()
            }
            n.r(e), n.d(e, {
                geoAlbers: function() {
                    return br
                },
                geoAlbersUsa: function() {
                    return wr
                },
                geoArea: function() {
                    return q
                },
                geoAzimuthalEqualArea: function() {
                    return xr
                },
                geoAzimuthalEqualAreaRaw: function() {
                    return Er
                },
                geoAzimuthalEquidistant: function() {
                    return Or
                },
                geoAzimuthalEquidistantRaw: function() {
                    return Sr
                },
                geoBounds: function() {
                    return Bt
                },
                geoCentroid: function() {
                    return Jt
                },
                geoCircle: function() {
                    return ce
                },
                geoClipExtent: function() {
                    return Ee
                },
                geoConicConformal: function() {
                    return Ir
                },
                geoConicConformalRaw: function() {
                    return kr
                },
                geoConicEqualArea: function() {
                    return mr
                },
                geoConicEqualAreaRaw: function() {
                    return vr
                },
                geoConicEquidistant: function() {
                    return Dr
                },
                geoConicEquidistantRaw: function() {
                    return Rr
                },
                geoContains: function() {
                    return We
                },
                geoDistance: function() {
                    return Fe
                },
                geoEquirectangular: function() {
                    return Lr
                },
                geoEquirectangularRaw: function() {
                    return jr
                },
                geoGnomonic: function() {
                    return Nr
                },
                geoGnomonicRaw: function() {
                    return Fr
                },
                geoGraticule: function() {
                    return $e
                },
                geoGraticule10: function() {
                    return Xe
                },
                geoIdentity: function() {
                    return Br
                },
                geoInterpolate: function() {
                    return Ke
                },
                geoLength: function() {
                    return Le
                },
                geoMercator: function() {
                    return Mr
                },
                geoMercatorRaw: function() {
                    return Tr
                },
                geoNaturalEarth1: function() {
                    return Gr
                },
                geoNaturalEarth1Raw: function() {
                    return Ur
                },
                geoOrthographic: function() {
                    return Vr
                },
                geoOrthographicRaw: function() {
                    return Zr
                },
                geoPath: function() {
                    return tr
                },
                geoProjection: function() {
                    return pr
                },
                geoProjectionMutator: function() {
                    return gr
                },
                geoRotation: function() {
                    return ae
                },
                geoStereographic: function() {
                    return Wr
                },
                geoStereographicRaw: function() {
                    return Hr
                },
                geoStream: function() {
                    return R
                },
                geoTransform: function() {
                    return ar
                },
                geoTransverseMercator: function() {
                    return qr
                },
                geoTransverseMercatorRaw: function() {
                    return Yr
                }
            }), i.prototype = {
                constructor: i,
                reset: function() {
                    this.s = this.t = 0
                },
                add: function(t) {
                    a(o, t, this.t), a(this, o.s, this.s), this.s ? this.t += o.t : this.s = o.t
                },
                valueOf: function() {
                    return this.s
                }
            };
            var o = new i;

            function a(t, e, n) {
                var r = t.s = e + n,
                    i = r - e,
                    o = r - i;
                t.t = e - o + (n - i)
            }
            var s = 1e-6,
                u = Math.PI,
                c = u / 2,
                l = u / 4,
                f = 2 * u,
                h = 180 / u,
                d = u / 180,
                p = Math.abs,
                g = Math.atan,
                y = Math.atan2,
                v = Math.cos,
                m = Math.ceil,
                b = Math.exp,
                w = (Math.floor, Math.log),
                _ = Math.pow,
                P = Math.sin,
                E = Math.sign || function(t) {
                    return t > 0 ? 1 : t < 0 ? -1 : 0
                },
                x = Math.sqrt,
                S = Math.tan;

            function O(t) {
                return t > 1 ? 0 : t < -1 ? u : Math.acos(t)
            }

            function T(t) {
                return t > 1 ? c : t < -1 ? -c : Math.asin(t)
            }

            function M(t) {
                return (t = P(t / 2)) * t
            }

            function C() {}

            function A(t, e) {
                t && I.hasOwnProperty(t.type) && I[t.type](t, e)
            }
            var k = {
                    Feature: function(t, e) {
                        A(t.geometry, e)
                    },
                    FeatureCollection: function(t, e) {
                        for (var n = t.features, r = -1, i = n.length; ++r < i;) A(n[r].geometry, e)
                    }
                },
                I = {
                    Sphere: function(t, e) {
                        e.sphere()
                    },
                    Point: function(t, e) {
                        t = t.coordinates, e.point(t[0], t[1], t[2])
                    },
                    MultiPoint: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;) t = n[r], e.point(t[0], t[1], t[2])
                    },
                    LineString: function(t, e) {
                        j(t.coordinates, e, 0)
                    },
                    MultiLineString: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;) j(n[r], e, 0)
                    },
                    Polygon: function(t, e) {
                        L(t.coordinates, e)
                    },
                    MultiPolygon: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;) L(n[r], e)
                    },
                    GeometryCollection: function(t, e) {
                        for (var n = t.geometries, r = -1, i = n.length; ++r < i;) A(n[r], e)
                    }
                };

            function j(t, e, n) {
                var r, i = -1,
                    o = t.length - n;
                for (e.lineStart(); ++i < o;) r = t[i], e.point(r[0], r[1], r[2]);
                e.lineEnd()
            }

            function L(t, e) {
                var n = -1,
                    r = t.length;
                for (e.polygonStart(); ++n < r;) j(t[n], e, 1);
                e.polygonEnd()
            }

            function R(t, e) {
                t && k.hasOwnProperty(t.type) ? k[t.type](t, e) : A(t, e)
            }
            var D, F, N, z, B, U = r(),
                G = r(),
                Z = {
                    point: C,
                    lineStart: C,
                    lineEnd: C,
                    polygonStart: function() {
                        U.reset(), Z.lineStart = V, Z.lineEnd = H
                    },
                    polygonEnd: function() {
                        var t = +U;
                        G.add(t < 0 ? f + t : t), this.lineStart = this.lineEnd = this.point = C
                    },
                    sphere: function() {
                        G.add(f)
                    }
                };

            function V() {
                Z.point = W
            }

            function H() {
                Y(D, F)
            }

            function W(t, e) {
                Z.point = Y, D = t, F = e, N = t *= d, z = v(e = (e *= d) / 2 + l), B = P(e)
            }

            function Y(t, e) {
                var n = (t *= d) - N,
                    r = n >= 0 ? 1 : -1,
                    i = r * n,
                    o = v(e = (e *= d) / 2 + l),
                    a = P(e),
                    s = B * a,
                    u = z * o + s * v(i),
                    c = s * r * P(i);
                U.add(y(c, u)), N = t, z = o, B = a
            }

            function q(t) {
                return G.reset(), R(t, Z), 2 * G
            }

            function $(t) {
                return [y(t[1], t[0]), T(t[2])]
            }

            function X(t) {
                var e = t[0],
                    n = t[1],
                    r = v(n);
                return [r * v(e), r * P(e), P(n)]
            }

            function K(t, e) {
                return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
            }

            function J(t, e) {
                return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]]
            }

            function Q(t, e) {
                t[0] += e[0], t[1] += e[1], t[2] += e[2]
            }

            function tt(t, e) {
                return [t[0] * e, t[1] * e, t[2] * e]
            }

            function et(t) {
                var e = x(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
                t[0] /= e, t[1] /= e, t[2] /= e
            }
            var nt, rt, it, ot, at, st, ut, ct, lt, ft, ht, dt, pt, gt, yt, vt, mt, bt, wt, _t, Pt, Et, xt, St, Ot, Tt, Mt = r(),
                Ct = {
                    point: At,
                    lineStart: It,
                    lineEnd: jt,
                    polygonStart: function() {
                        Ct.point = Lt, Ct.lineStart = Rt, Ct.lineEnd = Dt, Mt.reset(), Z.polygonStart()
                    },
                    polygonEnd: function() {
                        Z.polygonEnd(), Ct.point = At, Ct.lineStart = It, Ct.lineEnd = jt, U < 0 ? (nt = -(it = 180), rt = -(ot = 90)) : Mt > s ? ot = 90 : Mt < -s && (rt = -90), ft[0] = nt, ft[1] = it
                    }
                };

            function At(t, e) {
                lt.push(ft = [nt = t, it = t]), e < rt && (rt = e), e > ot && (ot = e)
            }

            function kt(t, e) {
                var n = X([t * d, e * d]);
                if (ct) {
                    var r = J(ct, n),
                        i = J([r[1], -r[0], 0], r);
                    et(i), i = $(i);
                    var o, a = t - at,
                        s = a > 0 ? 1 : -1,
                        u = i[0] * h * s,
                        c = p(a) > 180;
                    c ^ (s * at < u && u < s * t) ? (o = i[1] * h) > ot && (ot = o) : c ^ (s * at < (u = (u + 360) % 360 - 180) && u < s * t) ? (o = -i[1] * h) < rt && (rt = o) : (e < rt && (rt = e), e > ot && (ot = e)), c ? t < at ? Ft(nt, t) > Ft(nt, it) && (it = t) : Ft(t, it) > Ft(nt, it) && (nt = t) : it >= nt ? (t < nt && (nt = t), t > it && (it = t)) : t > at ? Ft(nt, t) > Ft(nt, it) && (it = t) : Ft(t, it) > Ft(nt, it) && (nt = t)
                } else lt.push(ft = [nt = t, it = t]);
                e < rt && (rt = e), e > ot && (ot = e), ct = n, at = t
            }

            function It() {
                Ct.point = kt
            }

            function jt() {
                ft[0] = nt, ft[1] = it, Ct.point = At, ct = null
            }

            function Lt(t, e) {
                if (ct) {
                    var n = t - at;
                    Mt.add(p(n) > 180 ? n + (n > 0 ? 360 : -360) : n)
                } else st = t, ut = e;
                Z.point(t, e), kt(t, e)
            }

            function Rt() {
                Z.lineStart()
            }

            function Dt() {
                Lt(st, ut), Z.lineEnd(), p(Mt) > s && (nt = -(it = 180)), ft[0] = nt, ft[1] = it, ct = null
            }

            function Ft(t, e) {
                return (e -= t) < 0 ? e + 360 : e
            }

            function Nt(t, e) {
                return t[0] - e[0]
            }

            function zt(t, e) {
                return t[0] <= t[1] ? t[0] <= e && e <= t[1] : e < t[0] || t[1] < e
            }

            function Bt(t) {
                var e, n, r, i, o, a, s;
                if (ot = it = -(nt = rt = 1 / 0), lt = [], R(t, Ct), n = lt.length) {
                    for (lt.sort(Nt), e = 1, o = [r = lt[0]]; e < n; ++e) zt(r, (i = lt[e])[0]) || zt(r, i[1]) ? (Ft(r[0], i[1]) > Ft(r[0], r[1]) && (r[1] = i[1]), Ft(i[0], r[1]) > Ft(r[0], r[1]) && (r[0] = i[0])) : o.push(r = i);
                    for (a = -1 / 0, e = 0, r = o[n = o.length - 1]; e <= n; r = i, ++e) i = o[e], (s = Ft(r[1], i[0])) > a && (a = s, nt = i[0], it = r[1])
                }
                return lt = ft = null, nt === 1 / 0 || rt === 1 / 0 ? [
                    [NaN, NaN],
                    [NaN, NaN]
                ] : [
                    [nt, rt],
                    [it, ot]
                ]
            }
            var Ut = {
                sphere: C,
                point: Gt,
                lineStart: Vt,
                lineEnd: Yt,
                polygonStart: function() {
                    Ut.lineStart = qt, Ut.lineEnd = $t
                },
                polygonEnd: function() {
                    Ut.lineStart = Vt, Ut.lineEnd = Yt
                }
            };

            function Gt(t, e) {
                t *= d;
                var n = v(e *= d);
                Zt(n * v(t), n * P(t), P(e))
            }

            function Zt(t, e, n) {
                ++ht, pt += (t - pt) / ht, gt += (e - gt) / ht, yt += (n - yt) / ht
            }

            function Vt() {
                Ut.point = Ht
            }

            function Ht(t, e) {
                t *= d;
                var n = v(e *= d);
                St = n * v(t), Ot = n * P(t), Tt = P(e), Ut.point = Wt, Zt(St, Ot, Tt)
            }

            function Wt(t, e) {
                t *= d;
                var n = v(e *= d),
                    r = n * v(t),
                    i = n * P(t),
                    o = P(e),
                    a = y(x((a = Ot * o - Tt * i) * a + (a = Tt * r - St * o) * a + (a = St * i - Ot * r) * a), St * r + Ot * i + Tt * o);
                dt += a, vt += a * (St + (St = r)), mt += a * (Ot + (Ot = i)), bt += a * (Tt + (Tt = o)), Zt(St, Ot, Tt)
            }

            function Yt() {
                Ut.point = Gt
            }

            function qt() {
                Ut.point = Xt
            }

            function $t() {
                Kt(Et, xt), Ut.point = Gt
            }

            function Xt(t, e) {
                Et = t, xt = e, t *= d, e *= d, Ut.point = Kt;
                var n = v(e);
                St = n * v(t), Ot = n * P(t), Tt = P(e), Zt(St, Ot, Tt)
            }

            function Kt(t, e) {
                t *= d;
                var n = v(e *= d),
                    r = n * v(t),
                    i = n * P(t),
                    o = P(e),
                    a = Ot * o - Tt * i,
                    s = Tt * r - St * o,
                    u = St * i - Ot * r,
                    c = x(a * a + s * s + u * u),
                    l = T(c),
                    f = c && -l / c;
                wt += f * a, _t += f * s, Pt += f * u, dt += l, vt += l * (St + (St = r)), mt += l * (Ot + (Ot = i)), bt += l * (Tt + (Tt = o)), Zt(St, Ot, Tt)
            }

            function Jt(t) {
                ht = dt = pt = gt = yt = vt = mt = bt = wt = _t = Pt = 0, R(t, Ut);
                var e = wt,
                    n = _t,
                    r = Pt,
                    i = e * e + n * n + r * r;
                return i < 1e-12 && (e = vt, n = mt, r = bt, dt < s && (e = pt, n = gt, r = yt), (i = e * e + n * n + r * r) < 1e-12) ? [NaN, NaN] : [y(n, e) * h, T(r / x(i)) * h]
            }

            function Qt(t) {
                return function() {
                    return t
                }
            }

            function te(t, e) {
                function n(n, r) {
                    return n = t(n, r), e(n[0], n[1])
                }
                return t.invert && e.invert && (n.invert = function(n, r) {
                    return (n = e.invert(n, r)) && t.invert(n[0], n[1])
                }), n
            }

            function ee(t, e) {
                return [t > u ? t - f : t < -u ? t + f : t, e]
            }

            function ne(t, e, n) {
                return (t %= f) ? e || n ? te(ie(t), oe(e, n)) : ie(t) : e || n ? oe(e, n) : ee
            }

            function re(t) {
                return function(e, n) {
                    return [(e += t) > u ? e - f : e < -u ? e + f : e, n]
                }
            }

            function ie(t) {
                var e = re(t);
                return e.invert = re(-t), e
            }

            function oe(t, e) {
                var n = v(t),
                    r = P(t),
                    i = v(e),
                    o = P(e);

                function a(t, e) {
                    var a = v(e),
                        s = v(t) * a,
                        u = P(t) * a,
                        c = P(e),
                        l = c * n + s * r;
                    return [y(u * i - l * o, s * n - c * r), T(l * i + u * o)]
                }
                return a.invert = function(t, e) {
                    var a = v(e),
                        s = v(t) * a,
                        u = P(t) * a,
                        c = P(e),
                        l = c * i - u * o;
                    return [y(u * i + c * o, s * n + l * r), T(l * n - s * r)]
                }, a
            }

            function ae(t) {
                function e(e) {
                    return (e = t(e[0] * d, e[1] * d))[0] *= h, e[1] *= h, e
                }
                return t = ne(t[0] * d, t[1] * d, t.length > 2 ? t[2] * d : 0), e.invert = function(e) {
                    return (e = t.invert(e[0] * d, e[1] * d))[0] *= h, e[1] *= h, e
                }, e
            }

            function se(t, e, n, r, i, o) {
                if (n) {
                    var a = v(e),
                        s = P(e),
                        u = r * n;
                    null == i ? (i = e + r * f, o = e - u / 2) : (i = ue(a, i), o = ue(a, o), (r > 0 ? i < o : i > o) && (i += r * f));
                    for (var c, l = i; r > 0 ? l > o : l < o; l -= u) c = $([a, -s * v(l), -s * P(l)]), t.point(c[0], c[1])
                }
            }

            function ue(t, e) {
                (e = X(e))[0] -= t, et(e);
                var n = O(-e[1]);
                return ((-e[2] < 0 ? -n : n) + f - s) % f
            }

            function ce() {
                var t, e, n = Qt([0, 0]),
                    r = Qt(90),
                    i = Qt(6),
                    o = {
                        point: function(n, r) {
                            t.push(n = e(n, r)), n[0] *= h, n[1] *= h
                        }
                    };

                function a() {
                    var a = n.apply(this, arguments),
                        s = r.apply(this, arguments) * d,
                        u = i.apply(this, arguments) * d;
                    return t = [], e = ne(-a[0] * d, -a[1] * d, 0).invert, se(o, s, u, 1), a = {
                        type: "Polygon",
                        coordinates: [t]
                    }, t = e = null, a
                }
                return a.center = function(t) {
                    return arguments.length ? (n = "function" === typeof t ? t : Qt([+t[0], +t[1]]), a) : n
                }, a.radius = function(t) {
                    return arguments.length ? (r = "function" === typeof t ? t : Qt(+t), a) : r
                }, a.precision = function(t) {
                    return arguments.length ? (i = "function" === typeof t ? t : Qt(+t), a) : i
                }, a
            }

            function le() {
                var t, e = [];
                return {
                    point: function(e, n) {
                        t.push([e, n])
                    },
                    lineStart: function() {
                        e.push(t = [])
                    },
                    lineEnd: C,
                    rejoin: function() {
                        e.length > 1 && e.push(e.pop().concat(e.shift()))
                    },
                    result: function() {
                        var n = e;
                        return e = [], t = null, n
                    }
                }
            }

            function fe(t, e) {
                return p(t[0] - e[0]) < s && p(t[1] - e[1]) < s
            }

            function he(t, e, n, r) {
                this.x = t, this.z = e, this.o = n, this.e = r, this.v = !1, this.n = this.p = null
            }

            function de(t, e, n, r, i) {
                var o, a, s = [],
                    u = [];
                if (t.forEach((function(t) {
                        if (!((e = t.length - 1) <= 0)) {
                            var e, n, r = t[0],
                                a = t[e];
                            if (fe(r, a)) {
                                for (i.lineStart(), o = 0; o < e; ++o) i.point((r = t[o])[0], r[1]);
                                i.lineEnd()
                            } else s.push(n = new he(r, t, null, !0)), u.push(n.o = new he(r, null, n, !1)), s.push(n = new he(a, t, null, !1)), u.push(n.o = new he(a, null, n, !0))
                        }
                    })), s.length) {
                    for (u.sort(e), pe(s), pe(u), o = 0, a = u.length; o < a; ++o) u[o].e = n = !n;
                    for (var c, l, f = s[0];;) {
                        for (var h = f, d = !0; h.v;)
                            if ((h = h.n) === f) return;
                        c = h.z, i.lineStart();
                        do {
                            if (h.v = h.o.v = !0, h.e) {
                                if (d)
                                    for (o = 0, a = c.length; o < a; ++o) i.point((l = c[o])[0], l[1]);
                                else r(h.x, h.n.x, 1, i);
                                h = h.n
                            } else {
                                if (d)
                                    for (c = h.p.z, o = c.length - 1; o >= 0; --o) i.point((l = c[o])[0], l[1]);
                                else r(h.x, h.p.x, -1, i);
                                h = h.p
                            }
                            c = (h = h.o).z, d = !d
                        } while (!h.v);
                        i.lineEnd()
                    }
                }
            }

            function pe(t) {
                if (e = t.length) {
                    for (var e, n, r = 0, i = t[0]; ++r < e;) i.n = n = t[r], n.p = i, i = n;
                    i.n = n = t[0], n.p = i
                }
            }

            function ge(t, e) {
                return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN
            }
            ee.invert = ee;
            var ye = function(t) {
                    var e;
                    return 1 === t.length && (e = t, t = function(t, n) {
                        return ge(e(t), n)
                    }), {
                        left: function(e, n, r, i) {
                            for (null == r && (r = 0), null == i && (i = e.length); r < i;) {
                                var o = r + i >>> 1;
                                t(e[o], n) < 0 ? r = o + 1 : i = o
                            }
                            return r
                        },
                        right: function(e, n, r, i) {
                            for (null == r && (r = 0), null == i && (i = e.length); r < i;) {
                                var o = r + i >>> 1;
                                t(e[o], n) > 0 ? i = o : r = o + 1
                            }
                            return r
                        }
                    }
                }(ge),
                ve = (ye.right, ye.left, Array.prototype);
            ve.slice, ve.map, Math.sqrt(50), Math.sqrt(10), Math.sqrt(2);

            function me(t) {
                for (var e, n, r, i = t.length, o = -1, a = 0; ++o < i;) a += t[o].length;
                for (n = new Array(a); --i >= 0;)
                    for (e = (r = t[i]).length; --e >= 0;) n[--a] = r[e];
                return n
            }

            function be(t, e, n) {
                t = +t, e = +e, n = (i = arguments.length) < 2 ? (e = t, t = 0, 1) : i < 3 ? 1 : +n;
                for (var r = -1, i = 0 | Math.max(0, Math.ceil((e - t) / n)), o = new Array(i); ++r < i;) o[r] = t + r * n;
                return o
            }
            var we = 1e9,
                _e = -we;

            function Pe(t, e, n, r) {
                function i(i, o) {
                    return t <= i && i <= n && e <= o && o <= r
                }

                function o(i, o, s, u) {
                    var l = 0,
                        f = 0;
                    if (null == i || (l = a(i, s)) !== (f = a(o, s)) || c(i, o) < 0 ^ s > 0)
                        do {
                            u.point(0 === l || 3 === l ? t : n, l > 1 ? r : e)
                        } while ((l = (l + s + 4) % 4) !== f);
                    else u.point(o[0], o[1])
                }

                function a(r, i) {
                    return p(r[0] - t) < s ? i > 0 ? 0 : 3 : p(r[0] - n) < s ? i > 0 ? 2 : 1 : p(r[1] - e) < s ? i > 0 ? 1 : 0 : i > 0 ? 3 : 2
                }

                function u(t, e) {
                    return c(t.x, e.x)
                }

                function c(t, e) {
                    var n = a(t, 1),
                        r = a(e, 1);
                    return n !== r ? n - r : 0 === n ? e[1] - t[1] : 1 === n ? t[0] - e[0] : 2 === n ? t[1] - e[1] : e[0] - t[0]
                }
                return function(a) {
                    var s, c, l, f, h, d, p, g, y, v, m, b = a,
                        w = le(),
                        _ = {
                            point: P,
                            lineStart: function() {
                                _.point = E, c && c.push(l = []);
                                v = !0, y = !1, p = g = NaN
                            },
                            lineEnd: function() {
                                s && (E(f, h), d && y && w.rejoin(), s.push(w.result()));
                                _.point = P, y && b.lineEnd()
                            },
                            polygonStart: function() {
                                b = w, s = [], c = [], m = !0
                            },
                            polygonEnd: function() {
                                var e = function() {
                                        for (var e = 0, n = 0, i = c.length; n < i; ++n)
                                            for (var o, a, s = c[n], u = 1, l = s.length, f = s[0], h = f[0], d = f[1]; u < l; ++u) o = h, a = d, h = (f = s[u])[0], d = f[1], a <= r ? d > r && (h - o) * (r - a) > (d - a) * (t - o) && ++e : d <= r && (h - o) * (r - a) < (d - a) * (t - o) && --e;
                                        return e
                                    }(),
                                    n = m && e,
                                    i = (s = me(s)).length;
                                (n || i) && (a.polygonStart(), n && (a.lineStart(), o(null, null, 1, a), a.lineEnd()), i && de(s, u, e, o, a), a.polygonEnd());
                                b = a, s = c = l = null
                            }
                        };

                    function P(t, e) {
                        i(t, e) && b.point(t, e)
                    }

                    function E(o, a) {
                        var s = i(o, a);
                        if (c && l.push([o, a]), v) f = o, h = a, d = s, v = !1, s && (b.lineStart(), b.point(o, a));
                        else if (s && y) b.point(o, a);
                        else {
                            var u = [p = Math.max(_e, Math.min(we, p)), g = Math.max(_e, Math.min(we, g))],
                                w = [o = Math.max(_e, Math.min(we, o)), a = Math.max(_e, Math.min(we, a))];
                            ! function(t, e, n, r, i, o) {
                                var a, s = t[0],
                                    u = t[1],
                                    c = 0,
                                    l = 1,
                                    f = e[0] - s,
                                    h = e[1] - u;
                                if (a = n - s, f || !(a > 0)) {
                                    if (a /= f, f < 0) {
                                        if (a < c) return;
                                        a < l && (l = a)
                                    } else if (f > 0) {
                                        if (a > l) return;
                                        a > c && (c = a)
                                    }
                                    if (a = i - s, f || !(a < 0)) {
                                        if (a /= f, f < 0) {
                                            if (a > l) return;
                                            a > c && (c = a)
                                        } else if (f > 0) {
                                            if (a < c) return;
                                            a < l && (l = a)
                                        }
                                        if (a = r - u, h || !(a > 0)) {
                                            if (a /= h, h < 0) {
                                                if (a < c) return;
                                                a < l && (l = a)
                                            } else if (h > 0) {
                                                if (a > l) return;
                                                a > c && (c = a)
                                            }
                                            if (a = o - u, h || !(a < 0)) {
                                                if (a /= h, h < 0) {
                                                    if (a > l) return;
                                                    a > c && (c = a)
                                                } else if (h > 0) {
                                                    if (a < c) return;
                                                    a < l && (l = a)
                                                }
                                                return c > 0 && (t[0] = s + c * f, t[1] = u + c * h), l < 1 && (e[0] = s + l * f, e[1] = u + l * h), !0
                                            }
                                        }
                                    }
                                }
                            }(u, w, t, e, n, r) ? s && (b.lineStart(), b.point(o, a), m = !1): (y || (b.lineStart(), b.point(u[0], u[1])), b.point(w[0], w[1]), s || b.lineEnd(), m = !1)
                        }
                        p = o, g = a, y = s
                    }
                    return _
                }
            }

            function Ee() {
                var t, e, n, r = 0,
                    i = 0,
                    o = 960,
                    a = 500;
                return n = {
                    stream: function(n) {
                        return t && e === n ? t : t = Pe(r, i, o, a)(e = n)
                    },
                    extent: function(s) {
                        return arguments.length ? (r = +s[0][0], i = +s[0][1], o = +s[1][0], a = +s[1][1], t = e = null, n) : [
                            [r, i],
                            [o, a]
                        ]
                    }
                }
            }
            var xe = r();

            function Se(t, e) {
                var n = e[0],
                    r = e[1],
                    i = [P(n), -v(n), 0],
                    o = 0,
                    a = 0;
                xe.reset();
                for (var c = 0, h = t.length; c < h; ++c)
                    if (p = (d = t[c]).length)
                        for (var d, p, g = d[p - 1], m = g[0], b = g[1] / 2 + l, w = P(b), _ = v(b), E = 0; E < p; ++E, m = S, w = M, _ = C, g = x) {
                            var x = d[E],
                                S = x[0],
                                O = x[1] / 2 + l,
                                M = P(O),
                                C = v(O),
                                A = S - m,
                                k = A >= 0 ? 1 : -1,
                                I = k * A,
                                j = I > u,
                                L = w * M;
                            if (xe.add(y(L * k * P(I), _ * C + L * v(I))), o += j ? A + k * f : A, j ^ m >= n ^ S >= n) {
                                var R = J(X(g), X(x));
                                et(R);
                                var D = J(i, R);
                                et(D);
                                var F = (j ^ A >= 0 ? -1 : 1) * T(D[2]);
                                (r > F || r === F && (R[0] || R[1])) && (a += j ^ A >= 0 ? 1 : -1)
                            }
                        }
                return (o < -s || o < s && xe < -s) ^ 1 & a
            }
            var Oe, Te, Me, Ce = r(),
                Ae = {
                    sphere: C,
                    point: C,
                    lineStart: function() {
                        Ae.point = Ie, Ae.lineEnd = ke
                    },
                    lineEnd: C,
                    polygonStart: C,
                    polygonEnd: C
                };

            function ke() {
                Ae.point = Ae.lineEnd = C
            }

            function Ie(t, e) {
                Oe = t *= d, Te = P(e *= d), Me = v(e), Ae.point = je
            }

            function je(t, e) {
                t *= d;
                var n = P(e *= d),
                    r = v(e),
                    i = p(t - Oe),
                    o = v(i),
                    a = r * P(i),
                    s = Me * n - Te * r * o,
                    u = Te * n + Me * r * o;
                Ce.add(y(x(a * a + s * s), u)), Oe = t, Te = n, Me = r
            }

            function Le(t) {
                return Ce.reset(), R(t, Ae), +Ce
            }
            var Re = [null, null],
                De = {
                    type: "LineString",
                    coordinates: Re
                };

            function Fe(t, e) {
                return Re[0] = t, Re[1] = e, Le(De)
            }
            var Ne = {
                    Feature: function(t, e) {
                        return Be(t.geometry, e)
                    },
                    FeatureCollection: function(t, e) {
                        for (var n = t.features, r = -1, i = n.length; ++r < i;)
                            if (Be(n[r].geometry, e)) return !0;
                        return !1
                    }
                },
                ze = {
                    Sphere: function() {
                        return !0
                    },
                    Point: function(t, e) {
                        return Ue(t.coordinates, e)
                    },
                    MultiPoint: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;)
                            if (Ue(n[r], e)) return !0;
                        return !1
                    },
                    LineString: function(t, e) {
                        return Ge(t.coordinates, e)
                    },
                    MultiLineString: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;)
                            if (Ge(n[r], e)) return !0;
                        return !1
                    },
                    Polygon: function(t, e) {
                        return Ze(t.coordinates, e)
                    },
                    MultiPolygon: function(t, e) {
                        for (var n = t.coordinates, r = -1, i = n.length; ++r < i;)
                            if (Ze(n[r], e)) return !0;
                        return !1
                    },
                    GeometryCollection: function(t, e) {
                        for (var n = t.geometries, r = -1, i = n.length; ++r < i;)
                            if (Be(n[r], e)) return !0;
                        return !1
                    }
                };

            function Be(t, e) {
                return !(!t || !ze.hasOwnProperty(t.type)) && ze[t.type](t, e)
            }

            function Ue(t, e) {
                return 0 === Fe(t, e)
            }

            function Ge(t, e) {
                var n = Fe(t[0], t[1]);
                return Fe(t[0], e) + Fe(e, t[1]) <= n + s
            }

            function Ze(t, e) {
                return !!Se(t.map(Ve), He(e))
            }

            function Ve(t) {
                return (t = t.map(He)).pop(), t
            }

            function He(t) {
                return [t[0] * d, t[1] * d]
            }

            function We(t, e) {
                return (t && Ne.hasOwnProperty(t.type) ? Ne[t.type] : Be)(t, e)
            }

            function Ye(t, e, n) {
                var r = be(t, e - s, n).concat(e);
                return function(t) {
                    return r.map((function(e) {
                        return [t, e]
                    }))
                }
            }

            function qe(t, e, n) {
                var r = be(t, e - s, n).concat(e);
                return function(t) {
                    return r.map((function(e) {
                        return [e, t]
                    }))
                }
            }

            function $e() {
                var t, e, n, r, i, o, a, u, c, l, f, h, d = 10,
                    g = d,
                    y = 90,
                    v = 360,
                    b = 2.5;

                function w() {
                    return {
                        type: "MultiLineString",
                        coordinates: _()
                    }
                }

                function _() {
                    return be(m(r / y) * y, n, y).map(f).concat(be(m(u / v) * v, a, v).map(h)).concat(be(m(e / d) * d, t, d).filter((function(t) {
                        return p(t % y) > s
                    })).map(c)).concat(be(m(o / g) * g, i, g).filter((function(t) {
                        return p(t % v) > s
                    })).map(l))
                }
                return w.lines = function() {
                    return _().map((function(t) {
                        return {
                            type: "LineString",
                            coordinates: t
                        }
                    }))
                }, w.outline = function() {
                    return {
                        type: "Polygon",
                        coordinates: [f(r).concat(h(a).slice(1), f(n).reverse().slice(1), h(u).reverse().slice(1))]
                    }
                }, w.extent = function(t) {
                    return arguments.length ? w.extentMajor(t).extentMinor(t) : w.extentMinor()
                }, w.extentMajor = function(t) {
                    return arguments.length ? (r = +t[0][0], n = +t[1][0], u = +t[0][1], a = +t[1][1], r > n && (t = r, r = n, n = t), u > a && (t = u, u = a, a = t), w.precision(b)) : [
                        [r, u],
                        [n, a]
                    ]
                }, w.extentMinor = function(n) {
                    return arguments.length ? (e = +n[0][0], t = +n[1][0], o = +n[0][1], i = +n[1][1], e > t && (n = e, e = t, t = n), o > i && (n = o, o = i, i = n), w.precision(b)) : [
                        [e, o],
                        [t, i]
                    ]
                }, w.step = function(t) {
                    return arguments.length ? w.stepMajor(t).stepMinor(t) : w.stepMinor()
                }, w.stepMajor = function(t) {
                    return arguments.length ? (y = +t[0], v = +t[1], w) : [y, v]
                }, w.stepMinor = function(t) {
                    return arguments.length ? (d = +t[0], g = +t[1], w) : [d, g]
                }, w.precision = function(s) {
                    return arguments.length ? (b = +s, c = Ye(o, i, 90), l = qe(e, t, b), f = Ye(u, a, 90), h = qe(r, n, b), w) : b
                }, w.extentMajor([
                    [-180, -89.999999],
                    [180, 89.999999]
                ]).extentMinor([
                    [-180, -80.000001],
                    [180, 80.000001]
                ])
            }

            function Xe() {
                return $e()()
            }

            function Ke(t, e) {
                var n = t[0] * d,
                    r = t[1] * d,
                    i = e[0] * d,
                    o = e[1] * d,
                    a = v(r),
                    s = P(r),
                    u = v(o),
                    c = P(o),
                    l = a * v(n),
                    f = a * P(n),
                    p = u * v(i),
                    g = u * P(i),
                    m = 2 * T(x(M(o - r) + a * u * M(i - n))),
                    b = P(m),
                    w = m ? function(t) {
                        var e = P(t *= m) / b,
                            n = P(m - t) / b,
                            r = n * l + e * p,
                            i = n * f + e * g,
                            o = n * s + e * c;
                        return [y(i, r) * h, y(o, x(r * r + i * i)) * h]
                    } : function() {
                        return [n * h, r * h]
                    };
                return w.distance = m, w
            }

            function Je(t) {
                return t
            }
            var Qe, tn, en, nn, rn = r(),
                on = r(),
                an = {
                    point: C,
                    lineStart: C,
                    lineEnd: C,
                    polygonStart: function() {
                        an.lineStart = sn, an.lineEnd = ln
                    },
                    polygonEnd: function() {
                        an.lineStart = an.lineEnd = an.point = C, rn.add(p(on)), on.reset()
                    },
                    result: function() {
                        var t = rn / 2;
                        return rn.reset(), t
                    }
                };

            function sn() {
                an.point = un
            }

            function un(t, e) {
                an.point = cn, Qe = en = t, tn = nn = e
            }

            function cn(t, e) {
                on.add(nn * t - en * e), en = t, nn = e
            }

            function ln() {
                cn(Qe, tn)
            }
            var fn = an,
                hn = 1 / 0,
                dn = hn,
                pn = -hn,
                gn = pn;
            var yn, vn, mn, bn, wn = {
                    point: function(t, e) {
                        t < hn && (hn = t);
                        t > pn && (pn = t);
                        e < dn && (dn = e);
                        e > gn && (gn = e)
                    },
                    lineStart: C,
                    lineEnd: C,
                    polygonStart: C,
                    polygonEnd: C,
                    result: function() {
                        var t = [
                            [hn, dn],
                            [pn, gn]
                        ];
                        return pn = gn = -(dn = hn = 1 / 0), t
                    }
                },
                _n = 0,
                Pn = 0,
                En = 0,
                xn = 0,
                Sn = 0,
                On = 0,
                Tn = 0,
                Mn = 0,
                Cn = 0,
                An = {
                    point: kn,
                    lineStart: In,
                    lineEnd: Rn,
                    polygonStart: function() {
                        An.lineStart = Dn, An.lineEnd = Fn
                    },
                    polygonEnd: function() {
                        An.point = kn, An.lineStart = In, An.lineEnd = Rn
                    },
                    result: function() {
                        var t = Cn ? [Tn / Cn, Mn / Cn] : On ? [xn / On, Sn / On] : En ? [_n / En, Pn / En] : [NaN, NaN];
                        return _n = Pn = En = xn = Sn = On = Tn = Mn = Cn = 0, t
                    }
                };

            function kn(t, e) {
                _n += t, Pn += e, ++En
            }

            function In() {
                An.point = jn
            }

            function jn(t, e) {
                An.point = Ln, kn(mn = t, bn = e)
            }

            function Ln(t, e) {
                var n = t - mn,
                    r = e - bn,
                    i = x(n * n + r * r);
                xn += i * (mn + t) / 2, Sn += i * (bn + e) / 2, On += i, kn(mn = t, bn = e)
            }

            function Rn() {
                An.point = kn
            }

            function Dn() {
                An.point = Nn
            }

            function Fn() {
                zn(yn, vn)
            }

            function Nn(t, e) {
                An.point = zn, kn(yn = mn = t, vn = bn = e)
            }

            function zn(t, e) {
                var n = t - mn,
                    r = e - bn,
                    i = x(n * n + r * r);
                xn += i * (mn + t) / 2, Sn += i * (bn + e) / 2, On += i, Tn += (i = bn * t - mn * e) * (mn + t), Mn += i * (bn + e), Cn += 3 * i, kn(mn = t, bn = e)
            }
            var Bn = An;

            function Un(t) {
                this._context = t
            }
            Un.prototype = {
                _radius: 4.5,
                pointRadius: function(t) {
                    return this._radius = t, this
                },
                polygonStart: function() {
                    this._line = 0
                },
                polygonEnd: function() {
                    this._line = NaN
                },
                lineStart: function() {
                    this._point = 0
                },
                lineEnd: function() {
                    0 === this._line && this._context.closePath(), this._point = NaN
                },
                point: function(t, e) {
                    switch (this._point) {
                        case 0:
                            this._context.moveTo(t, e), this._point = 1;
                            break;
                        case 1:
                            this._context.lineTo(t, e);
                            break;
                        default:
                            this._context.moveTo(t + this._radius, e), this._context.arc(t, e, this._radius, 0, f)
                    }
                },
                result: C
            };
            var Gn, Zn, Vn, Hn, Wn, Yn = r(),
                qn = {
                    point: C,
                    lineStart: function() {
                        qn.point = $n
                    },
                    lineEnd: function() {
                        Gn && Xn(Zn, Vn), qn.point = C
                    },
                    polygonStart: function() {
                        Gn = !0
                    },
                    polygonEnd: function() {
                        Gn = null
                    },
                    result: function() {
                        var t = +Yn;
                        return Yn.reset(), t
                    }
                };

            function $n(t, e) {
                qn.point = Xn, Zn = Hn = t, Vn = Wn = e
            }

            function Xn(t, e) {
                Hn -= t, Wn -= e, Yn.add(x(Hn * Hn + Wn * Wn)), Hn = t, Wn = e
            }
            var Kn = qn;

            function Jn() {
                this._string = []
            }

            function Qn(t) {
                return "m0," + t + "a" + t + "," + t + " 0 1,1 0," + -2 * t + "a" + t + "," + t + " 0 1,1 0," + 2 * t + "z"
            }

            function tr(t, e) {
                var n, r, i = 4.5;

                function o(t) {
                    return t && ("function" === typeof i && r.pointRadius(+i.apply(this, arguments)), R(t, n(r))), r.result()
                }
                return o.area = function(t) {
                    return R(t, n(fn)), fn.result()
                }, o.measure = function(t) {
                    return R(t, n(Kn)), Kn.result()
                }, o.bounds = function(t) {
                    return R(t, n(wn)), wn.result()
                }, o.centroid = function(t) {
                    return R(t, n(Bn)), Bn.result()
                }, o.projection = function(e) {
                    return arguments.length ? (n = null == e ? (t = null, Je) : (t = e).stream, o) : t
                }, o.context = function(t) {
                    return arguments.length ? (r = null == t ? (e = null, new Jn) : new Un(e = t), "function" !== typeof i && r.pointRadius(i), o) : e
                }, o.pointRadius = function(t) {
                    return arguments.length ? (i = "function" === typeof t ? t : (r.pointRadius(+t), +t), o) : i
                }, o.projection(t).context(e)
            }

            function er(t, e, n, r) {
                return function(i, o) {
                    var a, s, u, c = e(o),
                        l = i.invert(r[0], r[1]),
                        f = le(),
                        h = e(f),
                        d = !1,
                        p = {
                            point: g,
                            lineStart: v,
                            lineEnd: m,
                            polygonStart: function() {
                                p.point = b, p.lineStart = w, p.lineEnd = _, s = [], a = []
                            },
                            polygonEnd: function() {
                                p.point = g, p.lineStart = v, p.lineEnd = m, s = me(s);
                                var t = Se(a, l);
                                s.length ? (d || (o.polygonStart(), d = !0), de(s, rr, t, n, o)) : t && (d || (o.polygonStart(), d = !0), o.lineStart(), n(null, null, 1, o), o.lineEnd()), d && (o.polygonEnd(), d = !1), s = a = null
                            },
                            sphere: function() {
                                o.polygonStart(), o.lineStart(), n(null, null, 1, o), o.lineEnd(), o.polygonEnd()
                            }
                        };

                    function g(e, n) {
                        var r = i(e, n);
                        t(e = r[0], n = r[1]) && o.point(e, n)
                    }

                    function y(t, e) {
                        var n = i(t, e);
                        c.point(n[0], n[1])
                    }

                    function v() {
                        p.point = y, c.lineStart()
                    }

                    function m() {
                        p.point = g, c.lineEnd()
                    }

                    function b(t, e) {
                        u.push([t, e]);
                        var n = i(t, e);
                        h.point(n[0], n[1])
                    }

                    function w() {
                        h.lineStart(), u = []
                    }

                    function _() {
                        b(u[0][0], u[0][1]), h.lineEnd();
                        var t, e, n, r, i = h.clean(),
                            c = f.result(),
                            l = c.length;
                        if (u.pop(), a.push(u), u = null, l)
                            if (1 & i) {
                                if ((e = (n = c[0]).length - 1) > 0) {
                                    for (d || (o.polygonStart(), d = !0), o.lineStart(), t = 0; t < e; ++t) o.point((r = n[t])[0], r[1]);
                                    o.lineEnd()
                                }
                            } else l > 1 && 2 & i && c.push(c.pop().concat(c.shift())), s.push(c.filter(nr))
                    }
                    return p
                }
            }

            function nr(t) {
                return t.length > 1
            }

            function rr(t, e) {
                return ((t = t.x)[0] < 0 ? t[1] - c - s : c - t[1]) - ((e = e.x)[0] < 0 ? e[1] - c - s : c - e[1])
            }
            Jn.prototype = {
                _radius: 4.5,
                _circle: Qn(4.5),
                pointRadius: function(t) {
                    return (t = +t) !== this._radius && (this._radius = t, this._circle = null), this
                },
                polygonStart: function() {
                    this._line = 0
                },
                polygonEnd: function() {
                    this._line = NaN
                },
                lineStart: function() {
                    this._point = 0
                },
                lineEnd: function() {
                    0 === this._line && this._string.push("Z"), this._point = NaN
                },
                point: function(t, e) {
                    switch (this._point) {
                        case 0:
                            this._string.push("M", t, ",", e), this._point = 1;
                            break;
                        case 1:
                            this._string.push("L", t, ",", e);
                            break;
                        default:
                            null == this._circle && (this._circle = Qn(this._radius)), this._string.push("M", t, ",", e, this._circle)
                    }
                },
                result: function() {
                    if (this._string.length) {
                        var t = this._string.join("");
                        return this._string = [], t
                    }
                    return null
                }
            };
            var ir = er((function() {
                return !0
            }), (function(t) {
                var e, n = NaN,
                    r = NaN,
                    i = NaN;
                return {
                    lineStart: function() {
                        t.lineStart(), e = 1
                    },
                    point: function(o, a) {
                        var l = o > 0 ? u : -u,
                            f = p(o - n);
                        p(f - u) < s ? (t.point(n, r = (r + a) / 2 > 0 ? c : -c), t.point(i, r), t.lineEnd(), t.lineStart(), t.point(l, r), t.point(o, r), e = 0) : i !== l && f >= u && (p(n - i) < s && (n -= i * s), p(o - l) < s && (o -= l * s), r = function(t, e, n, r) {
                            var i, o, a = P(t - n);
                            return p(a) > s ? g((P(e) * (o = v(r)) * P(n) - P(r) * (i = v(e)) * P(t)) / (i * o * a)) : (e + r) / 2
                        }(n, r, o, a), t.point(i, r), t.lineEnd(), t.lineStart(), t.point(l, r), e = 0), t.point(n = o, r = a), i = l
                    },
                    lineEnd: function() {
                        t.lineEnd(), n = r = NaN
                    },
                    clean: function() {
                        return 2 - e
                    }
                }
            }), (function(t, e, n, r) {
                var i;
                if (null == t) i = n * c, r.point(-u, i), r.point(0, i), r.point(u, i), r.point(u, 0), r.point(u, -i), r.point(0, -i), r.point(-u, -i), r.point(-u, 0), r.point(-u, i);
                else if (p(t[0] - e[0]) > s) {
                    var o = t[0] < e[0] ? u : -u;
                    i = n * o / 2, r.point(-o, i), r.point(0, i), r.point(o, i)
                } else r.point(e[0], e[1])
            }), [-u, -c]);

            function or(t, e) {
                var n = v(t),
                    r = n > 0,
                    i = p(n) > s;

                function o(t, e) {
                    return v(t) * v(e) > n
                }

                function a(t, e, r) {
                    var i = [1, 0, 0],
                        o = J(X(t), X(e)),
                        a = K(o, o),
                        c = o[0],
                        l = a - c * c;
                    if (!l) return !r && t;
                    var f = n * a / l,
                        h = -n * c / l,
                        d = J(i, o),
                        g = tt(i, f);
                    Q(g, tt(o, h));
                    var y = d,
                        v = K(g, y),
                        m = K(y, y),
                        b = v * v - m * (K(g, g) - 1);
                    if (!(b < 0)) {
                        var w = x(b),
                            _ = tt(y, (-v - w) / m);
                        if (Q(_, g), _ = $(_), !r) return _;
                        var P, E = t[0],
                            S = e[0],
                            O = t[1],
                            T = e[1];
                        S < E && (P = E, E = S, S = P);
                        var M = S - E,
                            C = p(M - u) < s;
                        if (!C && T < O && (P = O, O = T, T = P), C || M < s ? C ? O + T > 0 ^ _[1] < (p(_[0] - E) < s ? O : T) : O <= _[1] && _[1] <= T : M > u ^ (E <= _[0] && _[0] <= S)) {
                            var A = tt(y, (-v + w) / m);
                            return Q(A, g), [_, $(A)]
                        }
                    }
                }

                function c(e, n) {
                    var i = r ? t : u - t,
                        o = 0;
                    return e < -i ? o |= 1 : e > i && (o |= 2), n < -i ? o |= 4 : n > i && (o |= 8), o
                }
                return er(o, (function(t) {
                    var e, n, l, f, h;
                    return {
                        lineStart: function() {
                            f = l = !1, h = 1
                        },
                        point: function(d, p) {
                            var g, y = [d, p],
                                v = o(d, p),
                                m = r ? v ? 0 : c(d, p) : v ? c(d + (d < 0 ? u : -u), p) : 0;
                            if (!e && (f = l = v) && t.lineStart(), v !== l && (!(g = a(e, y)) || fe(e, g) || fe(y, g)) && (y[0] += s, y[1] += s, v = o(y[0], y[1])), v !== l) h = 0, v ? (t.lineStart(), g = a(y, e), t.point(g[0], g[1])) : (g = a(e, y), t.point(g[0], g[1]), t.lineEnd()), e = g;
                            else if (i && e && r ^ v) {
                                var b;
                                m & n || !(b = a(y, e, !0)) || (h = 0, r ? (t.lineStart(), t.point(b[0][0], b[0][1]), t.point(b[1][0], b[1][1]), t.lineEnd()) : (t.point(b[1][0], b[1][1]), t.lineEnd(), t.lineStart(), t.point(b[0][0], b[0][1])))
                            }!v || e && fe(e, y) || t.point(y[0], y[1]), e = y, l = v, n = m
                        },
                        lineEnd: function() {
                            l && t.lineEnd(), e = null
                        },
                        clean: function() {
                            return h | (f && l) << 1
                        }
                    }
                }), (function(n, r, i, o) {
                    se(o, t, e, i, n, r)
                }), r ? [0, -t] : [-u, t - u])
            }

            function ar(t) {
                return {
                    stream: sr(t)
                }
            }

            function sr(t) {
                return function(e) {
                    var n = new ur;
                    for (var r in t) n[r] = t[r];
                    return n.stream = e, n
                }
            }

            function ur() {}

            function cr(t, e, n) {
                var r = e[1][0] - e[0][0],
                    i = e[1][1] - e[0][1],
                    o = t.clipExtent && t.clipExtent();
                t.scale(150).translate([0, 0]), null != o && t.clipExtent(null), R(n, t.stream(wn));
                var a = wn.result(),
                    s = Math.min(r / (a[1][0] - a[0][0]), i / (a[1][1] - a[0][1])),
                    u = +e[0][0] + (r - s * (a[1][0] + a[0][0])) / 2,
                    c = +e[0][1] + (i - s * (a[1][1] + a[0][1])) / 2;
                return null != o && t.clipExtent(o), t.scale(150 * s).translate([u, c])
            }

            function lr(t, e, n) {
                return cr(t, [
                    [0, 0], e
                ], n)
            }
            ur.prototype = {
                constructor: ur,
                point: function(t, e) {
                    this.stream.point(t, e)
                },
                sphere: function() {
                    this.stream.sphere()
                },
                lineStart: function() {
                    this.stream.lineStart()
                },
                lineEnd: function() {
                    this.stream.lineEnd()
                },
                polygonStart: function() {
                    this.stream.polygonStart()
                },
                polygonEnd: function() {
                    this.stream.polygonEnd()
                }
            };
            var fr = v(30 * d);

            function hr(t, e) {
                return +e ? function(t, e) {
                    function n(r, i, o, a, u, c, l, f, h, d, g, v, m, b) {
                        var w = l - r,
                            _ = f - i,
                            P = w * w + _ * _;
                        if (P > 4 * e && m--) {
                            var E = a + d,
                                S = u + g,
                                O = c + v,
                                M = x(E * E + S * S + O * O),
                                C = T(O /= M),
                                A = p(p(O) - 1) < s || p(o - h) < s ? (o + h) / 2 : y(S, E),
                                k = t(A, C),
                                I = k[0],
                                j = k[1],
                                L = I - r,
                                R = j - i,
                                D = _ * L - w * R;
                            (D * D / P > e || p((w * L + _ * R) / P - .5) > .3 || a * d + u * g + c * v < fr) && (n(r, i, o, a, u, c, I, j, A, E /= M, S /= M, O, m, b), b.point(I, j), n(I, j, A, E, S, O, l, f, h, d, g, v, m, b))
                        }
                    }
                    return function(e) {
                        var r, i, o, a, s, u, c, l, f, h, d, p, g = {
                            point: y,
                            lineStart: v,
                            lineEnd: b,
                            polygonStart: function() {
                                e.polygonStart(), g.lineStart = w
                            },
                            polygonEnd: function() {
                                e.polygonEnd(), g.lineStart = v
                            }
                        };

                        function y(n, r) {
                            n = t(n, r), e.point(n[0], n[1])
                        }

                        function v() {
                            l = NaN, g.point = m, e.lineStart()
                        }

                        function m(r, i) {
                            var o = X([r, i]),
                                a = t(r, i);
                            n(l, f, c, h, d, p, l = a[0], f = a[1], c = r, h = o[0], d = o[1], p = o[2], 16, e), e.point(l, f)
                        }

                        function b() {
                            g.point = y, e.lineEnd()
                        }

                        function w() {
                            v(), g.point = _, g.lineEnd = P
                        }

                        function _(t, e) {
                            m(r = t, e), i = l, o = f, a = h, s = d, u = p, g.point = m
                        }

                        function P() {
                            n(l, f, c, h, d, p, i, o, r, a, s, u, 16, e), g.lineEnd = b, b()
                        }
                        return g
                    }
                }(t, e) : function(t) {
                    return sr({
                        point: function(e, n) {
                            e = t(e, n), this.stream.point(e[0], e[1])
                        }
                    })
                }(t)
            }
            var dr = sr({
                point: function(t, e) {
                    this.stream.point(t * d, e * d)
                }
            });

            function pr(t) {
                return gr((function() {
                    return t
                }))()
            }

            function gr(t) {
                var e, n, r, i, o, a, s, u, c, l, f = 150,
                    p = 480,
                    g = 250,
                    y = 0,
                    v = 0,
                    m = 0,
                    b = 0,
                    w = 0,
                    _ = null,
                    P = ir,
                    E = null,
                    S = Je,
                    O = .5,
                    T = hr(A, O);

                function M(t) {
                    return [(t = o(t[0] * d, t[1] * d))[0] * f + n, r - t[1] * f]
                }

                function C(t) {
                    return (t = o.invert((t[0] - n) / f, (r - t[1]) / f)) && [t[0] * h, t[1] * h]
                }

                function A(t, i) {
                    return [(t = e(t, i))[0] * f + n, r - t[1] * f]
                }

                function k() {
                    o = te(i = ne(m, b, w), e);
                    var t = e(y, v);
                    return n = p - t[0] * f, r = g + t[1] * f, I()
                }

                function I() {
                    return c = l = null, M
                }
                return M.stream = function(t) {
                        return c && l === t ? c : c = dr(P(i, T(S(l = t))))
                    }, M.clipAngle = function(t) {
                        return arguments.length ? (P = +t ? or(_ = t * d, 6 * d) : (_ = null, ir), I()) : _ * h
                    }, M.clipExtent = function(t) {
                        return arguments.length ? (S = null == t ? (E = a = s = u = null, Je) : Pe(E = +t[0][0], a = +t[0][1], s = +t[1][0], u = +t[1][1]), I()) : null == E ? null : [
                            [E, a],
                            [s, u]
                        ]
                    }, M.scale = function(t) {
                        return arguments.length ? (f = +t, k()) : f
                    }, M.translate = function(t) {
                        return arguments.length ? (p = +t[0], g = +t[1], k()) : [p, g]
                    }, M.center = function(t) {
                        return arguments.length ? (y = t[0] % 360 * d, v = t[1] % 360 * d, k()) : [y * h, v * h]
                    }, M.rotate = function(t) {
                        return arguments.length ? (m = t[0] % 360 * d, b = t[1] % 360 * d, w = t.length > 2 ? t[2] % 360 * d : 0, k()) : [m * h, b * h, w * h]
                    }, M.precision = function(t) {
                        return arguments.length ? (T = hr(A, O = t * t), I()) : x(O)
                    }, M.fitExtent = function(t, e) {
                        return cr(M, t, e)
                    }, M.fitSize = function(t, e) {
                        return lr(M, t, e)
                    },
                    function() {
                        return e = t.apply(this, arguments), M.invert = e.invert && C, k()
                    }
            }

            function yr(t) {
                var e = 0,
                    n = u / 3,
                    r = gr(t),
                    i = r(e, n);
                return i.parallels = function(t) {
                    return arguments.length ? r(e = t[0] * d, n = t[1] * d) : [e * h, n * h]
                }, i
            }

            function vr(t, e) {
                var n = P(t),
                    r = (n + P(e)) / 2;
                if (p(r) < s) return function(t) {
                    var e = v(t);

                    function n(t, n) {
                        return [t * e, P(n) / e]
                    }
                    return n.invert = function(t, n) {
                        return [t / e, T(n * e)]
                    }, n
                }(t);
                var i = 1 + n * (2 * r - n),
                    o = x(i) / r;

                function a(t, e) {
                    var n = x(i - 2 * r * P(e)) / r;
                    return [n * P(t *= r), o - n * v(t)]
                }
                return a.invert = function(t, e) {
                    var n = o - e;
                    return [y(t, p(n)) / r * E(n), T((i - (t * t + n * n) * r * r) / (2 * r))]
                }, a
            }

            function mr() {
                return yr(vr).scale(155.424).center([0, 33.6442])
            }

            function br() {
                return mr().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-.6, 38.7])
            }

            function wr() {
                var t, e, n, r, i, o, a = br(),
                    u = mr().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
                    c = mr().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
                    l = {
                        point: function(t, e) {
                            o = [t, e]
                        }
                    };

                function f(t) {
                    var e = t[0],
                        a = t[1];
                    return o = null, n.point(e, a), o || (r.point(e, a), o) || (i.point(e, a), o)
                }

                function h() {
                    return t = e = null, f
                }
                return f.invert = function(t) {
                    var e = a.scale(),
                        n = a.translate(),
                        r = (t[0] - n[0]) / e,
                        i = (t[1] - n[1]) / e;
                    return (i >= .12 && i < .234 && r >= -.425 && r < -.214 ? u : i >= .166 && i < .234 && r >= -.214 && r < -.115 ? c : a).invert(t)
                }, f.stream = function(n) {
                    return t && e === n ? t : t = function(t) {
                        var e = t.length;
                        return {
                            point: function(n, r) {
                                for (var i = -1; ++i < e;) t[i].point(n, r)
                            },
                            sphere: function() {
                                for (var n = -1; ++n < e;) t[n].sphere()
                            },
                            lineStart: function() {
                                for (var n = -1; ++n < e;) t[n].lineStart()
                            },
                            lineEnd: function() {
                                for (var n = -1; ++n < e;) t[n].lineEnd()
                            },
                            polygonStart: function() {
                                for (var n = -1; ++n < e;) t[n].polygonStart()
                            },
                            polygonEnd: function() {
                                for (var n = -1; ++n < e;) t[n].polygonEnd()
                            }
                        }
                    }([a.stream(e = n), u.stream(n), c.stream(n)])
                }, f.precision = function(t) {
                    return arguments.length ? (a.precision(t), u.precision(t), c.precision(t), h()) : a.precision()
                }, f.scale = function(t) {
                    return arguments.length ? (a.scale(t), u.scale(.35 * t), c.scale(t), f.translate(a.translate())) : a.scale()
                }, f.translate = function(t) {
                    if (!arguments.length) return a.translate();
                    var e = a.scale(),
                        o = +t[0],
                        f = +t[1];
                    return n = a.translate(t).clipExtent([
                        [o - .455 * e, f - .238 * e],
                        [o + .455 * e, f + .238 * e]
                    ]).stream(l), r = u.translate([o - .307 * e, f + .201 * e]).clipExtent([
                        [o - .425 * e + s, f + .12 * e + s],
                        [o - .214 * e - s, f + .234 * e - s]
                    ]).stream(l), i = c.translate([o - .205 * e, f + .212 * e]).clipExtent([
                        [o - .214 * e + s, f + .166 * e + s],
                        [o - .115 * e - s, f + .234 * e - s]
                    ]).stream(l), h()
                }, f.fitExtent = function(t, e) {
                    return cr(f, t, e)
                }, f.fitSize = function(t, e) {
                    return lr(f, t, e)
                }, f.scale(1070)
            }

            function _r(t) {
                return function(e, n) {
                    var r = v(e),
                        i = v(n),
                        o = t(r * i);
                    return [o * i * P(e), o * P(n)]
                }
            }

            function Pr(t) {
                return function(e, n) {
                    var r = x(e * e + n * n),
                        i = t(r),
                        o = P(i),
                        a = v(i);
                    return [y(e * o, r * a), T(r && n * o / r)]
                }
            }
            var Er = _r((function(t) {
                return x(2 / (1 + t))
            }));

            function xr() {
                return pr(Er).scale(124.75).clipAngle(179.999)
            }
            Er.invert = Pr((function(t) {
                return 2 * T(t / 2)
            }));
            var Sr = _r((function(t) {
                return (t = O(t)) && t / P(t)
            }));

            function Or() {
                return pr(Sr).scale(79.4188).clipAngle(179.999)
            }

            function Tr(t, e) {
                return [t, w(S((c + e) / 2))]
            }

            function Mr() {
                return Cr(Tr).scale(961 / f)
            }

            function Cr(t) {
                var e, n, r, i = pr(t),
                    o = i.center,
                    a = i.scale,
                    s = i.translate,
                    c = i.clipExtent,
                    l = null;

                function f() {
                    var o = u * a(),
                        s = i(ae(i.rotate()).invert([0, 0]));
                    return c(null == l ? [
                        [s[0] - o, s[1] - o],
                        [s[0] + o, s[1] + o]
                    ] : t === Tr ? [
                        [Math.max(s[0] - o, l), e],
                        [Math.min(s[0] + o, n), r]
                    ] : [
                        [l, Math.max(s[1] - o, e)],
                        [n, Math.min(s[1] + o, r)]
                    ])
                }
                return i.scale = function(t) {
                    return arguments.length ? (a(t), f()) : a()
                }, i.translate = function(t) {
                    return arguments.length ? (s(t), f()) : s()
                }, i.center = function(t) {
                    return arguments.length ? (o(t), f()) : o()
                }, i.clipExtent = function(t) {
                    return arguments.length ? (null == t ? l = e = n = r = null : (l = +t[0][0], e = +t[0][1], n = +t[1][0], r = +t[1][1]), f()) : null == l ? null : [
                        [l, e],
                        [n, r]
                    ]
                }, f()
            }

            function Ar(t) {
                return S((c + t) / 2)
            }

            function kr(t, e) {
                var n = v(t),
                    r = t === e ? P(t) : w(n / v(e)) / w(Ar(e) / Ar(t)),
                    i = n * _(Ar(t), r) / r;
                if (!r) return Tr;

                function o(t, e) {
                    i > 0 ? e < -c + s && (e = -c + s) : e > c - s && (e = c - s);
                    var n = i / _(Ar(e), r);
                    return [n * P(r * t), i - n * v(r * t)]
                }
                return o.invert = function(t, e) {
                    var n = i - e,
                        o = E(r) * x(t * t + n * n);
                    return [y(t, p(n)) / r * E(n), 2 * g(_(i / o, 1 / r)) - c]
                }, o
            }

            function Ir() {
                return yr(kr).scale(109.5).parallels([30, 30])
            }

            function jr(t, e) {
                return [t, e]
            }

            function Lr() {
                return pr(jr).scale(152.63)
            }

            function Rr(t, e) {
                var n = v(t),
                    r = t === e ? P(t) : (n - v(e)) / (e - t),
                    i = n / r + t;
                if (p(r) < s) return jr;

                function o(t, e) {
                    var n = i - e,
                        o = r * t;
                    return [n * P(o), i - n * v(o)]
                }
                return o.invert = function(t, e) {
                    var n = i - e;
                    return [y(t, p(n)) / r * E(n), i - E(r) * x(t * t + n * n)]
                }, o
            }

            function Dr() {
                return yr(Rr).scale(131.154).center([0, 13.9389])
            }

            function Fr(t, e) {
                var n = v(e),
                    r = v(t) * n;
                return [n * P(t) / r, P(e) / r]
            }

            function Nr() {
                return pr(Fr).scale(144.049).clipAngle(60)
            }

            function zr(t, e, n, r) {
                return 1 === t && 1 === e && 0 === n && 0 === r ? Je : sr({
                    point: function(i, o) {
                        this.stream.point(i * t + n, o * e + r)
                    }
                })
            }

            function Br() {
                var t, e, n, r, i, o, a = 1,
                    s = 0,
                    u = 0,
                    c = 1,
                    l = 1,
                    f = Je,
                    h = null,
                    d = Je;

                function p() {
                    return r = i = null, o
                }
                return o = {
                    stream: function(t) {
                        return r && i === t ? r : r = f(d(i = t))
                    },
                    clipExtent: function(r) {
                        return arguments.length ? (d = null == r ? (h = t = e = n = null, Je) : Pe(h = +r[0][0], t = +r[0][1], e = +r[1][0], n = +r[1][1]), p()) : null == h ? null : [
                            [h, t],
                            [e, n]
                        ]
                    },
                    scale: function(t) {
                        return arguments.length ? (f = zr((a = +t) * c, a * l, s, u), p()) : a
                    },
                    translate: function(t) {
                        return arguments.length ? (f = zr(a * c, a * l, s = +t[0], u = +t[1]), p()) : [s, u]
                    },
                    reflectX: function(t) {
                        return arguments.length ? (f = zr(a * (c = t ? -1 : 1), a * l, s, u), p()) : c < 0
                    },
                    reflectY: function(t) {
                        return arguments.length ? (f = zr(a * c, a * (l = t ? -1 : 1), s, u), p()) : l < 0
                    },
                    fitExtent: function(t, e) {
                        return cr(o, t, e)
                    },
                    fitSize: function(t, e) {
                        return lr(o, t, e)
                    }
                }
            }

            function Ur(t, e) {
                var n = e * e,
                    r = n * n;
                return [t * (.8707 - .131979 * n + r * (r * (.003971 * n - .001529 * r) - .013791)), e * (1.007226 + n * (.015085 + r * (.028874 * n - .044475 - .005916 * r)))]
            }

            function Gr() {
                return pr(Ur).scale(175.295)
            }

            function Zr(t, e) {
                return [v(e) * P(t), P(e)]
            }

            function Vr() {
                return pr(Zr).scale(249.5).clipAngle(90.000001)
            }

            function Hr(t, e) {
                var n = v(e),
                    r = 1 + v(t) * n;
                return [n * P(t) / r, P(e) / r]
            }

            function Wr() {
                return pr(Hr).scale(250).clipAngle(142)
            }

            function Yr(t, e) {
                return [w(S((c + e) / 2)), -t]
            }

            function qr() {
                var t = Cr(Yr),
                    e = t.center,
                    n = t.rotate;
                return t.center = function(t) {
                    return arguments.length ? e([-t[1], t[0]]) : [(t = e())[1], -t[0]]
                }, t.rotate = function(t) {
                    return arguments.length ? n([t[0], t[1], t.length > 2 ? t[2] + 90 : 90]) : [(t = n())[0], t[1], t[2] - 90]
                }, n([0, 0, 90]).scale(159.155)
            }
            Sr.invert = Pr((function(t) {
                return t
            })), Tr.invert = function(t, e) {
                return [t, 2 * g(b(e)) - c]
            }, jr.invert = jr, Fr.invert = Pr(g), Ur.invert = function(t, e) {
                var n, r = e,
                    i = 25;
                do {
                    var o = r * r,
                        a = o * o;
                    r -= n = (r * (1.007226 + o * (.015085 + a * (.028874 * o - .044475 - .005916 * a))) - e) / (1.007226 + o * (.045255 + a * (.259866 * o - .311325 - .005916 * 11 * a)))
                } while (p(n) > s && --i > 0);
                return [t / (.8707 + (o = r * r) * (o * (o * o * o * (.003971 - .001529 * o) - .013791) - .131979)), r]
            }, Zr.invert = Pr(T), Hr.invert = Pr((function(t) {
                return 2 * g(t)
            })), Yr.invert = function(t, e) {
                return [-e, 2 * g(b(t)) - c]
            }
        },
        78230: function(t, e, n) {
            "use strict";
            var r = this && this.__importDefault || function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(n(9705)),
                o = n(84102);
            e.default = function(t, e) {
                void 0 === e && (e = {});
                var n = i.default(t),
                    r = (n[0] + n[2]) / 2,
                    a = (n[1] + n[3]) / 2;
                return o.point([r, a], e.properties, e)
            }
        },
        66338: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(31540),
                i = n(84102);
            e.default = function(t, e) {
                void 0 === e && (e = {});
                var n = 0,
                    o = 0,
                    a = 0;
                return r.coordEach(t, (function(t) {
                    n += t[0], o += t[1], a++
                }), !0), i.point([n / a, o / a], e.properties)
            }
        },
        90265: function(t, e, n) {
            "use strict";
            var r = this && this.__importDefault || function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(n(93737)),
                o = n(84102);
            e.default = function(t, e, n) {
                void 0 === n && (n = {});
                for (var r = n.steps || 64, a = n.properties ? n.properties : !Array.isArray(t) && "Feature" === t.type && t.properties ? t.properties : {}, s = [], u = 0; u < r; u++) s.push(i.default(t, e, -360 * u / r, n).geometry.coordinates);
                return s.push(s[0]), o.polygon([s], a)
            }
        },
        76565: function(t, e) {
            "use strict";

            function n(t) {
                var e = {
                    type: "Feature"
                };
                return Object.keys(t).forEach((function(n) {
                    switch (n) {
                        case "type":
                        case "properties":
                        case "geometry":
                            return;
                        default:
                            e[n] = t[n]
                    }
                })), e.properties = r(t.properties), e.geometry = i(t.geometry), e
            }

            function r(t) {
                var e = {};
                return t ? (Object.keys(t).forEach((function(n) {
                    var i = t[n];
                    "object" === typeof i ? null === i ? e[n] = null : Array.isArray(i) ? e[n] = i.map((function(t) {
                        return t
                    })) : e[n] = r(i) : e[n] = i
                })), e) : e
            }

            function i(t) {
                var e = {
                    type: t.type
                };
                return t.bbox && (e.bbox = t.bbox), "GeometryCollection" === t.type ? (e.geometries = t.geometries.map((function(t) {
                    return i(t)
                })), e) : (e.coordinates = o(t.coordinates), e)
            }

            function o(t) {
                var e = t;
                return "object" !== typeof e[0] ? e.slice() : e.map((function(t) {
                    return o(t)
                }))
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = function(t) {
                if (!t) throw new Error("geojson is required");
                switch (t.type) {
                    case "Feature":
                        return n(t);
                    case "FeatureCollection":
                        return function(t) {
                            var e = {
                                type: "FeatureCollection"
                            };
                            return Object.keys(t).forEach((function(n) {
                                switch (n) {
                                    case "type":
                                    case "features":
                                        return;
                                    default:
                                        e[n] = t[n]
                                }
                            })), e.features = t.features.map((function(t) {
                                return n(t)
                            })), e
                        }(t);
                    case "Point":
                    case "LineString":
                    case "Polygon":
                    case "MultiPoint":
                    case "MultiLineString":
                    case "MultiPolygon":
                    case "GeometryCollection":
                        return i(t);
                    default:
                        throw new Error("unknown GeoJSON type")
                }
            }
        },
        93737: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102),
                i = n(10611);
            e.default = function(t, e, n, o) {
                void 0 === o && (o = {});
                var a = i.getCoord(t),
                    s = r.degreesToRadians(a[0]),
                    u = r.degreesToRadians(a[1]),
                    c = r.degreesToRadians(n),
                    l = r.lengthToRadians(e, o.units),
                    f = Math.asin(Math.sin(u) * Math.cos(l) + Math.cos(u) * Math.sin(l) * Math.cos(c)),
                    h = s + Math.atan2(Math.sin(c) * Math.sin(l) * Math.cos(u), Math.cos(l) - Math.sin(u) * Math.sin(f)),
                    d = r.radiansToDegrees(h),
                    p = r.radiansToDegrees(f);
                return r.point([d, p], o.properties)
            }
        },
        68727: function(t, e, n) {
            "use strict";
            var r, i = (r = n(32676)) && "object" === typeof r && "default" in r ? r.default : r,
                o = n(84102),
                a = n(10611);
            t.exports = function(t, e) {
                var n = a.getGeom(t),
                    r = a.getGeom(e),
                    s = t.properties || {},
                    u = i.difference(n.coordinates, r.coordinates);
                return 0 === u.length ? null : 1 === u.length ? o.polygon(u[0], s) : o.multiPolygon(u, s)
            }
        },
        31013: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(10611),
                i = n(84102);
            e.default = function(t, e, n) {
                void 0 === n && (n = {});
                var o = r.getCoord(t),
                    a = r.getCoord(e),
                    s = i.degreesToRadians(a[1] - o[1]),
                    u = i.degreesToRadians(a[0] - o[0]),
                    c = i.degreesToRadians(o[1]),
                    l = i.degreesToRadians(a[1]),
                    f = Math.pow(Math.sin(s / 2), 2) + Math.pow(Math.sin(u / 2), 2) * Math.cos(c) * Math.cos(l);
                return i.radiansToLength(2 * Math.atan2(Math.sqrt(f), Math.sqrt(1 - f)), n.units)
            }
        },
        61211: function(t, e, n) {
            "use strict";

            function r(t) {
                return t && "object" === typeof t && "default" in t ? t.default : t
            }
            var i = n(84102),
                o = r(n(62054)),
                a = r(n(90067)),
                s = n(10611);

            function u(t) {
                var e = t * Math.PI / 180;
                return Math.tan(e)
            }
            t.exports = function(t, e, n, r) {
                var c = (r = r || {}).steps || 64,
                    l = r.units || "kilometers",
                    f = r.angle || 0,
                    h = r.pivot || t,
                    d = r.properties || t.properties || {};
                if (!t) throw new Error("center is required");
                if (!e) throw new Error("xSemiAxis is required");
                if (!n) throw new Error("ySemiAxis is required");
                if (!i.isObject(r)) throw new Error("options must be an object");
                if (!i.isNumber(c)) throw new Error("steps must be a number");
                if (!i.isNumber(f)) throw new Error("angle must be a number");
                var p = s.getCoord(t);
                if ("degrees" === l) var g = i.degreesToRadians(f);
                else e = o(t, e, 90, {
                    units: l
                }), n = o(t, n, 0, {
                    units: l
                }), e = s.getCoord(e)[0] - p[0], n = s.getCoord(n)[1] - p[1];
                for (var y = [], v = 0; v < c; v += 1) {
                    var m = -360 * v / c,
                        b = e * n / Math.sqrt(Math.pow(n, 2) + Math.pow(e, 2) * Math.pow(u(m), 2)),
                        w = e * n / Math.sqrt(Math.pow(e, 2) + Math.pow(n, 2) / Math.pow(u(m), 2));
                    if (m < -90 && m >= -270 && (b = -b), m < -180 && m >= -360 && (w = -w), "degrees" === l) {
                        var _ = b * Math.cos(g) + w * Math.sin(g),
                            P = w * Math.cos(g) - b * Math.sin(g);
                        b = _, w = P
                    }
                    y.push([b + p[0], w + p[1]])
                }
                return y.push(y[0]), "degrees" === l ? i.polygon([y], d) : a(i.polygon([y], d), f, {
                    pivot: h
                })
            }
        },
        84102: function(t, e) {
            "use strict";

            function n(t, e, n) {
                void 0 === n && (n = {});
                var r = {
                    type: "Feature"
                };
                return (0 === n.id || n.id) && (r.id = n.id), n.bbox && (r.bbox = n.bbox), r.properties = e || {}, r.geometry = t, r
            }

            function r(t, e, r) {
                if (void 0 === r && (r = {}), !t) throw new Error("coordinates is required");
                if (!Array.isArray(t)) throw new Error("coordinates must be an Array");
                if (t.length < 2) throw new Error("coordinates must be at least 2 numbers long");
                if (!d(t[0]) || !d(t[1])) throw new Error("coordinates must contain numbers");
                return n({
                    type: "Point",
                    coordinates: t
                }, e, r)
            }

            function i(t, e, r) {
                void 0 === r && (r = {});
                for (var i = 0, o = t; i < o.length; i++) {
                    var a = o[i];
                    if (a.length < 4) throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");
                    for (var s = 0; s < a[a.length - 1].length; s++)
                        if (a[a.length - 1][s] !== a[0][s]) throw new Error("First and last Position are not equivalent.")
                }
                return n({
                    type: "Polygon",
                    coordinates: t
                }, e, r)
            }

            function o(t, e, r) {
                if (void 0 === r && (r = {}), t.length < 2) throw new Error("coordinates must be an array of two or more positions");
                return n({
                    type: "LineString",
                    coordinates: t
                }, e, r)
            }

            function a(t, e) {
                void 0 === e && (e = {});
                var n = {
                    type: "FeatureCollection"
                };
                return e.id && (n.id = e.id), e.bbox && (n.bbox = e.bbox), n.features = t, n
            }

            function s(t, e, r) {
                return void 0 === r && (r = {}), n({
                    type: "MultiLineString",
                    coordinates: t
                }, e, r)
            }

            function u(t, e, r) {
                return void 0 === r && (r = {}), n({
                    type: "MultiPoint",
                    coordinates: t
                }, e, r)
            }

            function c(t, e, r) {
                return void 0 === r && (r = {}), n({
                    type: "MultiPolygon",
                    coordinates: t
                }, e, r)
            }

            function l(t, n) {
                void 0 === n && (n = "kilometers");
                var r = e.factors[n];
                if (!r) throw new Error(n + " units is invalid");
                return t * r
            }

            function f(t, n) {
                void 0 === n && (n = "kilometers");
                var r = e.factors[n];
                if (!r) throw new Error(n + " units is invalid");
                return t / r
            }

            function h(t) {
                return 180 * (t % (2 * Math.PI)) / Math.PI
            }

            function d(t) {
                return !isNaN(t) && null !== t && !Array.isArray(t)
            }
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.earthRadius = 6371008.8, e.factors = {
                centimeters: 100 * e.earthRadius,
                centimetres: 100 * e.earthRadius,
                degrees: e.earthRadius / 111325,
                feet: 3.28084 * e.earthRadius,
                inches: 39.37 * e.earthRadius,
                kilometers: e.earthRadius / 1e3,
                kilometres: e.earthRadius / 1e3,
                meters: e.earthRadius,
                metres: e.earthRadius,
                miles: e.earthRadius / 1609.344,
                millimeters: 1e3 * e.earthRadius,
                millimetres: 1e3 * e.earthRadius,
                nauticalmiles: e.earthRadius / 1852,
                radians: 1,
                yards: e.earthRadius / 1.0936
            }, e.unitsFactors = {
                centimeters: 100,
                centimetres: 100,
                degrees: 1 / 111325,
                feet: 3.28084,
                inches: 39.37,
                kilometers: .001,
                kilometres: .001,
                meters: 1,
                metres: 1,
                miles: 1 / 1609.344,
                millimeters: 1e3,
                millimetres: 1e3,
                nauticalmiles: 1 / 1852,
                radians: 1 / e.earthRadius,
                yards: 1 / 1.0936
            }, e.areaFactors = {
                acres: 247105e-9,
                centimeters: 1e4,
                centimetres: 1e4,
                feet: 10.763910417,
                hectares: 1e-4,
                inches: 1550.003100006,
                kilometers: 1e-6,
                kilometres: 1e-6,
                meters: 1,
                metres: 1,
                miles: 386e-9,
                millimeters: 1e6,
                millimetres: 1e6,
                yards: 1.195990046
            }, e.feature = n, e.geometry = function(t, e, n) {
                switch (void 0 === n && (n = {}), t) {
                    case "Point":
                        return r(e).geometry;
                    case "LineString":
                        return o(e).geometry;
                    case "Polygon":
                        return i(e).geometry;
                    case "MultiPoint":
                        return u(e).geometry;
                    case "MultiLineString":
                        return s(e).geometry;
                    case "MultiPolygon":
                        return c(e).geometry;
                    default:
                        throw new Error(t + " is invalid")
                }
            }, e.point = r, e.points = function(t, e, n) {
                return void 0 === n && (n = {}), a(t.map((function(t) {
                    return r(t, e)
                })), n)
            }, e.polygon = i, e.polygons = function(t, e, n) {
                return void 0 === n && (n = {}), a(t.map((function(t) {
                    return i(t, e)
                })), n)
            }, e.lineString = o, e.lineStrings = function(t, e, n) {
                return void 0 === n && (n = {}), a(t.map((function(t) {
                    return o(t, e)
                })), n)
            }, e.featureCollection = a, e.multiLineString = s, e.multiPoint = u, e.multiPolygon = c, e.geometryCollection = function(t, e, r) {
                return void 0 === r && (r = {}), n({
                    type: "GeometryCollection",
                    geometries: t
                }, e, r)
            }, e.round = function(t, e) {
                if (void 0 === e && (e = 0), e && !(e >= 0)) throw new Error("precision must be a positive number");
                var n = Math.pow(10, e || 0);
                return Math.round(t * n) / n
            }, e.radiansToLength = l, e.lengthToRadians = f, e.lengthToDegrees = function(t, e) {
                return h(f(t, e))
            }, e.bearingToAzimuth = function(t) {
                var e = t % 360;
                return e < 0 && (e += 360), e
            }, e.radiansToDegrees = h, e.degreesToRadians = function(t) {
                return t % 360 * Math.PI / 180
            }, e.convertLength = function(t, e, n) {
                if (void 0 === e && (e = "kilometers"), void 0 === n && (n = "kilometers"), !(t >= 0)) throw new Error("length must be a positive number");
                return l(f(t, e), n)
            }, e.convertArea = function(t, n, r) {
                if (void 0 === n && (n = "meters"), void 0 === r && (r = "kilometers"), !(t >= 0)) throw new Error("area must be a positive number");
                var i = e.areaFactors[n];
                if (!i) throw new Error("invalid original units");
                var o = e.areaFactors[r];
                if (!o) throw new Error("invalid final units");
                return t / i * o
            }, e.isNumber = d, e.isObject = function(t) {
                return !!t && t.constructor === Object
            }, e.validateBBox = function(t) {
                if (!t) throw new Error("bbox is required");
                if (!Array.isArray(t)) throw new Error("bbox must be an Array");
                if (4 !== t.length && 6 !== t.length) throw new Error("bbox must be an Array of 4 or 6 numbers");
                t.forEach((function(t) {
                    if (!d(t)) throw new Error("bbox must only contain numbers")
                }))
            }, e.validateId = function(t) {
                if (!t) throw new Error("id is required");
                if (-1 === ["string", "number"].indexOf(typeof t)) throw new Error("id must be a number or a string")
            }
        },
        74170: function(t, e, n) {
            "use strict";
            var r = this && this.__importDefault || function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = n(84102),
                o = n(10611),
                a = r(n(32676));
            e.default = function(t, e, n) {
                void 0 === n && (n = {});
                var r = o.getGeom(t),
                    s = o.getGeom(e),
                    u = a.default.intersection(r.coordinates, s.coordinates);
                return 0 === u.length ? null : 1 === u.length ? i.polygon(u[0], n.properties) : i.multiPolygon(u, n.properties)
            }
        },
        10611: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102);
            e.getCoord = function(t) {
                if (!t) throw new Error("coord is required");
                if (!Array.isArray(t)) {
                    if ("Feature" === t.type && null !== t.geometry && "Point" === t.geometry.type) return t.geometry.coordinates;
                    if ("Point" === t.type) return t.coordinates
                }
                if (Array.isArray(t) && t.length >= 2 && !Array.isArray(t[0]) && !Array.isArray(t[1])) return t;
                throw new Error("coord must be GeoJSON Point or an Array of numbers")
            }, e.getCoords = function(t) {
                if (Array.isArray(t)) return t;
                if ("Feature" === t.type) {
                    if (null !== t.geometry) return t.geometry.coordinates
                } else if (t.coordinates) return t.coordinates;
                throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")
            }, e.containsNumber = function t(e) {
                if (e.length > 1 && r.isNumber(e[0]) && r.isNumber(e[1])) return !0;
                if (Array.isArray(e[0]) && e[0].length) return t(e[0]);
                throw new Error("coordinates must only contain numbers")
            }, e.geojsonType = function(t, e, n) {
                if (!e || !n) throw new Error("type and name required");
                if (!t || t.type !== e) throw new Error("Invalid input to " + n + ": must be a " + e + ", given " + t.type)
            }, e.featureOf = function(t, e, n) {
                if (!t) throw new Error("No feature passed");
                if (!n) throw new Error(".featureOf() requires a name");
                if (!t || "Feature" !== t.type || !t.geometry) throw new Error("Invalid input to " + n + ", Feature with geometry required");
                if (!t.geometry || t.geometry.type !== e) throw new Error("Invalid input to " + n + ": must be a " + e + ", given " + t.geometry.type)
            }, e.collectionOf = function(t, e, n) {
                if (!t) throw new Error("No featureCollection passed");
                if (!n) throw new Error(".collectionOf() requires a name");
                if (!t || "FeatureCollection" !== t.type) throw new Error("Invalid input to " + n + ", FeatureCollection required");
                for (var r = 0, i = t.features; r < i.length; r++) {
                    var o = i[r];
                    if (!o || "Feature" !== o.type || !o.geometry) throw new Error("Invalid input to " + n + ", Feature with geometry required");
                    if (!o.geometry || o.geometry.type !== e) throw new Error("Invalid input to " + n + ": must be a " + e + ", given " + o.geometry.type)
                }
            }, e.getGeom = function(t) {
                return "Feature" === t.type ? t.geometry : t
            }, e.getType = function(t, e) {
                return "FeatureCollection" === t.type ? "FeatureCollection" : "GeometryCollection" === t.type ? "GeometryCollection" : "Feature" === t.type && null !== t.geometry ? t.geometry.type : t.type
            }
        },
        73663: function(t, e, n) {
            "use strict";
            var r = this && this.__importDefault || function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = n(84102),
                o = n(10611),
                a = r(n(54590)),
                s = n(31540),
                u = r(n(51787));

            function c(t, e) {
                var n = o.getCoords(t),
                    r = o.getCoords(e);
                if (2 !== n.length) throw new Error("<intersects> line1 must only contain 2 coordinates");
                if (2 !== r.length) throw new Error("<intersects> line2 must only contain 2 coordinates");
                var a = n[0][0],
                    s = n[0][1],
                    u = n[1][0],
                    c = n[1][1],
                    l = r[0][0],
                    f = r[0][1],
                    h = r[1][0],
                    d = r[1][1],
                    p = (d - f) * (u - a) - (h - l) * (c - s),
                    g = (h - l) * (s - f) - (d - f) * (a - l),
                    y = (u - a) * (s - f) - (c - s) * (a - l);
                if (0 === p) return null;
                var v = g / p,
                    m = y / p;
                if (v >= 0 && v <= 1 && m >= 0 && m <= 1) {
                    var b = a + v * (u - a),
                        w = s + v * (c - s);
                    return i.point([b, w])
                }
                return null
            }
            e.default = function(t, e) {
                var n = {},
                    r = [];
                if ("LineString" === t.type && (t = i.feature(t)), "LineString" === e.type && (e = i.feature(e)), "Feature" === t.type && "Feature" === e.type && null !== t.geometry && null !== e.geometry && "LineString" === t.geometry.type && "LineString" === e.geometry.type && 2 === t.geometry.coordinates.length && 2 === e.geometry.coordinates.length) {
                    var l = c(t, e);
                    return l && r.push(l), i.featureCollection(r)
                }
                var f = u.default();
                return f.load(a.default(e)), s.featureEach(a.default(t), (function(t) {
                    s.featureEach(f.search(t), (function(e) {
                        var i = c(t, e);
                        if (i) {
                            var a = o.getCoords(i).join(",");
                            n[a] || (n[a] = !0, r.push(i))
                        }
                    }))
                })), i.featureCollection(r)
            }
        },
        54590: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102),
                i = n(10611),
                o = n(31540);
            e.default = function(t) {
                if (!t) throw new Error("geojson is required");
                var e = [];
                return o.flattenEach(t, (function(t) {
                    ! function(t, e) {
                        var n = [],
                            o = t.geometry;
                        if (null !== o) {
                            switch (o.type) {
                                case "Polygon":
                                    n = i.getCoords(o);
                                    break;
                                case "LineString":
                                    n = [i.getCoords(o)]
                            }
                            n.forEach((function(n) {
                                (function(t, e) {
                                    var n = [];
                                    return t.reduce((function(t, i) {
                                        var o = r.lineString([t, i], e);
                                        return o.bbox = function(t, e) {
                                            var n = t[0],
                                                r = t[1],
                                                i = e[0],
                                                o = e[1];
                                            return [n < i ? n : i, r < o ? r : o, n > i ? n : i, r > o ? r : o]
                                        }(t, i), n.push(o), i
                                    })), n
                                })(n, t.properties).forEach((function(t) {
                                    t.id = e.length, e.push(t)
                                }))
                            }))
                        }
                    }(t, e)
                })), r.featureCollection(e)
            }
        },
        31540: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102);

            function i(t, e, n) {
                if (null !== t)
                    for (var r, o, a, s, u, c, l, f, h = 0, d = 0, p = t.type, g = "FeatureCollection" === p, y = "Feature" === p, v = g ? t.features.length : 1, m = 0; m < v; m++) {
                        u = (f = !!(l = g ? t.features[m].geometry : y ? t.geometry : t) && "GeometryCollection" === l.type) ? l.geometries.length : 1;
                        for (var b = 0; b < u; b++) {
                            var w = 0,
                                _ = 0;
                            if (null !== (s = f ? l.geometries[b] : l)) {
                                c = s.coordinates;
                                var P = s.type;
                                switch (h = !n || "Polygon" !== P && "MultiPolygon" !== P ? 0 : 1, P) {
                                    case null:
                                        break;
                                    case "Point":
                                        if (!1 === e(c, d, m, w, _)) return !1;
                                        d++, w++;
                                        break;
                                    case "LineString":
                                    case "MultiPoint":
                                        for (r = 0; r < c.length; r++) {
                                            if (!1 === e(c[r], d, m, w, _)) return !1;
                                            d++, "MultiPoint" === P && w++
                                        }
                                        "LineString" === P && w++;
                                        break;
                                    case "Polygon":
                                    case "MultiLineString":
                                        for (r = 0; r < c.length; r++) {
                                            for (o = 0; o < c[r].length - h; o++) {
                                                if (!1 === e(c[r][o], d, m, w, _)) return !1;
                                                d++
                                            }
                                            "MultiLineString" === P && w++, "Polygon" === P && _++
                                        }
                                        "Polygon" === P && w++;
                                        break;
                                    case "MultiPolygon":
                                        for (r = 0; r < c.length; r++) {
                                            for (_ = 0, o = 0; o < c[r].length; o++) {
                                                for (a = 0; a < c[r][o].length - h; a++) {
                                                    if (!1 === e(c[r][o][a], d, m, w, _)) return !1;
                                                    d++
                                                }
                                                _++
                                            }
                                            w++
                                        }
                                        break;
                                    case "GeometryCollection":
                                        for (r = 0; r < s.geometries.length; r++)
                                            if (!1 === i(s.geometries[r], e, n)) return !1;
                                        break;
                                    default:
                                        throw new Error("Unknown Geometry Type")
                                }
                            }
                        }
                    }
            }

            function o(t, e) {
                var n;
                switch (t.type) {
                    case "FeatureCollection":
                        for (n = 0; n < t.features.length && !1 !== e(t.features[n].properties, n); n++);
                        break;
                    case "Feature":
                        e(t.properties, 0)
                }
            }

            function a(t, e) {
                if ("Feature" === t.type) e(t, 0);
                else if ("FeatureCollection" === t.type)
                    for (var n = 0; n < t.features.length && !1 !== e(t.features[n], n); n++);
            }

            function s(t, e) {
                var n, r, i, o, a, s, u, c, l, f, h = 0,
                    d = "FeatureCollection" === t.type,
                    p = "Feature" === t.type,
                    g = d ? t.features.length : 1;
                for (n = 0; n < g; n++) {
                    for (s = d ? t.features[n].geometry : p ? t.geometry : t, c = d ? t.features[n].properties : p ? t.properties : {}, l = d ? t.features[n].bbox : p ? t.bbox : void 0, f = d ? t.features[n].id : p ? t.id : void 0, a = (u = !!s && "GeometryCollection" === s.type) ? s.geometries.length : 1, i = 0; i < a; i++)
                        if (null !== (o = u ? s.geometries[i] : s)) switch (o.type) {
                            case "Point":
                            case "LineString":
                            case "MultiPoint":
                            case "Polygon":
                            case "MultiLineString":
                            case "MultiPolygon":
                                if (!1 === e(o, h, c, l, f)) return !1;
                                break;
                            case "GeometryCollection":
                                for (r = 0; r < o.geometries.length; r++)
                                    if (!1 === e(o.geometries[r], h, c, l, f)) return !1;
                                break;
                            default:
                                throw new Error("Unknown Geometry Type")
                        } else if (!1 === e(null, h, c, l, f)) return !1;
                    h++
                }
            }

            function u(t, e) {
                s(t, (function(t, n, i, o, a) {
                    var s, u = null === t ? null : t.type;
                    switch (u) {
                        case null:
                        case "Point":
                        case "LineString":
                        case "Polygon":
                            return !1 !== e(r.feature(t, i, {
                                bbox: o,
                                id: a
                            }), n, 0) && void 0
                    }
                    switch (u) {
                        case "MultiPoint":
                            s = "Point";
                            break;
                        case "MultiLineString":
                            s = "LineString";
                            break;
                        case "MultiPolygon":
                            s = "Polygon"
                    }
                    for (var c = 0; c < t.coordinates.length; c++) {
                        var l = {
                            type: s,
                            coordinates: t.coordinates[c]
                        };
                        if (!1 === e(r.feature(l, i), n, c)) return !1
                    }
                }))
            }

            function c(t, e) {
                u(t, (function(t, n, o) {
                    var a = 0;
                    if (t.geometry) {
                        var s = t.geometry.type;
                        if ("Point" !== s && "MultiPoint" !== s) {
                            var u, c = 0,
                                l = 0,
                                f = 0;
                            return !1 !== i(t, (function(i, s, h, d, p) {
                                if (void 0 === u || n > c || d > l || p > f) return u = i, c = n, l = d, f = p, void(a = 0);
                                var g = r.lineString([u, i], t.properties);
                                if (!1 === e(g, n, o, p, a)) return !1;
                                a++, u = i
                            })) && void 0
                        }
                    }
                }))
            }

            function l(t, e) {
                if (!t) throw new Error("geojson is required");
                u(t, (function(t, n, i) {
                    if (null !== t.geometry) {
                        var o = t.geometry.type,
                            a = t.geometry.coordinates;
                        switch (o) {
                            case "LineString":
                                if (!1 === e(t, n, i, 0, 0)) return !1;
                                break;
                            case "Polygon":
                                for (var s = 0; s < a.length; s++)
                                    if (!1 === e(r.lineString(a[s], t.properties), n, i, s)) return !1
                        }
                    }
                }))
            }
            e.coordEach = i, e.coordReduce = function(t, e, n, r) {
                var o = n;
                return i(t, (function(t, r, i, a, s) {
                    o = 0 === r && void 0 === n ? t : e(o, t, r, i, a, s)
                }), r), o
            }, e.propEach = o, e.propReduce = function(t, e, n) {
                var r = n;
                return o(t, (function(t, i) {
                    r = 0 === i && void 0 === n ? t : e(r, t, i)
                })), r
            }, e.featureEach = a, e.featureReduce = function(t, e, n) {
                var r = n;
                return a(t, (function(t, i) {
                    r = 0 === i && void 0 === n ? t : e(r, t, i)
                })), r
            }, e.coordAll = function(t) {
                var e = [];
                return i(t, (function(t) {
                    e.push(t)
                })), e
            }, e.geomEach = s, e.geomReduce = function(t, e, n) {
                var r = n;
                return s(t, (function(t, i, o, a, s) {
                    r = 0 === i && void 0 === n ? t : e(r, t, i, o, a, s)
                })), r
            }, e.flattenEach = u, e.flattenReduce = function(t, e, n) {
                var r = n;
                return u(t, (function(t, i, o) {
                    r = 0 === i && 0 === o && void 0 === n ? t : e(r, t, i, o)
                })), r
            }, e.segmentEach = c, e.segmentReduce = function(t, e, n) {
                var r = n,
                    i = !1;
                return c(t, (function(t, o, a, s, u) {
                    r = !1 === i && void 0 === n ? t : e(r, t, o, a, s, u), i = !0
                })), r
            }, e.lineEach = l, e.lineReduce = function(t, e, n) {
                var r = n;
                return l(t, (function(t, i, o, a) {
                    r = 0 === i && void 0 === n ? t : e(r, t, i, o, a)
                })), r
            }, e.findSegment = function(t, e) {
                if (e = e || {}, !r.isObject(e)) throw new Error("options is invalid");
                var n, i = e.featureIndex || 0,
                    o = e.multiFeatureIndex || 0,
                    a = e.geometryIndex || 0,
                    s = e.segmentIndex || 0,
                    u = e.properties;
                switch (t.type) {
                    case "FeatureCollection":
                        i < 0 && (i = t.features.length + i), u = u || t.features[i].properties, n = t.features[i].geometry;
                        break;
                    case "Feature":
                        u = u || t.properties, n = t.geometry;
                        break;
                    case "Point":
                    case "MultiPoint":
                        return null;
                    case "LineString":
                    case "Polygon":
                    case "MultiLineString":
                    case "MultiPolygon":
                        n = t;
                        break;
                    default:
                        throw new Error("geojson is invalid")
                }
                if (null === n) return null;
                var c = n.coordinates;
                switch (n.type) {
                    case "Point":
                    case "MultiPoint":
                        return null;
                    case "LineString":
                        return s < 0 && (s = c.length + s - 1), r.lineString([c[s], c[s + 1]], u, e);
                    case "Polygon":
                        return a < 0 && (a = c.length + a), s < 0 && (s = c[a].length + s - 1), r.lineString([c[a][s], c[a][s + 1]], u, e);
                    case "MultiLineString":
                        return o < 0 && (o = c.length + o), s < 0 && (s = c[o].length + s - 1), r.lineString([c[o][s], c[o][s + 1]], u, e);
                    case "MultiPolygon":
                        return o < 0 && (o = c.length + o), a < 0 && (a = c[o].length + a), s < 0 && (s = c[o][a].length - s - 1), r.lineString([c[o][a][s], c[o][a][s + 1]], u, e)
                }
                throw new Error("geojson is invalid")
            }, e.findPoint = function(t, e) {
                if (e = e || {}, !r.isObject(e)) throw new Error("options is invalid");
                var n, i = e.featureIndex || 0,
                    o = e.multiFeatureIndex || 0,
                    a = e.geometryIndex || 0,
                    s = e.coordIndex || 0,
                    u = e.properties;
                switch (t.type) {
                    case "FeatureCollection":
                        i < 0 && (i = t.features.length + i), u = u || t.features[i].properties, n = t.features[i].geometry;
                        break;
                    case "Feature":
                        u = u || t.properties, n = t.geometry;
                        break;
                    case "Point":
                    case "MultiPoint":
                        return null;
                    case "LineString":
                    case "Polygon":
                    case "MultiLineString":
                    case "MultiPolygon":
                        n = t;
                        break;
                    default:
                        throw new Error("geojson is invalid")
                }
                if (null === n) return null;
                var c = n.coordinates;
                switch (n.type) {
                    case "Point":
                        return r.point(c, u, e);
                    case "MultiPoint":
                        return o < 0 && (o = c.length + o), r.point(c[o], u, e);
                    case "LineString":
                        return s < 0 && (s = c.length + s), r.point(c[s], u, e);
                    case "Polygon":
                        return a < 0 && (a = c.length + a), s < 0 && (s = c[a].length + s), r.point(c[a][s], u, e);
                    case "MultiLineString":
                        return o < 0 && (o = c.length + o), s < 0 && (s = c[o].length + s), r.point(c[o][s], u, e);
                    case "MultiPolygon":
                        return o < 0 && (o = c.length + o), a < 0 && (a = c[o].length + a), s < 0 && (s = c[o][a].length - s), r.point(c[o][a][s], u, e)
                }
                throw new Error("geojson is invalid")
            }
        },
        13807: function(t, e, n) {
            "use strict";
            var r = this && this.__importDefault || function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(n(51208)),
                o = r(n(31013)),
                a = r(n(93737)),
                s = r(n(73663)),
                u = n(31540),
                c = n(84102),
                l = n(10611);
            e.default = function(t, e, n) {
                void 0 === n && (n = {});
                var r = c.point([1 / 0, 1 / 0], {
                        dist: 1 / 0
                    }),
                    f = 0;
                return u.flattenEach(t, (function(t) {
                    for (var u = l.getCoords(t), h = 0; h < u.length - 1; h++) {
                        var d = c.point(u[h]);
                        d.properties.dist = o.default(e, d, n);
                        var p = c.point(u[h + 1]);
                        p.properties.dist = o.default(e, p, n);
                        var g = o.default(d, p, n),
                            y = Math.max(d.properties.dist, p.properties.dist),
                            v = i.default(d, p),
                            m = a.default(e, y, v + 90, n),
                            b = a.default(e, y, v - 90, n),
                            w = s.default(c.lineString([m.geometry.coordinates, b.geometry.coordinates]), c.lineString([d.geometry.coordinates, p.geometry.coordinates])),
                            _ = null;
                        w.features.length > 0 && ((_ = w.features[0]).properties.dist = o.default(e, _, n), _.properties.location = f + o.default(d, _, n)), d.properties.dist < r.properties.dist && ((r = d).properties.index = h, r.properties.location = f), p.properties.dist < r.properties.dist && ((r = p).properties.index = h + 1, r.properties.location = f + g), _ && _.properties.dist < r.properties.dist && ((r = _).properties.index = h), f += g
                    }
                })), r
            }
        },
        63892: function(t, e, n) {
            "use strict";
            var r = this && this.__importDefault || function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(n(31013)),
                o = n(84102),
                a = n(10611),
                s = n(31540),
                u = r(n(6213));

            function c(t, e) {
                return t[0] * e[0] + t[1] * e[1]
            }

            function l(t, e, n) {
                return "planar" === n.method ? u.default(t, e, n) : i.default(t, e, n)
            }
            e.default = function(t, e, n) {
                if (void 0 === n && (n = {}), n.method || (n.method = "geodesic"), n.units || (n.units = "kilometers"), !t) throw new Error("pt is required");
                if (Array.isArray(t) ? t = o.point(t) : "Point" === t.type ? t = o.feature(t) : a.featureOf(t, "Point", "point"), !e) throw new Error("line is required");
                Array.isArray(e) ? e = o.lineString(e) : "LineString" === e.type ? e = o.feature(e) : a.featureOf(e, "LineString", "line");
                var r = 1 / 0,
                    i = t.geometry.coordinates;
                return s.segmentEach(e, (function(t) {
                    var e = t.geometry.coordinates[0],
                        o = t.geometry.coordinates[1],
                        a = function(t, e, n, r) {
                            var i = [n[0] - e[0], n[1] - e[1]],
                                o = c([t[0] - e[0], t[1] - e[1]], i);
                            if (o <= 0) return l(t, e, {
                                method: r.method,
                                units: "degrees"
                            });
                            var a = c(i, i);
                            if (a <= o) return l(t, n, {
                                method: r.method,
                                units: "degrees"
                            });
                            var s = o / a,
                                u = [e[0] + s * i[0], e[1] + s * i[1]];
                            return l(t, u, {
                                method: r.method,
                                units: "degrees"
                            })
                        }(i, e, o, n);
                    a < r && (r = a)
                })), o.convertLength(r, "degrees", n.units)
            }
        },
        97383: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102),
                i = n(10611);

            function o(t, e) {
                return void 0 === e && (e = {}), s(i.getGeom(t).coordinates, e.properties ? e.properties : "Feature" === t.type ? t.properties : {})
            }

            function a(t, e) {
                void 0 === e && (e = {});
                var n = i.getGeom(t).coordinates,
                    o = e.properties ? e.properties : "Feature" === t.type ? t.properties : {},
                    a = [];
                return n.forEach((function(t) {
                    a.push(s(t, o))
                })), r.featureCollection(a)
            }

            function s(t, e) {
                return t.length > 1 ? r.multiLineString(t, e) : r.lineString(t[0], e)
            }
            e.default = function(t, e) {
                void 0 === e && (e = {});
                var n = i.getGeom(t);
                switch (e.properties || "Feature" !== t.type || (e.properties = t.properties), n.type) {
                    case "Polygon":
                        return o(n, e);
                    case "MultiPolygon":
                        return a(n, e);
                    default:
                        throw new Error("invalid poly")
                }
            }, e.polygonToLine = o, e.multiPolygonToLine = a, e.coordsToLine = s
        },
        51138: function(t, e, n) {
            "use strict";

            function r(t) {
                return t && "object" === typeof t && "default" in t ? t.default : t
            }
            var i = r(n(76565)),
                o = r(n(3809)),
                a = n(31540),
                s = n(10611),
                u = n(84102);

            function c(t, e) {
                switch ("Feature" === t.type ? t.geometry.type : t.type) {
                    case "GeometryCollection":
                        return a.geomEach(t, (function(t) {
                            c(t, e)
                        })), t;
                    case "LineString":
                        return l(s.getCoords(t), e), t;
                    case "Polygon":
                        return f(s.getCoords(t), e), t;
                    case "MultiLineString":
                        return s.getCoords(t).forEach((function(t) {
                            l(t, e)
                        })), t;
                    case "MultiPolygon":
                        return s.getCoords(t).forEach((function(t) {
                            f(t, e)
                        })), t;
                    case "Point":
                    case "MultiPoint":
                        return t
                }
            }

            function l(t, e) {
                o(t) === e && t.reverse()
            }

            function f(t, e) {
                o(t[0]) !== e && t[0].reverse();
                for (var n = 1; n < t.length; n++) o(t[n]) === e && t[n].reverse()
            }
            t.exports = function(t, e) {
                if (e = e || {}, !u.isObject(e)) throw new Error("options is invalid");
                var n = e.reverse || !1,
                    r = e.mutate || !1;
                if (!t) throw new Error("<geojson> is required");
                if ("boolean" !== typeof n) throw new Error("<reverse> must be a boolean");
                if ("boolean" !== typeof r) throw new Error("<mutate> must be a boolean");
                !1 === r && (t = i(t));
                var o = [];
                switch (t.type) {
                    case "GeometryCollection":
                        return a.geomEach(t, (function(t) {
                            c(t, n)
                        })), t;
                    case "FeatureCollection":
                        return a.featureEach(t, (function(t) {
                            a.featureEach(c(t, n), (function(t) {
                                o.push(t)
                            }))
                        })), u.featureCollection(o)
                }
                return c(t, n)
            }
        },
        16912: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102),
                i = n(10611);

            function o(t, e) {
                var n = r.degreesToRadians(t[1]),
                    i = r.degreesToRadians(e[1]),
                    o = r.degreesToRadians(e[0] - t[0]);
                o > Math.PI && (o -= 2 * Math.PI), o < -Math.PI && (o += 2 * Math.PI);
                var a = Math.log(Math.tan(i / 2 + Math.PI / 4) / Math.tan(n / 2 + Math.PI / 4)),
                    s = Math.atan2(o, a);
                return (r.radiansToDegrees(s) + 360) % 360
            }
            e.default = function(t, e, n) {
                var r;
                return void 0 === n && (n = {}), (r = n.final ? o(i.getCoord(e), i.getCoord(t)) : o(i.getCoord(t), i.getCoord(e))) > 180 ? -(360 - r) : r
            }
        },
        62054: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102),
                i = n(10611);
            e.default = function(t, e, n, o) {
                void 0 === o && (o = {});
                var a = e < 0,
                    s = r.convertLength(Math.abs(e), o.units, "meters");
                a && (s = -Math.abs(s));
                var u = i.getCoord(t),
                    c = function(t, e, n, i) {
                        i = void 0 === i ? r.earthRadius : Number(i);
                        var o = e / i,
                            a = t[0] * Math.PI / 180,
                            s = r.degreesToRadians(t[1]),
                            u = r.degreesToRadians(n),
                            c = o * Math.cos(u),
                            l = s + c;
                        Math.abs(l) > Math.PI / 2 && (l = l > 0 ? Math.PI - l : -Math.PI - l);
                        var f = Math.log(Math.tan(l / 2 + Math.PI / 4) / Math.tan(s / 2 + Math.PI / 4)),
                            h = Math.abs(f) > 1e-11 ? c / f : Math.cos(s),
                            d = o * Math.sin(u) / h;
                        return [(180 * (a + d) / Math.PI + 540) % 360 - 180, 180 * l / Math.PI]
                    }(u, s, n);
                return c[0] += c[0] - u[0] > 180 ? -360 : u[0] - c[0] > 180 ? 360 : 0, r.point(c, o.properties)
            }
        },
        6213: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = n(84102),
                i = n(10611);
            e.default = function(t, e, n) {
                void 0 === n && (n = {});
                var o = i.getCoord(t),
                    a = i.getCoord(e);
                a[0] += a[0] - o[0] > 180 ? -360 : o[0] - a[0] > 180 ? 360 : 0;
                var s = function(t, e, n) {
                    var i = n = void 0 === n ? r.earthRadius : Number(n),
                        o = t[1] * Math.PI / 180,
                        a = e[1] * Math.PI / 180,
                        s = a - o,
                        u = Math.abs(e[0] - t[0]) * Math.PI / 180;
                    u > Math.PI && (u -= 2 * Math.PI);
                    var c = Math.log(Math.tan(a / 2 + Math.PI / 4) / Math.tan(o / 2 + Math.PI / 4)),
                        l = Math.abs(c) > 1e-11 ? s / c : Math.cos(o);
                    return Math.sqrt(s * s + l * l * u * u) * i
                }(o, a);
                return r.convertLength(s, "meters", n.units)
            }
        },
        90067: function(t, e, n) {
            "use strict";

            function r(t) {
                return t && "object" === typeof t && "default" in t ? t.default : t
            }
            var i = r(n(66338)),
                o = r(n(16912)),
                a = r(n(6213)),
                s = r(n(62054)),
                u = r(n(76565)),
                c = n(31540),
                l = n(10611),
                f = n(84102);
            t.exports = function(t, e, n) {
                if (n = n || {}, !f.isObject(n)) throw new Error("options is invalid");
                var r = n.pivot,
                    h = n.mutate;
                if (!t) throw new Error("geojson is required");
                if (void 0 === e || null === e || isNaN(e)) throw new Error("angle is required");
                return 0 === e || (r || (r = i(t)), !1 !== h && void 0 !== h || (t = u(t)), c.coordEach(t, (function(t) {
                    var n = o(r, t) + e,
                        i = a(r, t),
                        u = l.getCoords(s(r, i, n));
                    t[0] = u[0], t[1] = u[1]
                }))), t
            }
        },
        67517: function(t, e, n) {
            "use strict";

            function r(t) {
                return t && "object" === typeof t && "default" in t ? t.default : t
            }
            var i = r(n(76565)),
                o = r(n(78230)),
                a = r(n(66338)),
                s = r(n(9705)),
                u = r(n(16912)),
                c = r(n(6213)),
                l = r(n(62054)),
                f = n(31540),
                h = n(84102),
                d = n(10611);

            function p(t, e, n) {
                var r = "Point" === d.getType(t);
                return n = function(t, e) {
                    void 0 !== e && null !== e || (e = "centroid");
                    if (Array.isArray(e) || "object" === typeof e) return d.getCoord(e);
                    var n = t.bbox ? t.bbox : s(t),
                        r = n[0],
                        i = n[1],
                        u = n[2],
                        c = n[3];
                    switch (e) {
                        case "sw":
                        case "southwest":
                        case "westsouth":
                        case "bottomleft":
                            return h.point([r, i]);
                        case "se":
                        case "southeast":
                        case "eastsouth":
                        case "bottomright":
                            return h.point([u, i]);
                        case "nw":
                        case "northwest":
                        case "westnorth":
                        case "topleft":
                            return h.point([r, c]);
                        case "ne":
                        case "northeast":
                        case "eastnorth":
                        case "topright":
                            return h.point([u, c]);
                        case "center":
                            return o(t);
                        case void 0:
                        case null:
                        case "centroid":
                            return a(t);
                        default:
                            throw new Error("invalid origin")
                    }
                }(t, n), 1 === e || r || f.coordEach(t, (function(t) {
                    var r = c(n, t),
                        i = u(n, t),
                        o = r * e,
                        a = d.getCoords(l(n, o, i));
                    t[0] = a[0], t[1] = a[1], 3 === t.length && (t[2] *= e)
                })), t
            }
            t.exports = function(t, e, n) {
                if (n = n || {}, !h.isObject(n)) throw new Error("options is invalid");
                var r = n.origin,
                    o = n.mutate;
                if (!t) throw new Error("geojson required");
                if ("number" !== typeof e || 0 === e) throw new Error("invalid factor");
                var a = Array.isArray(r) || "object" === typeof r;
                return !0 !== o && (t = i(t)), "FeatureCollection" !== t.type || a ? p(t, e, r) : (f.featureEach(t, (function(n, i) {
                    t.features[i] = p(n, e, r)
                })), t)
            }
        },
        92418: function(t, e, n) {
            "use strict";

            function r(t) {
                return t && "object" === typeof t && "default" in t ? t.default : t
            }
            var i = n(31540),
                o = n(84102),
                a = n(10611),
                s = r(n(76565)),
                u = r(n(62054));
            t.exports = function(t, e, n, r) {
                if (r = r || {}, !o.isObject(r)) throw new Error("options is invalid");
                var c = r.units,
                    l = r.zTranslation,
                    f = r.mutate;
                if (!t) throw new Error("geojson is required");
                if (void 0 === e || null === e || isNaN(e)) throw new Error("distance is required");
                if (l && "number" !== typeof l && isNaN(l)) throw new Error("zTranslation is not a number");
                if (l = void 0 !== l ? l : 0, 0 === e && 0 === l) return t;
                if (void 0 === n || null === n || isNaN(n)) throw new Error("direction is required");
                return e < 0 && (e = -e, n += 180), !1 !== f && void 0 !== f || (t = s(t)), i.coordEach(t, (function(t) {
                    var r = a.getCoords(u(t, e, n, {
                        units: c
                    }));
                    t[0] = r[0], t[1] = r[1], l && 3 === t.length && (t[2] += l)
                })), t
            }
        },
        71959: function(t, e, n) {
            "use strict";
            var r = this && this.__importDefault || function(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var i = r(n(32676)),
                o = n(10611),
                a = n(84102);
            e.default = function(t, e, n) {
                void 0 === n && (n = {});
                var r = o.getGeom(t),
                    s = o.getGeom(e),
                    u = i.default.union(r.coordinates, s.coordinates);
                return 0 === u.length ? null : 1 === u.length ? a.polygon(u[0], n.properties) : a.multiPolygon(u, n.properties)
            }
        },
        99560: function(t, e, n) {
            var r;
            ! function(i) {
                "use strict";

                function o(t, e) {
                    var n = (65535 & t) + (65535 & e);
                    return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n
                }

                function a(t, e, n, r, i, a) {
                    return o((s = o(o(e, t), o(r, a))) << (u = i) | s >>> 32 - u, n);
                    var s, u
                }

                function s(t, e, n, r, i, o, s) {
                    return a(e & n | ~e & r, t, e, i, o, s)
                }

                function u(t, e, n, r, i, o, s) {
                    return a(e & r | n & ~r, t, e, i, o, s)
                }

                function c(t, e, n, r, i, o, s) {
                    return a(e ^ n ^ r, t, e, i, o, s)
                }

                function l(t, e, n, r, i, o, s) {
                    return a(n ^ (e | ~r), t, e, i, o, s)
                }

                function f(t, e) {
                    var n, r, i, a, f;
                    t[e >> 5] |= 128 << e % 32, t[14 + (e + 64 >>> 9 << 4)] = e;
                    var h = 1732584193,
                        d = -271733879,
                        p = -1732584194,
                        g = 271733878;
                    for (n = 0; n < t.length; n += 16) r = h, i = d, a = p, f = g, h = s(h, d, p, g, t[n], 7, -680876936), g = s(g, h, d, p, t[n + 1], 12, -389564586), p = s(p, g, h, d, t[n + 2], 17, 606105819), d = s(d, p, g, h, t[n + 3], 22, -1044525330), h = s(h, d, p, g, t[n + 4], 7, -176418897), g = s(g, h, d, p, t[n + 5], 12, 1200080426), p = s(p, g, h, d, t[n + 6], 17, -1473231341), d = s(d, p, g, h, t[n + 7], 22, -45705983), h = s(h, d, p, g, t[n + 8], 7, 1770035416), g = s(g, h, d, p, t[n + 9], 12, -1958414417), p = s(p, g, h, d, t[n + 10], 17, -42063), d = s(d, p, g, h, t[n + 11], 22, -1990404162), h = s(h, d, p, g, t[n + 12], 7, 1804603682), g = s(g, h, d, p, t[n + 13], 12, -40341101), p = s(p, g, h, d, t[n + 14], 17, -1502002290), h = u(h, d = s(d, p, g, h, t[n + 15], 22, 1236535329), p, g, t[n + 1], 5, -165796510), g = u(g, h, d, p, t[n + 6], 9, -1069501632), p = u(p, g, h, d, t[n + 11], 14, 643717713), d = u(d, p, g, h, t[n], 20, -373897302), h = u(h, d, p, g, t[n + 5], 5, -701558691), g = u(g, h, d, p, t[n + 10], 9, 38016083), p = u(p, g, h, d, t[n + 15], 14, -660478335), d = u(d, p, g, h, t[n + 4], 20, -405537848), h = u(h, d, p, g, t[n + 9], 5, 568446438), g = u(g, h, d, p, t[n + 14], 9, -1019803690), p = u(p, g, h, d, t[n + 3], 14, -187363961), d = u(d, p, g, h, t[n + 8], 20, 1163531501), h = u(h, d, p, g, t[n + 13], 5, -1444681467), g = u(g, h, d, p, t[n + 2], 9, -51403784), p = u(p, g, h, d, t[n + 7], 14, 1735328473), h = c(h, d = u(d, p, g, h, t[n + 12], 20, -1926607734), p, g, t[n + 5], 4, -378558), g = c(g, h, d, p, t[n + 8], 11, -2022574463), p = c(p, g, h, d, t[n + 11], 16, 1839030562), d = c(d, p, g, h, t[n + 14], 23, -35309556), h = c(h, d, p, g, t[n + 1], 4, -1530992060), g = c(g, h, d, p, t[n + 4], 11, 1272893353), p = c(p, g, h, d, t[n + 7], 16, -155497632), d = c(d, p, g, h, t[n + 10], 23, -1094730640), h = c(h, d, p, g, t[n + 13], 4, 681279174), g = c(g, h, d, p, t[n], 11, -358537222), p = c(p, g, h, d, t[n + 3], 16, -722521979), d = c(d, p, g, h, t[n + 6], 23, 76029189), h = c(h, d, p, g, t[n + 9], 4, -640364487), g = c(g, h, d, p, t[n + 12], 11, -421815835), p = c(p, g, h, d, t[n + 15], 16, 530742520), h = l(h, d = c(d, p, g, h, t[n + 2], 23, -995338651), p, g, t[n], 6, -198630844), g = l(g, h, d, p, t[n + 7], 10, 1126891415), p = l(p, g, h, d, t[n + 14], 15, -1416354905), d = l(d, p, g, h, t[n + 5], 21, -57434055), h = l(h, d, p, g, t[n + 12], 6, 1700485571), g = l(g, h, d, p, t[n + 3], 10, -1894986606), p = l(p, g, h, d, t[n + 10], 15, -1051523), d = l(d, p, g, h, t[n + 1], 21, -2054922799), h = l(h, d, p, g, t[n + 8], 6, 1873313359), g = l(g, h, d, p, t[n + 15], 10, -30611744), p = l(p, g, h, d, t[n + 6], 15, -1560198380), d = l(d, p, g, h, t[n + 13], 21, 1309151649), h = l(h, d, p, g, t[n + 4], 6, -145523070), g = l(g, h, d, p, t[n + 11], 10, -1120210379), p = l(p, g, h, d, t[n + 2], 15, 718787259), d = l(d, p, g, h, t[n + 9], 21, -343485551), h = o(h, r), d = o(d, i), p = o(p, a), g = o(g, f);
                    return [h, d, p, g]
                }

                function h(t) {
                    var e, n = "",
                        r = 32 * t.length;
                    for (e = 0; e < r; e += 8) n += String.fromCharCode(t[e >> 5] >>> e % 32 & 255);
                    return n
                }

                function d(t) {
                    var e, n = [];
                    for (n[(t.length >> 2) - 1] = void 0, e = 0; e < n.length; e += 1) n[e] = 0;
                    var r = 8 * t.length;
                    for (e = 0; e < r; e += 8) n[e >> 5] |= (255 & t.charCodeAt(e / 8)) << e % 32;
                    return n
                }

                function p(t) {
                    var e, n, r = "0123456789abcdef",
                        i = "";
                    for (n = 0; n < t.length; n += 1) e = t.charCodeAt(n), i += r.charAt(e >>> 4 & 15) + r.charAt(15 & e);
                    return i
                }

                function g(t) {
                    return unescape(encodeURIComponent(t))
                }

                function y(t) {
                    return function(t) {
                        return h(f(d(t), 8 * t.length))
                    }(g(t))
                }

                function v(t, e) {
                    return function(t, e) {
                        var n, r, i = d(t),
                            o = [],
                            a = [];
                        for (o[15] = a[15] = void 0, i.length > 16 && (i = f(i, 8 * t.length)), n = 0; n < 16; n += 1) o[n] = 909522486 ^ i[n], a[n] = 1549556828 ^ i[n];
                        return r = f(o.concat(d(e)), 512 + 8 * e.length), h(f(a.concat(r), 640))
                    }(g(t), g(e))
                }

                function m(t, e, n) {
                    return e ? n ? v(e, t) : p(v(e, t)) : n ? y(t) : p(y(t))
                }
                void 0 === (r = function() {
                    return m
                }.call(e, n, e, t)) || (t.exports = r)
            }()
        },
        91077: function(t, e, n) {
            "use strict";

            function r(t, e) {
                return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        46209: function(t, e, n) {
            "use strict";
            n.d(e, {
                Nw: function() {
                    return s
                },
                ZP: function() {
                    return u
                }
            });
            var r = n(91077),
                i = n(29173);
            const o = (0, i.Z)(r.Z),
                a = o.right,
                s = o.left;
            (0, i.Z)((function(t) {
                return null === t ? NaN : +t
            })).center;
            var u = a
        },
        29173: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return i
                }
            });
            var r = n(91077);

            function i(t) {
                let e = t,
                    n = t;

                function i(t, e, r, i) {
                    for (null == r && (r = 0), null == i && (i = t.length); r < i;) {
                        const o = r + i >>> 1;
                        n(t[o], e) < 0 ? r = o + 1 : i = o
                    }
                    return r
                }
                return 1 === t.length && (e = (e, n) => t(e) - n, n = function(t) {
                    return (e, n) => (0, r.Z)(t(e), n)
                }(t)), {
                    left: i,
                    center: function(t, n, r, o) {
                        null == r && (r = 0), null == o && (o = t.length);
                        const a = i(t, n, r, o - 1);
                        return a > r && e(t[a - 1], n) > -e(t[a], n) ? a - 1 : a
                    },
                    right: function(t, e, r, i) {
                        for (null == r && (r = 0), null == i && (i = t.length); r < i;) {
                            const o = r + i >>> 1;
                            n(t[o], e) > 0 ? i = o : r = o + 1
                        }
                        return r
                    }
                }
            }
        },
        25360: function(t, e, n) {
            "use strict";

            function r(t, e) {
                return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        23865: function(t, e, n) {
            "use strict";

            function r(t, e) {
                let n, r;
                if (void 0 === e)
                    for (const i of t) null != i && (void 0 === n ? i >= i && (n = r = i) : (n > i && (n = i), r < i && (r = i)));
                else {
                    let i = -1;
                    for (let o of t) null != (o = e(o, ++i, t)) && (void 0 === n ? o >= o && (n = r = o) : (n > o && (n = o), r < o && (r = o)))
                }
                return [n, r]
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        98823: function(t, e, n) {
            "use strict";

            function r(t, e) {
                let n;
                if (void 0 === e)
                    for (const r of t) null != r && (n < r || void 0 === n && r >= r) && (n = r);
                else {
                    let r = -1;
                    for (let i of t) null != (i = e(i, ++r, t)) && (n < i || void 0 === n && i >= i) && (n = i)
                }
                return n
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        47622: function(t, e, n) {
            "use strict";

            function r(t, e) {
                let n;
                if (void 0 === e)
                    for (const r of t) null != r && (n > r || void 0 === n && r >= r) && (n = r);
                else {
                    let r = -1;
                    for (let i of t) null != (i = e(i, ++r, t)) && (n > i || void 0 === n && i >= i) && (n = i)
                }
                return n
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        34893: function(t, e, n) {
            "use strict";

            function r(t, e, n) {
                t = +t, e = +e, n = (i = arguments.length) < 2 ? (e = t, t = 0, 1) : i < 3 ? 1 : +n;
                for (var r = -1, i = 0 | Math.max(0, Math.ceil((e - t) / n)), o = new Array(i); ++r < i;) o[r] = t + r * n;
                return o
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        67614: function(t, e, n) {
            "use strict";
            n.d(e, {
                ZP: function() {
                    return a
                },
                G9: function() {
                    return s
                },
                ly: function() {
                    return u
                }
            });
            var r = Math.sqrt(50),
                i = Math.sqrt(10),
                o = Math.sqrt(2);

            function a(t, e, n) {
                var r, i, o, a, u = -1;
                if (n = +n, (t = +t) === (e = +e) && n > 0) return [t];
                if ((r = e < t) && (i = t, t = e, e = i), 0 === (a = s(t, e, n)) || !isFinite(a)) return [];
                if (a > 0)
                    for (t = Math.ceil(t / a), e = Math.floor(e / a), o = new Array(i = Math.ceil(e - t + 1)); ++u < i;) o[u] = (t + u) * a;
                else
                    for (a = -a, t = Math.ceil(t * a), e = Math.floor(e * a), o = new Array(i = Math.ceil(e - t + 1)); ++u < i;) o[u] = (t + u) / a;
                return r && o.reverse(), o
            }

            function s(t, e, n) {
                var a = (e - t) / Math.max(0, n),
                    s = Math.floor(Math.log(a) / Math.LN10),
                    u = a / Math.pow(10, s);
                return s >= 0 ? (u >= r ? 10 : u >= i ? 5 : u >= o ? 2 : 1) * Math.pow(10, s) : -Math.pow(10, -s) / (u >= r ? 10 : u >= i ? 5 : u >= o ? 2 : 1)
            }

            function u(t, e, n) {
                var a = Math.abs(e - t) / Math.max(0, n),
                    s = Math.pow(10, Math.floor(Math.log(a) / Math.LN10)),
                    u = a / s;
                return u >= r ? s *= 10 : u >= i ? s *= 5 : u >= o && (s *= 2), e < t ? -s : s
            }
        },
        55581: function(t, e, n) {
            "use strict";
            n.d(e, {
                b1: function() {
                    return s
                }
            });
            var r = "$";

            function i() {}

            function o(t, e) {
                var n = new i;
                if (t instanceof i) t.each((function(t, e) {
                    n.set(e, t)
                }));
                else if (Array.isArray(t)) {
                    var r, o = -1,
                        a = t.length;
                    if (null == e)
                        for (; ++o < a;) n.set(o, t[o]);
                    else
                        for (; ++o < a;) n.set(e(r = t[o], o, t), r)
                } else if (t)
                    for (var s in t) n.set(s, t[s]);
                return n
            }
            i.prototype = o.prototype = {
                constructor: i,
                has: function(t) {
                    return r + t in this
                },
                get: function(t) {
                    return this[r + t]
                },
                set: function(t, e) {
                    return this[r + t] = e, this
                },
                remove: function(t) {
                    var e = r + t;
                    return e in this && delete this[e]
                },
                clear: function() {
                    for (var t in this) t[0] === r && delete this[t]
                },
                keys: function() {
                    var t = [];
                    for (var e in this) e[0] === r && t.push(e.slice(1));
                    return t
                },
                values: function() {
                    var t = [];
                    for (var e in this) e[0] === r && t.push(this[e]);
                    return t
                },
                entries: function() {
                    var t = [];
                    for (var e in this) e[0] === r && t.push({
                        key: e.slice(1),
                        value: this[e]
                    });
                    return t
                },
                size: function() {
                    var t = 0;
                    for (var e in this) e[0] === r && ++t;
                    return t
                },
                empty: function() {
                    for (var t in this)
                        if (t[0] === r) return !1;
                    return !0
                },
                each: function(t) {
                    for (var e in this) e[0] === r && t(this[e], e.slice(1), this)
                }
            };
            var a = o;

            function s() {
                var t, e, n, r = [],
                    i = [];

                function o(n, i, s, u) {
                    if (i >= r.length) return null != t && n.sort(t), null != e ? e(n) : n;
                    for (var c, l, f, h = -1, d = n.length, p = r[i++], g = a(), y = s(); ++h < d;)(f = g.get(c = p(l = n[h]) + "")) ? f.push(l) : g.set(c, [l]);
                    return g.each((function(t, e) {
                        u(y, e, o(t, i, s, u))
                    })), y
                }

                function s(t, n) {
                    if (++n > r.length) return t;
                    var o, a = i[n - 1];
                    return null != e && n >= r.length ? o = t.entries() : (o = [], t.each((function(t, e) {
                        o.push({
                            key: e,
                            values: s(t, n)
                        })
                    }))), null != a ? o.sort((function(t, e) {
                        return a(t.key, e.key)
                    })) : o
                }
                return n = {
                    object: function(t) {
                        return o(t, 0, u, c)
                    },
                    map: function(t) {
                        return o(t, 0, l, f)
                    },
                    entries: function(t) {
                        return s(o(t, 0, l, f), 0)
                    },
                    key: function(t) {
                        return r.push(t), n
                    },
                    sortKeys: function(t) {
                        return i[r.length - 1] = t, n
                    },
                    sortValues: function(e) {
                        return t = e, n
                    },
                    rollup: function(t) {
                        return e = t, n
                    }
                }
            }

            function u() {
                return {}
            }

            function c(t, e, n) {
                t[e] = n
            }

            function l() {
                return a()
            }

            function f(t, e, n) {
                t.set(e, n)
            }

            function h() {}
            var d = a.prototype;

            function p(t, e) {
                var n = new h;
                if (t instanceof h) t.each((function(t) {
                    n.add(t)
                }));
                else if (t) {
                    var r = -1,
                        i = t.length;
                    if (null == e)
                        for (; ++r < i;) n.add(t[r]);
                    else
                        for (; ++r < i;) n.add(e(t[r], r, t))
                }
                return n
            }
            h.prototype = p.prototype = {
                constructor: h,
                has: d.has,
                add: function(t) {
                    return this[r + (t += "")] = t, this
                },
                remove: d.remove,
                clear: d.clear,
                values: d.keys,
                size: d.size,
                empty: d.empty,
                each: d.each
            }
        },
        16372: function(t, e, n) {
            "use strict";
            n.d(e, {
                Il: function() {
                    return i
                },
                xV: function() {
                    return o
                },
                J5: function() {
                    return a
                },
                ZP: function() {
                    return w
                },
                SU: function() {
                    return E
                },
                B8: function() {
                    return x
                },
                Ss: function() {
                    return S
                }
            });
            var r = n(44087);

            function i() {}
            var o = .7,
                a = 1 / o,
                s = "\\s*([+-]?\\d+)\\s*",
                u = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
                c = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
                l = /^#([0-9a-f]{3,8})$/,
                f = new RegExp("^rgb\\(" + [s, s, s] + "\\)$"),
                h = new RegExp("^rgb\\(" + [c, c, c] + "\\)$"),
                d = new RegExp("^rgba\\(" + [s, s, s, u] + "\\)$"),
                p = new RegExp("^rgba\\(" + [c, c, c, u] + "\\)$"),
                g = new RegExp("^hsl\\(" + [u, c, c] + "\\)$"),
                y = new RegExp("^hsla\\(" + [u, c, c, u] + "\\)$"),
                v = {
                    aliceblue: 15792383,
                    antiquewhite: 16444375,
                    aqua: 65535,
                    aquamarine: 8388564,
                    azure: 15794175,
                    beige: 16119260,
                    bisque: 16770244,
                    black: 0,
                    blanchedalmond: 16772045,
                    blue: 255,
                    blueviolet: 9055202,
                    brown: 10824234,
                    burlywood: 14596231,
                    cadetblue: 6266528,
                    chartreuse: 8388352,
                    chocolate: 13789470,
                    coral: 16744272,
                    cornflowerblue: 6591981,
                    cornsilk: 16775388,
                    crimson: 14423100,
                    cyan: 65535,
                    darkblue: 139,
                    darkcyan: 35723,
                    darkgoldenrod: 12092939,
                    darkgray: 11119017,
                    darkgreen: 25600,
                    darkgrey: 11119017,
                    darkkhaki: 12433259,
                    darkmagenta: 9109643,
                    darkolivegreen: 5597999,
                    darkorange: 16747520,
                    darkorchid: 10040012,
                    darkred: 9109504,
                    darksalmon: 15308410,
                    darkseagreen: 9419919,
                    darkslateblue: 4734347,
                    darkslategray: 3100495,
                    darkslategrey: 3100495,
                    darkturquoise: 52945,
                    darkviolet: 9699539,
                    deeppink: 16716947,
                    deepskyblue: 49151,
                    dimgray: 6908265,
                    dimgrey: 6908265,
                    dodgerblue: 2003199,
                    firebrick: 11674146,
                    floralwhite: 16775920,
                    forestgreen: 2263842,
                    fuchsia: 16711935,
                    gainsboro: 14474460,
                    ghostwhite: 16316671,
                    gold: 16766720,
                    goldenrod: 14329120,
                    gray: 8421504,
                    green: 32768,
                    greenyellow: 11403055,
                    grey: 8421504,
                    honeydew: 15794160,
                    hotpink: 16738740,
                    indianred: 13458524,
                    indigo: 4915330,
                    ivory: 16777200,
                    khaki: 15787660,
                    lavender: 15132410,
                    lavenderblush: 16773365,
                    lawngreen: 8190976,
                    lemonchiffon: 16775885,
                    lightblue: 11393254,
                    lightcoral: 15761536,
                    lightcyan: 14745599,
                    lightgoldenrodyellow: 16448210,
                    lightgray: 13882323,
                    lightgreen: 9498256,
                    lightgrey: 13882323,
                    lightpink: 16758465,
                    lightsalmon: 16752762,
                    lightseagreen: 2142890,
                    lightskyblue: 8900346,
                    lightslategray: 7833753,
                    lightslategrey: 7833753,
                    lightsteelblue: 11584734,
                    lightyellow: 16777184,
                    lime: 65280,
                    limegreen: 3329330,
                    linen: 16445670,
                    magenta: 16711935,
                    maroon: 8388608,
                    mediumaquamarine: 6737322,
                    mediumblue: 205,
                    mediumorchid: 12211667,
                    mediumpurple: 9662683,
                    mediumseagreen: 3978097,
                    mediumslateblue: 8087790,
                    mediumspringgreen: 64154,
                    mediumturquoise: 4772300,
                    mediumvioletred: 13047173,
                    midnightblue: 1644912,
                    mintcream: 16121850,
                    mistyrose: 16770273,
                    moccasin: 16770229,
                    navajowhite: 16768685,
                    navy: 128,
                    oldlace: 16643558,
                    olive: 8421376,
                    olivedrab: 7048739,
                    orange: 16753920,
                    orangered: 16729344,
                    orchid: 14315734,
                    palegoldenrod: 15657130,
                    palegreen: 10025880,
                    paleturquoise: 11529966,
                    palevioletred: 14381203,
                    papayawhip: 16773077,
                    peachpuff: 16767673,
                    peru: 13468991,
                    pink: 16761035,
                    plum: 14524637,
                    powderblue: 11591910,
                    purple: 8388736,
                    rebeccapurple: 6697881,
                    red: 16711680,
                    rosybrown: 12357519,
                    royalblue: 4286945,
                    saddlebrown: 9127187,
                    salmon: 16416882,
                    sandybrown: 16032864,
                    seagreen: 3050327,
                    seashell: 16774638,
                    sienna: 10506797,
                    silver: 12632256,
                    skyblue: 8900331,
                    slateblue: 6970061,
                    slategray: 7372944,
                    slategrey: 7372944,
                    snow: 16775930,
                    springgreen: 65407,
                    steelblue: 4620980,
                    tan: 13808780,
                    teal: 32896,
                    thistle: 14204888,
                    tomato: 16737095,
                    turquoise: 4251856,
                    violet: 15631086,
                    wheat: 16113331,
                    white: 16777215,
                    whitesmoke: 16119285,
                    yellow: 16776960,
                    yellowgreen: 10145074
                };

            function m() {
                return this.rgb().formatHex()
            }

            function b() {
                return this.rgb().formatRgb()
            }

            function w(t) {
                var e, n;
                return t = (t + "").trim().toLowerCase(), (e = l.exec(t)) ? (n = e[1].length, e = parseInt(e[1], 16), 6 === n ? _(e) : 3 === n ? new S(e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | 240 & e, (15 & e) << 4 | 15 & e, 1) : 8 === n ? P(e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, (255 & e) / 255) : 4 === n ? P(e >> 12 & 15 | e >> 8 & 240, e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | 240 & e, ((15 & e) << 4 | 15 & e) / 255) : null) : (e = f.exec(t)) ? new S(e[1], e[2], e[3], 1) : (e = h.exec(t)) ? new S(255 * e[1] / 100, 255 * e[2] / 100, 255 * e[3] / 100, 1) : (e = d.exec(t)) ? P(e[1], e[2], e[3], e[4]) : (e = p.exec(t)) ? P(255 * e[1] / 100, 255 * e[2] / 100, 255 * e[3] / 100, e[4]) : (e = g.exec(t)) ? C(e[1], e[2] / 100, e[3] / 100, 1) : (e = y.exec(t)) ? C(e[1], e[2] / 100, e[3] / 100, e[4]) : v.hasOwnProperty(t) ? _(v[t]) : "transparent" === t ? new S(NaN, NaN, NaN, 0) : null
            }

            function _(t) {
                return new S(t >> 16 & 255, t >> 8 & 255, 255 & t, 1)
            }

            function P(t, e, n, r) {
                return r <= 0 && (t = e = n = NaN), new S(t, e, n, r)
            }

            function E(t) {
                return t instanceof i || (t = w(t)), t ? new S((t = t.rgb()).r, t.g, t.b, t.opacity) : new S
            }

            function x(t, e, n, r) {
                return 1 === arguments.length ? E(t) : new S(t, e, n, null == r ? 1 : r)
            }

            function S(t, e, n, r) {
                this.r = +t, this.g = +e, this.b = +n, this.opacity = +r
            }

            function O() {
                return "#" + M(this.r) + M(this.g) + M(this.b)
            }

            function T() {
                var t = this.opacity;
                return (1 === (t = isNaN(t) ? 1 : Math.max(0, Math.min(1, t))) ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (1 === t ? ")" : ", " + t + ")")
            }

            function M(t) {
                return ((t = Math.max(0, Math.min(255, Math.round(t) || 0))) < 16 ? "0" : "") + t.toString(16)
            }

            function C(t, e, n, r) {
                return r <= 0 ? t = e = n = NaN : n <= 0 || n >= 1 ? t = e = NaN : e <= 0 && (t = NaN), new k(t, e, n, r)
            }

            function A(t) {
                if (t instanceof k) return new k(t.h, t.s, t.l, t.opacity);
                if (t instanceof i || (t = w(t)), !t) return new k;
                if (t instanceof k) return t;
                var e = (t = t.rgb()).r / 255,
                    n = t.g / 255,
                    r = t.b / 255,
                    o = Math.min(e, n, r),
                    a = Math.max(e, n, r),
                    s = NaN,
                    u = a - o,
                    c = (a + o) / 2;
                return u ? (s = e === a ? (n - r) / u + 6 * (n < r) : n === a ? (r - e) / u + 2 : (e - n) / u + 4, u /= c < .5 ? a + o : 2 - a - o, s *= 60) : u = c > 0 && c < 1 ? 0 : s, new k(s, u, c, t.opacity)
            }

            function k(t, e, n, r) {
                this.h = +t, this.s = +e, this.l = +n, this.opacity = +r
            }

            function I(t, e, n) {
                return 255 * (t < 60 ? e + (n - e) * t / 60 : t < 180 ? n : t < 240 ? e + (n - e) * (240 - t) / 60 : e)
            }(0, r.Z)(i, w, {
                copy: function(t) {
                    return Object.assign(new this.constructor, this, t)
                },
                displayable: function() {
                    return this.rgb().displayable()
                },
                hex: m,
                formatHex: m,
                formatHsl: function() {
                    return A(this).formatHsl()
                },
                formatRgb: b,
                toString: b
            }), (0, r.Z)(S, x, (0, r.l)(i, {
                brighter: function(t) {
                    return t = null == t ? a : Math.pow(a, t), new S(this.r * t, this.g * t, this.b * t, this.opacity)
                },
                darker: function(t) {
                    return t = null == t ? o : Math.pow(o, t), new S(this.r * t, this.g * t, this.b * t, this.opacity)
                },
                rgb: function() {
                    return this
                },
                displayable: function() {
                    return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1
                },
                hex: O,
                formatHex: O,
                formatRgb: T,
                toString: T
            })), (0, r.Z)(k, (function(t, e, n, r) {
                return 1 === arguments.length ? A(t) : new k(t, e, n, null == r ? 1 : r)
            }), (0, r.l)(i, {
                brighter: function(t) {
                    return t = null == t ? a : Math.pow(a, t), new k(this.h, this.s, this.l * t, this.opacity)
                },
                darker: function(t) {
                    return t = null == t ? o : Math.pow(o, t), new k(this.h, this.s, this.l * t, this.opacity)
                },
                rgb: function() {
                    var t = this.h % 360 + 360 * (this.h < 0),
                        e = isNaN(t) || isNaN(this.s) ? 0 : this.s,
                        n = this.l,
                        r = n + (n < .5 ? n : 1 - n) * e,
                        i = 2 * n - r;
                    return new S(I(t >= 240 ? t - 240 : t + 120, i, r), I(t, i, r), I(t < 120 ? t + 240 : t - 120, i, r), this.opacity)
                },
                displayable: function() {
                    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1
                },
                formatHsl: function() {
                    var t = this.opacity;
                    return (1 === (t = isNaN(t) ? 1 : Math.max(0, Math.min(1, t))) ? "hsl(" : "hsla(") + (this.h || 0) + ", " + 100 * (this.s || 0) + "%, " + 100 * (this.l || 0) + "%" + (1 === t ? ")" : ", " + t + ")")
                }
            }))
        },
        44087: function(t, e, n) {
            "use strict";

            function r(t, e, n) {
                t.prototype = e.prototype = n, n.constructor = t
            }

            function i(t, e) {
                var n = Object.create(t.prototype);
                for (var r in e) n[r] = e[r];
                return n
            }
            n.d(e, {
                Z: function() {
                    return r
                },
                l: function() {
                    return i
                }
            })
        },
        80241: function(t, e, n) {
            "use strict";
            n.d(e, {
                Uc: function() {
                    return m
                }
            });
            var r = n(44087),
                i = n(16372),
                o = n(11144);
            const a = .96422,
                s = .82521,
                u = 4 / 29,
                c = 6 / 29,
                l = 3 * c * c;

            function f(t) {
                if (t instanceof h) return new h(t.l, t.a, t.b, t.opacity);
                if (t instanceof b) return w(t);
                t instanceof i.Ss || (t = (0, i.SU)(t));
                var e, n, r = y(t.r),
                    o = y(t.g),
                    u = y(t.b),
                    c = d((.2225045 * r + .7168786 * o + .0606169 * u) / 1);
                return r === o && o === u ? e = n = c : (e = d((.4360747 * r + .3850649 * o + .1430804 * u) / a), n = d((.0139322 * r + .0971045 * o + .7141733 * u) / s)), new h(116 * c - 16, 500 * (e - c), 200 * (c - n), t.opacity)
            }

            function h(t, e, n, r) {
                this.l = +t, this.a = +e, this.b = +n, this.opacity = +r
            }

            function d(t) {
                return t > .008856451679035631 ? Math.pow(t, 1 / 3) : t / l + u
            }

            function p(t) {
                return t > c ? t * t * t : l * (t - u)
            }

            function g(t) {
                return 255 * (t <= .0031308 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - .055)
            }

            function y(t) {
                return (t /= 255) <= .04045 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4)
            }

            function v(t) {
                if (t instanceof b) return new b(t.h, t.c, t.l, t.opacity);
                if (t instanceof h || (t = f(t)), 0 === t.a && 0 === t.b) return new b(NaN, 0 < t.l && t.l < 100 ? 0 : NaN, t.l, t.opacity);
                var e = Math.atan2(t.b, t.a) * o.R;
                return new b(e < 0 ? e + 360 : e, Math.sqrt(t.a * t.a + t.b * t.b), t.l, t.opacity)
            }

            function m(t, e, n, r) {
                return 1 === arguments.length ? v(t) : new b(t, e, n, null == r ? 1 : r)
            }

            function b(t, e, n, r) {
                this.h = +t, this.c = +e, this.l = +n, this.opacity = +r
            }

            function w(t) {
                if (isNaN(t.h)) return new h(t.l, 0, 0, t.opacity);
                var e = t.h * o.u;
                return new h(t.l, Math.cos(e) * t.c, Math.sin(e) * t.c, t.opacity)
            }(0, r.Z)(h, (function(t, e, n, r) {
                return 1 === arguments.length ? f(t) : new h(t, e, n, null == r ? 1 : r)
            }), (0, r.l)(i.Il, {
                brighter: function(t) {
                    return new h(this.l + 18 * (null == t ? 1 : t), this.a, this.b, this.opacity)
                },
                darker: function(t) {
                    return new h(this.l - 18 * (null == t ? 1 : t), this.a, this.b, this.opacity)
                },
                rgb: function() {
                    var t = (this.l + 16) / 116,
                        e = isNaN(this.a) ? t : t + this.a / 500,
                        n = isNaN(this.b) ? t : t - this.b / 200;
                    return e = a * p(e), t = 1 * p(t), n = s * p(n), new i.Ss(g(3.1338561 * e - 1.6168667 * t - .4906146 * n), g(-.9787684 * e + 1.9161415 * t + .033454 * n), g(.0719453 * e - .2289914 * t + 1.4052427 * n), this.opacity)
                }
            })), (0, r.Z)(b, m, (0, r.l)(i.Il, {
                brighter: function(t) {
                    return new b(this.h, this.c, this.l + 18 * (null == t ? 1 : t), this.opacity)
                },
                darker: function(t) {
                    return new b(this.h, this.c, this.l - 18 * (null == t ? 1 : t), this.opacity)
                },
                rgb: function() {
                    return w(this).rgb()
                }
            }))
        },
        11144: function(t, e, n) {
            "use strict";
            n.d(e, {
                u: function() {
                    return r
                },
                R: function() {
                    return i
                }
            });
            const r = Math.PI / 180,
                i = 180 / Math.PI
        },
        82531: function(t, e, n) {
            "use strict";
            n.d(e, {
                ue: function() {
                    return i
                },
                Bj: function() {
                    return o
                },
                Jb: function() {
                    return a
                }
            });
            var r = (0, n(42132).Z)(","),
                i = r.parse,
                o = r.parseRows,
                a = (r.format, r.formatBody, r.formatRows);
            r.formatRow, r.formatValue
        },
        42132: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return c
                }
            });
            var r = {},
                i = {};

            function o(t) {
                return new Function("d", "return {" + t.map((function(t, e) {
                    return JSON.stringify(t) + ": d[" + e + '] || ""'
                })).join(",") + "}")
            }

            function a(t) {
                var e = Object.create(null),
                    n = [];
                return t.forEach((function(t) {
                    for (var r in t) r in e || n.push(e[r] = r)
                })), n
            }

            function s(t, e) {
                var n = t + "",
                    r = n.length;
                return r < e ? new Array(e - r + 1).join(0) + n : n
            }

            function u(t) {
                var e, n = t.getUTCHours(),
                    r = t.getUTCMinutes(),
                    i = t.getUTCSeconds(),
                    o = t.getUTCMilliseconds();
                return isNaN(t) ? "Invalid Date" : ((e = t.getUTCFullYear()) < 0 ? "-" + s(-e, 6) : e > 9999 ? "+" + s(e, 6) : s(e, 4)) + "-" + s(t.getUTCMonth() + 1, 2) + "-" + s(t.getUTCDate(), 2) + (o ? "T" + s(n, 2) + ":" + s(r, 2) + ":" + s(i, 2) + "." + s(o, 3) + "Z" : i ? "T" + s(n, 2) + ":" + s(r, 2) + ":" + s(i, 2) + "Z" : r || n ? "T" + s(n, 2) + ":" + s(r, 2) + "Z" : "")
            }

            function c(t) {
                var e = new RegExp('["' + t + "\n\r]"),
                    n = t.charCodeAt(0);

                function s(t, e) {
                    var o, a = [],
                        s = t.length,
                        u = 0,
                        c = 0,
                        l = s <= 0,
                        f = !1;

                    function h() {
                        if (l) return i;
                        if (f) return f = !1, r;
                        var e, o, a = u;
                        if (34 === t.charCodeAt(a)) {
                            for (; u++ < s && 34 !== t.charCodeAt(u) || 34 === t.charCodeAt(++u););
                            return (e = u) >= s ? l = !0 : 10 === (o = t.charCodeAt(u++)) ? f = !0 : 13 === o && (f = !0, 10 === t.charCodeAt(u) && ++u), t.slice(a + 1, e - 1).replace(/""/g, '"')
                        }
                        for (; u < s;) {
                            if (10 === (o = t.charCodeAt(e = u++))) f = !0;
                            else if (13 === o) f = !0, 10 === t.charCodeAt(u) && ++u;
                            else if (o !== n) continue;
                            return t.slice(a, e)
                        }
                        return l = !0, t.slice(a, s)
                    }
                    for (10 === t.charCodeAt(s - 1) && --s, 13 === t.charCodeAt(s - 1) && --s;
                        (o = h()) !== i;) {
                        for (var d = []; o !== r && o !== i;) d.push(o), o = h();
                        e && null == (d = e(d, c++)) || a.push(d)
                    }
                    return a
                }

                function c(e, n) {
                    return e.map((function(e) {
                        return n.map((function(t) {
                            return f(e[t])
                        })).join(t)
                    }))
                }

                function l(e) {
                    return e.map(f).join(t)
                }

                function f(t) {
                    return null == t ? "" : t instanceof Date ? u(t) : e.test(t += "") ? '"' + t.replace(/"/g, '""') + '"' : t
                }
                return {
                    parse: function(t, e) {
                        var n, r, i = s(t, (function(t, i) {
                            if (n) return n(t, i - 1);
                            r = t, n = e ? function(t, e) {
                                var n = o(t);
                                return function(r, i) {
                                    return e(n(r), i, t)
                                }
                            }(t, e) : o(t)
                        }));
                        return i.columns = r || [], i
                    },
                    parseRows: s,
                    format: function(e, n) {
                        return null == n && (n = a(e)), [n.map(f).join(t)].concat(c(e, n)).join("\n")
                    },
                    formatBody: function(t, e) {
                        return null == e && (e = a(t)), c(t, e).join("\n")
                    },
                    formatRows: function(t) {
                        return t.map(l).join("\n")
                    },
                    formatRow: l,
                    formatValue: f
                }
            }
        },
        68716: function(t, e, n) {
            "use strict";

            function r(t) {
                return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2
            }
            n.d(e, {
                tw: function() {
                    return r
                }
            })
        },
        42957: function(t, e, n) {
            "use strict";
            n.d(e, {
                WU: function() {
                    return f
                },
                jH: function() {
                    return h
                }
            });
            var r = n(33085);
            var i = n(46196);
            var o, a = n(38885);

            function s(t, e) {
                var n = (0, a.V)(t, e);
                if (!n) return t + "";
                var r = n[0],
                    i = n[1];
                return i < 0 ? "0." + new Array(-i).join("0") + r : r.length > i + 1 ? r.slice(0, i + 1) + "." + r.slice(i + 1) : r + new Array(i - r.length + 2).join("0")
            }
            var u = {
                "%": (t, e) => (100 * t).toFixed(e),
                b: t => Math.round(t).toString(2),
                c: t => t + "",
                d: a.Z,
                e: (t, e) => t.toExponential(e),
                f: (t, e) => t.toFixed(e),
                g: (t, e) => t.toPrecision(e),
                o: t => Math.round(t).toString(8),
                p: (t, e) => s(100 * t, e),
                r: s,
                s: function(t, e) {
                    var n = (0, a.V)(t, e);
                    if (!n) return t + "";
                    var r = n[0],
                        i = n[1],
                        s = i - (o = 3 * Math.max(-8, Math.min(8, Math.floor(i / 3)))) + 1,
                        u = r.length;
                    return s === u ? r : s > u ? r + new Array(s - u + 1).join("0") : s > 0 ? r.slice(0, s) + "." + r.slice(s) : "0." + new Array(1 - s).join("0") + (0, a.V)(t, Math.max(0, e + s - 1))[0]
                },
                X: t => Math.round(t).toString(16).toUpperCase(),
                x: t => Math.round(t).toString(16)
            };

            function c(t) {
                return t
            }
            var l, f, h, d = Array.prototype.map,
                p = ["y", "z", "a", "f", "p", "n", "\xb5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

            function g(t) {
                var e, n, a = void 0 === t.grouping || void 0 === t.thousands ? c : (e = d.call(t.grouping, Number), n = t.thousands + "", function(t, r) {
                        for (var i = t.length, o = [], a = 0, s = e[0], u = 0; i > 0 && s > 0 && (u + s + 1 > r && (s = Math.max(1, r - u)), o.push(t.substring(i -= s, i + s)), !((u += s + 1) > r));) s = e[a = (a + 1) % e.length];
                        return o.reverse().join(n)
                    }),
                    s = void 0 === t.currency ? "" : t.currency[0] + "",
                    l = void 0 === t.currency ? "" : t.currency[1] + "",
                    f = void 0 === t.decimal ? "." : t.decimal + "",
                    h = void 0 === t.numerals ? c : function(t) {
                        return function(e) {
                            return e.replace(/[0-9]/g, (function(e) {
                                return t[+e]
                            }))
                        }
                    }(d.call(t.numerals, String)),
                    g = void 0 === t.percent ? "%" : t.percent + "",
                    y = void 0 === t.minus ? "\u2212" : t.minus + "",
                    v = void 0 === t.nan ? "NaN" : t.nan + "";

                function m(t) {
                    var e = (t = (0, i.Z)(t)).fill,
                        n = t.align,
                        r = t.sign,
                        c = t.symbol,
                        d = t.zero,
                        m = t.width,
                        b = t.comma,
                        w = t.precision,
                        _ = t.trim,
                        P = t.type;
                    "n" === P ? (b = !0, P = "g") : u[P] || (void 0 === w && (w = 12), _ = !0, P = "g"), (d || "0" === e && "=" === n) && (d = !0, e = "0", n = "=");
                    var E = "$" === c ? s : "#" === c && /[boxX]/.test(P) ? "0" + P.toLowerCase() : "",
                        x = "$" === c ? l : /[%p]/.test(P) ? g : "",
                        S = u[P],
                        O = /[defgprs%]/.test(P);

                    function T(t) {
                        var i, s, u, c = E,
                            l = x;
                        if ("c" === P) l = S(t) + l, t = "";
                        else {
                            var g = (t = +t) < 0 || 1 / t < 0;
                            if (t = isNaN(t) ? v : S(Math.abs(t), w), _ && (t = function(t) {
                                    t: for (var e, n = t.length, r = 1, i = -1; r < n; ++r) switch (t[r]) {
                                        case ".":
                                            i = e = r;
                                            break;
                                        case "0":
                                            0 === i && (i = r), e = r;
                                            break;
                                        default:
                                            if (!+t[r]) break t;
                                            i > 0 && (i = 0)
                                    }
                                    return i > 0 ? t.slice(0, i) + t.slice(e + 1) : t
                                }(t)), g && 0 === +t && "+" !== r && (g = !1), c = (g ? "(" === r ? r : y : "-" === r || "(" === r ? "" : r) + c, l = ("s" === P ? p[8 + o / 3] : "") + l + (g && "(" === r ? ")" : ""), O)
                                for (i = -1, s = t.length; ++i < s;)
                                    if (48 > (u = t.charCodeAt(i)) || u > 57) {
                                        l = (46 === u ? f + t.slice(i + 1) : t.slice(i)) + l, t = t.slice(0, i);
                                        break
                                    }
                        }
                        b && !d && (t = a(t, 1 / 0));
                        var T = c.length + t.length + l.length,
                            M = T < m ? new Array(m - T + 1).join(e) : "";
                        switch (b && d && (t = a(M + t, M.length ? m - l.length : 1 / 0), M = ""), n) {
                            case "<":
                                t = c + t + l + M;
                                break;
                            case "=":
                                t = c + M + t + l;
                                break;
                            case "^":
                                t = M.slice(0, T = M.length >> 1) + c + t + l + M.slice(T);
                                break;
                            default:
                                t = M + c + t + l
                        }
                        return h(t)
                    }
                    return w = void 0 === w ? 6 : /[gprs]/.test(P) ? Math.max(1, Math.min(21, w)) : Math.max(0, Math.min(20, w)), T.toString = function() {
                        return t + ""
                    }, T
                }
                return {
                    format: m,
                    formatPrefix: function(t, e) {
                        var n = m(((t = (0, i.Z)(t)).type = "f", t)),
                            o = 3 * Math.max(-8, Math.min(8, Math.floor((0, r.Z)(e) / 3))),
                            a = Math.pow(10, -o),
                            s = p[8 + o / 3];
                        return function(t) {
                            return n(a * t) + s
                        }
                    }
                }
            }
            l = g({
                thousands: ",",
                grouping: [3],
                currency: ["$", ""]
            }), f = l.format, h = l.formatPrefix
        },
        33085: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return i
                }
            });
            var r = n(38885);

            function i(t) {
                return (t = (0, r.V)(Math.abs(t))) ? t[1] : NaN
            }
        },
        38885: function(t, e, n) {
            "use strict";

            function r(t) {
                return Math.abs(t = Math.round(t)) >= 1e21 ? t.toLocaleString("en").replace(/,/g, "") : t.toString(10)
            }

            function i(t, e) {
                if ((n = (t = e ? t.toExponential(e - 1) : t.toExponential()).indexOf("e")) < 0) return null;
                var n, r = t.slice(0, n);
                return [r.length > 1 ? r[0] + r.slice(2) : r, +t.slice(n + 1)]
            }
            n.d(e, {
                Z: function() {
                    return r
                },
                V: function() {
                    return i
                }
            })
        },
        46196: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return i
                }
            });
            var r = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

            function i(t) {
                if (!(e = r.exec(t))) throw new Error("invalid format: " + t);
                var e;
                return new o({
                    fill: e[1],
                    align: e[2],
                    sign: e[3],
                    symbol: e[4],
                    zero: e[5],
                    width: e[6],
                    comma: e[7],
                    precision: e[8] && e[8].slice(1),
                    trim: e[9],
                    type: e[10]
                })
            }

            function o(t) {
                this.fill = void 0 === t.fill ? " " : t.fill + "", this.align = void 0 === t.align ? ">" : t.align + "", this.sign = void 0 === t.sign ? "-" : t.sign + "", this.symbol = void 0 === t.symbol ? "" : t.symbol + "", this.zero = !!t.zero, this.width = void 0 === t.width ? void 0 : +t.width, this.comma = !!t.comma, this.precision = void 0 === t.precision ? void 0 : +t.precision, this.trim = !!t.trim, this.type = void 0 === t.type ? "" : t.type + ""
            }
            i.prototype = o.prototype, o.prototype.toString = function() {
                return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (void 0 === this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (void 0 === this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + (this.trim ? "~" : "") + this.type
            }
        },
        85910: function(t, e, n) {
            "use strict";
            n.d(e, {
                wx: function() {
                    return o
                },
                yi: function() {
                    return a
                },
                ZP: function() {
                    return s
                }
            });
            var r = n(55302);

            function i(t, e) {
                return function(n) {
                    return t + n * e
                }
            }

            function o(t, e) {
                var n = e - t;
                return n ? i(t, n > 180 || n < -180 ? n - 360 * Math.round(n / 360) : n) : (0, r.Z)(isNaN(t) ? e : t)
            }

            function a(t) {
                return 1 === (t = +t) ? s : function(e, n) {
                    return n - e ? function(t, e, n) {
                        return t = Math.pow(t, n), e = Math.pow(e, n) - t, n = 1 / n,
                            function(r) {
                                return Math.pow(t + r * e, n)
                            }
                    }(e, n, t) : (0, r.Z)(isNaN(e) ? n : e)
                }
            }

            function s(t, e) {
                var n = e - t;
                return n ? i(t, n) : (0, r.Z)(isNaN(t) ? e : t)
            }
        },
        55302: function(t, e) {
            "use strict";
            e.Z = t => () => t
        },
        73626: function(t, e, n) {
            "use strict";

            function r(t, e) {
                return t = +t, e = +e,
                    function(n) {
                        return t * (1 - n) + e * n
                    }
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        88124: function(t, e, n) {
            "use strict";
            n.d(e, {
                ZP: function() {
                    return a
                },
                hD: function() {
                    return u
                }
            });
            var r = n(16372);

            function i(t, e, n, r, i) {
                var o = t * t,
                    a = o * t;
                return ((1 - 3 * t + 3 * o - a) * e + (4 - 6 * o + 3 * a) * n + (1 + 3 * t + 3 * o - 3 * a) * r + a * i) / 6
            }
            var o = n(85910),
                a = function t(e) {
                    var n = (0, o.yi)(e);

                    function i(t, e) {
                        var i = n((t = (0, r.B8)(t)).r, (e = (0, r.B8)(e)).r),
                            a = n(t.g, e.g),
                            s = n(t.b, e.b),
                            u = (0, o.ZP)(t.opacity, e.opacity);
                        return function(e) {
                            return t.r = i(e), t.g = a(e), t.b = s(e), t.opacity = u(e), t + ""
                        }
                    }
                    return i.gamma = t, i
                }(1);

            function s(t) {
                return function(e) {
                    var n, i, o = e.length,
                        a = new Array(o),
                        s = new Array(o),
                        u = new Array(o);
                    for (n = 0; n < o; ++n) i = (0, r.B8)(e[n]), a[n] = i.r || 0, s[n] = i.g || 0, u[n] = i.b || 0;
                    return a = t(a), s = t(s), u = t(u), i.opacity = 1,
                        function(t) {
                            return i.r = a(t), i.g = s(t), i.b = u(t), i + ""
                        }
                }
            }
            var u = s((function(t) {
                var e = t.length - 1;
                return function(n) {
                    var r = n <= 0 ? n = 0 : n >= 1 ? (n = 1, e - 1) : Math.floor(n * e),
                        o = t[r],
                        a = t[r + 1],
                        s = r > 0 ? t[r - 1] : 2 * o - a,
                        u = r < e - 1 ? t[r + 2] : 2 * a - o;
                    return i((n - r / e) * e, s, o, a, u)
                }
            }));
            s((function(t) {
                var e = t.length;
                return function(n) {
                    var r = Math.floor(((n %= 1) < 0 ? ++n : n) * e),
                        o = t[(r + e - 1) % e],
                        a = t[r % e],
                        s = t[(r + 1) % e],
                        u = t[(r + 2) % e];
                    return i((n - r / e) * e, o, a, s, u)
                }
            }))
        },
        55720: function(t, e, n) {
            "use strict";

            function r(t, e) {
                return t = +t, e = +e,
                    function(n) {
                        return Math.round(t * (1 - n) + e * n)
                    }
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        78685: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return p
                }
            });
            var r = n(16372),
                i = n(88124);

            function o(t, e) {
                var n, r = e ? e.length : 0,
                    i = t ? Math.min(r, t.length) : 0,
                    o = new Array(i),
                    a = new Array(r);
                for (n = 0; n < i; ++n) o[n] = p(t[n], e[n]);
                for (; n < r; ++n) a[n] = e[n];
                return function(t) {
                    for (n = 0; n < i; ++n) a[n] = o[n](t);
                    return a
                }
            }

            function a(t, e) {
                var n = new Date;
                return t = +t, e = +e,
                    function(r) {
                        return n.setTime(t * (1 - r) + e * r), n
                    }
            }
            var s = n(73626);

            function u(t, e) {
                var n, r = {},
                    i = {};
                for (n in null !== t && "object" === typeof t || (t = {}), null !== e && "object" === typeof e || (e = {}), e) n in t ? r[n] = p(t[n], e[n]) : i[n] = e[n];
                return function(t) {
                    for (n in r) i[n] = r[n](t);
                    return i
                }
            }
            var c = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
                l = new RegExp(c.source, "g");

            function f(t, e) {
                var n, r, i, o = c.lastIndex = l.lastIndex = 0,
                    a = -1,
                    u = [],
                    f = [];
                for (t += "", e += "";
                    (n = c.exec(t)) && (r = l.exec(e));)(i = r.index) > o && (i = e.slice(o, i), u[a] ? u[a] += i : u[++a] = i), (n = n[0]) === (r = r[0]) ? u[a] ? u[a] += r : u[++a] = r : (u[++a] = null, f.push({
                    i: a,
                    x: (0, s.Z)(n, r)
                })), o = l.lastIndex;
                return o < e.length && (i = e.slice(o), u[a] ? u[a] += i : u[++a] = i), u.length < 2 ? f[0] ? function(t) {
                    return function(e) {
                        return t(e) + ""
                    }
                }(f[0].x) : function(t) {
                    return function() {
                        return t
                    }
                }(e) : (e = f.length, function(t) {
                    for (var n, r = 0; r < e; ++r) u[(n = f[r]).i] = n.x(t);
                    return u.join("")
                })
            }
            var h = n(55302);

            function d(t, e) {
                e || (e = []);
                var n, r = t ? Math.min(e.length, t.length) : 0,
                    i = e.slice();
                return function(o) {
                    for (n = 0; n < r; ++n) i[n] = t[n] * (1 - o) + e[n] * o;
                    return i
                }
            }

            function p(t, e) {
                var n, c, l = typeof e;
                return null == e || "boolean" === l ? (0, h.Z)(e) : ("number" === l ? s.Z : "string" === l ? (n = (0, r.ZP)(e)) ? (e = n, i.ZP) : f : e instanceof r.ZP ? i.ZP : e instanceof Date ? a : (c = e, !ArrayBuffer.isView(c) || c instanceof DataView ? Array.isArray(e) ? o : "function" !== typeof e.valueOf && "function" !== typeof e.toString || isNaN(e) ? u : s.Z : d))(t, e)
            }
        },
        77202: function(t, e, n) {
            "use strict";

            function r(t) {
                for (var e = t.length / 6 | 0, n = new Array(e), r = 0; r < e;) n[r] = "#" + t.slice(6 * r, 6 * ++r);
                return n
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        21835: function(t, e, n) {
            "use strict";
            var r = n(88124);
            e.Z = t => (0, r.hD)(t[t.length - 1])
        },
        57237: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(r.Z);
            (0, i.Z)(o)
        },
        83267: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(r.Z);
            (0, i.Z)(o)
        },
        35369: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(r.Z);
            (0, i.Z)(o)
        },
        11250: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(r.Z);
            (0, i.Z)(o)
        },
        21961: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(r.Z);
            (0, i.Z)(o)
        },
        42109: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(r.Z);
            (0, i.Z)(o)
        },
        16009: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(r.Z);
            (0, i.Z)(o)
        },
        82588: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(r.Z);
            (0, i.Z)(o)
        },
        78628: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(r.Z);
            (0, i.Z)(o)
        },
        74636: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(r.Z);
            (0, i.Z)(o)
        },
        89661: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(r.Z);
            (0, i.Z)(o)
        },
        47302: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(r.Z);
            (0, i.Z)(o)
        },
        42320: function(t, e, n) {
            "use strict";
            n.d(e, {
                H7: function() {
                    return _
                },
                s7: function() {
                    return w
                }
            });
            var r = n(44087),
                i = n(16372),
                o = n(11144),
                a = -.14861,
                s = 1.78277,
                u = -.29227,
                c = -.90649,
                l = 1.97294,
                f = l * c,
                h = l * s,
                d = s * u - c * a;

            function p(t) {
                if (t instanceof y) return new y(t.h, t.s, t.l, t.opacity);
                t instanceof i.Ss || (t = (0, i.SU)(t));
                var e = t.r / 255,
                    n = t.g / 255,
                    r = t.b / 255,
                    a = (d * r + f * e - h * n) / (d + f - h),
                    s = r - a,
                    p = (l * (n - a) - u * s) / c,
                    g = Math.sqrt(p * p + s * s) / (l * a * (1 - a)),
                    v = g ? Math.atan2(p, s) * o.R - 120 : NaN;
                return new y(v < 0 ? v + 360 : v, g, a, t.opacity)
            }

            function g(t, e, n, r) {
                return 1 === arguments.length ? p(t) : new y(t, e, n, null == r ? 1 : r)
            }

            function y(t, e, n, r) {
                this.h = +t, this.s = +e, this.l = +n, this.opacity = +r
            }(0, r.Z)(y, g, (0, r.l)(i.Il, {
                brighter: function(t) {
                    return t = null == t ? i.J5 : Math.pow(i.J5, t), new y(this.h, this.s, this.l * t, this.opacity)
                },
                darker: function(t) {
                    return t = null == t ? i.xV : Math.pow(i.xV, t), new y(this.h, this.s, this.l * t, this.opacity)
                },
                rgb: function() {
                    var t = isNaN(this.h) ? 0 : (this.h + 120) * o.u,
                        e = +this.l,
                        n = isNaN(this.s) ? 0 : this.s * e * (1 - e),
                        r = Math.cos(t),
                        f = Math.sin(t);
                    return new i.Ss(255 * (e + n * (a * r + s * f)), 255 * (e + n * (u * r + c * f)), 255 * (e + n * (l * r)), this.opacity)
                }
            }));
            var v = n(85910);

            function m(t) {
                return function e(n) {
                    function r(e, r) {
                        var i = t((e = g(e)).h, (r = g(r)).h),
                            o = (0, v.ZP)(e.s, r.s),
                            a = (0, v.ZP)(e.l, r.l),
                            s = (0, v.ZP)(e.opacity, r.opacity);
                        return function(t) {
                            return e.h = i(t), e.s = o(t), e.l = a(Math.pow(t, n)), e.opacity = s(t), e + ""
                        }
                    }
                    return n = +n, r.gamma = e, r
                }(1)
            }
            m(v.wx);
            var b = m(v.ZP),
                w = b(g(-100, .75, .35), g(80, 1.5, .8)),
                _ = b(g(260, .75, .35), g(80, 1.5, .8));
            g()
        },
        87799: function(t, e, n) {
            "use strict";
            n.d(e, {
                uX: function() {
                    return o
                },
                yy: function() {
                    return a
                },
                zD: function() {
                    return s
                }
            });
            var r = n(77202);

            function i(t) {
                var e = t.length;
                return function(n) {
                    return t[Math.max(0, Math.min(e - 1, Math.floor(n * e)))]
                }
            }
            e.ZP = i((0, r.Z)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
            var o = i((0, r.Z)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),
                a = i((0, r.Z)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),
                s = i((0, r.Z)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"))
        },
        40403: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(r.Z);
            (0, i.Z)(o)
        },
        44359: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(r.Z);
            (0, i.Z)(o)
        },
        70590: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(r.Z);
            (0, i.Z)(o)
        },
        41225: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(r.Z);
            (0, i.Z)(o)
        },
        8634: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(r.Z);
            (0, i.Z)(o)
        },
        46610: function(t, e, n) {
            "use strict";
            n.d(e, {
                r: function() {
                    return o
                }
            });
            var r = n(77202),
                i = n(21835),
                o = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(r.Z);
            (0, i.Z)(o)
        },
        29217: function(t, e, n) {
            "use strict";
            n.d(e, {
                JG: function() {
                    return d
                },
                ZP: function() {
                    return g
                },
                yR: function() {
                    return c
                },
                l4: function() {
                    return p
                }
            });
            var r = n(46209),
                i = n(78685),
                o = n(73626),
                a = n(55720);

            function s(t) {
                return +t
            }
            var u = [0, 1];

            function c(t) {
                return t
            }

            function l(t, e) {
                return (e -= t = +t) ? function(n) {
                    return (n - t) / e
                } : (n = isNaN(e) ? NaN : .5, function() {
                    return n
                });
                var n
            }

            function f(t, e, n) {
                var r = t[0],
                    i = t[1],
                    o = e[0],
                    a = e[1];
                return i < r ? (r = l(i, r), o = n(a, o)) : (r = l(r, i), o = n(o, a)),
                    function(t) {
                        return o(r(t))
                    }
            }

            function h(t, e, n) {
                var i = Math.min(t.length, e.length) - 1,
                    o = new Array(i),
                    a = new Array(i),
                    s = -1;
                for (t[i] < t[0] && (t = t.slice().reverse(), e = e.slice().reverse()); ++s < i;) o[s] = l(t[s], t[s + 1]), a[s] = n(e[s], e[s + 1]);
                return function(e) {
                    var n = (0, r.ZP)(t, e, 1, i) - 1;
                    return a[n](o[n](e))
                }
            }

            function d(t, e) {
                return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())
            }

            function p() {
                var t, e, n, r, l, d, p = u,
                    g = u,
                    y = i.Z,
                    v = c;

                function m() {
                    var t = Math.min(p.length, g.length);
                    return v !== c && (v = function(t, e) {
                        var n;
                        return t > e && (n = t, t = e, e = n),
                            function(n) {
                                return Math.max(t, Math.min(e, n))
                            }
                    }(p[0], p[t - 1])), r = t > 2 ? h : f, l = d = null, b
                }

                function b(e) {
                    return isNaN(e = +e) ? n : (l || (l = r(p.map(t), g, y)))(t(v(e)))
                }
                return b.invert = function(n) {
                        return v(e((d || (d = r(g, p.map(t), o.Z)))(n)))
                    }, b.domain = function(t) {
                        return arguments.length ? (p = Array.from(t, s), m()) : p.slice()
                    }, b.range = function(t) {
                        return arguments.length ? (g = Array.from(t), m()) : g.slice()
                    }, b.rangeRound = function(t) {
                        return g = Array.from(t), y = a.Z, m()
                    }, b.clamp = function(t) {
                        return arguments.length ? (v = !!t || c, m()) : v !== c
                    }, b.interpolate = function(t) {
                        return arguments.length ? (y = t, m()) : y
                    }, b.unknown = function(t) {
                        return arguments.length ? (n = t, b) : n
                    },
                    function(n, r) {
                        return t = n, e = r, m()
                    }
            }

            function g() {
                return p()(c, c)
            }
        },
        48348: function(t, e, n) {
            "use strict";

            function r(t, e) {
                switch (arguments.length) {
                    case 0:
                        break;
                    case 1:
                        this.range(t);
                        break;
                    default:
                        this.range(e).domain(t)
                }
                return this
            }

            function i(t, e) {
                switch (arguments.length) {
                    case 0:
                        break;
                    case 1:
                        "function" === typeof t ? this.interpolator(t) : this.range(t);
                        break;
                    default:
                        this.domain(t), "function" === typeof e ? this.interpolator(e) : this.range(e)
                }
                return this
            }
            n.d(e, {
                o: function() {
                    return r
                },
                O: function() {
                    return i
                }
            })
        },
        66871: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return f
                },
                Q: function() {
                    return l
                }
            });
            var r = n(67614),
                i = n(29217),
                o = n(48348),
                a = n(46196),
                s = n(33085);
            var u = n(42957);

            function c(t, e, n, i) {
                var o, c = (0, r.ly)(t, e, n);
                switch ((i = (0, a.Z)(null == i ? ",f" : i)).type) {
                    case "s":
                        var l = Math.max(Math.abs(t), Math.abs(e));
                        return null != i.precision || isNaN(o = function(t, e) {
                            return Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor((0, s.Z)(e) / 3))) - (0, s.Z)(Math.abs(t)))
                        }(c, l)) || (i.precision = o), (0, u.jH)(i, l);
                    case "":
                    case "e":
                    case "g":
                    case "p":
                    case "r":
                        null != i.precision || isNaN(o = function(t, e) {
                            return t = Math.abs(t), e = Math.abs(e) - t, Math.max(0, (0, s.Z)(e) - (0, s.Z)(t)) + 1
                        }(c, Math.max(Math.abs(t), Math.abs(e)))) || (i.precision = o - ("e" === i.type));
                        break;
                    case "f":
                    case "%":
                        null != i.precision || isNaN(o = function(t) {
                            return Math.max(0, -(0, s.Z)(Math.abs(t)))
                        }(c)) || (i.precision = o - 2 * ("%" === i.type))
                }
                return (0, u.WU)(i)
            }

            function l(t) {
                var e = t.domain;
                return t.ticks = function(t) {
                    var n = e();
                    return (0, r.ZP)(n[0], n[n.length - 1], null == t ? 10 : t)
                }, t.tickFormat = function(t, n) {
                    var r = e();
                    return c(r[0], r[r.length - 1], null == t ? 10 : t, n)
                }, t.nice = function(n) {
                    null == n && (n = 10);
                    var i, o, a = e(),
                        s = 0,
                        u = a.length - 1,
                        c = a[s],
                        l = a[u],
                        f = 10;
                    for (l < c && (o = c, c = l, l = o, o = s, s = u, u = o); f-- > 0;) {
                        if ((o = (0, r.G9)(c, l, n)) === i) return a[s] = c, a[u] = l, e(a);
                        if (o > 0) c = Math.floor(c / o) * o, l = Math.ceil(l / o) * o;
                        else {
                            if (!(o < 0)) break;
                            c = Math.ceil(c * o) / o, l = Math.floor(l * o) / o
                        }
                        i = o
                    }
                    return t
                }, t
            }

            function f() {
                var t = (0, i.ZP)();
                return t.copy = function() {
                    return (0, i.JG)(t, f())
                }, o.o.apply(t, arguments), l(t)
            }
        },
        55128: function(t, e, n) {
            "use strict";
            n.d(e, {
                Hh: function() {
                    return c
                },
                ZP: function() {
                    return l
                }
            });
            var r = n(66871),
                i = n(29217),
                o = n(48348);

            function a(t) {
                return function(e) {
                    return e < 0 ? -Math.pow(-e, t) : Math.pow(e, t)
                }
            }

            function s(t) {
                return t < 0 ? -Math.sqrt(-t) : Math.sqrt(t)
            }

            function u(t) {
                return t < 0 ? -t * t : t * t
            }

            function c(t) {
                var e = t(i.yR, i.yR),
                    n = 1;

                function o() {
                    return 1 === n ? t(i.yR, i.yR) : .5 === n ? t(s, u) : t(a(n), a(1 / n))
                }
                return e.exponent = function(t) {
                    return arguments.length ? (n = +t, o()) : n
                }, (0, r.Q)(e)
            }

            function l() {
                var t = c((0, i.l4)());
                return t.copy = function() {
                    return (0, i.JG)(t, l()).exponent(t.exponent())
                }, o.o.apply(t, arguments), t
            }
        },
        74250: function(t, e, n) {
            "use strict";
            n.d(e, {
                ZP: function() {
                    return f
                },
                UN: function() {
                    return h
                }
            });
            var r = n(78685),
                i = n(55720),
                o = n(29217),
                a = n(48348),
                s = n(66871),
                u = n(55128);

            function c() {
                var t, e, n, a, s, u = 0,
                    c = 1,
                    l = o.yR,
                    f = !1;

                function h(e) {
                    return isNaN(e = +e) ? s : l(0 === n ? .5 : (e = (a(e) - t) * n, f ? Math.max(0, Math.min(1, e)) : e))
                }

                function d(t) {
                    return function(e) {
                        var n, r;
                        return arguments.length ? ([n, r] = e, l = t(n, r), h) : [l(0), l(1)]
                    }
                }
                return h.domain = function(r) {
                        return arguments.length ? ([u, c] = r, t = a(u = +u), e = a(c = +c), n = t === e ? 0 : 1 / (e - t), h) : [u, c]
                    }, h.clamp = function(t) {
                        return arguments.length ? (f = !!t, h) : f
                    }, h.interpolator = function(t) {
                        return arguments.length ? (l = t, h) : l
                    }, h.range = d(r.Z), h.rangeRound = d(i.Z), h.unknown = function(t) {
                        return arguments.length ? (s = t, h) : s
                    },
                    function(r) {
                        return a = r, t = r(u), e = r(c), n = t === e ? 0 : 1 / (e - t), h
                    }
            }

            function l(t, e) {
                return e.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())
            }

            function f() {
                var t = (0, s.Q)(c()(o.yR));
                return t.copy = function() {
                    return l(t, f())
                }, a.O.apply(t, arguments)
            }

            function h() {
                var t = (0, u.Hh)(c());
                return t.copy = function() {
                    return l(t, h()).exponent(t.exponent())
                }, a.O.apply(t, arguments)
            }
        },
        81953: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return T
                }
            });
            var r = n(29173),
                i = n(67614),
                o = n(11829),
                a = (0, o.Z)((function() {}), (function(t, e) {
                    t.setTime(+t + e)
                }), (function(t, e) {
                    return e - t
                }));
            a.every = function(t) {
                return t = Math.floor(t), isFinite(t) && t > 0 ? t > 1 ? (0, o.Z)((function(e) {
                    e.setTime(Math.floor(e / t) * t)
                }), (function(e, n) {
                    e.setTime(+e + n * t)
                }), (function(e, n) {
                    return (n - e) / t
                })) : a : null
            };
            var s = a,
                u = (a.range, n(82209)),
                c = n(4584),
                l = n(22776),
                f = n(73368),
                h = n(42784),
                d = n(7197),
                p = n(15086),
                g = n(72108),
                y = n(29217),
                v = n(48348);
            var m = 1e3,
                b = 6e4,
                w = 36e5,
                _ = 864e5,
                P = 2592e6,
                E = 31536e6;

            function x(t) {
                return new Date(t)
            }

            function S(t) {
                return t instanceof Date ? +t : +new Date(+t)
            }

            function O(t, e, n, o, a, s, u, c, l) {
                var f = (0, y.ZP)(),
                    h = f.invert,
                    d = f.domain,
                    p = l(".%L"),
                    g = l(":%S"),
                    v = l("%I:%M"),
                    T = l("%I %p"),
                    M = l("%a %d"),
                    C = l("%b %d"),
                    A = l("%B"),
                    k = l("%Y"),
                    I = [
                        [u, 1, m],
                        [u, 5, 5e3],
                        [u, 15, 15e3],
                        [u, 30, 3e4],
                        [s, 1, b],
                        [s, 5, 3e5],
                        [s, 15, 9e5],
                        [s, 30, 18e5],
                        [a, 1, w],
                        [a, 3, 108e5],
                        [a, 6, 216e5],
                        [a, 12, 432e5],
                        [o, 1, _],
                        [o, 2, 1728e5],
                        [n, 1, 6048e5],
                        [e, 1, P],
                        [e, 3, 7776e6],
                        [t, 1, E]
                    ];

                function j(r) {
                    return (u(r) < r ? p : s(r) < r ? g : a(r) < r ? v : o(r) < r ? T : e(r) < r ? n(r) < r ? M : C : t(r) < r ? A : k)(r)
                }

                function L(e, n, o) {
                    if (null == e && (e = 10), "number" === typeof e) {
                        var a, s = Math.abs(o - n) / e,
                            u = (0, r.Z)((function(t) {
                                return t[2]
                            })).right(I, s);
                        return u === I.length ? (a = (0, i.ly)(n / E, o / E, e), e = t) : u ? (a = (u = I[s / I[u - 1][2] < I[u][2] / s ? u - 1 : u])[1], e = u[0]) : (a = Math.max((0, i.ly)(n, o, e), 1), e = c), e.every(a)
                    }
                    return e
                }
                return f.invert = function(t) {
                    return new Date(h(t))
                }, f.domain = function(t) {
                    return arguments.length ? d(Array.from(t, S)) : d().map(x)
                }, f.ticks = function(t) {
                    var e, n = d(),
                        r = n[0],
                        i = n[n.length - 1],
                        o = i < r;
                    return o && (e = r, r = i, i = e), e = (e = L(t, r, i)) ? e.range(r, i + 1) : [], o ? e.reverse() : e
                }, f.tickFormat = function(t, e) {
                    return null == e ? j : l(e)
                }, f.nice = function(t) {
                    var e = d();
                    return (t = L(t, e[0], e[e.length - 1])) ? d(function(t, e) {
                        var n, r = 0,
                            i = (t = t.slice()).length - 1,
                            o = t[r],
                            a = t[i];
                        return a < o && (n = r, r = i, i = n, n = o, o = a, a = n), t[r] = e.floor(o), t[i] = e.ceil(a), t
                    }(e, t)) : f
                }, f.copy = function() {
                    return (0, y.JG)(f, O(t, e, n, o, a, s, u, c, l))
                }, f
            }

            function T() {
                return v.o.apply(O(u.Z, c.Z, l.OM, f.Z, h.Z, d.Z, p.Z, s, g.i$).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments)
            }
        },
        72108: function(t, e, n) {
            "use strict";
            n.d(e, {
                i$: function() {
                    return x
                },
                Z1: function() {
                    return S
                }
            });
            var r = n(11829),
                i = n(61222);

            function o(t) {
                return (0, r.Z)((function(e) {
                    e.setUTCDate(e.getUTCDate() - (e.getUTCDay() + 7 - t) % 7), e.setUTCHours(0, 0, 0, 0)
                }), (function(t, e) {
                    t.setUTCDate(t.getUTCDate() + 7 * e)
                }), (function(t, e) {
                    return (e - t) / i.iM
                }))
            }
            var a = o(0),
                s = o(1),
                u = o(2),
                c = o(3),
                l = o(4),
                f = o(5),
                h = o(6),
                d = (a.range, s.range, u.range, c.range, l.range, f.range, h.range, (0, r.Z)((function(t) {
                    t.setUTCHours(0, 0, 0, 0)
                }), (function(t, e) {
                    t.setUTCDate(t.getUTCDate() + e)
                }), (function(t, e) {
                    return (e - t) / i.UD
                }), (function(t) {
                    return t.getUTCDate() - 1
                }))),
                p = d,
                g = (d.range, n(22776)),
                y = n(73368),
                v = n(82209),
                m = (0, r.Z)((function(t) {
                    t.setUTCMonth(0, 1), t.setUTCHours(0, 0, 0, 0)
                }), (function(t, e) {
                    t.setUTCFullYear(t.getUTCFullYear() + e)
                }), (function(t, e) {
                    return e.getUTCFullYear() - t.getUTCFullYear()
                }), (function(t) {
                    return t.getUTCFullYear()
                }));
            m.every = function(t) {
                return isFinite(t = Math.floor(t)) && t > 0 ? (0, r.Z)((function(e) {
                    e.setUTCFullYear(Math.floor(e.getUTCFullYear() / t) * t), e.setUTCMonth(0, 1), e.setUTCHours(0, 0, 0, 0)
                }), (function(e, n) {
                    e.setUTCFullYear(e.getUTCFullYear() + n * t)
                })) : null
            };
            var b = m;
            m.range;

            function w(t) {
                if (0 <= t.y && t.y < 100) {
                    var e = new Date(-1, t.m, t.d, t.H, t.M, t.S, t.L);
                    return e.setFullYear(t.y), e
                }
                return new Date(t.y, t.m, t.d, t.H, t.M, t.S, t.L)
            }

            function _(t) {
                if (0 <= t.y && t.y < 100) {
                    var e = new Date(Date.UTC(-1, t.m, t.d, t.H, t.M, t.S, t.L));
                    return e.setUTCFullYear(t.y), e
                }
                return new Date(Date.UTC(t.y, t.m, t.d, t.H, t.M, t.S, t.L))
            }

            function P(t, e, n) {
                return {
                    y: t,
                    m: e,
                    d: n,
                    H: 0,
                    M: 0,
                    S: 0,
                    L: 0
                }
            }
            var E, x, S, O = {
                    "-": "",
                    _: " ",
                    0: "0"
                },
                T = /^\s*\d+/,
                M = /^%/,
                C = /[\\^$*+?|[\]().{}]/g;

            function A(t, e, n) {
                var r = t < 0 ? "-" : "",
                    i = (r ? -t : t) + "",
                    o = i.length;
                return r + (o < n ? new Array(n - o + 1).join(e) + i : i)
            }

            function k(t) {
                return t.replace(C, "\\$&")
            }

            function I(t) {
                return new RegExp("^(?:" + t.map(k).join("|") + ")", "i")
            }

            function j(t) {
                return new Map(t.map(((t, e) => [t.toLowerCase(), e])))
            }

            function L(t, e, n) {
                var r = T.exec(e.slice(n, n + 1));
                return r ? (t.w = +r[0], n + r[0].length) : -1
            }

            function R(t, e, n) {
                var r = T.exec(e.slice(n, n + 1));
                return r ? (t.u = +r[0], n + r[0].length) : -1
            }

            function D(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.U = +r[0], n + r[0].length) : -1
            }

            function F(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.V = +r[0], n + r[0].length) : -1
            }

            function N(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.W = +r[0], n + r[0].length) : -1
            }

            function z(t, e, n) {
                var r = T.exec(e.slice(n, n + 4));
                return r ? (t.y = +r[0], n + r[0].length) : -1
            }

            function B(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.y = +r[0] + (+r[0] > 68 ? 1900 : 2e3), n + r[0].length) : -1
            }

            function U(t, e, n) {
                var r = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(n, n + 6));
                return r ? (t.Z = r[1] ? 0 : -(r[2] + (r[3] || "00")), n + r[0].length) : -1
            }

            function G(t, e, n) {
                var r = T.exec(e.slice(n, n + 1));
                return r ? (t.q = 3 * r[0] - 3, n + r[0].length) : -1
            }

            function Z(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.m = r[0] - 1, n + r[0].length) : -1
            }

            function V(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.d = +r[0], n + r[0].length) : -1
            }

            function H(t, e, n) {
                var r = T.exec(e.slice(n, n + 3));
                return r ? (t.m = 0, t.d = +r[0], n + r[0].length) : -1
            }

            function W(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.H = +r[0], n + r[0].length) : -1
            }

            function Y(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.M = +r[0], n + r[0].length) : -1
            }

            function q(t, e, n) {
                var r = T.exec(e.slice(n, n + 2));
                return r ? (t.S = +r[0], n + r[0].length) : -1
            }

            function $(t, e, n) {
                var r = T.exec(e.slice(n, n + 3));
                return r ? (t.L = +r[0], n + r[0].length) : -1
            }

            function X(t, e, n) {
                var r = T.exec(e.slice(n, n + 6));
                return r ? (t.L = Math.floor(r[0] / 1e3), n + r[0].length) : -1
            }

            function K(t, e, n) {
                var r = M.exec(e.slice(n, n + 1));
                return r ? n + r[0].length : -1
            }

            function J(t, e, n) {
                var r = T.exec(e.slice(n));
                return r ? (t.Q = +r[0], n + r[0].length) : -1
            }

            function Q(t, e, n) {
                var r = T.exec(e.slice(n));
                return r ? (t.s = +r[0], n + r[0].length) : -1
            }

            function tt(t, e) {
                return A(t.getDate(), e, 2)
            }

            function et(t, e) {
                return A(t.getHours(), e, 2)
            }

            function nt(t, e) {
                return A(t.getHours() % 12 || 12, e, 2)
            }

            function rt(t, e) {
                return A(1 + y.Z.count((0, v.Z)(t), t), e, 3)
            }

            function it(t, e) {
                return A(t.getMilliseconds(), e, 3)
            }

            function ot(t, e) {
                return it(t, e) + "000"
            }

            function at(t, e) {
                return A(t.getMonth() + 1, e, 2)
            }

            function st(t, e) {
                return A(t.getMinutes(), e, 2)
            }

            function ut(t, e) {
                return A(t.getSeconds(), e, 2)
            }

            function ct(t) {
                var e = t.getDay();
                return 0 === e ? 7 : e
            }

            function lt(t, e) {
                return A(g.OM.count((0, v.Z)(t) - 1, t), e, 2)
            }

            function ft(t) {
                var e = t.getDay();
                return e >= 4 || 0 === e ? (0, g.bL)(t) : g.bL.ceil(t)
            }

            function ht(t, e) {
                return t = ft(t), A(g.bL.count((0, v.Z)(t), t) + (4 === (0, v.Z)(t).getDay()), e, 2)
            }

            function dt(t) {
                return t.getDay()
            }

            function pt(t, e) {
                return A(g.wA.count((0, v.Z)(t) - 1, t), e, 2)
            }

            function gt(t, e) {
                return A(t.getFullYear() % 100, e, 2)
            }

            function yt(t, e) {
                return A((t = ft(t)).getFullYear() % 100, e, 2)
            }

            function vt(t, e) {
                return A(t.getFullYear() % 1e4, e, 4)
            }

            function mt(t, e) {
                var n = t.getDay();
                return A((t = n >= 4 || 0 === n ? (0, g.bL)(t) : g.bL.ceil(t)).getFullYear() % 1e4, e, 4)
            }

            function bt(t) {
                var e = t.getTimezoneOffset();
                return (e > 0 ? "-" : (e *= -1, "+")) + A(e / 60 | 0, "0", 2) + A(e % 60, "0", 2)
            }

            function wt(t, e) {
                return A(t.getUTCDate(), e, 2)
            }

            function _t(t, e) {
                return A(t.getUTCHours(), e, 2)
            }

            function Pt(t, e) {
                return A(t.getUTCHours() % 12 || 12, e, 2)
            }

            function Et(t, e) {
                return A(1 + p.count(b(t), t), e, 3)
            }

            function xt(t, e) {
                return A(t.getUTCMilliseconds(), e, 3)
            }

            function St(t, e) {
                return xt(t, e) + "000"
            }

            function Ot(t, e) {
                return A(t.getUTCMonth() + 1, e, 2)
            }

            function Tt(t, e) {
                return A(t.getUTCMinutes(), e, 2)
            }

            function Mt(t, e) {
                return A(t.getUTCSeconds(), e, 2)
            }

            function Ct(t) {
                var e = t.getUTCDay();
                return 0 === e ? 7 : e
            }

            function At(t, e) {
                return A(a.count(b(t) - 1, t), e, 2)
            }

            function kt(t) {
                var e = t.getUTCDay();
                return e >= 4 || 0 === e ? l(t) : l.ceil(t)
            }

            function It(t, e) {
                return t = kt(t), A(l.count(b(t), t) + (4 === b(t).getUTCDay()), e, 2)
            }

            function jt(t) {
                return t.getUTCDay()
            }

            function Lt(t, e) {
                return A(s.count(b(t) - 1, t), e, 2)
            }

            function Rt(t, e) {
                return A(t.getUTCFullYear() % 100, e, 2)
            }

            function Dt(t, e) {
                return A((t = kt(t)).getUTCFullYear() % 100, e, 2)
            }

            function Ft(t, e) {
                return A(t.getUTCFullYear() % 1e4, e, 4)
            }

            function Nt(t, e) {
                var n = t.getUTCDay();
                return A((t = n >= 4 || 0 === n ? l(t) : l.ceil(t)).getUTCFullYear() % 1e4, e, 4)
            }

            function zt() {
                return "+0000"
            }

            function Bt() {
                return "%"
            }

            function Ut(t) {
                return +t
            }

            function Gt(t) {
                return Math.floor(+t / 1e3)
            }
            E = function(t) {
                var e = t.dateTime,
                    n = t.date,
                    r = t.time,
                    i = t.periods,
                    o = t.days,
                    a = t.shortDays,
                    u = t.months,
                    c = t.shortMonths,
                    l = I(i),
                    f = j(i),
                    h = I(o),
                    d = j(o),
                    v = I(a),
                    m = j(a),
                    b = I(u),
                    E = j(u),
                    x = I(c),
                    S = j(c),
                    T = {
                        a: function(t) {
                            return a[t.getDay()]
                        },
                        A: function(t) {
                            return o[t.getDay()]
                        },
                        b: function(t) {
                            return c[t.getMonth()]
                        },
                        B: function(t) {
                            return u[t.getMonth()]
                        },
                        c: null,
                        d: tt,
                        e: tt,
                        f: ot,
                        g: yt,
                        G: mt,
                        H: et,
                        I: nt,
                        j: rt,
                        L: it,
                        m: at,
                        M: st,
                        p: function(t) {
                            return i[+(t.getHours() >= 12)]
                        },
                        q: function(t) {
                            return 1 + ~~(t.getMonth() / 3)
                        },
                        Q: Ut,
                        s: Gt,
                        S: ut,
                        u: ct,
                        U: lt,
                        V: ht,
                        w: dt,
                        W: pt,
                        x: null,
                        X: null,
                        y: gt,
                        Y: vt,
                        Z: bt,
                        "%": Bt
                    },
                    M = {
                        a: function(t) {
                            return a[t.getUTCDay()]
                        },
                        A: function(t) {
                            return o[t.getUTCDay()]
                        },
                        b: function(t) {
                            return c[t.getUTCMonth()]
                        },
                        B: function(t) {
                            return u[t.getUTCMonth()]
                        },
                        c: null,
                        d: wt,
                        e: wt,
                        f: St,
                        g: Dt,
                        G: Nt,
                        H: _t,
                        I: Pt,
                        j: Et,
                        L: xt,
                        m: Ot,
                        M: Tt,
                        p: function(t) {
                            return i[+(t.getUTCHours() >= 12)]
                        },
                        q: function(t) {
                            return 1 + ~~(t.getUTCMonth() / 3)
                        },
                        Q: Ut,
                        s: Gt,
                        S: Mt,
                        u: Ct,
                        U: At,
                        V: It,
                        w: jt,
                        W: Lt,
                        x: null,
                        X: null,
                        y: Rt,
                        Y: Ft,
                        Z: zt,
                        "%": Bt
                    },
                    C = {
                        a: function(t, e, n) {
                            var r = v.exec(e.slice(n));
                            return r ? (t.w = m.get(r[0].toLowerCase()), n + r[0].length) : -1
                        },
                        A: function(t, e, n) {
                            var r = h.exec(e.slice(n));
                            return r ? (t.w = d.get(r[0].toLowerCase()), n + r[0].length) : -1
                        },
                        b: function(t, e, n) {
                            var r = x.exec(e.slice(n));
                            return r ? (t.m = S.get(r[0].toLowerCase()), n + r[0].length) : -1
                        },
                        B: function(t, e, n) {
                            var r = b.exec(e.slice(n));
                            return r ? (t.m = E.get(r[0].toLowerCase()), n + r[0].length) : -1
                        },
                        c: function(t, n, r) {
                            return ft(t, e, n, r)
                        },
                        d: V,
                        e: V,
                        f: X,
                        g: B,
                        G: z,
                        H: W,
                        I: W,
                        j: H,
                        L: $,
                        m: Z,
                        M: Y,
                        p: function(t, e, n) {
                            var r = l.exec(e.slice(n));
                            return r ? (t.p = f.get(r[0].toLowerCase()), n + r[0].length) : -1
                        },
                        q: G,
                        Q: J,
                        s: Q,
                        S: q,
                        u: R,
                        U: D,
                        V: F,
                        w: L,
                        W: N,
                        x: function(t, e, r) {
                            return ft(t, n, e, r)
                        },
                        X: function(t, e, n) {
                            return ft(t, r, e, n)
                        },
                        y: B,
                        Y: z,
                        Z: U,
                        "%": K
                    };

                function A(t, e) {
                    return function(n) {
                        var r, i, o, a = [],
                            s = -1,
                            u = 0,
                            c = t.length;
                        for (n instanceof Date || (n = new Date(+n)); ++s < c;) 37 === t.charCodeAt(s) && (a.push(t.slice(u, s)), null != (i = O[r = t.charAt(++s)]) ? r = t.charAt(++s) : i = "e" === r ? " " : "0", (o = e[r]) && (r = o(n, i)), a.push(r), u = s + 1);
                        return a.push(t.slice(u, s)), a.join("")
                    }
                }

                function k(t, e) {
                    return function(n) {
                        var r, i, o = P(1900, void 0, 1);
                        if (ft(o, t, n += "", 0) != n.length) return null;
                        if ("Q" in o) return new Date(o.Q);
                        if ("s" in o) return new Date(1e3 * o.s + ("L" in o ? o.L : 0));
                        if (e && !("Z" in o) && (o.Z = 0), "p" in o && (o.H = o.H % 12 + 12 * o.p), void 0 === o.m && (o.m = "q" in o ? o.q : 0), "V" in o) {
                            if (o.V < 1 || o.V > 53) return null;
                            "w" in o || (o.w = 1), "Z" in o ? (i = (r = _(P(o.y, 0, 1))).getUTCDay(), r = i > 4 || 0 === i ? s.ceil(r) : s(r), r = p.offset(r, 7 * (o.V - 1)), o.y = r.getUTCFullYear(), o.m = r.getUTCMonth(), o.d = r.getUTCDate() + (o.w + 6) % 7) : (i = (r = w(P(o.y, 0, 1))).getDay(), r = i > 4 || 0 === i ? g.wA.ceil(r) : (0, g.wA)(r), r = y.Z.offset(r, 7 * (o.V - 1)), o.y = r.getFullYear(), o.m = r.getMonth(), o.d = r.getDate() + (o.w + 6) % 7)
                        } else("W" in o || "U" in o) && ("w" in o || (o.w = "u" in o ? o.u % 7 : "W" in o ? 1 : 0), i = "Z" in o ? _(P(o.y, 0, 1)).getUTCDay() : w(P(o.y, 0, 1)).getDay(), o.m = 0, o.d = "W" in o ? (o.w + 6) % 7 + 7 * o.W - (i + 5) % 7 : o.w + 7 * o.U - (i + 6) % 7);
                        return "Z" in o ? (o.H += o.Z / 100 | 0, o.M += o.Z % 100, _(o)) : w(o)
                    }
                }

                function ft(t, e, n, r) {
                    for (var i, o, a = 0, s = e.length, u = n.length; a < s;) {
                        if (r >= u) return -1;
                        if (37 === (i = e.charCodeAt(a++))) {
                            if (i = e.charAt(a++), !(o = C[i in O ? e.charAt(a++) : i]) || (r = o(t, n, r)) < 0) return -1
                        } else if (i != n.charCodeAt(r++)) return -1
                    }
                    return r
                }
                return T.x = A(n, T), T.X = A(r, T), T.c = A(e, T), M.x = A(n, M), M.X = A(r, M), M.c = A(e, M), {
                    format: function(t) {
                        var e = A(t += "", T);
                        return e.toString = function() {
                            return t
                        }, e
                    },
                    parse: function(t) {
                        var e = k(t += "", !1);
                        return e.toString = function() {
                            return t
                        }, e
                    },
                    utcFormat: function(t) {
                        var e = A(t += "", M);
                        return e.toString = function() {
                            return t
                        }, e
                    },
                    utcParse: function(t) {
                        var e = k(t += "", !0);
                        return e.toString = function() {
                            return t
                        }, e
                    }
                }
            }({
                dateTime: "%x, %X",
                date: "%-m/%-d/%Y",
                time: "%-I:%M:%S %p",
                periods: ["AM", "PM"],
                days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
            }), x = E.format, S = E.parse, E.utcFormat, E.utcParse
        },
        73368: function(t, e, n) {
            "use strict";
            var r = n(11829),
                i = n(61222),
                o = (0, r.Z)((t => t.setHours(0, 0, 0, 0)), ((t, e) => t.setDate(t.getDate() + e)), ((t, e) => (e - t - (e.getTimezoneOffset() - t.getTimezoneOffset()) * i.yB) / i.UD), (t => t.getDate() - 1));
            e.Z = o;
            o.range
        },
        61222: function(t, e, n) {
            "use strict";
            n.d(e, {
                Ym: function() {
                    return r
                },
                yB: function() {
                    return i
                },
                Y2: function() {
                    return o
                },
                UD: function() {
                    return a
                },
                iM: function() {
                    return s
                }
            });
            var r = 1e3,
                i = 6e4,
                o = 36e5,
                a = 864e5,
                s = 6048e5
        },
        42784: function(t, e, n) {
            "use strict";
            var r = n(11829),
                i = n(61222),
                o = (0, r.Z)((function(t) {
                    t.setTime(t - t.getMilliseconds() - t.getSeconds() * i.Ym - t.getMinutes() * i.yB)
                }), (function(t, e) {
                    t.setTime(+t + e * i.Y2)
                }), (function(t, e) {
                    return (e - t) / i.Y2
                }), (function(t) {
                    return t.getHours()
                }));
            e.Z = o;
            o.range
        },
        11829: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return o
                }
            });
            var r = new Date,
                i = new Date;

            function o(t, e, n, a) {
                function s(e) {
                    return t(e = 0 === arguments.length ? new Date : new Date(+e)), e
                }
                return s.floor = function(e) {
                    return t(e = new Date(+e)), e
                }, s.ceil = function(n) {
                    return t(n = new Date(n - 1)), e(n, 1), t(n), n
                }, s.round = function(t) {
                    var e = s(t),
                        n = s.ceil(t);
                    return t - e < n - t ? e : n
                }, s.offset = function(t, n) {
                    return e(t = new Date(+t), null == n ? 1 : Math.floor(n)), t
                }, s.range = function(n, r, i) {
                    var o, a = [];
                    if (n = s.ceil(n), i = null == i ? 1 : Math.floor(i), !(n < r) || !(i > 0)) return a;
                    do {
                        a.push(o = new Date(+n)), e(n, i), t(n)
                    } while (o < n && n < r);
                    return a
                }, s.filter = function(n) {
                    return o((function(e) {
                        if (e >= e)
                            for (; t(e), !n(e);) e.setTime(e - 1)
                    }), (function(t, r) {
                        if (t >= t)
                            if (r < 0)
                                for (; ++r <= 0;)
                                    for (; e(t, -1), !n(t););
                            else
                                for (; --r >= 0;)
                                    for (; e(t, 1), !n(t););
                    }))
                }, n && (s.count = function(e, o) {
                    return r.setTime(+e), i.setTime(+o), t(r), t(i), Math.floor(n(r, i))
                }, s.every = function(t) {
                    return t = Math.floor(t), isFinite(t) && t > 0 ? t > 1 ? s.filter(a ? function(e) {
                        return a(e) % t === 0
                    } : function(e) {
                        return s.count(0, e) % t === 0
                    }) : s : null
                }), s
            }
        },
        7197: function(t, e, n) {
            "use strict";
            var r = n(11829),
                i = n(61222),
                o = (0, r.Z)((function(t) {
                    t.setTime(t - t.getMilliseconds() - t.getSeconds() * i.Ym)
                }), (function(t, e) {
                    t.setTime(+t + e * i.yB)
                }), (function(t, e) {
                    return (e - t) / i.yB
                }), (function(t) {
                    return t.getMinutes()
                }));
            e.Z = o;
            o.range
        },
        4584: function(t, e, n) {
            "use strict";
            var r = (0, n(11829).Z)((function(t) {
                t.setDate(1), t.setHours(0, 0, 0, 0)
            }), (function(t, e) {
                t.setMonth(t.getMonth() + e)
            }), (function(t, e) {
                return e.getMonth() - t.getMonth() + 12 * (e.getFullYear() - t.getFullYear())
            }), (function(t) {
                return t.getMonth()
            }));
            e.Z = r;
            r.range
        },
        15086: function(t, e, n) {
            "use strict";
            var r = n(11829),
                i = n(61222),
                o = (0, r.Z)((function(t) {
                    t.setTime(t - t.getMilliseconds())
                }), (function(t, e) {
                    t.setTime(+t + e * i.Ym)
                }), (function(t, e) {
                    return (e - t) / i.Ym
                }), (function(t) {
                    return t.getUTCSeconds()
                }));
            e.Z = o;
            o.range
        },
        22776: function(t, e, n) {
            "use strict";
            n.d(e, {
                OM: function() {
                    return a
                },
                wA: function() {
                    return s
                },
                bL: function() {
                    return l
                }
            });
            var r = n(11829),
                i = n(61222);

            function o(t) {
                return (0, r.Z)((function(e) {
                    e.setDate(e.getDate() - (e.getDay() + 7 - t) % 7), e.setHours(0, 0, 0, 0)
                }), (function(t, e) {
                    t.setDate(t.getDate() + 7 * e)
                }), (function(t, e) {
                    return (e - t - (e.getTimezoneOffset() - t.getTimezoneOffset()) * i.yB) / i.iM
                }))
            }
            var a = o(0),
                s = o(1),
                u = o(2),
                c = o(3),
                l = o(4),
                f = o(5),
                h = o(6);
            a.range, s.range, u.range, c.range, l.range, f.range, h.range
        },
        82209: function(t, e, n) {
            "use strict";
            var r = n(11829),
                i = (0, r.Z)((function(t) {
                    t.setMonth(0, 1), t.setHours(0, 0, 0, 0)
                }), (function(t, e) {
                    t.setFullYear(t.getFullYear() + e)
                }), (function(t, e) {
                    return e.getFullYear() - t.getFullYear()
                }), (function(t) {
                    return t.getFullYear()
                }));
            i.every = function(t) {
                return isFinite(t = Math.floor(t)) && t > 0 ? (0, r.Z)((function(e) {
                    e.setFullYear(Math.floor(e.getFullYear() / t) * t), e.setMonth(0, 1), e.setHours(0, 0, 0, 0)
                }), (function(e, n) {
                    e.setFullYear(e.getFullYear() + n * t)
                })) : null
            }, e.Z = i;
            i.range
        },
        9187: function(t) {
            "use strict";

            function e(t, e, o) {
                o = o || 2;
                var a, s, u, f, h, p, g, y = e && e.length,
                    v = y ? e[0] * o : t.length,
                    m = n(t, 0, v, o, !0),
                    b = [];
                if (!m || m.next === m.prev) return b;
                if (y && (m = function(t, e, i, o) {
                        var a, s, u, f = [];
                        for (a = 0, s = e.length; a < s; a++)(u = n(t, e[a] * o, a < s - 1 ? e[a + 1] * o : t.length, o, !1)) === u.next && (u.steiner = !0), f.push(d(u));
                        for (f.sort(c), a = 0; a < f.length; a++) i = r(i = l(f[a], i), i.next);
                        return i
                    }(t, e, m, o)), t.length > 80 * o) {
                    a = u = t[0], s = f = t[1];
                    for (var w = o; w < v; w += o)(h = t[w]) < a && (a = h), (p = t[w + 1]) < s && (s = p), h > u && (u = h), p > f && (f = p);
                    g = 0 !== (g = Math.max(u - a, f - s)) ? 1 / g : 0
                }
                return i(m, b, o, a, s, g), b
            }

            function n(t, e, n, r, i) {
                var o, a;
                if (i === O(t, e, n, r) > 0)
                    for (o = e; o < n; o += r) a = E(o, t[o], t[o + 1], a);
                else
                    for (o = n - r; o >= e; o -= r) a = E(o, t[o], t[o + 1], a);
                return a && v(a, a.next) && (x(a), a = a.next), a
            }

            function r(t, e) {
                if (!t) return t;
                e || (e = t);
                var n, r = t;
                do {
                    if (n = !1, r.steiner || !v(r, r.next) && 0 !== y(r.prev, r, r.next)) r = r.next;
                    else {
                        if (x(r), (r = e = r.prev) === r.next) break;
                        n = !0
                    }
                } while (n || r !== e);
                return e
            }

            function i(t, e, n, c, l, f, d) {
                if (t) {
                    !d && f && function(t, e, n, r) {
                        var i = t;
                        do {
                            null === i.z && (i.z = h(i.x, i.y, e, n, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next
                        } while (i !== t);
                        i.prevZ.nextZ = null, i.prevZ = null,
                            function(t) {
                                var e, n, r, i, o, a, s, u, c = 1;
                                do {
                                    for (n = t, t = null, o = null, a = 0; n;) {
                                        for (a++, r = n, s = 0, e = 0; e < c && (s++, r = r.nextZ); e++);
                                        for (u = c; s > 0 || u > 0 && r;) 0 !== s && (0 === u || !r || n.z <= r.z) ? (i = n, n = n.nextZ, s--) : (i = r, r = r.nextZ, u--), o ? o.nextZ = i : t = i, i.prevZ = o, o = i;
                                        n = r
                                    }
                                    o.nextZ = null, c *= 2
                                } while (a > 1)
                            }(i)
                    }(t, c, l, f);
                    for (var p, g, y = t; t.prev !== t.next;)
                        if (p = t.prev, g = t.next, f ? a(t, c, l, f) : o(t)) e.push(p.i / n), e.push(t.i / n), e.push(g.i / n), x(t), t = g.next, y = g.next;
                        else if ((t = g) === y) {
                        d ? 1 === d ? i(t = s(r(t), e, n), e, n, c, l, f, 2) : 2 === d && u(t, e, n, c, l, f) : i(r(t), e, n, c, l, f, 1);
                        break
                    }
                }
            }

            function o(t) {
                var e = t.prev,
                    n = t,
                    r = t.next;
                if (y(e, n, r) >= 0) return !1;
                for (var i = t.next.next; i !== t.prev;) {
                    if (p(e.x, e.y, n.x, n.y, r.x, r.y, i.x, i.y) && y(i.prev, i, i.next) >= 0) return !1;
                    i = i.next
                }
                return !0
            }

            function a(t, e, n, r) {
                var i = t.prev,
                    o = t,
                    a = t.next;
                if (y(i, o, a) >= 0) return !1;
                for (var s = i.x < o.x ? i.x < a.x ? i.x : a.x : o.x < a.x ? o.x : a.x, u = i.y < o.y ? i.y < a.y ? i.y : a.y : o.y < a.y ? o.y : a.y, c = i.x > o.x ? i.x > a.x ? i.x : a.x : o.x > a.x ? o.x : a.x, l = i.y > o.y ? i.y > a.y ? i.y : a.y : o.y > a.y ? o.y : a.y, f = h(s, u, e, n, r), d = h(c, l, e, n, r), g = t.prevZ, v = t.nextZ; g && g.z >= f && v && v.z <= d;) {
                    if (g !== t.prev && g !== t.next && p(i.x, i.y, o.x, o.y, a.x, a.y, g.x, g.y) && y(g.prev, g, g.next) >= 0) return !1;
                    if (g = g.prevZ, v !== t.prev && v !== t.next && p(i.x, i.y, o.x, o.y, a.x, a.y, v.x, v.y) && y(v.prev, v, v.next) >= 0) return !1;
                    v = v.nextZ
                }
                for (; g && g.z >= f;) {
                    if (g !== t.prev && g !== t.next && p(i.x, i.y, o.x, o.y, a.x, a.y, g.x, g.y) && y(g.prev, g, g.next) >= 0) return !1;
                    g = g.prevZ
                }
                for (; v && v.z <= d;) {
                    if (v !== t.prev && v !== t.next && p(i.x, i.y, o.x, o.y, a.x, a.y, v.x, v.y) && y(v.prev, v, v.next) >= 0) return !1;
                    v = v.nextZ
                }
                return !0
            }

            function s(t, e, n) {
                var i = t;
                do {
                    var o = i.prev,
                        a = i.next.next;
                    !v(o, a) && m(o, i, i.next, a) && _(o, a) && _(a, o) && (e.push(o.i / n), e.push(i.i / n), e.push(a.i / n), x(i), x(i.next), i = t = a), i = i.next
                } while (i !== t);
                return r(i)
            }

            function u(t, e, n, o, a, s) {
                var u = t;
                do {
                    for (var c = u.next.next; c !== u.prev;) {
                        if (u.i !== c.i && g(u, c)) {
                            var l = P(u, c);
                            return u = r(u, u.next), l = r(l, l.next), i(u, e, n, o, a, s), void i(l, e, n, o, a, s)
                        }
                        c = c.next
                    }
                    u = u.next
                } while (u !== t)
            }

            function c(t, e) {
                return t.x - e.x
            }

            function l(t, e) {
                var n = function(t, e) {
                    var n, r = e,
                        i = t.x,
                        o = t.y,
                        a = -1 / 0;
                    do {
                        if (o <= r.y && o >= r.next.y && r.next.y !== r.y) {
                            var s = r.x + (o - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                            if (s <= i && s > a) {
                                if (a = s, s === i) {
                                    if (o === r.y) return r;
                                    if (o === r.next.y) return r.next
                                }
                                n = r.x < r.next.x ? r : r.next
                            }
                        }
                        r = r.next
                    } while (r !== e);
                    if (!n) return null;
                    if (i === a) return n;
                    var u, c = n,
                        l = n.x,
                        h = n.y,
                        d = 1 / 0;
                    r = n;
                    do {
                        i >= r.x && r.x >= l && i !== r.x && p(o < h ? i : a, o, l, h, o < h ? a : i, o, r.x, r.y) && (u = Math.abs(o - r.y) / (i - r.x), _(r, t) && (u < d || u === d && (r.x > n.x || r.x === n.x && f(n, r))) && (n = r, d = u)), r = r.next
                    } while (r !== c);
                    return n
                }(t, e);
                if (!n) return e;
                var i = P(n, t),
                    o = r(n, n.next);
                return r(i, i.next), e === n ? o : e
            }

            function f(t, e) {
                return y(t.prev, t, e.prev) < 0 && y(e.next, t, t.next) < 0
            }

            function h(t, e, n, r, i) {
                return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - n) * i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - r) * i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1
            }

            function d(t) {
                var e = t,
                    n = t;
                do {
                    (e.x < n.x || e.x === n.x && e.y < n.y) && (n = e), e = e.next
                } while (e !== t);
                return n
            }

            function p(t, e, n, r, i, o, a, s) {
                return (i - a) * (e - s) - (t - a) * (o - s) >= 0 && (t - a) * (r - s) - (n - a) * (e - s) >= 0 && (n - a) * (o - s) - (i - a) * (r - s) >= 0
            }

            function g(t, e) {
                return t.next.i !== e.i && t.prev.i !== e.i && ! function(t, e) {
                    var n = t;
                    do {
                        if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && m(n, n.next, t, e)) return !0;
                        n = n.next
                    } while (n !== t);
                    return !1
                }(t, e) && (_(t, e) && _(e, t) && function(t, e) {
                    var n = t,
                        r = !1,
                        i = (t.x + e.x) / 2,
                        o = (t.y + e.y) / 2;
                    do {
                        n.y > o !== n.next.y > o && n.next.y !== n.y && i < (n.next.x - n.x) * (o - n.y) / (n.next.y - n.y) + n.x && (r = !r), n = n.next
                    } while (n !== t);
                    return r
                }(t, e) && (y(t.prev, t, e.prev) || y(t, e.prev, e)) || v(t, e) && y(t.prev, t, t.next) > 0 && y(e.prev, e, e.next) > 0)
            }

            function y(t, e, n) {
                return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y)
            }

            function v(t, e) {
                return t.x === e.x && t.y === e.y
            }

            function m(t, e, n, r) {
                var i = w(y(t, e, n)),
                    o = w(y(t, e, r)),
                    a = w(y(n, r, t)),
                    s = w(y(n, r, e));
                return i !== o && a !== s || (!(0 !== i || !b(t, n, e)) || (!(0 !== o || !b(t, r, e)) || (!(0 !== a || !b(n, t, r)) || !(0 !== s || !b(n, e, r)))))
            }

            function b(t, e, n) {
                return e.x <= Math.max(t.x, n.x) && e.x >= Math.min(t.x, n.x) && e.y <= Math.max(t.y, n.y) && e.y >= Math.min(t.y, n.y)
            }

            function w(t) {
                return t > 0 ? 1 : t < 0 ? -1 : 0
            }

            function _(t, e) {
                return y(t.prev, t, t.next) < 0 ? y(t, e, t.next) >= 0 && y(t, t.prev, e) >= 0 : y(t, e, t.prev) < 0 || y(t, t.next, e) < 0
            }

            function P(t, e) {
                var n = new S(t.i, t.x, t.y),
                    r = new S(e.i, e.x, e.y),
                    i = t.next,
                    o = e.prev;
                return t.next = e, e.prev = t, n.next = i, i.prev = n, r.next = n, n.prev = r, o.next = r, r.prev = o, r
            }

            function E(t, e, n, r) {
                var i = new S(t, e, n);
                return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i
            }

            function x(t) {
                t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ)
            }

            function S(t, e, n) {
                this.i = t, this.x = e, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1
            }

            function O(t, e, n, r) {
                for (var i = 0, o = e, a = n - r; o < n; o += r) i += (t[a] - t[o]) * (t[o + 1] + t[a + 1]), a = o;
                return i
            }
            t.exports = e, t.exports.default = e, e.deviation = function(t, e, n, r) {
                var i = e && e.length,
                    o = i ? e[0] * n : t.length,
                    a = Math.abs(O(t, 0, o, n));
                if (i)
                    for (var s = 0, u = e.length; s < u; s++) {
                        var c = e[s] * n,
                            l = s < u - 1 ? e[s + 1] * n : t.length;
                        a -= Math.abs(O(t, c, l, n))
                    }
                var f = 0;
                for (s = 0; s < r.length; s += 3) {
                    var h = r[s] * n,
                        d = r[s + 1] * n,
                        p = r[s + 2] * n;
                    f += Math.abs((t[h] - t[p]) * (t[d + 1] - t[h + 1]) - (t[h] - t[d]) * (t[p + 1] - t[h + 1]))
                }
                return 0 === a && 0 === f ? 0 : Math.abs((f - a) / a)
            }, e.flatten = function(t) {
                for (var e = t[0][0].length, n = {
                        vertices: [],
                        holes: [],
                        dimensions: e
                    }, r = 0, i = 0; i < t.length; i++) {
                    for (var o = 0; o < t[i].length; o++)
                        for (var a = 0; a < e; a++) n.vertices.push(t[i][o][a]);
                    i > 0 && (r += t[i - 1].length, n.holes.push(r))
                }
                return n
            }
        },
        64063: function(t) {
            "use strict";
            t.exports = function t(e, n) {
                if (e === n) return !0;
                if (e && n && "object" == typeof e && "object" == typeof n) {
                    if (e.constructor !== n.constructor) return !1;
                    var r, i, o;
                    if (Array.isArray(e)) {
                        if ((r = e.length) != n.length) return !1;
                        for (i = r; 0 !== i--;)
                            if (!t(e[i], n[i])) return !1;
                        return !0
                    }
                    if (e.constructor === RegExp) return e.source === n.source && e.flags === n.flags;
                    if (e.valueOf !== Object.prototype.valueOf) return e.valueOf() === n.valueOf();
                    if (e.toString !== Object.prototype.toString) return e.toString() === n.toString();
                    if ((r = (o = Object.keys(e)).length) !== Object.keys(n).length) return !1;
                    for (i = r; 0 !== i--;)
                        if (!Object.prototype.hasOwnProperty.call(n, o[i])) return !1;
                    for (i = r; 0 !== i--;) {
                        var a = o[i];
                        if (!t(e[a], n[a])) return !1
                    }
                    return !0
                }
                return e !== e && n !== n
            }
        },
        38252: function(t) {
            "use strict";
            t.exports = function t(e, n) {
                if (e === n) return !0;
                if (e && n && "object" == typeof e && "object" == typeof n) {
                    if (e.constructor !== n.constructor) return !1;
                    var r, i, o;
                    if (Array.isArray(e)) {
                        if ((r = e.length) != n.length) return !1;
                        for (i = r; 0 !== i--;)
                            if (!t(e[i], n[i])) return !1;
                        return !0
                    }
                    if (e.constructor === RegExp) return e.source === n.source && e.flags === n.flags;
                    if (e.valueOf !== Object.prototype.valueOf) return e.valueOf() === n.valueOf();
                    if (e.toString !== Object.prototype.toString) return e.toString() === n.toString();
                    if ((r = (o = Object.keys(e)).length) !== Object.keys(n).length) return !1;
                    for (i = r; 0 !== i--;)
                        if (!Object.prototype.hasOwnProperty.call(n, o[i])) return !1;
                    for (i = r; 0 !== i--;) {
                        var a = o[i];
                        if (("_owner" !== a || !e.$$typeof) && !t(e[a], n[a])) return !1
                    }
                    return !0
                }
                return e !== e && n !== n
            }
        },
        51787: function(t, e, n) {
            var r = n(65510),
                i = n(84102),
                o = n(31540),
                a = n(9705).default,
                s = o.featureEach,
                u = (o.coordEach, i.polygon, i.featureCollection);

            function c(t) {
                var e = r(t);
                return e.insert = function(t) {
                    if ("Feature" !== t.type) throw new Error("invalid feature");
                    return t.bbox = t.bbox ? t.bbox : a(t), r.prototype.insert.call(this, t)
                }, e.load = function(t) {
                    var e = [];
                    return Array.isArray(t) ? t.forEach((function(t) {
                        if ("Feature" !== t.type) throw new Error("invalid features");
                        t.bbox = t.bbox ? t.bbox : a(t), e.push(t)
                    })) : s(t, (function(t) {
                        if ("Feature" !== t.type) throw new Error("invalid features");
                        t.bbox = t.bbox ? t.bbox : a(t), e.push(t)
                    })), r.prototype.load.call(this, e)
                }, e.remove = function(t, e) {
                    if ("Feature" !== t.type) throw new Error("invalid feature");
                    return t.bbox = t.bbox ? t.bbox : a(t), r.prototype.remove.call(this, t, e)
                }, e.clear = function() {
                    return r.prototype.clear.call(this)
                }, e.search = function(t) {
                    var e = r.prototype.search.call(this, this.toBBox(t));
                    return u(e)
                }, e.collides = function(t) {
                    return r.prototype.collides.call(this, this.toBBox(t))
                }, e.all = function() {
                    var t = r.prototype.all.call(this);
                    return u(t)
                }, e.toJSON = function() {
                    return r.prototype.toJSON.call(this)
                }, e.fromJSON = function(t) {
                    return r.prototype.fromJSON.call(this, t)
                }, e.toBBox = function(t) {
                    var e;
                    if (t.bbox) e = t.bbox;
                    else if (Array.isArray(t) && 4 === t.length) e = t;
                    else if (Array.isArray(t) && 6 === t.length) e = [t[0], t[1], t[3], t[4]];
                    else if ("Feature" === t.type) e = a(t);
                    else {
                        if ("FeatureCollection" !== t.type) throw new Error("invalid geojson");
                        e = a(t)
                    }
                    return {
                        minX: e[0],
                        minY: e[1],
                        maxX: e[2],
                        maxY: e[3]
                    }
                }, e
            }
            t.exports = c, t.exports.default = c
        },
        49685: function(t, e, n) {
            "use strict";
            n.d(e, {
                Ib: function() {
                    return r
                },
                WT: function() {
                    return i
                }
            });
            var r = 1e-6,
                i = "undefined" !== typeof Float32Array ? Float32Array : Array;
            Math.random;
            Math.PI;
            Math.hypot || (Math.hypot = function() {
                for (var t = 0, e = arguments.length; e--;) t += arguments[e] * arguments[e];
                return Math.sqrt(t)
            })
        },
        85975: function(t, e, n) {
            "use strict";
            n.d(e, {
                p4: function() {
                    return i
                },
                U_: function() {
                    return o
                },
                GH: function() {
                    return a
                },
                Jp: function() {
                    return s
                },
                Iu: function() {
                    return u
                },
                bA: function() {
                    return c
                },
                U1: function() {
                    return l
                },
                lM: function() {
                    return f
                },
                uD: function() {
                    return h
                },
                jI: function() {
                    return d
                },
                en: function() {
                    return p
                },
                oy: function() {
                    return g
                },
                G3: function() {
                    return y
                },
                M5: function() {
                    return v
                },
                zB: function() {
                    return m
                },
                fS: function() {
                    return b
                }
            });
            var r = n(49685);

            function i(t, e) {
                if (t === e) {
                    var n = e[1],
                        r = e[2],
                        i = e[3],
                        o = e[6],
                        a = e[7],
                        s = e[11];
                    t[1] = e[4], t[2] = e[8], t[3] = e[12], t[4] = n, t[6] = e[9], t[7] = e[13], t[8] = r, t[9] = o, t[11] = e[14], t[12] = i, t[13] = a, t[14] = s
                } else t[0] = e[0], t[1] = e[4], t[2] = e[8], t[3] = e[12], t[4] = e[1], t[5] = e[5], t[6] = e[9], t[7] = e[13], t[8] = e[2], t[9] = e[6], t[10] = e[10], t[11] = e[14], t[12] = e[3], t[13] = e[7], t[14] = e[11], t[15] = e[15];
                return t
            }

            function o(t, e) {
                var n = e[0],
                    r = e[1],
                    i = e[2],
                    o = e[3],
                    a = e[4],
                    s = e[5],
                    u = e[6],
                    c = e[7],
                    l = e[8],
                    f = e[9],
                    h = e[10],
                    d = e[11],
                    p = e[12],
                    g = e[13],
                    y = e[14],
                    v = e[15],
                    m = n * s - r * a,
                    b = n * u - i * a,
                    w = n * c - o * a,
                    _ = r * u - i * s,
                    P = r * c - o * s,
                    E = i * c - o * u,
                    x = l * g - f * p,
                    S = l * y - h * p,
                    O = l * v - d * p,
                    T = f * y - h * g,
                    M = f * v - d * g,
                    C = h * v - d * y,
                    A = m * C - b * M + w * T + _ * O - P * S + E * x;
                return A ? (A = 1 / A, t[0] = (s * C - u * M + c * T) * A, t[1] = (i * M - r * C - o * T) * A, t[2] = (g * E - y * P + v * _) * A, t[3] = (h * P - f * E - d * _) * A, t[4] = (u * O - a * C - c * S) * A, t[5] = (n * C - i * O + o * S) * A, t[6] = (y * w - p * E - v * b) * A, t[7] = (l * E - h * w + d * b) * A, t[8] = (a * M - s * O + c * x) * A, t[9] = (r * O - n * M - o * x) * A, t[10] = (p * P - g * w + v * m) * A, t[11] = (f * w - l * P - d * m) * A, t[12] = (s * S - a * T - u * x) * A, t[13] = (n * T - r * S + i * x) * A, t[14] = (g * b - p * _ - y * m) * A, t[15] = (l * _ - f * b + h * m) * A, t) : null
            }

            function a(t) {
                var e = t[0],
                    n = t[1],
                    r = t[2],
                    i = t[3],
                    o = t[4],
                    a = t[5],
                    s = t[6],
                    u = t[7],
                    c = t[8],
                    l = t[9],
                    f = t[10],
                    h = t[11],
                    d = t[12],
                    p = t[13],
                    g = t[14],
                    y = t[15];
                return (e * a - n * o) * (f * y - h * g) - (e * s - r * o) * (l * y - h * p) + (e * u - i * o) * (l * g - f * p) + (n * s - r * a) * (c * y - h * d) - (n * u - i * a) * (c * g - f * d) + (r * u - i * s) * (c * p - l * d)
            }

            function s(t, e, n) {
                var r = e[0],
                    i = e[1],
                    o = e[2],
                    a = e[3],
                    s = e[4],
                    u = e[5],
                    c = e[6],
                    l = e[7],
                    f = e[8],
                    h = e[9],
                    d = e[10],
                    p = e[11],
                    g = e[12],
                    y = e[13],
                    v = e[14],
                    m = e[15],
                    b = n[0],
                    w = n[1],
                    _ = n[2],
                    P = n[3];
                return t[0] = b * r + w * s + _ * f + P * g, t[1] = b * i + w * u + _ * h + P * y, t[2] = b * o + w * c + _ * d + P * v, t[3] = b * a + w * l + _ * p + P * m, b = n[4], w = n[5], _ = n[6], P = n[7], t[4] = b * r + w * s + _ * f + P * g, t[5] = b * i + w * u + _ * h + P * y, t[6] = b * o + w * c + _ * d + P * v, t[7] = b * a + w * l + _ * p + P * m, b = n[8], w = n[9], _ = n[10], P = n[11], t[8] = b * r + w * s + _ * f + P * g, t[9] = b * i + w * u + _ * h + P * y, t[10] = b * o + w * c + _ * d + P * v, t[11] = b * a + w * l + _ * p + P * m, b = n[12], w = n[13], _ = n[14], P = n[15], t[12] = b * r + w * s + _ * f + P * g, t[13] = b * i + w * u + _ * h + P * y, t[14] = b * o + w * c + _ * d + P * v, t[15] = b * a + w * l + _ * p + P * m, t
            }

            function u(t, e, n) {
                var r, i, o, a, s, u, c, l, f, h, d, p, g = n[0],
                    y = n[1],
                    v = n[2];
                return e === t ? (t[12] = e[0] * g + e[4] * y + e[8] * v + e[12], t[13] = e[1] * g + e[5] * y + e[9] * v + e[13], t[14] = e[2] * g + e[6] * y + e[10] * v + e[14], t[15] = e[3] * g + e[7] * y + e[11] * v + e[15]) : (r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], c = e[6], l = e[7], f = e[8], h = e[9], d = e[10], p = e[11], t[0] = r, t[1] = i, t[2] = o, t[3] = a, t[4] = s, t[5] = u, t[6] = c, t[7] = l, t[8] = f, t[9] = h, t[10] = d, t[11] = p, t[12] = r * g + s * y + f * v + e[12], t[13] = i * g + u * y + h * v + e[13], t[14] = o * g + c * y + d * v + e[14], t[15] = a * g + l * y + p * v + e[15]), t
            }

            function c(t, e, n) {
                var r = n[0],
                    i = n[1],
                    o = n[2];
                return t[0] = e[0] * r, t[1] = e[1] * r, t[2] = e[2] * r, t[3] = e[3] * r, t[4] = e[4] * i, t[5] = e[5] * i, t[6] = e[6] * i, t[7] = e[7] * i, t[8] = e[8] * o, t[9] = e[9] * o, t[10] = e[10] * o, t[11] = e[11] * o, t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15], t
            }

            function l(t, e, n, i) {
                var o, a, s, u, c, l, f, h, d, p, g, y, v, m, b, w, _, P, E, x, S, O, T, M, C = i[0],
                    A = i[1],
                    k = i[2],
                    I = Math.hypot(C, A, k);
                return I < r.Ib ? null : (C *= I = 1 / I, A *= I, k *= I, o = Math.sin(n), s = 1 - (a = Math.cos(n)), u = e[0], c = e[1], l = e[2], f = e[3], h = e[4], d = e[5], p = e[6], g = e[7], y = e[8], v = e[9], m = e[10], b = e[11], w = C * C * s + a, _ = A * C * s + k * o, P = k * C * s - A * o, E = C * A * s - k * o, x = A * A * s + a, S = k * A * s + C * o, O = C * k * s + A * o, T = A * k * s - C * o, M = k * k * s + a, t[0] = u * w + h * _ + y * P, t[1] = c * w + d * _ + v * P, t[2] = l * w + p * _ + m * P, t[3] = f * w + g * _ + b * P, t[4] = u * E + h * x + y * S, t[5] = c * E + d * x + v * S, t[6] = l * E + p * x + m * S, t[7] = f * E + g * x + b * S, t[8] = u * O + h * T + y * M, t[9] = c * O + d * T + v * M, t[10] = l * O + p * T + m * M, t[11] = f * O + g * T + b * M, e !== t && (t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t)
            }

            function f(t, e, n) {
                var r = Math.sin(n),
                    i = Math.cos(n),
                    o = e[4],
                    a = e[5],
                    s = e[6],
                    u = e[7],
                    c = e[8],
                    l = e[9],
                    f = e[10],
                    h = e[11];
                return e !== t && (t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[4] = o * i + c * r, t[5] = a * i + l * r, t[6] = s * i + f * r, t[7] = u * i + h * r, t[8] = c * i - o * r, t[9] = l * i - a * r, t[10] = f * i - s * r, t[11] = h * i - u * r, t
            }

            function h(t, e, n) {
                var r = Math.sin(n),
                    i = Math.cos(n),
                    o = e[0],
                    a = e[1],
                    s = e[2],
                    u = e[3],
                    c = e[8],
                    l = e[9],
                    f = e[10],
                    h = e[11];
                return e !== t && (t[4] = e[4], t[5] = e[5], t[6] = e[6], t[7] = e[7], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[0] = o * i - c * r, t[1] = a * i - l * r, t[2] = s * i - f * r, t[3] = u * i - h * r, t[8] = o * r + c * i, t[9] = a * r + l * i, t[10] = s * r + f * i, t[11] = u * r + h * i, t
            }

            function d(t, e, n) {
                var r = Math.sin(n),
                    i = Math.cos(n),
                    o = e[0],
                    a = e[1],
                    s = e[2],
                    u = e[3],
                    c = e[4],
                    l = e[5],
                    f = e[6],
                    h = e[7];
                return e !== t && (t[8] = e[8], t[9] = e[9], t[10] = e[10], t[11] = e[11], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[0] = o * i + c * r, t[1] = a * i + l * r, t[2] = s * i + f * r, t[3] = u * i + h * r, t[4] = c * i - o * r, t[5] = l * i - a * r, t[6] = f * i - s * r, t[7] = h * i - u * r, t
            }

            function p(t, e) {
                var n = e[0],
                    r = e[1],
                    i = e[2],
                    o = e[3],
                    a = n + n,
                    s = r + r,
                    u = i + i,
                    c = n * a,
                    l = r * a,
                    f = r * s,
                    h = i * a,
                    d = i * s,
                    p = i * u,
                    g = o * a,
                    y = o * s,
                    v = o * u;
                return t[0] = 1 - f - p, t[1] = l + v, t[2] = h - y, t[3] = 0, t[4] = l - v, t[5] = 1 - c - p, t[6] = d + g, t[7] = 0, t[8] = h + y, t[9] = d - g, t[10] = 1 - c - f, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
            }

            function g(t, e, n, r, i, o, a) {
                var s = 1 / (n - e),
                    u = 1 / (i - r),
                    c = 1 / (o - a);
                return t[0] = 2 * o * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 2 * o * u, t[6] = 0, t[7] = 0, t[8] = (n + e) * s, t[9] = (i + r) * u, t[10] = (a + o) * c, t[11] = -1, t[12] = 0, t[13] = 0, t[14] = a * o * 2 * c, t[15] = 0, t
            }

            function y(t, e, n, r, i) {
                var o, a = 1 / Math.tan(e / 2);
                return t[0] = a / n, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = a, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[11] = -1, t[12] = 0, t[13] = 0, t[15] = 0, null != i && i !== 1 / 0 ? (o = 1 / (r - i), t[10] = (i + r) * o, t[14] = 2 * i * r * o) : (t[10] = -1, t[14] = -2 * r), t
            }

            function v(t, e, n, r, i, o, a) {
                var s = 1 / (e - n),
                    u = 1 / (r - i),
                    c = 1 / (o - a);
                return t[0] = -2 * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = -2 * u, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 2 * c, t[11] = 0, t[12] = (e + n) * s, t[13] = (i + r) * u, t[14] = (a + o) * c, t[15] = 1, t
            }

            function m(t, e, n, i) {
                var o, a, s, u, c, l, f, h, d, p, g = e[0],
                    y = e[1],
                    v = e[2],
                    m = i[0],
                    b = i[1],
                    w = i[2],
                    _ = n[0],
                    P = n[1],
                    E = n[2];
                return Math.abs(g - _) < r.Ib && Math.abs(y - P) < r.Ib && Math.abs(v - E) < r.Ib ? function(t) {
                    return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
                }(t) : (f = g - _, h = y - P, d = v - E, o = b * (d *= p = 1 / Math.hypot(f, h, d)) - w * (h *= p), a = w * (f *= p) - m * d, s = m * h - b * f, (p = Math.hypot(o, a, s)) ? (o *= p = 1 / p, a *= p, s *= p) : (o = 0, a = 0, s = 0), u = h * s - d * a, c = d * o - f * s, l = f * a - h * o, (p = Math.hypot(u, c, l)) ? (u *= p = 1 / p, c *= p, l *= p) : (u = 0, c = 0, l = 0), t[0] = o, t[1] = u, t[2] = f, t[3] = 0, t[4] = a, t[5] = c, t[6] = h, t[7] = 0, t[8] = s, t[9] = l, t[10] = d, t[11] = 0, t[12] = -(o * g + a * y + s * v), t[13] = -(u * g + c * y + l * v), t[14] = -(f * g + h * y + d * v), t[15] = 1, t)
            }

            function b(t, e) {
                var n = t[0],
                    i = t[1],
                    o = t[2],
                    a = t[3],
                    s = t[4],
                    u = t[5],
                    c = t[6],
                    l = t[7],
                    f = t[8],
                    h = t[9],
                    d = t[10],
                    p = t[11],
                    g = t[12],
                    y = t[13],
                    v = t[14],
                    m = t[15],
                    b = e[0],
                    w = e[1],
                    _ = e[2],
                    P = e[3],
                    E = e[4],
                    x = e[5],
                    S = e[6],
                    O = e[7],
                    T = e[8],
                    M = e[9],
                    C = e[10],
                    A = e[11],
                    k = e[12],
                    I = e[13],
                    j = e[14],
                    L = e[15];
                return Math.abs(n - b) <= r.Ib * Math.max(1, Math.abs(n), Math.abs(b)) && Math.abs(i - w) <= r.Ib * Math.max(1, Math.abs(i), Math.abs(w)) && Math.abs(o - _) <= r.Ib * Math.max(1, Math.abs(o), Math.abs(_)) && Math.abs(a - P) <= r.Ib * Math.max(1, Math.abs(a), Math.abs(P)) && Math.abs(s - E) <= r.Ib * Math.max(1, Math.abs(s), Math.abs(E)) && Math.abs(u - x) <= r.Ib * Math.max(1, Math.abs(u), Math.abs(x)) && Math.abs(c - S) <= r.Ib * Math.max(1, Math.abs(c), Math.abs(S)) && Math.abs(l - O) <= r.Ib * Math.max(1, Math.abs(l), Math.abs(O)) && Math.abs(f - T) <= r.Ib * Math.max(1, Math.abs(f), Math.abs(T)) && Math.abs(h - M) <= r.Ib * Math.max(1, Math.abs(h), Math.abs(M)) && Math.abs(d - C) <= r.Ib * Math.max(1, Math.abs(d), Math.abs(C)) && Math.abs(p - A) <= r.Ib * Math.max(1, Math.abs(p), Math.abs(A)) && Math.abs(g - k) <= r.Ib * Math.max(1, Math.abs(g), Math.abs(k)) && Math.abs(y - I) <= r.Ib * Math.max(1, Math.abs(y), Math.abs(I)) && Math.abs(v - j) <= r.Ib * Math.max(1, Math.abs(v), Math.abs(j)) && Math.abs(m - L) <= r.Ib * Math.max(1, Math.abs(m), Math.abs(L))
            }
        },
        31437: function(t, e, n) {
            "use strict";
            n.d(e, {
                IH: function() {
                    return i
                },
                bA: function() {
                    return o
                },
                kE: function() {
                    return a
                },
                tk: function() {
                    return s
                },
                t7: function() {
                    return u
                },
                fF: function() {
                    return c
                },
                lu: function() {
                    return l
                }
            });
            var r = n(49685);

            function i(t, e, n) {
                return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t
            }

            function o(t, e, n) {
                return t[0] = e[0] * n, t[1] = e[1] * n, t
            }

            function a(t) {
                var e = t[0],
                    n = t[1];
                return Math.hypot(e, n)
            }

            function s(t, e) {
                return t[0] = -e[0], t[1] = -e[1], t
            }

            function u(t, e, n, r) {
                var i = e[0],
                    o = e[1];
                return t[0] = i + r * (n[0] - i), t[1] = o + r * (n[1] - o), t
            }

            function c(t, e, n) {
                var r = e[0],
                    i = e[1];
                return t[0] = n[0] * r + n[4] * i + n[12], t[1] = n[1] * r + n[5] * i + n[13], t
            }
            var l = function(t, e, n) {
                return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t
            };
            ! function() {
                var t = function() {
                    var t = new r.WT(2);
                    return r.WT != Float32Array && (t[0] = 0, t[1] = 0), t
                }()
            }()
        },
        77160: function(t, e, n) {
            "use strict";
            n.d(e, {
                IH: function() {
                    return i
                },
                tk: function() {
                    return o
                },
                kC: function() {
                    return a
                },
                fF: function() {
                    return s
                },
                kK: function() {
                    return u
                },
                VC: function() {
                    return c
                },
                lM: function() {
                    return l
                },
                uD: function() {
                    return f
                },
                jI: function() {
                    return h
                },
                EU: function() {
                    return d
                },
                dC: function() {
                    return p
                }
            });
            var r = n(49685);

            function i(t, e, n) {
                return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t
            }

            function o(t, e) {
                return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t
            }

            function a(t, e, n) {
                var r = e[0],
                    i = e[1],
                    o = e[2],
                    a = n[0],
                    s = n[1],
                    u = n[2];
                return t[0] = i * u - o * s, t[1] = o * a - r * u, t[2] = r * s - i * a, t
            }

            function s(t, e, n) {
                var r = e[0],
                    i = e[1],
                    o = e[2],
                    a = n[3] * r + n[7] * i + n[11] * o + n[15];
                return a = a || 1, t[0] = (n[0] * r + n[4] * i + n[8] * o + n[12]) / a, t[1] = (n[1] * r + n[5] * i + n[9] * o + n[13]) / a, t[2] = (n[2] * r + n[6] * i + n[10] * o + n[14]) / a, t
            }

            function u(t, e, n) {
                var r = e[0],
                    i = e[1],
                    o = e[2];
                return t[0] = r * n[0] + i * n[3] + o * n[6], t[1] = r * n[1] + i * n[4] + o * n[7], t[2] = r * n[2] + i * n[5] + o * n[8], t
            }

            function c(t, e, n) {
                var r = n[0],
                    i = n[1],
                    o = n[2],
                    a = n[3],
                    s = e[0],
                    u = e[1],
                    c = e[2],
                    l = i * c - o * u,
                    f = o * s - r * c,
                    h = r * u - i * s,
                    d = i * h - o * f,
                    p = o * l - r * h,
                    g = r * f - i * l,
                    y = 2 * a;
                return l *= y, f *= y, h *= y, d *= 2, p *= 2, g *= 2, t[0] = s + l + d, t[1] = u + f + p, t[2] = c + h + g, t
            }

            function l(t, e, n, r) {
                var i = [],
                    o = [];
                return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[0], o[1] = i[1] * Math.cos(r) - i[2] * Math.sin(r), o[2] = i[1] * Math.sin(r) + i[2] * Math.cos(r), t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t
            }

            function f(t, e, n, r) {
                var i = [],
                    o = [];
                return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[2] * Math.sin(r) + i[0] * Math.cos(r), o[1] = i[1], o[2] = i[2] * Math.cos(r) - i[0] * Math.sin(r), t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t
            }

            function h(t, e, n, r) {
                var i = [],
                    o = [];
                return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[0] * Math.cos(r) - i[1] * Math.sin(r), o[1] = i[0] * Math.sin(r) + i[1] * Math.cos(r), o[2] = i[2], t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t
            }

            function d(t, e) {
                var n = t[0],
                    r = t[1],
                    i = t[2],
                    o = e[0],
                    a = e[1],
                    s = e[2],
                    u = Math.sqrt(n * n + r * r + i * i) * Math.sqrt(o * o + a * a + s * s),
                    c = u && function(t, e) {
                        return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
                    }(t, e) / u;
                return Math.acos(Math.min(Math.max(c, -1), 1))
            }
            var p = function(t, e, n) {
                return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t[2] = e[2] * n[2], t
            };
            ! function() {
                var t = function() {
                    var t = new r.WT(3);
                    return r.WT != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0), t
                }()
            }()
        },
        98333: function(t, e, n) {
            "use strict";
            n.d(e, {
                bA: function() {
                    return i
                },
                fF: function() {
                    return o
                }
            });
            var r = n(49685);

            function i(t, e, n) {
                return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t
            }

            function o(t, e, n) {
                var r = e[0],
                    i = e[1],
                    o = e[2],
                    a = e[3];
                return t[0] = n[0] * r + n[4] * i + n[8] * o + n[12] * a, t[1] = n[1] * r + n[5] * i + n[9] * o + n[13] * a, t[2] = n[2] * r + n[6] * i + n[10] * o + n[14] * a, t[3] = n[3] * r + n[7] * i + n[11] * o + n[15] * a, t
            }! function() {
                var t = function() {
                    var t = new r.WT(4);
                    return r.WT != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0), t
                }()
            }()
        },
        50840: function(t, e, n) {
            var r;
            ! function(i, o, a, s) {
                "use strict";
                var u, c = ["", "webkit", "Moz", "MS", "ms", "o"],
                    l = o.createElement("div"),
                    f = Math.round,
                    h = Math.abs,
                    d = Date.now;

                function p(t, e, n) {
                    return setTimeout(_(t, n), e)
                }

                function g(t, e, n) {
                    return !!Array.isArray(t) && (y(t, n[e], n), !0)
                }

                function y(t, e, n) {
                    var r;
                    if (t)
                        if (t.forEach) t.forEach(e, n);
                        else if (t.length !== s)
                        for (r = 0; r < t.length;) e.call(n, t[r], r, t), r++;
                    else
                        for (r in t) t.hasOwnProperty(r) && e.call(n, t[r], r, t)
                }

                function v(t, e, n) {
                    var r = "DEPRECATED METHOD: " + e + "\n" + n + " AT \n";
                    return function() {
                        var e = new Error("get-stack-trace"),
                            n = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace",
                            o = i.console && (i.console.warn || i.console.log);
                        return o && o.call(i.console, r, n), t.apply(this, arguments)
                    }
                }
                u = "function" !== typeof Object.assign ? function(t) {
                    if (t === s || null === t) throw new TypeError("Cannot convert undefined or null to object");
                    for (var e = Object(t), n = 1; n < arguments.length; n++) {
                        var r = arguments[n];
                        if (r !== s && null !== r)
                            for (var i in r) r.hasOwnProperty(i) && (e[i] = r[i])
                    }
                    return e
                } : Object.assign;
                var m = v((function(t, e, n) {
                        for (var r = Object.keys(e), i = 0; i < r.length;)(!n || n && t[r[i]] === s) && (t[r[i]] = e[r[i]]), i++;
                        return t
                    }), "extend", "Use `assign`."),
                    b = v((function(t, e) {
                        return m(t, e, !0)
                    }), "merge", "Use `assign`.");

                function w(t, e, n) {
                    var r, i = e.prototype;
                    (r = t.prototype = Object.create(i)).constructor = t, r._super = i, n && u(r, n)
                }

                function _(t, e) {
                    return function() {
                        return t.apply(e, arguments)
                    }
                }

                function P(t, e) {
                    return "function" == typeof t ? t.apply(e && e[0] || s, e) : t
                }

                function E(t, e) {
                    return t === s ? e : t
                }

                function x(t, e, n) {
                    y(M(e), (function(e) {
                        t.addEventListener(e, n, !1)
                    }))
                }

                function S(t, e, n) {
                    y(M(e), (function(e) {
                        t.removeEventListener(e, n, !1)
                    }))
                }

                function O(t, e) {
                    for (; t;) {
                        if (t == e) return !0;
                        t = t.parentNode
                    }
                    return !1
                }

                function T(t, e) {
                    return t.indexOf(e) > -1
                }

                function M(t) {
                    return t.trim().split(/\s+/g)
                }

                function C(t, e, n) {
                    if (t.indexOf && !n) return t.indexOf(e);
                    for (var r = 0; r < t.length;) {
                        if (n && t[r][n] == e || !n && t[r] === e) return r;
                        r++
                    }
                    return -1
                }

                function A(t) {
                    return Array.prototype.slice.call(t, 0)
                }

                function k(t, e, n) {
                    for (var r = [], i = [], o = 0; o < t.length;) {
                        var a = e ? t[o][e] : t[o];
                        C(i, a) < 0 && r.push(t[o]), i[o] = a, o++
                    }
                    return n && (r = e ? r.sort((function(t, n) {
                        return t[e] > n[e]
                    })) : r.sort()), r
                }

                function I(t, e) {
                    for (var n, r, i = e[0].toUpperCase() + e.slice(1), o = 0; o < c.length;) {
                        if ((r = (n = c[o]) ? n + i : e) in t) return r;
                        o++
                    }
                    return s
                }
                var j = 1;

                function L(t) {
                    var e = t.ownerDocument || t;
                    return e.defaultView || e.parentWindow || i
                }
                var R = "ontouchstart" in i,
                    D = I(i, "PointerEvent") !== s,
                    F = R && /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),
                    N = "touch",
                    z = "mouse",
                    B = 24,
                    U = ["x", "y"],
                    G = ["clientX", "clientY"];

                function Z(t, e) {
                    var n = this;
                    this.manager = t, this.callback = e, this.element = t.element, this.target = t.options.inputTarget, this.domHandler = function(e) {
                        P(t.options.enable, [t]) && n.handler(e)
                    }, this.init()
                }

                function V(t, e, n) {
                    var r = n.pointers.length,
                        i = n.changedPointers.length,
                        o = 1 & e && r - i === 0,
                        a = 12 & e && r - i === 0;
                    n.isFirst = !!o, n.isFinal = !!a, o && (t.session = {}), n.eventType = e,
                        function(t, e) {
                            var n = t.session,
                                r = e.pointers,
                                i = r.length;
                            n.firstInput || (n.firstInput = H(e));
                            i > 1 && !n.firstMultiple ? n.firstMultiple = H(e) : 1 === i && (n.firstMultiple = !1);
                            var o = n.firstInput,
                                a = n.firstMultiple,
                                u = a ? a.center : o.center,
                                c = e.center = W(r);
                            e.timeStamp = d(), e.deltaTime = e.timeStamp - o.timeStamp, e.angle = X(u, c), e.distance = $(u, c),
                                function(t, e) {
                                    var n = e.center,
                                        r = t.offsetDelta || {},
                                        i = t.prevDelta || {},
                                        o = t.prevInput || {};
                                    1 !== e.eventType && 4 !== o.eventType || (i = t.prevDelta = {
                                        x: o.deltaX || 0,
                                        y: o.deltaY || 0
                                    }, r = t.offsetDelta = {
                                        x: n.x,
                                        y: n.y
                                    });
                                    e.deltaX = i.x + (n.x - r.x), e.deltaY = i.y + (n.y - r.y)
                                }(n, e), e.offsetDirection = q(e.deltaX, e.deltaY);
                            var l = Y(e.deltaTime, e.deltaX, e.deltaY);
                            e.overallVelocityX = l.x, e.overallVelocityY = l.y, e.overallVelocity = h(l.x) > h(l.y) ? l.x : l.y, e.scale = a ? (f = a.pointers, p = r, $(p[0], p[1], G) / $(f[0], f[1], G)) : 1, e.rotation = a ? function(t, e) {
                                    return X(e[1], e[0], G) + X(t[1], t[0], G)
                                }(a.pointers, r) : 0, e.maxPointers = n.prevInput ? e.pointers.length > n.prevInput.maxPointers ? e.pointers.length : n.prevInput.maxPointers : e.pointers.length,
                                function(t, e) {
                                    var n, r, i, o, a = t.lastInterval || e,
                                        u = e.timeStamp - a.timeStamp;
                                    if (8 != e.eventType && (u > 25 || a.velocity === s)) {
                                        var c = e.deltaX - a.deltaX,
                                            l = e.deltaY - a.deltaY,
                                            f = Y(u, c, l);
                                        r = f.x, i = f.y, n = h(f.x) > h(f.y) ? f.x : f.y, o = q(c, l), t.lastInterval = e
                                    } else n = a.velocity, r = a.velocityX, i = a.velocityY, o = a.direction;
                                    e.velocity = n, e.velocityX = r, e.velocityY = i, e.direction = o
                                }(n, e);
                            var f, p;
                            var g = t.element;
                            O(e.srcEvent.target, g) && (g = e.srcEvent.target);
                            e.target = g
                        }(t, n), t.emit("hammer.input", n), t.recognize(n), t.session.prevInput = n
                }

                function H(t) {
                    for (var e = [], n = 0; n < t.pointers.length;) e[n] = {
                        clientX: f(t.pointers[n].clientX),
                        clientY: f(t.pointers[n].clientY)
                    }, n++;
                    return {
                        timeStamp: d(),
                        pointers: e,
                        center: W(e),
                        deltaX: t.deltaX,
                        deltaY: t.deltaY
                    }
                }

                function W(t) {
                    var e = t.length;
                    if (1 === e) return {
                        x: f(t[0].clientX),
                        y: f(t[0].clientY)
                    };
                    for (var n = 0, r = 0, i = 0; i < e;) n += t[i].clientX, r += t[i].clientY, i++;
                    return {
                        x: f(n / e),
                        y: f(r / e)
                    }
                }

                function Y(t, e, n) {
                    return {
                        x: e / t || 0,
                        y: n / t || 0
                    }
                }

                function q(t, e) {
                    return t === e ? 1 : h(t) >= h(e) ? t < 0 ? 2 : 4 : e < 0 ? 8 : 16
                }

                function $(t, e, n) {
                    n || (n = U);
                    var r = e[n[0]] - t[n[0]],
                        i = e[n[1]] - t[n[1]];
                    return Math.sqrt(r * r + i * i)
                }

                function X(t, e, n) {
                    n || (n = U);
                    var r = e[n[0]] - t[n[0]],
                        i = e[n[1]] - t[n[1]];
                    return 180 * Math.atan2(i, r) / Math.PI
                }
                Z.prototype = {
                    handler: function() {},
                    init: function() {
                        this.evEl && x(this.element, this.evEl, this.domHandler), this.evTarget && x(this.target, this.evTarget, this.domHandler), this.evWin && x(L(this.element), this.evWin, this.domHandler)
                    },
                    destroy: function() {
                        this.evEl && S(this.element, this.evEl, this.domHandler), this.evTarget && S(this.target, this.evTarget, this.domHandler), this.evWin && S(L(this.element), this.evWin, this.domHandler)
                    }
                };
                var K = {
                        mousedown: 1,
                        mousemove: 2,
                        mouseup: 4
                    },
                    J = "mousedown",
                    Q = "mousemove mouseup";

                function tt() {
                    this.evEl = J, this.evWin = Q, this.pressed = !1, Z.apply(this, arguments)
                }
                w(tt, Z, {
                    handler: function(t) {
                        var e = K[t.type];
                        1 & e && 0 === t.button && (this.pressed = !0), 2 & e && 1 !== t.which && (e = 4), this.pressed && (4 & e && (this.pressed = !1), this.callback(this.manager, e, {
                            pointers: [t],
                            changedPointers: [t],
                            pointerType: z,
                            srcEvent: t
                        }))
                    }
                });
                var et = {
                        pointerdown: 1,
                        pointermove: 2,
                        pointerup: 4,
                        pointercancel: 8,
                        pointerout: 8
                    },
                    nt = {
                        2: N,
                        3: "pen",
                        4: z,
                        5: "kinect"
                    },
                    rt = "pointerdown",
                    it = "pointermove pointerup pointercancel";

                function ot() {
                    this.evEl = rt, this.evWin = it, Z.apply(this, arguments), this.store = this.manager.session.pointerEvents = []
                }
                i.MSPointerEvent && !i.PointerEvent && (rt = "MSPointerDown", it = "MSPointerMove MSPointerUp MSPointerCancel"), w(ot, Z, {
                    handler: function(t) {
                        var e = this.store,
                            n = !1,
                            r = t.type.toLowerCase().replace("ms", ""),
                            i = et[r],
                            o = nt[t.pointerType] || t.pointerType,
                            a = o == N,
                            s = C(e, t.pointerId, "pointerId");
                        1 & i && (0 === t.button || a) ? s < 0 && (e.push(t), s = e.length - 1) : 12 & i && (n = !0), s < 0 || (e[s] = t, this.callback(this.manager, i, {
                            pointers: e,
                            changedPointers: [t],
                            pointerType: o,
                            srcEvent: t
                        }), n && e.splice(s, 1))
                    }
                });
                var at = {
                        touchstart: 1,
                        touchmove: 2,
                        touchend: 4,
                        touchcancel: 8
                    },
                    st = "touchstart",
                    ut = "touchstart touchmove touchend touchcancel";

                function ct() {
                    this.evTarget = st, this.evWin = ut, this.started = !1, Z.apply(this, arguments)
                }

                function lt(t, e) {
                    var n = A(t.touches),
                        r = A(t.changedTouches);
                    return 12 & e && (n = k(n.concat(r), "identifier", !0)), [n, r]
                }
                w(ct, Z, {
                    handler: function(t) {
                        var e = at[t.type];
                        if (1 === e && (this.started = !0), this.started) {
                            var n = lt.call(this, t, e);
                            12 & e && n[0].length - n[1].length === 0 && (this.started = !1), this.callback(this.manager, e, {
                                pointers: n[0],
                                changedPointers: n[1],
                                pointerType: N,
                                srcEvent: t
                            })
                        }
                    }
                });
                var ft = {
                        touchstart: 1,
                        touchmove: 2,
                        touchend: 4,
                        touchcancel: 8
                    },
                    ht = "touchstart touchmove touchend touchcancel";

                function dt() {
                    this.evTarget = ht, this.targetIds = {}, Z.apply(this, arguments)
                }

                function pt(t, e) {
                    var n = A(t.touches),
                        r = this.targetIds;
                    if (3 & e && 1 === n.length) return r[n[0].identifier] = !0, [n, n];
                    var i, o, a = A(t.changedTouches),
                        s = [],
                        u = this.target;
                    if (o = n.filter((function(t) {
                            return O(t.target, u)
                        })), 1 === e)
                        for (i = 0; i < o.length;) r[o[i].identifier] = !0, i++;
                    for (i = 0; i < a.length;) r[a[i].identifier] && s.push(a[i]), 12 & e && delete r[a[i].identifier], i++;
                    return s.length ? [k(o.concat(s), "identifier", !0), s] : void 0
                }
                w(dt, Z, {
                    handler: function(t) {
                        var e = ft[t.type],
                            n = pt.call(this, t, e);
                        n && this.callback(this.manager, e, {
                            pointers: n[0],
                            changedPointers: n[1],
                            pointerType: N,
                            srcEvent: t
                        })
                    }
                });

                function gt() {
                    Z.apply(this, arguments);
                    var t = _(this.handler, this);
                    this.touch = new dt(this.manager, t), this.mouse = new tt(this.manager, t), this.primaryTouch = null, this.lastTouches = []
                }

                function yt(t, e) {
                    1 & t ? (this.primaryTouch = e.changedPointers[0].identifier, vt.call(this, e)) : 12 & t && vt.call(this, e)
                }

                function vt(t) {
                    var e = t.changedPointers[0];
                    if (e.identifier === this.primaryTouch) {
                        var n = {
                            x: e.clientX,
                            y: e.clientY
                        };
                        this.lastTouches.push(n);
                        var r = this.lastTouches;
                        setTimeout((function() {
                            var t = r.indexOf(n);
                            t > -1 && r.splice(t, 1)
                        }), 2500)
                    }
                }

                function mt(t) {
                    for (var e = t.srcEvent.clientX, n = t.srcEvent.clientY, r = 0; r < this.lastTouches.length; r++) {
                        var i = this.lastTouches[r],
                            o = Math.abs(e - i.x),
                            a = Math.abs(n - i.y);
                        if (o <= 25 && a <= 25) return !0
                    }
                    return !1
                }
                w(gt, Z, {
                    handler: function(t, e, n) {
                        var r = n.pointerType == N,
                            i = n.pointerType == z;
                        if (!(i && n.sourceCapabilities && n.sourceCapabilities.firesTouchEvents)) {
                            if (r) yt.call(this, e, n);
                            else if (i && mt.call(this, n)) return;
                            this.callback(t, e, n)
                        }
                    },
                    destroy: function() {
                        this.touch.destroy(), this.mouse.destroy()
                    }
                });
                var bt = I(l.style, "touchAction"),
                    wt = bt !== s,
                    _t = "compute",
                    Pt = "auto",
                    Et = "manipulation",
                    xt = "none",
                    St = "pan-x",
                    Ot = "pan-y",
                    Tt = function() {
                        if (!wt) return !1;
                        var t = {},
                            e = i.CSS && i.CSS.supports;
                        return ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach((function(n) {
                            t[n] = !e || i.CSS.supports("touch-action", n)
                        })), t
                    }();

                function Mt(t, e) {
                    this.manager = t, this.set(e)
                }
                Mt.prototype = {
                    set: function(t) {
                        t == _t && (t = this.compute()), wt && this.manager.element.style && Tt[t] && (this.manager.element.style[bt] = t), this.actions = t.toLowerCase().trim()
                    },
                    update: function() {
                        this.set(this.manager.options.touchAction)
                    },
                    compute: function() {
                        var t = [];
                        return y(this.manager.recognizers, (function(e) {
                                P(e.options.enable, [e]) && (t = t.concat(e.getTouchAction()))
                            })),
                            function(t) {
                                if (T(t, xt)) return xt;
                                var e = T(t, St),
                                    n = T(t, Ot);
                                if (e && n) return xt;
                                if (e || n) return e ? St : Ot;
                                if (T(t, Et)) return Et;
                                return Pt
                            }(t.join(" "))
                    },
                    preventDefaults: function(t) {
                        var e = t.srcEvent,
                            n = t.offsetDirection;
                        if (this.manager.session.prevented) e.preventDefault();
                        else {
                            var r = this.actions,
                                i = T(r, xt) && !Tt.none,
                                o = T(r, Ot) && !Tt["pan-y"],
                                a = T(r, St) && !Tt["pan-x"];
                            if (i) {
                                var s = 1 === t.pointers.length,
                                    u = t.distance < 2,
                                    c = t.deltaTime < 250;
                                if (s && u && c) return
                            }
                            if (!a || !o) return i || o && 6 & n || a && n & B ? this.preventSrc(e) : void 0
                        }
                    },
                    preventSrc: function(t) {
                        this.manager.session.prevented = !0, t.preventDefault()
                    }
                };
                var Ct = 32;

                function At(t) {
                    this.options = u({}, this.defaults, t || {}), this.id = j++, this.manager = null, this.options.enable = E(this.options.enable, !0), this.state = 1, this.simultaneous = {}, this.requireFail = []
                }

                function kt(t) {
                    return 16 & t ? "cancel" : 8 & t ? "end" : 4 & t ? "move" : 2 & t ? "start" : ""
                }

                function It(t) {
                    return 16 == t ? "down" : 8 == t ? "up" : 2 == t ? "left" : 4 == t ? "right" : ""
                }

                function jt(t, e) {
                    var n = e.manager;
                    return n ? n.get(t) : t
                }

                function Lt() {
                    At.apply(this, arguments)
                }

                function Rt() {
                    Lt.apply(this, arguments), this.pX = null, this.pY = null
                }

                function Dt() {
                    Lt.apply(this, arguments)
                }

                function Ft() {
                    At.apply(this, arguments), this._timer = null, this._input = null
                }

                function Nt() {
                    Lt.apply(this, arguments)
                }

                function zt() {
                    Lt.apply(this, arguments)
                }

                function Bt() {
                    At.apply(this, arguments), this.pTime = !1, this.pCenter = !1, this._timer = null, this._input = null, this.count = 0
                }

                function Ut(t, e) {
                    return (e = e || {}).recognizers = E(e.recognizers, Ut.defaults.preset), new Gt(t, e)
                }
                At.prototype = {
                    defaults: {},
                    set: function(t) {
                        return u(this.options, t), this.manager && this.manager.touchAction.update(), this
                    },
                    recognizeWith: function(t) {
                        if (g(t, "recognizeWith", this)) return this;
                        var e = this.simultaneous;
                        return e[(t = jt(t, this)).id] || (e[t.id] = t, t.recognizeWith(this)), this
                    },
                    dropRecognizeWith: function(t) {
                        return g(t, "dropRecognizeWith", this) || (t = jt(t, this), delete this.simultaneous[t.id]), this
                    },
                    requireFailure: function(t) {
                        if (g(t, "requireFailure", this)) return this;
                        var e = this.requireFail;
                        return -1 === C(e, t = jt(t, this)) && (e.push(t), t.requireFailure(this)), this
                    },
                    dropRequireFailure: function(t) {
                        if (g(t, "dropRequireFailure", this)) return this;
                        t = jt(t, this);
                        var e = C(this.requireFail, t);
                        return e > -1 && this.requireFail.splice(e, 1), this
                    },
                    hasRequireFailures: function() {
                        return this.requireFail.length > 0
                    },
                    canRecognizeWith: function(t) {
                        return !!this.simultaneous[t.id]
                    },
                    emit: function(t) {
                        var e = this,
                            n = this.state;

                        function r(n) {
                            e.manager.emit(n, t)
                        }
                        n < 8 && r(e.options.event + kt(n)), r(e.options.event), t.additionalEvent && r(t.additionalEvent), n >= 8 && r(e.options.event + kt(n))
                    },
                    tryEmit: function(t) {
                        if (this.canEmit()) return this.emit(t);
                        this.state = Ct
                    },
                    canEmit: function() {
                        for (var t = 0; t < this.requireFail.length;) {
                            if (!(33 & this.requireFail[t].state)) return !1;
                            t++
                        }
                        return !0
                    },
                    recognize: function(t) {
                        var e = u({}, t);
                        if (!P(this.options.enable, [this, e])) return this.reset(), void(this.state = Ct);
                        56 & this.state && (this.state = 1), this.state = this.process(e), 30 & this.state && this.tryEmit(e)
                    },
                    process: function(t) {},
                    getTouchAction: function() {},
                    reset: function() {}
                }, w(Lt, At, {
                    defaults: {
                        pointers: 1
                    },
                    attrTest: function(t) {
                        var e = this.options.pointers;
                        return 0 === e || t.pointers.length === e
                    },
                    process: function(t) {
                        var e = this.state,
                            n = t.eventType,
                            r = 6 & e,
                            i = this.attrTest(t);
                        return r && (8 & n || !i) ? 16 | e : r || i ? 4 & n ? 8 | e : 2 & e ? 4 | e : 2 : Ct
                    }
                }), w(Rt, Lt, {
                    defaults: {
                        event: "pan",
                        threshold: 10,
                        pointers: 1,
                        direction: 30
                    },
                    getTouchAction: function() {
                        var t = this.options.direction,
                            e = [];
                        return 6 & t && e.push(Ot), t & B && e.push(St), e
                    },
                    directionTest: function(t) {
                        var e = this.options,
                            n = !0,
                            r = t.distance,
                            i = t.direction,
                            o = t.deltaX,
                            a = t.deltaY;
                        return i & e.direction || (6 & e.direction ? (i = 0 === o ? 1 : o < 0 ? 2 : 4, n = o != this.pX, r = Math.abs(t.deltaX)) : (i = 0 === a ? 1 : a < 0 ? 8 : 16, n = a != this.pY, r = Math.abs(t.deltaY))), t.direction = i, n && r > e.threshold && i & e.direction
                    },
                    attrTest: function(t) {
                        return Lt.prototype.attrTest.call(this, t) && (2 & this.state || !(2 & this.state) && this.directionTest(t))
                    },
                    emit: function(t) {
                        this.pX = t.deltaX, this.pY = t.deltaY;
                        var e = It(t.direction);
                        e && (t.additionalEvent = this.options.event + e), this._super.emit.call(this, t)
                    }
                }), w(Dt, Lt, {
                    defaults: {
                        event: "pinch",
                        threshold: 0,
                        pointers: 2
                    },
                    getTouchAction: function() {
                        return [xt]
                    },
                    attrTest: function(t) {
                        return this._super.attrTest.call(this, t) && (Math.abs(t.scale - 1) > this.options.threshold || 2 & this.state)
                    },
                    emit: function(t) {
                        if (1 !== t.scale) {
                            var e = t.scale < 1 ? "in" : "out";
                            t.additionalEvent = this.options.event + e
                        }
                        this._super.emit.call(this, t)
                    }
                }), w(Ft, At, {
                    defaults: {
                        event: "press",
                        pointers: 1,
                        time: 251,
                        threshold: 9
                    },
                    getTouchAction: function() {
                        return [Pt]
                    },
                    process: function(t) {
                        var e = this.options,
                            n = t.pointers.length === e.pointers,
                            r = t.distance < e.threshold,
                            i = t.deltaTime > e.time;
                        if (this._input = t, !r || !n || 12 & t.eventType && !i) this.reset();
                        else if (1 & t.eventType) this.reset(), this._timer = p((function() {
                            this.state = 8, this.tryEmit()
                        }), e.time, this);
                        else if (4 & t.eventType) return 8;
                        return Ct
                    },
                    reset: function() {
                        clearTimeout(this._timer)
                    },
                    emit: function(t) {
                        8 === this.state && (t && 4 & t.eventType ? this.manager.emit(this.options.event + "up", t) : (this._input.timeStamp = d(), this.manager.emit(this.options.event, this._input)))
                    }
                }), w(Nt, Lt, {
                    defaults: {
                        event: "rotate",
                        threshold: 0,
                        pointers: 2
                    },
                    getTouchAction: function() {
                        return [xt]
                    },
                    attrTest: function(t) {
                        return this._super.attrTest.call(this, t) && (Math.abs(t.rotation) > this.options.threshold || 2 & this.state)
                    }
                }), w(zt, Lt, {
                    defaults: {
                        event: "swipe",
                        threshold: 10,
                        velocity: .3,
                        direction: 30,
                        pointers: 1
                    },
                    getTouchAction: function() {
                        return Rt.prototype.getTouchAction.call(this)
                    },
                    attrTest: function(t) {
                        var e, n = this.options.direction;
                        return 30 & n ? e = t.overallVelocity : 6 & n ? e = t.overallVelocityX : n & B && (e = t.overallVelocityY), this._super.attrTest.call(this, t) && n & t.offsetDirection && t.distance > this.options.threshold && t.maxPointers == this.options.pointers && h(e) > this.options.velocity && 4 & t.eventType
                    },
                    emit: function(t) {
                        var e = It(t.offsetDirection);
                        e && this.manager.emit(this.options.event + e, t), this.manager.emit(this.options.event, t)
                    }
                }), w(Bt, At, {
                    defaults: {
                        event: "tap",
                        pointers: 1,
                        taps: 1,
                        interval: 300,
                        time: 250,
                        threshold: 9,
                        posThreshold: 10
                    },
                    getTouchAction: function() {
                        return [Et]
                    },
                    process: function(t) {
                        var e = this.options,
                            n = t.pointers.length === e.pointers,
                            r = t.distance < e.threshold,
                            i = t.deltaTime < e.time;
                        if (this.reset(), 1 & t.eventType && 0 === this.count) return this.failTimeout();
                        if (r && i && n) {
                            if (4 != t.eventType) return this.failTimeout();
                            var o = !this.pTime || t.timeStamp - this.pTime < e.interval,
                                a = !this.pCenter || $(this.pCenter, t.center) < e.posThreshold;
                            if (this.pTime = t.timeStamp, this.pCenter = t.center, a && o ? this.count += 1 : this.count = 1, this._input = t, 0 === this.count % e.taps) return this.hasRequireFailures() ? (this._timer = p((function() {
                                this.state = 8, this.tryEmit()
                            }), e.interval, this), 2) : 8
                        }
                        return Ct
                    },
                    failTimeout: function() {
                        return this._timer = p((function() {
                            this.state = Ct
                        }), this.options.interval, this), Ct
                    },
                    reset: function() {
                        clearTimeout(this._timer)
                    },
                    emit: function() {
                        8 == this.state && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input))
                    }
                }), Ut.VERSION = "2.0.7", Ut.defaults = {
                    domEvents: !1,
                    touchAction: _t,
                    enable: !0,
                    inputTarget: null,
                    inputClass: null,
                    preset: [
                        [Nt, {
                            enable: !1
                        }],
                        [Dt, {
                                enable: !1
                            },
                            ["rotate"]
                        ],
                        [zt, {
                            direction: 6
                        }],
                        [Rt, {
                                direction: 6
                            },
                            ["swipe"]
                        ],
                        [Bt],
                        [Bt, {
                                event: "doubletap",
                                taps: 2
                            },
                            ["tap"]
                        ],
                        [Ft]
                    ],
                    cssProps: {
                        userSelect: "none",
                        touchSelect: "none",
                        touchCallout: "none",
                        contentZooming: "none",
                        userDrag: "none",
                        tapHighlightColor: "rgba(0,0,0,0)"
                    }
                };

                function Gt(t, e) {
                    var n;
                    this.options = u({}, Ut.defaults, e || {}), this.options.inputTarget = this.options.inputTarget || t, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = t, this.input = new((n = this).options.inputClass || (D ? ot : F ? dt : R ? gt : tt))(n, V), this.touchAction = new Mt(this, this.options.touchAction), Zt(this, !0), y(this.options.recognizers, (function(t) {
                        var e = this.add(new t[0](t[1]));
                        t[2] && e.recognizeWith(t[2]), t[3] && e.requireFailure(t[3])
                    }), this)
                }

                function Zt(t, e) {
                    var n, r = t.element;
                    r.style && (y(t.options.cssProps, (function(i, o) {
                        n = I(r.style, o), e ? (t.oldCssProps[n] = r.style[n], r.style[n] = i) : r.style[n] = t.oldCssProps[n] || ""
                    })), e || (t.oldCssProps = {}))
                }
                Gt.prototype = {
                    set: function(t) {
                        return u(this.options, t), t.touchAction && this.touchAction.update(), t.inputTarget && (this.input.destroy(), this.input.target = t.inputTarget, this.input.init()), this
                    },
                    stop: function(t) {
                        this.session.stopped = t ? 2 : 1
                    },
                    recognize: function(t) {
                        var e = this.session;
                        if (!e.stopped) {
                            var n;
                            this.touchAction.preventDefaults(t);
                            var r = this.recognizers,
                                i = e.curRecognizer;
                            (!i || i && 8 & i.state) && (i = e.curRecognizer = null);
                            for (var o = 0; o < r.length;) n = r[o], 2 === e.stopped || i && n != i && !n.canRecognizeWith(i) ? n.reset() : n.recognize(t), !i && 14 & n.state && (i = e.curRecognizer = n), o++
                        }
                    },
                    get: function(t) {
                        if (t instanceof At) return t;
                        for (var e = this.recognizers, n = 0; n < e.length; n++)
                            if (e[n].options.event == t) return e[n];
                        return null
                    },
                    add: function(t) {
                        if (g(t, "add", this)) return this;
                        var e = this.get(t.options.event);
                        return e && this.remove(e), this.recognizers.push(t), t.manager = this, this.touchAction.update(), t
                    },
                    remove: function(t) {
                        if (g(t, "remove", this)) return this;
                        if (t = this.get(t)) {
                            var e = this.recognizers,
                                n = C(e, t); - 1 !== n && (e.splice(n, 1), this.touchAction.update())
                        }
                        return this
                    },
                    on: function(t, e) {
                        if (t !== s && e !== s) {
                            var n = this.handlers;
                            return y(M(t), (function(t) {
                                n[t] = n[t] || [], n[t].push(e)
                            })), this
                        }
                    },
                    off: function(t, e) {
                        if (t !== s) {
                            var n = this.handlers;
                            return y(M(t), (function(t) {
                                e ? n[t] && n[t].splice(C(n[t], e), 1) : delete n[t]
                            })), this
                        }
                    },
                    emit: function(t, e) {
                        this.options.domEvents && function(t, e) {
                            var n = o.createEvent("Event");
                            n.initEvent(t, !0, !0), n.gesture = e, e.target.dispatchEvent(n)
                        }(t, e);
                        var n = this.handlers[t] && this.handlers[t].slice();
                        if (n && n.length) {
                            e.type = t, e.preventDefault = function() {
                                e.srcEvent.preventDefault()
                            };
                            for (var r = 0; r < n.length;) n[r](e), r++
                        }
                    },
                    destroy: function() {
                        this.element && Zt(this, !1), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null
                    }
                }, u(Ut, {
                    INPUT_START: 1,
                    INPUT_MOVE: 2,
                    INPUT_END: 4,
                    INPUT_CANCEL: 8,
                    STATE_POSSIBLE: 1,
                    STATE_BEGAN: 2,
                    STATE_CHANGED: 4,
                    STATE_ENDED: 8,
                    STATE_RECOGNIZED: 8,
                    STATE_CANCELLED: 16,
                    STATE_FAILED: Ct,
                    DIRECTION_NONE: 1,
                    DIRECTION_LEFT: 2,
                    DIRECTION_RIGHT: 4,
                    DIRECTION_UP: 8,
                    DIRECTION_DOWN: 16,
                    DIRECTION_HORIZONTAL: 6,
                    DIRECTION_VERTICAL: B,
                    DIRECTION_ALL: 30,
                    Manager: Gt,
                    Input: Z,
                    TouchAction: Mt,
                    TouchInput: dt,
                    MouseInput: tt,
                    PointerEventInput: ot,
                    TouchMouseInput: gt,
                    SingleTouchInput: ct,
                    Recognizer: At,
                    AttrRecognizer: Lt,
                    Tap: Bt,
                    Pan: Rt,
                    Swipe: zt,
                    Pinch: Dt,
                    Rotate: Nt,
                    Press: Ft,
                    on: x,
                    off: S,
                    each: y,
                    merge: b,
                    extend: m,
                    assign: u,
                    inherit: w,
                    bindFn: _,
                    prefixed: I
                }), ("undefined" !== typeof i ? i : "undefined" !== typeof self ? self : {}).Hammer = Ut, (r = function() {
                    return Ut
                }.call(e, n, e, t)) === s || (t.exports = r)
            }(window, document)
        },
        22305: function(t, e, n) {
            "use strict";

            function r(t, e, n, o, a, s) {
                if (a - o <= n) return;
                const u = o + a >> 1;
                i(t, e, u, o, a, s % 2), r(t, e, n, o, u - 1, s + 1), r(t, e, n, u + 1, a, s + 1)
            }

            function i(t, e, n, r, a, s) {
                for (; a > r;) {
                    if (a - r > 600) {
                        const o = a - r + 1,
                            u = n - r + 1,
                            c = Math.log(o),
                            l = .5 * Math.exp(2 * c / 3),
                            f = .5 * Math.sqrt(c * l * (o - l) / o) * (u - o / 2 < 0 ? -1 : 1);
                        i(t, e, n, Math.max(r, Math.floor(n - u * l / o + f)), Math.min(a, Math.floor(n + (o - u) * l / o + f)), s)
                    }
                    const u = e[2 * n + s];
                    let c = r,
                        l = a;
                    for (o(t, e, r, n), e[2 * a + s] > u && o(t, e, r, a); c < l;) {
                        for (o(t, e, c, l), c++, l--; e[2 * c + s] < u;) c++;
                        for (; e[2 * l + s] > u;) l--
                    }
                    e[2 * r + s] === u ? o(t, e, r, l) : (l++, o(t, e, l, a)), l <= n && (r = l + 1), n <= l && (a = l - 1)
                }
            }

            function o(t, e, n, r) {
                a(t, n, r), a(e, 2 * n, 2 * r), a(e, 2 * n + 1, 2 * r + 1)
            }

            function a(t, e, n) {
                const r = t[e];
                t[e] = t[n], t[n] = r
            }

            function s(t, e, n, r) {
                const i = t - n,
                    o = e - r;
                return i * i + o * o
            }
            n.d(e, {
                Z: function() {
                    return l
                }
            });
            const u = t => t[0],
                c = t => t[1];
            class l {
                constructor(t, e = u, n = c, i = 64, o = Float64Array) {
                    this.nodeSize = i, this.points = t;
                    const a = t.length < 65536 ? Uint16Array : Uint32Array,
                        s = this.ids = new a(t.length),
                        l = this.coords = new o(2 * t.length);
                    for (let r = 0; r < t.length; r++) s[r] = r, l[2 * r] = e(t[r]), l[2 * r + 1] = n(t[r]);
                    r(s, l, i, 0, s.length - 1, 0)
                }
                range(t, e, n, r) {
                    return function(t, e, n, r, i, o, a) {
                        const s = [0, t.length - 1, 0],
                            u = [];
                        let c, l;
                        for (; s.length;) {
                            const f = s.pop(),
                                h = s.pop(),
                                d = s.pop();
                            if (h - d <= a) {
                                for (let a = d; a <= h; a++) c = e[2 * a], l = e[2 * a + 1], c >= n && c <= i && l >= r && l <= o && u.push(t[a]);
                                continue
                            }
                            const p = Math.floor((d + h) / 2);
                            c = e[2 * p], l = e[2 * p + 1], c >= n && c <= i && l >= r && l <= o && u.push(t[p]);
                            const g = (f + 1) % 2;
                            (0 === f ? n <= c : r <= l) && (s.push(d), s.push(p - 1), s.push(g)), (0 === f ? i >= c : o >= l) && (s.push(p + 1), s.push(h), s.push(g))
                        }
                        return u
                    }(this.ids, this.coords, t, e, n, r, this.nodeSize)
                }
                within(t, e, n) {
                    return function(t, e, n, r, i, o) {
                        const a = [0, t.length - 1, 0],
                            u = [],
                            c = i * i;
                        for (; a.length;) {
                            const l = a.pop(),
                                f = a.pop(),
                                h = a.pop();
                            if (f - h <= o) {
                                for (let i = h; i <= f; i++) s(e[2 * i], e[2 * i + 1], n, r) <= c && u.push(t[i]);
                                continue
                            }
                            const d = Math.floor((h + f) / 2),
                                p = e[2 * d],
                                g = e[2 * d + 1];
                            s(p, g, n, r) <= c && u.push(t[d]);
                            const y = (l + 1) % 2;
                            (0 === l ? n - i <= p : r - i <= g) && (a.push(h), a.push(d - 1), a.push(y)), (0 === l ? n + i >= p : r + i >= g) && (a.push(d + 1), a.push(f), a.push(y))
                        }
                        return u
                    }(this.ids, this.coords, t, e, n, this.nodeSize)
                }
            }
        },
        93096: function(t, e, n) {
            var r = "Expected a function",
                i = /^\s+|\s+$/g,
                o = /^[-+]0x[0-9a-f]+$/i,
                a = /^0b[01]+$/i,
                s = /^0o[0-7]+$/i,
                u = parseInt,
                c = "object" == typeof n.g && n.g && n.g.Object === Object && n.g,
                l = "object" == typeof self && self && self.Object === Object && self,
                f = c || l || Function("return this")(),
                h = Object.prototype.toString,
                d = Math.max,
                p = Math.min,
                g = function() {
                    return f.Date.now()
                };

            function y(t, e, n) {
                var i, o, a, s, u, c, l = 0,
                    f = !1,
                    h = !1,
                    y = !0;
                if ("function" != typeof t) throw new TypeError(r);

                function b(e) {
                    var n = i,
                        r = o;
                    return i = o = void 0, l = e, s = t.apply(r, n)
                }

                function w(t) {
                    return l = t, u = setTimeout(P, e), f ? b(t) : s
                }

                function _(t) {
                    var n = t - c;
                    return void 0 === c || n >= e || n < 0 || h && t - l >= a
                }

                function P() {
                    var t = g();
                    if (_(t)) return E(t);
                    u = setTimeout(P, function(t) {
                        var n = e - (t - c);
                        return h ? p(n, a - (t - l)) : n
                    }(t))
                }

                function E(t) {
                    return u = void 0, y && i ? b(t) : (i = o = void 0, s)
                }

                function x() {
                    var t = g(),
                        n = _(t);
                    if (i = arguments, o = this, c = t, n) {
                        if (void 0 === u) return w(c);
                        if (h) return u = setTimeout(P, e), b(c)
                    }
                    return void 0 === u && (u = setTimeout(P, e)), s
                }
                return e = m(e) || 0, v(n) && (f = !!n.leading, a = (h = "maxWait" in n) ? d(m(n.maxWait) || 0, e) : a, y = "trailing" in n ? !!n.trailing : y), x.cancel = function() {
                    void 0 !== u && clearTimeout(u), l = 0, i = c = o = u = void 0
                }, x.flush = function() {
                    return void 0 === u ? s : E(g())
                }, x
            }

            function v(t) {
                var e = typeof t;
                return !!t && ("object" == e || "function" == e)
            }

            function m(t) {
                if ("number" == typeof t) return t;
                if (function(t) {
                        return "symbol" == typeof t || function(t) {
                            return !!t && "object" == typeof t
                        }(t) && "[object Symbol]" == h.call(t)
                    }(t)) return NaN;
                if (v(t)) {
                    var e = "function" == typeof t.valueOf ? t.valueOf() : t;
                    t = v(e) ? e + "" : e
                }
                if ("string" != typeof t) return 0 === t ? t : +t;
                t = t.replace(i, "");
                var n = a.test(t);
                return n || s.test(t) ? u(t.slice(2), n ? 2 : 8) : o.test(t) ? NaN : +t
            }
            t.exports = function(t, e, n) {
                var i = !0,
                    o = !0;
                if ("function" != typeof t) throw new TypeError(r);
                return v(n) && (i = "leading" in n ? !!n.leading : i, o = "trailing" in n ? !!n.trailing : o), y(t, e, {
                    leading: i,
                    maxWait: e,
                    trailing: o
                })
            }
        },
        23042: function(t, e, n) {
            "use strict";
            n.d(e, {
                Q: function() {
                    return z
                }
            });
            var r = n(50840),
                i = n.n(r);
            const o = {
                mousedown: 1,
                mousemove: 2,
                mouseup: 4
            };
            ! function(t) {
                const e = t.prototype.handler;
                t.prototype.handler = function(t) {
                    const n = this.store;
                    t.button > 0 && "pointerdown" === t.type && (function(t, e) {
                        for (let n = 0; n < t.length; n++)
                            if (e(t[n])) return !0;
                        return !1
                    }(n, (e => e.pointerId === t.pointerId)) || n.push(t)), e.call(this, t)
                }
            }(i().PointerEventInput), i().MouseInput.prototype.handler = function(t) {
                let e = o[t.type];
                1 & e && t.button >= 0 && (this.pressed = !0), 2 & e && 0 === t.which && (e = 4), this.pressed && (4 & e && (this.pressed = !1), this.callback(this.manager, e, {
                    pointers: [t],
                    changedPointers: [t],
                    pointerType: "mouse",
                    srcEvent: t
                }))
            };
            const a = i().Manager;
            var s = i();
            const u = s ? [
                    [s.Pan, {
                        event: "tripan",
                        pointers: 3,
                        threshold: 0,
                        enable: !1
                    }],
                    [s.Rotate, {
                        enable: !1
                    }],
                    [s.Pinch, {
                        enable: !1
                    }],
                    [s.Swipe, {
                        enable: !1
                    }],
                    [s.Pan, {
                        threshold: 0,
                        enable: !1
                    }],
                    [s.Press, {
                        enable: !1
                    }],
                    [s.Tap, {
                        event: "doubletap",
                        taps: 2,
                        enable: !1
                    }],
                    [s.Tap, {
                        event: "anytap",
                        enable: !1
                    }],
                    [s.Tap, {
                        enable: !1
                    }]
                ] : null,
                c = {
                    tripan: ["rotate", "pinch", "pan"],
                    rotate: ["pinch"],
                    pinch: ["pan"],
                    pan: ["press", "doubletap", "anytap", "tap"],
                    doubletap: ["anytap"],
                    anytap: ["tap"]
                },
                l = {
                    doubletap: ["tap"]
                },
                f = {
                    pointerdown: "pointerdown",
                    pointermove: "pointermove",
                    pointerup: "pointerup",
                    touchstart: "pointerdown",
                    touchmove: "pointermove",
                    touchend: "pointerup",
                    mousedown: "pointerdown",
                    mousemove: "pointermove",
                    mouseup: "pointerup"
                },
                h = {
                    KEY_EVENTS: ["keydown", "keyup"],
                    MOUSE_EVENTS: ["mousedown", "mousemove", "mouseup", "mouseover", "mouseout", "mouseleave"],
                    WHEEL_EVENTS: ["wheel", "mousewheel"]
                },
                d = {
                    tap: "tap",
                    anytap: "anytap",
                    doubletap: "doubletap",
                    press: "press",
                    pinch: "pinch",
                    pinchin: "pinch",
                    pinchout: "pinch",
                    pinchstart: "pinch",
                    pinchmove: "pinch",
                    pinchend: "pinch",
                    pinchcancel: "pinch",
                    rotate: "rotate",
                    rotatestart: "rotate",
                    rotatemove: "rotate",
                    rotateend: "rotate",
                    rotatecancel: "rotate",
                    tripan: "tripan",
                    tripanstart: "tripan",
                    tripanmove: "tripan",
                    tripanup: "tripan",
                    tripandown: "tripan",
                    tripanleft: "tripan",
                    tripanright: "tripan",
                    tripanend: "tripan",
                    tripancancel: "tripan",
                    pan: "pan",
                    panstart: "pan",
                    panmove: "pan",
                    panup: "pan",
                    pandown: "pan",
                    panleft: "pan",
                    panright: "pan",
                    panend: "pan",
                    pancancel: "pan",
                    swipe: "swipe",
                    swipeleft: "swipe",
                    swiperight: "swipe",
                    swipeup: "swipe",
                    swipedown: "swipe"
                },
                p = {
                    click: "tap",
                    anyclick: "anytap",
                    dblclick: "doubletap",
                    mousedown: "pointerdown",
                    mousemove: "pointermove",
                    mouseup: "pointerup",
                    mouseover: "pointerover",
                    mouseout: "pointerout",
                    mouseleave: "pointerleave"
                },
                g = "undefined" !== typeof navigator && navigator.userAgent ? navigator.userAgent.toLowerCase() : "",
                y = "undefined" !== typeof window ? window : n.g;
            "undefined" !== typeof n.g ? n.g : window, "undefined" !== typeof document && document;
            let v = !1;
            try {
                const t = {
                    get passive() {
                        return v = !0, !0
                    }
                };
                y.addEventListener("test", t, t), y.removeEventListener("test", t, t)
            } catch (B) {}
            const m = -1 !== g.indexOf("firefox"),
                {
                    WHEEL_EVENTS: b
                } = h,
                w = "wheel",
                _ = 4.000244140625;
            class P {
                constructor(t, e, n = {}) {
                    this.element = t, this.callback = e, this.options = Object.assign({
                        enable: !0
                    }, n), this.events = b.concat(n.events || []), this.handleEvent = this.handleEvent.bind(this), this.events.forEach((e => t.addEventListener(e, this.handleEvent, !!v && {
                        passive: !1
                    })))
                }
                destroy() {
                    this.events.forEach((t => this.element.removeEventListener(t, this.handleEvent)))
                }
                enableEventType(t, e) {
                    t === w && (this.options.enable = e)
                }
                handleEvent(t) {
                    if (!this.options.enable) return;
                    let e = t.deltaY;
                    y.WheelEvent && (m && t.deltaMode === y.WheelEvent.DOM_DELTA_PIXEL && (e /= y.devicePixelRatio), t.deltaMode === y.WheelEvent.DOM_DELTA_LINE && (e *= 40));
                    const n = {
                        x: t.clientX,
                        y: t.clientY
                    };
                    0 !== e && e % _ === 0 && (e = Math.floor(e / _)), t.shiftKey && e && (e *= .25), this._onWheel(t, -e, n)
                }
                _onWheel(t, e, n) {
                    this.callback({
                        type: w,
                        center: n,
                        delta: e,
                        srcEvent: t,
                        pointerType: "mouse",
                        target: t.target
                    })
                }
            }
            const {
                MOUSE_EVENTS: E
            } = h, x = "pointermove", S = "pointerover", O = "pointerout", T = "pointerleave";
            class M {
                constructor(t, e, n = {}) {
                    this.element = t, this.callback = e, this.pressed = !1, this.options = Object.assign({
                        enable: !0
                    }, n), this.enableMoveEvent = this.options.enable, this.enableLeaveEvent = this.options.enable, this.enableOutEvent = this.options.enable, this.enableOverEvent = this.options.enable, this.events = E.concat(n.events || []), this.handleEvent = this.handleEvent.bind(this), this.events.forEach((e => t.addEventListener(e, this.handleEvent)))
                }
                destroy() {
                    this.events.forEach((t => this.element.removeEventListener(t, this.handleEvent)))
                }
                enableEventType(t, e) {
                    t === x && (this.enableMoveEvent = e), t === S && (this.enableOverEvent = e), t === O && (this.enableOutEvent = e), t === T && (this.enableLeaveEvent = e)
                }
                handleEvent(t) {
                    this.handleOverEvent(t), this.handleOutEvent(t), this.handleLeaveEvent(t), this.handleMoveEvent(t)
                }
                handleOverEvent(t) {
                    this.enableOverEvent && "mouseover" === t.type && this.callback({
                        type: S,
                        srcEvent: t,
                        pointerType: "mouse",
                        target: t.target
                    })
                }
                handleOutEvent(t) {
                    this.enableOutEvent && "mouseout" === t.type && this.callback({
                        type: O,
                        srcEvent: t,
                        pointerType: "mouse",
                        target: t.target
                    })
                }
                handleLeaveEvent(t) {
                    this.enableLeaveEvent && "mouseleave" === t.type && this.callback({
                        type: T,
                        srcEvent: t,
                        pointerType: "mouse",
                        target: t.target
                    })
                }
                handleMoveEvent(t) {
                    if (this.enableMoveEvent) switch (t.type) {
                        case "mousedown":
                            t.button >= 0 && (this.pressed = !0);
                            break;
                        case "mousemove":
                            0 === t.which && (this.pressed = !1), this.pressed || this.callback({
                                type: x,
                                srcEvent: t,
                                pointerType: "mouse",
                                target: t.target
                            });
                            break;
                        case "mouseup":
                            this.pressed = !1
                    }
                }
            }
            const {
                KEY_EVENTS: C
            } = h, A = "keydown", k = "keyup";
            class I {
                constructor(t, e, n = {}) {
                    this.element = t, this.callback = e, this.options = Object.assign({
                        enable: !0
                    }, n), this.enableDownEvent = this.options.enable, this.enableUpEvent = this.options.enable, this.events = C.concat(n.events || []), this.handleEvent = this.handleEvent.bind(this), t.tabIndex = n.tabIndex || 0, t.style.outline = "none", this.events.forEach((e => t.addEventListener(e, this.handleEvent)))
                }
                destroy() {
                    this.events.forEach((t => this.element.removeEventListener(t, this.handleEvent)))
                }
                enableEventType(t, e) {
                    t === A && (this.enableDownEvent = e), t === k && (this.enableUpEvent = e)
                }
                handleEvent(t) {
                    const e = t.target || t.srcElement;
                    "INPUT" === e.tagName && "text" === e.type || "TEXTAREA" === e.tagName || (this.enableDownEvent && "keydown" === t.type && this.callback({
                        type: A,
                        srcEvent: t,
                        key: t.key,
                        target: t.target
                    }), this.enableUpEvent && "keyup" === t.type && this.callback({
                        type: k,
                        srcEvent: t,
                        key: t.key,
                        target: t.target
                    }))
                }
            }
            const j = "contextmenu";
            class L {
                constructor(t, e, n = {}) {
                    this.element = t, this.callback = e, this.options = Object.assign({
                        enable: !0
                    }, n), this.handleEvent = this.handleEvent.bind(this), t.addEventListener("contextmenu", this.handleEvent)
                }
                destroy() {
                    this.element.removeEventListener("contextmenu", this.handleEvent)
                }
                enableEventType(t, e) {
                    t === j && (this.options.enable = e)
                }
                handleEvent(t) {
                    this.options.enable && this.callback({
                        type: j,
                        center: {
                            x: t.clientX,
                            y: t.clientY
                        },
                        srcEvent: t,
                        pointerType: "mouse",
                        target: t.target
                    })
                }
            }
            const R = {
                pointerdown: 1,
                pointermove: 2,
                pointerup: 4,
                mousedown: 1,
                mousemove: 2,
                mouseup: 4
            };
            const D = {
                srcElement: "root",
                priority: 0
            };
            class F {
                constructor(t) {
                    this.eventManager = t, this.handlers = [], this.handlersByElement = new Map, this.handleEvent = this.handleEvent.bind(this), this._active = !1
                }
                isEmpty() {
                    return !this._active
                }
                add(t, e, n, r = !1, i = !1) {
                    const {
                        handlers: o,
                        handlersByElement: a
                    } = this;
                    n && ("object" !== typeof n || n.addEventListener) && (n = {
                        srcElement: n
                    }), n = n ? Object.assign({}, D, n) : D;
                    let s = a.get(n.srcElement);
                    s || (s = [], a.set(n.srcElement, s));
                    const u = {
                        type: t,
                        handler: e,
                        srcElement: n.srcElement,
                        priority: n.priority
                    };
                    r && (u.once = !0), i && (u.passive = !0), o.push(u), this._active = this._active || !u.passive;
                    let c = s.length - 1;
                    for (; c >= 0 && !(s[c].priority >= u.priority);) c--;
                    s.splice(c + 1, 0, u)
                }
                remove(t, e) {
                    const {
                        handlers: n,
                        handlersByElement: r
                    } = this;
                    for (let i = n.length - 1; i >= 0; i--) {
                        const o = n[i];
                        if (o.type === t && o.handler === e) {
                            n.splice(i, 1);
                            const t = r.get(o.srcElement);
                            t.splice(t.indexOf(o), 1), 0 === t.length && r.delete(o.srcElement)
                        }
                    }
                    this._active = n.some((t => !t.passive))
                }
                handleEvent(t) {
                    if (this.isEmpty()) return;
                    const e = this._normalizeEvent(t);
                    let n = t.srcEvent.target;
                    for (; n && n !== e.rootElement;) {
                        if (this._emit(e, n), e.handled) return;
                        n = n.parentNode
                    }
                    this._emit(e, "root")
                }
                _emit(t, e) {
                    const n = this.handlersByElement.get(e);
                    if (n) {
                        let e = !1;
                        const r = () => {
                                t.handled = !0
                            },
                            i = () => {
                                t.handled = !0, e = !0
                            },
                            o = [];
                        for (let a = 0; a < n.length; a++) {
                            const {
                                type: s,
                                handler: u,
                                once: c
                            } = n[a];
                            if (u(Object.assign({}, t, {
                                    type: s,
                                    stopPropagation: r,
                                    stopImmediatePropagation: i
                                })), c && o.push(n[a]), e) break
                        }
                        for (let t = 0; t < o.length; t++) {
                            const {
                                type: e,
                                handler: n
                            } = o[t];
                            this.remove(e, n)
                        }
                    }
                }
                _normalizeEvent(t) {
                    const e = this.eventManager.element;
                    return Object.assign({}, t, function(t) {
                        const e = R[t.srcEvent.type];
                        if (!e) return null;
                        const {
                            buttons: n,
                            button: r,
                            which: i
                        } = t.srcEvent;
                        let o = !1,
                            a = !1,
                            s = !1;
                        return 4 === e || 2 === e && !Number.isFinite(n) ? (o = 1 === i, a = 2 === i, s = 3 === i) : 2 === e ? (o = Boolean(1 & n), a = Boolean(4 & n), s = Boolean(2 & n)) : 1 === e && (o = 0 === r, a = 1 === r, s = 2 === r), {
                            leftButton: o,
                            middleButton: a,
                            rightButton: s
                        }
                    }(t), function(t, e) {
                        const {
                            srcEvent: n
                        } = t;
                        if (!t.center && !Number.isFinite(n.clientX)) return null;
                        const r = t.center || {
                                x: n.clientX,
                                y: n.clientY
                            },
                            i = e.getBoundingClientRect(),
                            o = i.width / e.offsetWidth || 1,
                            a = i.height / e.offsetHeight || 1;
                        return {
                            center: r,
                            offsetCenter: {
                                x: (r.x - i.left - e.clientLeft) / o,
                                y: (r.y - i.top - e.clientTop) / a
                            }
                        }
                    }(t, e), {
                        handled: !1,
                        rootElement: e
                    })
                }
            }
            const N = {
                events: null,
                recognizers: null,
                recognizerOptions: {},
                Manager: a,
                touchAction: "none",
                tabIndex: 0
            };
            class z {
                constructor(t = null, e = {}) {
                    this.options = Object.assign({}, N, e), this.events = new Map, this._onBasicInput = this._onBasicInput.bind(this), this._onOtherEvent = this._onOtherEvent.bind(this), this.setElement(t);
                    const {
                        events: n
                    } = e;
                    n && this.on(n)
                }
                setElement(t) {
                    if (this.element && this.destroy(), this.element = t, !t) return;
                    const {
                        options: e
                    } = this, n = e.Manager;
                    this.manager = new n(t, {
                        touchAction: e.touchAction,
                        recognizers: e.recognizers || u
                    }).on("hammer.input", this._onBasicInput), e.recognizers || Object.keys(c).forEach((t => {
                        const e = this.manager.get(t);
                        e && c[t].forEach((t => {
                            e.recognizeWith(t)
                        }))
                    }));
                    for (const r in e.recognizerOptions) {
                        const t = this.manager.get(r);
                        if (t) {
                            const n = e.recognizerOptions[r];
                            delete n.enable, t.set(n)
                        }
                    }
                    this.wheelInput = new P(t, this._onOtherEvent, {
                        enable: !1
                    }), this.moveInput = new M(t, this._onOtherEvent, {
                        enable: !1
                    }), this.keyInput = new I(t, this._onOtherEvent, {
                        enable: !1,
                        tabIndex: e.tabIndex
                    }), this.contextmenuInput = new L(t, this._onOtherEvent, {
                        enable: !1
                    });
                    for (const [r, i] of this.events) i.isEmpty() || (this._toggleRecognizer(i.recognizerName, !0), this.manager.on(r, i.handleEvent))
                }
                destroy() {
                    this.element && (this.wheelInput.destroy(), this.moveInput.destroy(), this.keyInput.destroy(), this.contextmenuInput.destroy(), this.manager.destroy(), this.wheelInput = null, this.moveInput = null, this.keyInput = null, this.contextmenuInput = null, this.manager = null, this.element = null)
                }
                on(t, e, n) {
                    this._addEventHandler(t, e, n, !1)
                }
                once(t, e, n) {
                    this._addEventHandler(t, e, n, !0)
                }
                watch(t, e, n) {
                    this._addEventHandler(t, e, n, !1, !0)
                }
                off(t, e) {
                    this._removeEventHandler(t, e)
                }
                _toggleRecognizer(t, e) {
                    const {
                        manager: n
                    } = this;
                    if (!n) return;
                    const r = n.get(t);
                    if (r && r.options.enable !== e) {
                        r.set({
                            enable: e
                        });
                        const i = l[t];
                        i && !this.options.recognizers && i.forEach((i => {
                            const o = n.get(i);
                            e ? (o.requireFailure(t), r.dropRequireFailure(i)) : o.dropRequireFailure(t)
                        }))
                    }
                    this.wheelInput.enableEventType(t, e), this.moveInput.enableEventType(t, e), this.keyInput.enableEventType(t, e), this.contextmenuInput.enableEventType(t, e)
                }
                _addEventHandler(t, e, n, r, i) {
                    if ("string" !== typeof t) {
                        n = e;
                        for (const e in t) this._addEventHandler(e, t[e], n, r, i);
                        return
                    }
                    const {
                        manager: o,
                        events: a
                    } = this, s = p[t] || t;
                    let u = a.get(s);
                    u || (u = new F(this), a.set(s, u), u.recognizerName = d[s] || s, o && o.on(s, u.handleEvent)), u.add(t, e, n, r, i), u.isEmpty() || this._toggleRecognizer(u.recognizerName, !0)
                }
                _removeEventHandler(t, e) {
                    if ("string" !== typeof t) {
                        for (const e in t) this._removeEventHandler(e, t[e]);
                        return
                    }
                    const {
                        events: n
                    } = this, r = p[t] || t, i = n.get(r);
                    if (i && (i.remove(t, e), i.isEmpty())) {
                        const {
                            recognizerName: t
                        } = i;
                        let e = !1;
                        for (const r of n.values())
                            if (r.recognizerName === t && !r.isEmpty()) {
                                e = !0;
                                break
                            }
                        e || this._toggleRecognizer(t, !1)
                    }
                }
                _onBasicInput(t) {
                    const {
                        srcEvent: e
                    } = t, n = f[e.type];
                    n && this.manager.emit(n, t)
                }
                _onOtherEvent(t) {
                    this.manager.emit(t.type, t)
                }
            }
        },
        17413: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return dt
                }
            });
            var r = n(14034),
                i = n(29420);

            function o(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function a(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function s(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function u(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        s(t, e, n[e])
                    }))
                }
                return t
            }
            var c = function() {},
                l = 1,
                f = 2,
                h = 3,
                d = {
                    transitionEasing: function(t) {
                        return t
                    },
                    transitionInterruption: l,
                    onTransitionStart: c,
                    onTransitionInterrupt: c,
                    onTransitionEnd: c
                },
                p = function() {
                    function t(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        o(this, t), this.ControllerState = e, this.props = u({}, d, n), this.propsInTransition = null, this.transition = new i.Z(n.timeline), this.onViewStateChange = n.onViewStateChange || c, this.onStateChange = n.onStateChange || c, this._onTransitionUpdate = this._onTransitionUpdate.bind(this)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "finalize",
                        value: function() {
                            this.transition.cancel()
                        }
                    }, {
                        key: "getViewportInTransition",
                        value: function() {
                            return this.propsInTransition
                        }
                    }, {
                        key: "processViewStateChange",
                        value: function(t) {
                            var e = !1,
                                n = this.props;
                            if (t = u({}, d, t), this.props = t, this._shouldIgnoreViewportChange(n, t)) return e;
                            if (this._isTransitionEnabled(t)) {
                                var r = this.transition.settings,
                                    i = r.interruption,
                                    o = r.endProps,
                                    a = u({}, n, i === f ? o : this.propsInTransition || n);
                                this._triggerTransition(a, t), e = !0
                            } else this.transition.cancel();
                            return e
                        }
                    }, {
                        key: "updateTransition",
                        value: function() {
                            this.transition.update()
                        }
                    }, {
                        key: "_isTransitionEnabled",
                        value: function(t) {
                            var e = t.transitionDuration,
                                n = t.transitionInterpolator;
                            return (e > 0 || "auto" === e) && Boolean(n)
                        }
                    }, {
                        key: "_isUpdateDueToCurrentTransition",
                        value: function(t) {
                            return !!this.transition.inProgress && this.transition.settings.interpolator.arePropsEqual(t, this.propsInTransition)
                        }
                    }, {
                        key: "_shouldIgnoreViewportChange",
                        value: function(t, e) {
                            return this.transition.inProgress ? this.transition.settings.interruption === h || this._isUpdateDueToCurrentTransition(e) : !this._isTransitionEnabled(e) || e.transitionInterpolator.arePropsEqual(t, e)
                        }
                    }, {
                        key: "_triggerTransition",
                        value: function(t, e) {
                            var n = new this.ControllerState(t),
                                r = new this.ControllerState(e).shortestPathFrom(n),
                                i = e.transitionInterpolator,
                                o = i.getDuration ? i.getDuration(t, e) : e.transitionDuration;
                            if (0 !== o) {
                                var a = e.transitionInterpolator.initializeProps(t, r);
                                this.propsInTransition = {}, this.duration = o, this.transition.start({
                                    duration: o,
                                    easing: e.transitionEasing,
                                    interpolator: e.transitionInterpolator,
                                    interruption: e.transitionInterruption,
                                    startProps: a.start,
                                    endProps: a.end,
                                    onStart: e.onTransitionStart,
                                    onUpdate: this._onTransitionUpdate,
                                    onInterrupt: this._onTransitionEnd(e.onTransitionInterrupt),
                                    onEnd: this._onTransitionEnd(e.onTransitionEnd)
                                }), this.onStateChange({
                                    inTransition: !0
                                }), this.updateTransition()
                            }
                        }
                    }, {
                        key: "_onTransitionEnd",
                        value: function(t) {
                            var e = this;
                            return function(n) {
                                e.propsInTransition = null, e.onStateChange({
                                    inTransition: !1,
                                    isZooming: !1,
                                    isPanning: !1,
                                    isRotating: !1
                                }), t(n)
                            }
                        }
                    }, {
                        key: "_onTransitionUpdate",
                        value: function(t) {
                            var e = t.time,
                                n = t.settings,
                                r = n.interpolator,
                                i = n.startProps,
                                o = n.endProps,
                                a = n.duration,
                                s = (0, n.easing)(e / a),
                                c = r.interpolateProps(i, o, s);
                            this.propsInTransition = new this.ControllerState(u({}, this.props, c)).getViewportProps(), this.onViewStateChange({
                                viewState: this.propsInTransition,
                                oldViewState: this.props
                            })
                        }
                    }]) && a(e.prototype, n), r && a(e, r), t
                }(),
                g = n(47806);

            function y(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function v(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function m(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function b(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function w(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function _(t, e, n) {
                return (_ = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = P(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function P(t) {
                return (P = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function E(t, e) {
                return !e || "object" !== S(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function x(t, e) {
                return (x = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var S = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function O(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = P(t);
                    if (e) {
                        var i = P(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return E(this, n)
                }
            }
            var T = ["longitude", "latitude", "zoom", "bearing", "pitch"],
                M = ["longitude", "latitude", "zoom"],
                C = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && x(t, e)
                    }(a, t);
                    var e, n, i, o = O(a);

                    function a() {
                        var t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        m(this, a);
                        var n = Array.isArray(e) ? e : e.transitionProps;
                        return (t = o.call(this, n || {
                            compare: T,
                            extract: T,
                            required: M
                        })).opts = e, t
                    }
                    return e = a, (n = [{
                        key: "initializeProps",
                        value: function(t, e) {
                            var n = _(P(a.prototype), "initializeProps", this).call(this, t, e),
                                r = this.opts,
                                i = r.makeViewport,
                                o = r.around;
                            if (i && o) {
                                var s = i(t),
                                    u = i(e),
                                    c = s.unproject(o);
                                n.start.around = o, Object.assign(n.end, {
                                    around: u.project(c),
                                    aroundPosition: c,
                                    width: e.width,
                                    height: e.height
                                })
                            }
                            return n
                        }
                    }, {
                        key: "interpolateProps",
                        value: function(t, e, n) {
                            var i = {},
                                o = !0,
                                a = !1,
                                s = void 0;
                            try {
                                for (var u, c = this._propsToExtract[Symbol.iterator](); !(o = (u = c.next()).done); o = !0) {
                                    var l = u.value;
                                    i[l] = (0, r.t7)(t[l] || 0, e[l] || 0, n)
                                }
                            } catch (h) {
                                a = !0, s = h
                            } finally {
                                try {
                                    o || null == c.return || c.return()
                                } finally {
                                    if (a) throw s
                                }
                            }
                            if (e.aroundPosition) {
                                var f = this.opts.makeViewport(function(t) {
                                    for (var e = 1; e < arguments.length; e++) {
                                        var n = null != arguments[e] ? arguments[e] : {},
                                            r = Object.keys(n);
                                        "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                            return Object.getOwnPropertyDescriptor(n, t).enumerable
                                        })))), r.forEach((function(e) {
                                            w(t, e, n[e])
                                        }))
                                    }
                                    return t
                                }({}, e, i));
                                Object.assign(i, f.panByPosition(e.aroundPosition, (0, r.t7)(t.around, e.around, n)))
                            }
                            return i
                        }
                    }]) && b(e.prototype, n), i && b(e, i), a
                }(function() {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        y(this, t), Array.isArray(e) && (e = {
                            compare: e,
                            extract: e,
                            required: e
                        });
                        var n = e.compare,
                            r = e.extract,
                            i = e.required;
                        this._propsToCompare = n, this._propsToExtract = r, this._requiredProps = i
                    }
                    var e, n, i;
                    return e = t, (n = [{
                        key: "arePropsEqual",
                        value: function(t, e) {
                            var n = !0,
                                i = !1,
                                o = void 0;
                            try {
                                for (var a, s = (this._propsToCompare || Object.keys(e))[Symbol.iterator](); !(n = (a = s.next()).done); n = !0) {
                                    var u = a.value;
                                    if (!(u in t) || !(u in e) || !(0, r.fS)(t[u], e[u])) return !1
                                }
                            } catch (c) {
                                i = !0, o = c
                            } finally {
                                try {
                                    n || null == s.return || s.return()
                                } finally {
                                    if (i) throw o
                                }
                            }
                            return !0
                        }
                    }, {
                        key: "initializeProps",
                        value: function(t, e) {
                            var n;
                            if (this._propsToExtract) {
                                var r = {},
                                    i = {},
                                    o = !0,
                                    a = !1,
                                    s = void 0;
                                try {
                                    for (var u, c = this._propsToExtract[Symbol.iterator](); !(o = (u = c.next()).done); o = !0) {
                                        var l = u.value;
                                        r[l] = t[l], i[l] = e[l]
                                    }
                                } catch (f) {
                                    a = !0, s = f
                                } finally {
                                    try {
                                        o || null == c.return || c.return()
                                    } finally {
                                        if (a) throw s
                                    }
                                }
                                n = {
                                    start: r,
                                    end: i
                                }
                            } else n = {
                                start: t,
                                end: e
                            };
                            return this._checkRequiredProps(n.start), this._checkRequiredProps(n.end), n
                        }
                    }, {
                        key: "interpolateProps",
                        value: function(t, e, n) {
                            return e
                        }
                    }, {
                        key: "getDuration",
                        value: function(t, e) {
                            return e.transitionDuration
                        }
                    }, {
                        key: "_checkRequiredProps",
                        value: function(t) {
                            this._requiredProps && this._requiredProps.forEach((function(e) {
                                var n = t[e];
                                (0, g.Z)(Number.isFinite(n) || Array.isArray(n), "".concat(e, " is required for transition"))
                            }))
                        }
                    }]) && v(e.prototype, n), i && v(e, i), t
                }());

            function A(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function k(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function I(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function j(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        I(t, e, n[e])
                    }))
                }
                return t
            }
            var L = {
                    transitionDuration: 0
                },
                R = {
                    transitionDuration: 300,
                    transitionEasing: function(t) {
                        return t
                    },
                    transitionInterruption: l
                },
                D = function(t) {
                    return 1 - (1 - t) * (1 - t)
                },
                F = ["wheel"],
                N = ["panstart", "panmove", "panend"],
                z = ["pinchstart", "pinchmove", "pinchend"],
                B = ["tripanstart", "tripanmove", "tripanend"],
                U = ["doubletap"],
                G = ["keydown"],
                Z = function() {
                    function t(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        A(this, t), this.ControllerState = e, this.controllerState = null, this.controllerStateProps = null, this.eventManager = null, this.transitionManager = new p(e, j({}, n, {
                            onViewStateChange: this._onTransition.bind(this),
                            onStateChange: this._setInteractionState.bind(this)
                        }));
                        var r = this.linearTransitionProps;
                        this._transition = r && j({}, R, {
                            transitionInterpolator: new C({
                                transitionProps: r
                            })
                        }), this._events = null, this._interactionState = {
                            isDragging: !1
                        }, this._customEvents = [], this.onViewStateChange = null, this.onStateChange = null, this.handleEvent = this.handleEvent.bind(this), this.setProps(n)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "linearTransitionProps",
                        get: function() {
                            return null
                        }
                    }, {
                        key: "events",
                        set: function(t) {
                            this.toggleEvents(this._customEvents, !1), this.toggleEvents(t, !0), this._customEvents = t, this.setProps(this.controllerStateProps)
                        }
                    }, {
                        key: "finalize",
                        value: function() {
                            for (var t in this._events) this._events[t] && this.eventManager.off(t, this.handleEvent);
                            this.transitionManager.finalize()
                        }
                    }, {
                        key: "handleEvent",
                        value: function(t) {
                            var e = this.ControllerState;
                            this.controllerState = new e(j({
                                makeViewport: this.makeViewport
                            }, this.controllerStateProps, this._state));
                            var n = this._eventStartBlocked;
                            switch (t.type) {
                                case "panstart":
                                    return !n && this._onPanStart(t);
                                case "panmove":
                                    return this._onPan(t);
                                case "panend":
                                    return this._onPanEnd(t);
                                case "pinchstart":
                                    return !n && this._onPinchStart(t);
                                case "pinchmove":
                                    return this._onPinch(t);
                                case "pinchend":
                                    return this._onPinchEnd(t);
                                case "tripanstart":
                                    return !n && this._onTriplePanStart(t);
                                case "tripanmove":
                                    return this._onTriplePan(t);
                                case "tripanend":
                                    return this._onTriplePanEnd(t);
                                case "doubletap":
                                    return this._onDoubleTap(t);
                                case "wheel":
                                    return this._onWheel(t);
                                case "keydown":
                                    return this._onKeyDown(t);
                                default:
                                    return !1
                            }
                        }
                    }, {
                        key: "getCenter",
                        value: function(t) {
                            var e = this.controllerStateProps,
                                n = e.x,
                                r = e.y,
                                i = t.offsetCenter;
                            return [i.x - n, i.y - r]
                        }
                    }, {
                        key: "isPointInBounds",
                        value: function(t, e) {
                            var n = this.controllerStateProps,
                                r = n.width,
                                i = n.height;
                            if (e && e.handled) return !1;
                            var o = t[0] >= 0 && t[0] <= r && t[1] >= 0 && t[1] <= i;
                            return o && e && e.stopPropagation(), o
                        }
                    }, {
                        key: "isFunctionKeyPressed",
                        value: function(t) {
                            var e = t.srcEvent;
                            return Boolean(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
                        }
                    }, {
                        key: "isDragging",
                        value: function() {
                            return this._interactionState.isDragging
                        }
                    }, {
                        key: "blockEvents",
                        value: function(t) {
                            var e = this,
                                n = setTimeout((function() {
                                    e._eventStartBlocked === n && (e._eventStartBlocked = null)
                                }), t);
                            this._eventStartBlocked = n
                        }
                    }, {
                        key: "setProps",
                        value: function(t) {
                            "onViewStateChange" in t && (this.onViewStateChange = t.onViewStateChange), "onStateChange" in t && (this.onStateChange = t.onStateChange), "makeViewport" in t && (this.makeViewport = t.makeViewport), "dragMode" in t && (this.dragMode = t.dragMode), this.controllerStateProps = t, "eventManager" in t && this.eventManager !== t.eventManager && (this.eventManager = t.eventManager, this._events = {}, this.toggleEvents(this._customEvents, !0)), "transitionInterpolator" in t || (t.transitionInterpolator = this._getTransitionProps().transitionInterpolator), this.transitionManager.processViewStateChange(t);
                            var e = t.inertia;
                            !0 === e && (e = 300), this.inertia = e;
                            var n = t.scrollZoom,
                                r = void 0 === n || n,
                                i = t.dragPan,
                                o = void 0 === i || i,
                                a = t.dragRotate,
                                s = void 0 === a || a,
                                u = t.doubleClickZoom,
                                c = void 0 === u || u,
                                l = t.touchZoom,
                                f = void 0 === l || l,
                                h = t.touchRotate,
                                d = void 0 !== h && h,
                                p = t.keyboard,
                                g = void 0 === p || p,
                                y = Boolean(this.onViewStateChange);
                            this.toggleEvents(F, y && r), this.toggleEvents(N, y && (o || s)), this.toggleEvents(z, y && (f || d)), this.toggleEvents(B, y && d), this.toggleEvents(U, y && c), this.toggleEvents(G, y && g), this.scrollZoom = r, this.dragPan = o, this.dragRotate = s, this.doubleClickZoom = c, this.touchZoom = f, this.touchRotate = d, this.keyboard = g
                        }
                    }, {
                        key: "updateTransition",
                        value: function() {
                            this.transitionManager.updateTransition()
                        }
                    }, {
                        key: "toggleEvents",
                        value: function(t, e) {
                            if (this.eventManager) {
                                var n = this;
                                t.forEach((function(t) {
                                    n._events[t] !== e && (n._events[t] = e, e ? n.eventManager.on(t, n.handleEvent) : n.eventManager.off(t, n.handleEvent))
                                }))
                            }
                        }
                    }, {
                        key: "updateViewport",
                        value: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                                r = j({}, t.getViewportProps(), e),
                                i = this.controllerState !== t;
                            if (this._state = t.getState(), this._setInteractionState(n), i) {
                                var o = this.controllerState ? this.controllerState.getViewportProps() : null;
                                this.onViewStateChange && this.onViewStateChange({
                                    viewState: r,
                                    interactionState: this._interactionState,
                                    oldViewState: o
                                })
                            }
                        }
                    }, {
                        key: "_onTransition",
                        value: function(t) {
                            this.onViewStateChange && (t.interactionState = this._interactionState, this.onViewStateChange(t))
                        }
                    }, {
                        key: "_setInteractionState",
                        value: function(t) {
                            Object.assign(this._interactionState, t), this.onStateChange && this.onStateChange(this._interactionState)
                        }
                    }, {
                        key: "_onPanStart",
                        value: function(t) {
                            var e = this.getCenter(t);
                            if (!this.isPointInBounds(e, t)) return !1;
                            var n = this.isFunctionKeyPressed(t) || t.rightButton;
                            (this.invertPan || "pan" === this.dragMode) && (n = !n);
                            var r = this.controllerState[n ? "panStart" : "rotateStart"]({
                                pos: e
                            });
                            return this._panMove = n, this.updateViewport(r, L, {
                                isDragging: !0
                            }), !0
                        }
                    }, {
                        key: "_onPan",
                        value: function(t) {
                            return !!this.isDragging() && (this._panMove ? this._onPanMove(t) : this._onPanRotate(t))
                        }
                    }, {
                        key: "_onPanEnd",
                        value: function(t) {
                            return !!this.isDragging() && (this._panMove ? this._onPanMoveEnd(t) : this._onPanRotateEnd(t))
                        }
                    }, {
                        key: "_onPanMove",
                        value: function(t) {
                            if (!this.dragPan) return !1;
                            var e = this.getCenter(t),
                                n = this.controllerState.pan({
                                    pos: e
                                });
                            return this.updateViewport(n, L, {
                                isDragging: !0,
                                isPanning: !0
                            }), !0
                        }
                    }, {
                        key: "_onPanMoveEnd",
                        value: function(t) {
                            var e = this.inertia;
                            if (this.dragPan && e && t.velocity) {
                                var n = this.getCenter(t),
                                    r = [n[0] + t.velocityX * e / 2, n[1] + t.velocityY * e / 2],
                                    i = this.controllerState.pan({
                                        pos: r
                                    }).panEnd();
                                this.updateViewport(i, j({}, this._getTransitionProps(), {
                                    transitionDuration: e,
                                    transitionEasing: D
                                }), {
                                    isDragging: !1,
                                    isPanning: !0
                                })
                            } else {
                                var o = this.controllerState.panEnd();
                                this.updateViewport(o, null, {
                                    isDragging: !1,
                                    isPanning: !1
                                })
                            }
                            return !0
                        }
                    }, {
                        key: "_onPanRotate",
                        value: function(t) {
                            if (!this.dragRotate) return !1;
                            var e = this.getCenter(t),
                                n = this.controllerState.rotate({
                                    pos: e
                                });
                            return this.updateViewport(n, L, {
                                isDragging: !0,
                                isRotating: !0
                            }), !0
                        }
                    }, {
                        key: "_onPanRotateEnd",
                        value: function(t) {
                            var e = this.inertia;
                            if (this.dragRotate && e && t.velocity) {
                                var n = this.getCenter(t),
                                    r = [n[0] + t.velocityX * e / 2, n[1] + t.velocityY * e / 2],
                                    i = this.controllerState.rotate({
                                        pos: r
                                    }).rotateEnd();
                                this.updateViewport(i, j({}, this._getTransitionProps(), {
                                    transitionDuration: e,
                                    transitionEasing: D
                                }), {
                                    isDragging: !1,
                                    isRotating: !0
                                })
                            } else {
                                var o = this.controllerState.rotateEnd();
                                this.updateViewport(o, null, {
                                    isDragging: !1,
                                    isRotating: !1
                                })
                            }
                            return !0
                        }
                    }, {
                        key: "_onWheel",
                        value: function(t) {
                            if (!this.scrollZoom) return !1;
                            t.preventDefault();
                            var e = this.getCenter(t);
                            if (!this.isPointInBounds(e, t)) return !1;
                            var n = this.scrollZoom,
                                r = n.speed,
                                i = void 0 === r ? .01 : r,
                                o = n.smooth,
                                a = void 0 !== o && o,
                                s = t.delta,
                                u = 2 / (1 + Math.exp(-Math.abs(s * i)));
                            s < 0 && 0 !== u && (u = 1 / u);
                            var c = this.controllerState.zoom({
                                pos: e,
                                scale: u
                            });
                            return this.updateViewport(c, j({}, this._getTransitionProps({
                                around: e
                            }), {
                                transitionDuration: a ? 250 : 1
                            }), {
                                isZooming: !0,
                                isPanning: !0
                            }), !0
                        }
                    }, {
                        key: "_onTriplePanStart",
                        value: function(t) {
                            var e = this.getCenter(t);
                            if (!this.isPointInBounds(e, t)) return !1;
                            var n = this.controllerState.rotateStart({
                                pos: e
                            });
                            return this.updateViewport(n, L, {
                                isDragging: !0
                            }), !0
                        }
                    }, {
                        key: "_onTriplePan",
                        value: function(t) {
                            if (!this.touchRotate) return !1;
                            if (!this.isDragging()) return !1;
                            var e = this.getCenter(t);
                            e[0] -= t.deltaX;
                            var n = this.controllerState.rotate({
                                pos: e
                            });
                            return this.updateViewport(n, L, {
                                isDragging: !0,
                                isRotating: !0
                            }), !0
                        }
                    }, {
                        key: "_onTriplePanEnd",
                        value: function(t) {
                            if (!this.isDragging()) return !1;
                            var e = this.inertia;
                            if (this.touchRotate && e && t.velocityY) {
                                var n = this.getCenter(t),
                                    r = [n[0], n[1] += t.velocityY * e / 2],
                                    i = this.controllerState.rotate({
                                        pos: r
                                    });
                                this.updateViewport(i, j({}, this._getTransitionProps(), {
                                    transitionDuration: e,
                                    transitionEasing: D
                                }), {
                                    isDragging: !1,
                                    isRotating: !0
                                }), this.blockEvents(e)
                            } else {
                                var o = this.controllerState.rotateEnd();
                                this.updateViewport(o, null, {
                                    isDragging: !1,
                                    isRotating: !1
                                })
                            }
                            return !0
                        }
                    }, {
                        key: "_onPinchStart",
                        value: function(t) {
                            var e = this.getCenter(t);
                            if (!this.isPointInBounds(e, t)) return !1;
                            var n = this.controllerState.zoomStart({
                                pos: e
                            }).rotateStart({
                                pos: e
                            });
                            return this._startPinchRotation = t.rotation, this._lastPinchEvent = t, this.updateViewport(n, L, {
                                isDragging: !0
                            }), !0
                        }
                    }, {
                        key: "_onPinch",
                        value: function(t) {
                            if (!this.touchZoom && !this.touchRotate) return !1;
                            if (!this.isDragging()) return !1;
                            var e = this.controllerState;
                            if (this.touchZoom) {
                                var n = t.scale,
                                    r = this.getCenter(t);
                                e = e.zoom({
                                    pos: r,
                                    scale: n
                                })
                            }
                            if (this.touchRotate) {
                                var i = t.rotation;
                                e = e.rotate({
                                    deltaAngleX: this._startPinchRotation - i
                                })
                            }
                            return this.updateViewport(e, L, {
                                isDragging: !0,
                                isPanning: this.touchZoom,
                                isZooming: this.touchZoom,
                                isRotating: this.touchRotate
                            }), this._lastPinchEvent = t, !0
                        }
                    }, {
                        key: "_onPinchEnd",
                        value: function(t) {
                            if (!this.isDragging()) return !1;
                            var e = this.inertia,
                                n = this._lastPinchEvent;
                            if (this.touchZoom && e && n && t.scale !== n.scale) {
                                var r = this.getCenter(t),
                                    i = this.controllerState.rotateEnd(),
                                    o = Math.log2(t.scale),
                                    a = (o - Math.log2(n.scale)) / (t.deltaTime - n.deltaTime),
                                    s = Math.pow(2, o + a * e / 2);
                                i = i.zoom({
                                    pos: r,
                                    scale: s
                                }).zoomEnd(), this.updateViewport(i, j({}, this._getTransitionProps({
                                    around: r
                                }), {
                                    transitionDuration: e,
                                    transitionEasing: D
                                }), {
                                    isDragging: !1,
                                    isPanning: this.touchZoom,
                                    isZooming: this.touchZoom,
                                    isRotating: !1
                                }), this.blockEvents(e)
                            } else {
                                var u = this.controllerState.zoomEnd().rotateEnd();
                                this.updateViewport(u, null, {
                                    isDragging: !1,
                                    isPanning: !1,
                                    isZooming: !1,
                                    isRotating: !1
                                })
                            }
                            return this._startPinchRotation = null, this._lastPinchEvent = null, !0
                        }
                    }, {
                        key: "_onDoubleTap",
                        value: function(t) {
                            if (!this.doubleClickZoom) return !1;
                            var e = this.getCenter(t);
                            if (!this.isPointInBounds(e, t)) return !1;
                            var n = this.isFunctionKeyPressed(t),
                                r = this.controllerState.zoom({
                                    pos: e,
                                    scale: n ? .5 : 2
                                });
                            return this.updateViewport(r, this._getTransitionProps({
                                around: e
                            }), {
                                isZooming: !0,
                                isPanning: !0
                            }), this.blockEvents(100), !0
                        }
                    }, {
                        key: "_onKeyDown",
                        value: function(t) {
                            if (!this.keyboard) return !1;
                            var e, n = this.isFunctionKeyPressed(t),
                                r = this.keyboard,
                                i = r.zoomSpeed,
                                o = r.moveSpeed,
                                a = r.rotateSpeedX,
                                s = r.rotateSpeedY,
                                u = this.controllerState,
                                c = {};
                            switch (t.srcEvent.code) {
                                case "Minus":
                                    e = n ? u.zoomOut(i).zoomOut(i) : u.zoomOut(i), c.isZooming = !0;
                                    break;
                                case "Equal":
                                    e = n ? u.zoomIn(i).zoomIn(i) : u.zoomIn(i), c.isZooming = !0;
                                    break;
                                case "ArrowLeft":
                                    n ? (e = u.rotateLeft(a), c.isRotating = !0) : (e = u.moveLeft(o), c.isPanning = !0);
                                    break;
                                case "ArrowRight":
                                    n ? (e = u.rotateRight(a), c.isRotating = !0) : (e = u.moveRight(o), c.isPanning = !0);
                                    break;
                                case "ArrowUp":
                                    n ? (e = u.rotateUp(s), c.isRotating = !0) : (e = u.moveUp(o), c.isPanning = !0);
                                    break;
                                case "ArrowDown":
                                    n ? (e = u.rotateDown(s), c.isRotating = !0) : (e = u.moveDown(o), c.isPanning = !0);
                                    break;
                                default:
                                    return !1
                            }
                            return this.updateViewport(e, this._getTransitionProps(), c), !0
                        }
                    }, {
                        key: "_getTransitionProps",
                        value: function(t) {
                            var e = this._transition;
                            return e ? t ? j({}, e, {
                                transitionInterpolator: new C(j({}, t, {
                                    transitionProps: this.linearTransitionProps,
                                    makeViewport: this.controllerState.makeViewport
                                }))
                            }) : e : L
                        }
                    }]) && k(e.prototype, n), r && k(e, r), t
                }();

            function V(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var H = function() {
                    function t(e) {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this._viewportProps = this._applyConstraints(e)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "getViewportProps",
                        value: function() {
                            return this._viewportProps
                        }
                    }, {
                        key: "getState",
                        value: function() {
                            return this._state
                        }
                    }, {
                        key: "shortestPathFrom",
                        value: function(t) {
                            return this._viewportProps
                        }
                    }, {
                        key: "_applyConstraints",
                        value: function(t) {
                            return t
                        }
                    }]) && V(e.prototype, n), r && V(e, r), t
                }(),
                W = n(78866);

            function Y(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function q(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function $(t, e, n) {
                return e && q(t.prototype, e), n && q(t, n), t
            }

            function X(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function K(t, e, n) {
                return (K = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = J(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function J(t) {
                return (J = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function Q(t, e) {
                if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        writable: !0,
                        configurable: !0
                    }
                }), e && nt(t, e)
            }

            function tt(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        X(t, e, n[e])
                    }))
                }
                return t
            }

            function et(t, e) {
                return !e || "object" !== rt(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function nt(t, e) {
                return (nt = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var rt = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function it(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = J(t);
                    if (e) {
                        var i = J(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return et(this, n)
                }
            }
            var ot = 0,
                at = 0,
                st = 1.5,
                ut = 0,
                ct = 20,
                lt = 0,
                ft = 60,
                ht = function(t) {
                    Q(n, t);
                    var e = it(n);

                    function n() {
                        var t, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            i = r.makeViewport,
                            o = r.width,
                            a = r.height,
                            s = r.latitude,
                            u = r.longitude,
                            c = r.zoom,
                            l = r.bearing,
                            f = void 0 === l ? at : l,
                            h = r.pitch,
                            d = void 0 === h ? ot : h,
                            p = r.altitude,
                            y = void 0 === p ? st : p,
                            v = r.maxZoom,
                            m = void 0 === v ? ct : v,
                            b = r.minZoom,
                            w = void 0 === b ? ut : b,
                            _ = r.maxPitch,
                            P = void 0 === _ ? ft : _,
                            E = r.minPitch,
                            x = void 0 === E ? lt : E,
                            S = r.startPanLngLat,
                            O = r.startZoomLngLat,
                            T = r.startRotatePos,
                            M = r.startBearing,
                            C = r.startPitch,
                            A = r.startZoom,
                            k = r.normalize;
                        return Y(this, n), (0, g.Z)(Number.isFinite(u)), (0, g.Z)(Number.isFinite(s)), (0, g.Z)(Number.isFinite(c)), (t = e.call(this, {
                            width: o,
                            height: a,
                            latitude: s,
                            longitude: u,
                            zoom: c,
                            bearing: f,
                            pitch: d,
                            altitude: y,
                            maxZoom: m,
                            minZoom: w,
                            maxPitch: P,
                            minPitch: x,
                            normalize: k
                        }))._state = {
                            startPanLngLat: S,
                            startZoomLngLat: O,
                            startRotatePos: T,
                            startBearing: M,
                            startPitch: C,
                            startZoom: A
                        }, t.makeViewport = i, t
                    }
                    return $(n, [{
                        key: "panStart",
                        value: function(t) {
                            var e = t.pos;
                            return this._getUpdatedState({
                                startPanLngLat: this._unproject(e)
                            })
                        }
                    }, {
                        key: "pan",
                        value: function(t) {
                            var e = t.pos,
                                n = t.startPos,
                                r = this._state.startPanLngLat || this._unproject(n);
                            if (!r) return this;
                            var i = this.makeViewport(this._viewportProps).panByPosition(r, e);
                            return this._getUpdatedState(i)
                        }
                    }, {
                        key: "panEnd",
                        value: function() {
                            return this._getUpdatedState({
                                startPanLngLat: null
                            })
                        }
                    }, {
                        key: "rotateStart",
                        value: function(t) {
                            var e = t.pos;
                            return this._getUpdatedState({
                                startRotatePos: e,
                                startBearing: this._viewportProps.bearing,
                                startPitch: this._viewportProps.pitch
                            })
                        }
                    }, {
                        key: "rotate",
                        value: function(t) {
                            var e, n = t.pos,
                                r = t.deltaAngleX,
                                i = void 0 === r ? 0 : r,
                                o = t.deltaAngleY,
                                a = void 0 === o ? 0 : o,
                                s = this._state,
                                u = s.startRotatePos,
                                c = s.startBearing,
                                l = s.startPitch;
                            return u && Number.isFinite(c) && Number.isFinite(l) ? (e = n ? this._calculateNewPitchAndBearing(tt({}, this._getRotationParams(n, u), {
                                startBearing: c,
                                startPitch: l
                            })) : {
                                bearing: c + i,
                                pitch: l + a
                            }, this._getUpdatedState(e)) : this
                        }
                    }, {
                        key: "rotateEnd",
                        value: function() {
                            return this._getUpdatedState({
                                startBearing: null,
                                startPitch: null
                            })
                        }
                    }, {
                        key: "zoomStart",
                        value: function(t) {
                            var e = t.pos;
                            return this._getUpdatedState({
                                startZoomLngLat: this._unproject(e),
                                startZoom: this._viewportProps.zoom
                            })
                        }
                    }, {
                        key: "zoom",
                        value: function(t) {
                            var e = t.pos,
                                n = t.startPos,
                                r = t.scale,
                                i = this._state,
                                o = i.startZoom,
                                a = i.startZoomLngLat;
                            Number.isFinite(o) || (o = this._viewportProps.zoom, a = this._unproject(n) || this._unproject(e));
                            var s = this._calculateNewZoom({
                                    scale: r,
                                    startZoom: o
                                }),
                                u = this.makeViewport(tt({}, this._viewportProps, {
                                    zoom: s
                                }));
                            return this._getUpdatedState(tt({
                                zoom: s
                            }, u.panByPosition(a, e)))
                        }
                    }, {
                        key: "zoomEnd",
                        value: function() {
                            return this._getUpdatedState({
                                startZoomLngLat: null,
                                startZoom: null
                            })
                        }
                    }, {
                        key: "zoomIn",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                            return this._zoomFromCenter(t)
                        }
                    }, {
                        key: "zoomOut",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                            return this._zoomFromCenter(1 / t)
                        }
                    }, {
                        key: "moveLeft",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
                            return this._panFromCenter([t, 0])
                        }
                    }, {
                        key: "moveRight",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
                            return this._panFromCenter([-t, 0])
                        }
                    }, {
                        key: "moveUp",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
                            return this._panFromCenter([0, t])
                        }
                    }, {
                        key: "moveDown",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
                            return this._panFromCenter([0, -t])
                        }
                    }, {
                        key: "rotateLeft",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 15;
                            return this._getUpdatedState({
                                bearing: this._viewportProps.bearing - t
                            })
                        }
                    }, {
                        key: "rotateRight",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 15;
                            return this._getUpdatedState({
                                bearing: this._viewportProps.bearing + t
                            })
                        }
                    }, {
                        key: "rotateUp",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10;
                            return this._getUpdatedState({
                                pitch: this._viewportProps.pitch + t
                            })
                        }
                    }, {
                        key: "rotateDown",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10;
                            return this._getUpdatedState({
                                pitch: this._viewportProps.pitch - t
                            })
                        }
                    }, {
                        key: "shortestPathFrom",
                        value: function(t) {
                            var e = t.getViewportProps(),
                                n = tt({}, this._viewportProps),
                                r = n.bearing,
                                i = n.longitude;
                            return Math.abs(r - e.bearing) > 180 && (n.bearing = r < 0 ? r + 360 : r - 360), Math.abs(i - e.longitude) > 180 && (n.longitude = i < 0 ? i + 360 : i - 360), n
                        }
                    }, {
                        key: "_zoomFromCenter",
                        value: function(t) {
                            var e = this._viewportProps,
                                n = e.width,
                                r = e.height;
                            return this.zoom({
                                pos: [n / 2, r / 2],
                                scale: t
                            })
                        }
                    }, {
                        key: "_panFromCenter",
                        value: function(t) {
                            var e = this._viewportProps,
                                n = e.width,
                                r = e.height;
                            return this.pan({
                                startPos: [n / 2, r / 2],
                                pos: [n / 2 + t[0], r / 2 + t[1]]
                            })
                        }
                    }, {
                        key: "_getUpdatedState",
                        value: function(t) {
                            return new this.constructor(tt({
                                makeViewport: this.makeViewport
                            }, this._viewportProps, this._state, t))
                        }
                    }, {
                        key: "_applyConstraints",
                        value: function(t) {
                            var e = t.maxZoom,
                                n = t.minZoom,
                                i = t.zoom;
                            t.zoom = (0, r.uZ)(i, n, e);
                            var o = t.maxPitch,
                                a = t.minPitch,
                                s = t.pitch;
                            t.pitch = (0, r.uZ)(s, a, o);
                            var u = t.normalize;
                            return (void 0 === u || u) && Object.assign(t, (0, W.QA)(t)), t
                        }
                    }, {
                        key: "_unproject",
                        value: function(t) {
                            var e = this.makeViewport(this._viewportProps);
                            return t && e.unproject(t)
                        }
                    }, {
                        key: "_calculateNewZoom",
                        value: function(t) {
                            var e = t.scale,
                                n = t.startZoom,
                                i = this._viewportProps,
                                o = i.maxZoom,
                                a = i.minZoom,
                                s = n + Math.log2(e);
                            return (0, r.uZ)(s, a, o)
                        }
                    }, {
                        key: "_calculateNewPitchAndBearing",
                        value: function(t) {
                            var e = t.deltaScaleX,
                                n = t.deltaScaleY,
                                i = t.startBearing,
                                o = t.startPitch;
                            n = (0, r.uZ)(n, -1, 1);
                            var a = this._viewportProps,
                                s = a.minPitch,
                                u = a.maxPitch,
                                c = o;
                            return n > 0 ? c = o + n * (u - o) : n < 0 && (c = o - n * (s - o)), {
                                pitch: c,
                                bearing: i + 180 * e
                            }
                        }
                    }, {
                        key: "_getRotationParams",
                        value: function(t, e) {
                            var n = t[0] - e[0],
                                r = t[1] - e[1],
                                i = t[1],
                                o = e[1],
                                a = this._viewportProps,
                                s = a.width,
                                u = a.height,
                                c = n / s,
                                l = 0;
                            return r > 0 ? Math.abs(u - o) > 5 && (l = r / (o - u) * 1.2) : r < 0 && o > 5 && (l = 1 - i / o), {
                                deltaScaleX: c,
                                deltaScaleY: l = Math.min(1, Math.max(-1, l))
                            }
                        }
                    }]), n
                }(H),
                dt = function(t) {
                    Q(n, t);
                    var e = it(n);

                    function n(t) {
                        return Y(this, n), t.dragMode = t.dragMode || "pan", e.call(this, ht, t)
                    }
                    return $(n, [{
                        key: "setProps",
                        value: function(t) {
                            var e = this.controllerStateProps;
                            K(J(n.prototype), "setProps", this).call(this, t), (!e || e.height !== t.height) && this.updateViewport(new this.ControllerState(tt({
                                makeViewport: this.makeViewport
                            }, this.controllerStateProps, this._state)))
                        }
                    }, {
                        key: "linearTransitionProps",
                        get: function() {
                            return ["longitude", "latitude", "zoom", "bearing", "pitch"]
                        }
                    }]), n
                }(Z)
        },
        14270: function(t, e, n) {
            "use strict";
            n.d(e, {
                z: function() {
                    return o
                },
                Z: function() {
                    return a
                }
            });
            var r = n(553),
                i = {};

            function o(t) {
                i = t
            }

            function a(t) {
                var e;
                r.Z.level > 0 && i[t] && (e = i[t]).call.apply(e, arguments)
            }
        },
        87529: function(t, e, n) {
            "use strict";
            n.d(e, {
                Df: function() {
                    return i
                },
                zG: function() {
                    return o
                },
                iI: function() {
                    return a
                },
                FP: function() {
                    return s
                }
            });
            var r = n(553),
                i = {
                    DEFAULT: -1,
                    LNGLAT: 1,
                    METER_OFFSETS: 2,
                    LNGLAT_OFFSETS: 3,
                    CARTESIAN: 0
                };
            Object.defineProperty(i, "IDENTITY", {
                get: function() {
                    return r.Z.deprecated("COORDINATE_SYSTEM.IDENTITY", "COORDINATE_SYSTEM.CARTESIAN")() || 0
                }
            });
            var o = {
                    WEB_MERCATOR: 1,
                    GLOBE: 2,
                    WEB_MERCATOR_AUTO_OFFSET: 4,
                    IDENTITY: 0
                },
                a = {
                    common: 0,
                    meters: 1,
                    pixels: 2
                },
                s = {
                    click: {
                        handler: "onClick"
                    },
                    panstart: {
                        handler: "onDragStart"
                    },
                    panmove: {
                        handler: "onDrag"
                    },
                    panend: {
                        handler: "onDragEnd"
                    }
                }
        },
        31223: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return Kn
                }
            });
            var r = n(87529),
                i = n(44211),
                o = n(6948),
                a = n(53478);

            function s(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function u(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var c = function() {
                function t(e, n) {
                    ! function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), this.opts = n, this.source = e
                }
                var e, n, r;
                return e = t, (n = [{
                    key: "value",
                    get: function() {
                        return this.source.value
                    }
                }, {
                    key: "getValue",
                    value: function() {
                        var t = this.source.getBuffer(),
                            e = this.getAccessor();
                        if (t) return [t, e];
                        var n = this.source.value,
                            r = e.size,
                            i = n;
                        if (n && n.length !== r) {
                            i = new Float32Array(r);
                            for (var o = e.elementOffset || 0, a = 0; a < r; ++a) i[a] = n[o + a]
                        }
                        return i
                    }
                }, {
                    key: "getAccessor",
                    value: function() {
                        return function(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var n = null != arguments[e] ? arguments[e] : {},
                                    r = Object.keys(n);
                                "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                    return Object.getOwnPropertyDescriptor(n, t).enumerable
                                })))), r.forEach((function(e) {
                                    u(t, e, n[e])
                                }))
                            }
                            return t
                        }({}, this.source.getAccessor(), this.opts)
                    }
                }]) && s(e.prototype, n), r && s(e, r), t
            }();
            var l = n(85242),
                f = n(38366),
                h = n(553);

            function d(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function p(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function g(t, e) {
                return null != e && "undefined" !== typeof Symbol && e[Symbol.hasInstance] ? e[Symbol.hasInstance](t) : t instanceof e
            }

            function y(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        p(t, e, n[e])
                    }))
                }
                return t
            }

            function v(t) {
                return t.stride || t.size * t.bytesPerElement
            }

            function m(t, e) {
                e.offset && h.Z.removed("shaderAttribute.offset", "vertexOffset, elementOffset")();
                var n = v(t);
                return y({}, e, {
                    offset: ("vertexOffset" in e ? e.vertexOffset : t.vertexOffset || 0) * n + (e.elementOffset || 0) * t.bytesPerElement + (t.offset || 0),
                    stride: n
                })
            }
            var b = function() {
                    function t(e, n) {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this.gl = e, this.id = n.id, this.size = n.size;
                        var r = n.logicalType || n.type,
                            a = 5130 === r,
                            s = n.defaultValue;
                        s = Number.isFinite(s) ? [s] : s || new Array(this.size).fill(0), n.defaultValue = s;
                        var u = r;
                        a ? u = 5126 : !u && n.isIndexed ? u = e && (0, i.U6)(e, o.h.ELEMENT_INDEX_UINT32) ? 5125 : 5123 : u || (u = 5126), n.logicalType = r, n.type = u;
                        var c = function(t) {
                            switch (t) {
                                case 5126:
                                    return Float32Array;
                                case 5130:
                                    return Float64Array;
                                case 5123:
                                case 33635:
                                case 32819:
                                case 32820:
                                    return Uint16Array;
                                case 5125:
                                    return Uint32Array;
                                case 5121:
                                    return Uint8ClampedArray;
                                case 5120:
                                    return Int8Array;
                                case 5122:
                                    return Int16Array;
                                case 5124:
                                    return Int32Array;
                                default:
                                    throw new Error("Unknown GL type")
                            }
                        }(r || u || 5126);
                        this.shaderAttributes = {}, this.doublePrecision = a, a && !1 === n.fp64 && (c = Float32Array), n.bytesPerElement = c.BYTES_PER_ELEMENT, this.defaultType = c, this.value = null, this.settings = n, this.state = {
                            externalBuffer: null,
                            bufferAccessor: n,
                            allocatedValue: null,
                            constant: !1
                        }, this._buffer = null, this.setData(n)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "buffer",
                        get: function() {
                            if (!this._buffer) {
                                var t = this.settings,
                                    e = t.isIndexed,
                                    n = t.type;
                                this._buffer = new a.Z(this.gl, {
                                    id: this.id,
                                    target: e ? 34963 : 34962,
                                    accessor: {
                                        type: n
                                    }
                                })
                            }
                            return this._buffer
                        }
                    }, {
                        key: "byteOffset",
                        get: function() {
                            var t = this.getAccessor();
                            return t.vertexOffset ? t.vertexOffset * v(t) : 0
                        }
                    }, {
                        key: "delete",
                        value: function() {
                            this._buffer && (this._buffer.delete(), this._buffer = null), l.Z.release(this.state.allocatedValue)
                        }
                    }, {
                        key: "getShaderAttributes",
                        value: function(t, e) {
                            if (this.doublePrecision) {
                                var n = {},
                                    r = g(this.value, Float64Array),
                                    i = function(t, e) {
                                        var n = m(t, e);
                                        return {
                                            high: n,
                                            low: y({}, n, {
                                                offset: n.offset + 4 * t.size
                                            })
                                        }
                                    }(this.getAccessor(), e || {});
                                return n[t] = new c(this, i.high), n["".concat(t, "64Low")] = r ? new c(this, i.low) : new Float32Array(this.size), n
                            }
                            if (e) {
                                var o = m(this.getAccessor(), e);
                                return p({}, t, new c(this, o))
                            }
                            return p({}, t, this)
                        }
                    }, {
                        key: "getBuffer",
                        value: function() {
                            return this.state.constant ? null : this.state.externalBuffer || this._buffer
                        }
                    }, {
                        key: "getValue",
                        value: function() {
                            return this.state.constant ? this.value : [this.getBuffer(), this.getAccessor()]
                        }
                    }, {
                        key: "getAccessor",
                        value: function() {
                            return this.state.bufferAccessor
                        }
                    }, {
                        key: "setData",
                        value: function(t) {
                            var e = this.state;
                            ArrayBuffer.isView(t) ? t = {
                                value: t
                            } : g(t, a.Z) && (t = {
                                buffer: t
                            });
                            var n = y({}, this.settings, t);
                            if (e.bufferAccessor = n, t.constant) {
                                var r = t.value;
                                if (r = this._normalizeValue(r, [], 0), this.settings.normalized && (r = this._normalizeConstant(r)), e.constant && this._areValuesEqual(r, this.value)) return !1;
                                e.externalBuffer = null, e.constant = !0, this.value = r
                            } else if (t.buffer) {
                                var i = t.buffer;
                                e.externalBuffer = i, e.constant = !1, this.value = t.value;
                                var o = g(t.value, Float64Array);
                                n.type = t.type || i.accessor.type, n.bytesPerElement = i.accessor.BYTES_PER_ELEMENT * (o ? 2 : 1), n.stride = v(n)
                            } else if (t.value) {
                                this._checkExternalBuffer(t);
                                var s = t.value;
                                e.externalBuffer = null, e.constant = !1, this.value = s, n.bytesPerElement = s.BYTES_PER_ELEMENT, n.stride = v(n);
                                var u = this.buffer,
                                    c = this.byteOffset;
                                this.doublePrecision && g(s, Float64Array) && (s = (0, f.TK)(s, n));
                                var l = s.byteLength + c + 2 * n.stride;
                                u.byteLength < l && u.reallocate(l), u.setAccessor(null), u.subData({
                                    data: s,
                                    offset: c
                                }), n.type = t.type || u.accessor.type
                            }
                            return !0
                        }
                    }, {
                        key: "updateSubBuffer",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                e = this.value,
                                n = t.startOffset,
                                r = void 0 === n ? 0 : n,
                                i = t.endOffset;
                            this.buffer.subData({
                                data: this.doublePrecision && g(e, Float64Array) ? (0, f.TK)(e, {
                                    size: this.size,
                                    startIndex: r,
                                    endIndex: i
                                }) : e.subarray(r, i),
                                offset: r * e.BYTES_PER_ELEMENT + this.byteOffset
                            })
                        }
                    }, {
                        key: "allocate",
                        value: function(t) {
                            var e = t.numInstances,
                                n = t.copy,
                                r = void 0 !== n && n,
                                i = this.state,
                                o = i.allocatedValue,
                                a = l.Z.allocate(o, e + 1, {
                                    size: this.size,
                                    type: this.defaultType,
                                    copy: r
                                });
                            this.value = a;
                            var s = this.buffer,
                                u = this.byteOffset;
                            return s.byteLength < a.byteLength + u && (s.reallocate(a.byteLength + u), r && o && s.subData({
                                data: g(o, Float64Array) ? (0, f.TK)(o, this) : o,
                                offset: u
                            })), i.allocatedValue = a, i.constant = !1, i.externalBuffer = null, i.bufferAccessor = this.settings, !0
                        }
                    }, {
                        key: "_checkExternalBuffer",
                        value: function(t) {
                            var e = t.value;
                            if (!t.constant && e) {
                                var n = this.defaultType,
                                    r = !1;
                                if (this.doublePrecision && (r = e.BYTES_PER_ELEMENT < 4), r) throw new Error("Attribute ".concat(this.id, " does not support ").concat(e.constructor.name));
                                g(e, n) || !this.settings.normalized || "normalized" in t || h.Z.warn("Attribute ".concat(this.id, " is normalized"))()
                            }
                        }
                    }, {
                        key: "_normalizeConstant",
                        value: function(t) {
                            switch (this.settings.type) {
                                case 5120:
                                    return new Float32Array(t).map((function(t) {
                                        return (t + 128) / 255 * 2 - 1
                                    }));
                                case 5122:
                                    return new Float32Array(t).map((function(t) {
                                        return (t + 32768) / 65535 * 2 - 1
                                    }));
                                case 5121:
                                    return new Float32Array(t).map((function(t) {
                                        return t / 255
                                    }));
                                case 5123:
                                    return new Float32Array(t).map((function(t) {
                                        return t / 65535
                                    }));
                                default:
                                    return t
                            }
                        }
                    }, {
                        key: "_normalizeValue",
                        value: function(t, e, n) {
                            var r = this.settings,
                                i = r.defaultValue,
                                o = r.size;
                            if (Number.isFinite(t)) return e[n] = t, e;
                            if (!t) return e[n] = i[0], e;
                            switch (o) {
                                case 4:
                                    e[n + 3] = Number.isFinite(t[3]) ? t[3] : i[3];
                                case 3:
                                    e[n + 2] = Number.isFinite(t[2]) ? t[2] : i[2];
                                case 2:
                                    e[n + 1] = Number.isFinite(t[1]) ? t[1] : i[1];
                                case 1:
                                    e[n + 0] = Number.isFinite(t[0]) ? t[0] : i[0];
                                    break;
                                default:
                                    for (var a = o; --a >= 0;) e[n + a] = Number.isFinite(t[a]) ? t[a] : i[a]
                            }
                            return e
                        }
                    }, {
                        key: "_areValuesEqual",
                        value: function(t, e) {
                            if (!t || !e) return !1;
                            for (var n = this.size, r = 0; r < n; r++)
                                if (t[r] !== e[r]) return !1;
                            return !0
                        }
                    }]) && d(e.prototype, n), r && d(e, r), t
                }(),
                w = n(47806),
                _ = n(71774),
                P = n(71997),
                E = [],
                x = [
                    [0, 1 / 0]
                ];

            function S(t, e) {
                if (t === x) return t;
                if (e[0] < 0 && (e[0] = 0), e[0] >= e[1]) return t;
                for (var n = [], r = t.length, i = 0, o = 0; o < r; o++) {
                    var a = t[o];
                    a[1] < e[0] ? (n.push(a), i = o + 1) : a[0] > e[1] ? n.push(a) : e = [Math.min(a[0], e[0]), Math.max(a[1], e[1])]
                }
                return n.splice(i, 0, e), n
            }

            function O(t) {
                var e = t.source,
                    n = t.target,
                    r = t.start,
                    i = void 0 === r ? 0 : r,
                    o = t.end,
                    a = t.size,
                    s = t.getData;
                o = o || n.length;
                var u = e.length,
                    c = o - i;
                if (u > c) n.set(e.subarray(0, c), i);
                else if (n.set(e, i), s)
                    for (var l = u; l < c;)
                        for (var f = s(l, e), h = 0; h < a; h++) n[i + l] = f[h] || 0, l++
            }

            function T(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function M(t, e) {
                return null != e && "undefined" !== typeof Symbol && e[Symbol.hasInstance] ? e[Symbol.hasInstance](t) : t instanceof e
            }
            var C = {
                interpolation: {
                    duration: 0,
                    easing: function(t) {
                        return t
                    }
                },
                spring: {
                    stiffness: .05,
                    damping: .5
                }
            };

            function A(t, e) {
                return t ? (Number.isFinite(t) && (t = {
                    duration: t
                }), t.type = t.type || "interpolation", function(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var n = null != arguments[e] ? arguments[e] : {},
                            r = Object.keys(n);
                        "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                            return Object.getOwnPropertyDescriptor(n, t).enumerable
                        })))), r.forEach((function(e) {
                            T(t, e, n[e])
                        }))
                    }
                    return t
                }({}, C[t.type], e, t)) : null
            }

            function k(t, e) {
                return e.getBuffer() ? [e.getBuffer(), {
                    divisor: 0,
                    size: e.size,
                    normalized: e.settings.normalized
                }] : e.value
            }

            function I(t) {
                switch (t) {
                    case 1:
                        return "float";
                    case 2:
                        return "vec2";
                    case 3:
                        return "vec3";
                    case 4:
                        return "vec4";
                    default:
                        throw new Error('No defined attribute type for size "'.concat(t, '"'))
                }
            }

            function j(t) {
                t.push(t.shift())
            }

            function L(t, e) {
                var n = t.doublePrecision,
                    r = t.settings,
                    i = t.value,
                    o = t.size,
                    a = n && M(i, Float64Array) ? 2 : 1;
                return (r.noAlloc ? i.length : e * o) * a
            }

            function R(t) {
                var e = t.buffer,
                    n = t.numInstances,
                    r = t.attribute,
                    i = t.fromLength,
                    o = t.fromStartIndices,
                    a = t.getData,
                    s = void 0 === a ? function(t) {
                        return t
                    } : a,
                    u = r.doublePrecision && M(r.value, Float64Array) ? 2 : 1,
                    c = r.size * u,
                    l = r.byteOffset,
                    f = r.startIndices,
                    h = o && f,
                    d = L(r, n),
                    p = r.state.constant;
                if (h || !(i >= d)) {
                    var g = p ? r.value : r.getBuffer().getData({
                        srcByteOffset: l
                    });
                    if (r.settings.normalized && !p) {
                        var y = s;
                        s = function(t, e) {
                            return r._normalizeConstant(y(t, e))
                        }
                    }
                    var v = p ? function(t, e) {
                            return s(g, e)
                        } : function(t, e) {
                            return s(g.subarray(t, t + c), e)
                        },
                        m = e.getData({
                            length: i
                        }),
                        b = new Float32Array(d);
                    ! function(t) {
                        var e = t.source,
                            n = t.target,
                            r = t.size,
                            i = t.getData,
                            o = t.sourceStartIndices,
                            a = t.targetStartIndices;
                        if (!Array.isArray(a)) return O({
                            source: e,
                            target: n,
                            size: r,
                            getData: i
                        }), n;
                        for (var s = 0, u = 0, c = i && function(t, e) {
                                return i(t + u, e)
                            }, l = Math.min(o.length, a.length), f = 1; f < l; f++) {
                            var h = o[f] * r,
                                d = a[f] * r;
                            O({
                                source: e.subarray(s, h),
                                target: n,
                                start: u,
                                end: d,
                                size: r,
                                getData: c
                            }), s = h, u = d
                        }
                        u < n.length && O({
                            source: [],
                            target: n,
                            start: u,
                            size: r,
                            getData: c
                        })
                    }({
                        source: m,
                        target: b,
                        sourceStartIndices: o,
                        targetStartIndices: f,
                        size: c,
                        getData: v
                    }), e.byteLength < b.byteLength + l && e.reallocate(b.byteLength + l), e.subData({
                        data: b,
                        offset: l
                    })
                }
            }

            function D(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function F(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function N(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function z(t, e, n) {
                return (z = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = B(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function B(t) {
                return (B = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function U(t, e) {
                return !e || "object" !== V(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function G(t, e) {
                return (G = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function Z(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return D(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return D(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var V = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function H(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = B(t);
                    if (e) {
                        var i = B(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return U(this, n)
                }
            }
            var W = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && G(t, e)
                    }(o, t);
                    var e, n, r, i = H(o);

                    function o(t) {
                        var e, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        F(this, o), e = i.call(this, t, n);
                        var r = n.transition,
                            a = void 0 !== r && r,
                            s = n.noAlloc,
                            u = void 0 !== s && s,
                            c = n.update,
                            l = void 0 === c ? null : c,
                            f = n.accessor,
                            h = void 0 === f ? null : f,
                            d = n.transform,
                            p = void 0 === d ? null : d,
                            g = n.startIndices,
                            y = void 0 === g ? null : g;
                        return Object.assign(e.settings, {
                            transition: a,
                            noAlloc: u,
                            update: l || h && e._autoUpdater,
                            accessor: h,
                            transform: p
                        }), Object.assign(e.state, {
                            lastExternalBuffer: null,
                            binaryValue: null,
                            binaryAccessor: null,
                            needsUpdate: !0,
                            needsRedraw: !1,
                            updateRanges: x,
                            startIndices: y
                        }), Object.seal(e.settings), Object.seal(e.state), e._validateAttributeUpdaters(), e
                    }
                    return e = o, (n = [{
                        key: "startIndices",
                        get: function() {
                            return this.state.startIndices
                        },
                        set: function(t) {
                            this.state.startIndices = t
                        }
                    }, {
                        key: "needsUpdate",
                        value: function() {
                            return this.state.needsUpdate
                        }
                    }, {
                        key: "needsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                e = t.clearChangedFlags,
                                n = void 0 !== e && e,
                                r = this.state.needsRedraw;
                            return this.state.needsRedraw = r && !n, r
                        }
                    }, {
                        key: "getUpdateTriggers",
                        value: function() {
                            var t = this.settings.accessor;
                            return [this.id].concat("function" !== typeof t && t || [])
                        }
                    }, {
                        key: "supportsTransition",
                        value: function() {
                            return Boolean(this.settings.transition)
                        }
                    }, {
                        key: "getTransitionSetting",
                        value: function(t) {
                            if (!t || !this.supportsTransition()) return null;
                            var e = this.settings.accessor,
                                n = this.settings.transition;
                            return A(Array.isArray(e) ? t[e.find((function(e) {
                                return t[e]
                            }))] : t[e], n)
                        }
                    }, {
                        key: "setNeedsUpdate",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.id,
                                e = arguments.length > 1 ? arguments[1] : void 0;
                            if (this.state.needsUpdate = this.state.needsUpdate || t, this.setNeedsRedraw(t), e) {
                                var n = e.startRow,
                                    r = void 0 === n ? 0 : n,
                                    i = e.endRow,
                                    o = void 0 === i ? 1 / 0 : i;
                                this.state.updateRanges = S(this.state.updateRanges, [r, o])
                            } else this.state.updateRanges = x
                        }
                    }, {
                        key: "clearNeedsUpdate",
                        value: function() {
                            this.state.needsUpdate = !1, this.state.updateRanges = E
                        }
                    }, {
                        key: "setNeedsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.id;
                            this.state.needsRedraw = this.state.needsRedraw || t
                        }
                    }, {
                        key: "update",
                        value: function(t) {
                            this.setData(t)
                        }
                    }, {
                        key: "allocate",
                        value: function(t) {
                            var e = this.state,
                                n = this.settings;
                            return !n.noAlloc && !!n.update && (z(B(o.prototype), "allocate", this).call(this, {
                                numInstances: t,
                                copy: e.updateRanges !== x
                            }), !0)
                        }
                    }, {
                        key: "updateBuffer",
                        value: function(t) {
                            var e = t.numInstances,
                                n = t.data,
                                r = t.props,
                                i = t.context;
                            if (!this.needsUpdate()) return !1;
                            var a = this.state.updateRanges,
                                s = this.settings,
                                u = s.update,
                                c = s.noAlloc,
                                l = !0;
                            if (u) {
                                var f = !0,
                                    h = !1,
                                    d = void 0;
                                try {
                                    for (var p, g = a[Symbol.iterator](); !(f = (p = g.next()).done); f = !0) {
                                        var y = Z(p.value, 2),
                                            v = y[0],
                                            m = y[1];
                                        u.call(i, this, {
                                            data: n,
                                            startRow: v,
                                            endRow: m,
                                            props: r,
                                            numInstances: e
                                        })
                                    }
                                } catch (C) {
                                    h = !0, d = C
                                } finally {
                                    try {
                                        f || null == g.return || g.return()
                                    } finally {
                                        if (h) throw d
                                    }
                                }
                                if (this.value)
                                    if (this.constant || this.buffer.byteLength < this.value.byteLength + this.byteOffset) this.setData({
                                        value: this.value,
                                        constant: this.constant
                                    }), this.constant = !1;
                                    else {
                                        var b = !0,
                                            w = !1,
                                            _ = void 0;
                                        try {
                                            for (var P, E = a[Symbol.iterator](); !(b = (P = E.next()).done); b = !0) {
                                                var x = Z(P.value, 2),
                                                    S = x[0],
                                                    O = x[1],
                                                    T = Number.isFinite(S) ? this.getVertexOffset(S) : 0,
                                                    M = Number.isFinite(O) ? this.getVertexOffset(O) : c || !Number.isFinite(e) ? this.value.length : e * this.size;
                                                z(B(o.prototype), "updateSubBuffer", this).call(this, {
                                                    startOffset: T,
                                                    endOffset: M
                                                })
                                            }
                                        } catch (C) {
                                            w = !0, _ = C
                                        } finally {
                                            try {
                                                b || null == E.return || E.return()
                                            } finally {
                                                if (w) throw _
                                            }
                                        }
                                    }
                                this._checkAttributeArray()
                            } else l = !1;
                            return this.clearNeedsUpdate(), this.setNeedsRedraw(), l
                        }
                    }, {
                        key: "setConstantValue",
                        value: function(t) {
                            return void 0 !== t && "function" !== typeof t && (this.setData({
                                constant: !0,
                                value: t
                            }) && this.setNeedsRedraw(), this.clearNeedsUpdate(), !0)
                        }
                    }, {
                        key: "setExternalBuffer",
                        value: function(t) {
                            var e = this.state;
                            return t ? (this.clearNeedsUpdate(), e.lastExternalBuffer === t || (e.lastExternalBuffer = t, this.setNeedsRedraw(), this.setData(t)), !0) : (e.lastExternalBuffer = null, !1)
                        }
                    }, {
                        key: "setBinaryValue",
                        value: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                                n = this,
                                r = n.state,
                                i = n.settings;
                            if (!t) return r.binaryValue = null, r.binaryAccessor = null, !1;
                            if (i.noAlloc) return !1;
                            if (r.binaryValue === t) return this.clearNeedsUpdate(), !0;
                            r.binaryValue = t, this.setNeedsRedraw(), ArrayBuffer.isView(t) && (t = {
                                value: t
                            });
                            var o = i.transform || e !== this.startIndices;
                            if (o) {
                                (0, w.Z)(ArrayBuffer.isView(t.value), "invalid ".concat(i.accessor));
                                var a = t.size && t.size !== this.size;
                                return r.binaryAccessor = (0, _.jr)(t.value, {
                                    size: t.size || this.size,
                                    stride: t.stride,
                                    offset: t.offset,
                                    startIndices: e,
                                    nested: a
                                }), !1
                            }
                            return this.clearNeedsUpdate(), this.setData(t), !0
                        }
                    }, {
                        key: "getVertexOffset",
                        value: function(t) {
                            var e = this.startIndices;
                            return (e ? e[t] : t) * this.size
                        }
                    }, {
                        key: "getShaderAttributes",
                        value: function() {
                            var t, e, n, r = this.settings.shaderAttributes || (t = {}, e = this.id, n = null, e in t ? Object.defineProperty(t, e, {
                                    value: n,
                                    enumerable: !0,
                                    configurable: !0,
                                    writable: !0
                                }) : t[e] = n, t),
                                i = {};
                            for (var a in r) Object.assign(i, z(B(o.prototype), "getShaderAttributes", this).call(this, a, r[a]));
                            return i
                        }
                    }, {
                        key: "_autoUpdater",
                        value: function(t, e) {
                            var n = e.data,
                                r = e.startRow,
                                i = e.endRow,
                                o = e.props,
                                a = e.numInstances;
                            if (!t.constant) {
                                var s = t.settings,
                                    u = t.state,
                                    c = t.value,
                                    l = t.size,
                                    f = t.startIndices,
                                    h = s.accessor,
                                    d = s.transform,
                                    p = u.binaryAccessor || ("function" === typeof h ? h : o[h]);
                                (0, w.Z)("function" === typeof p, 'accessor "'.concat(h, '" is not a function'));
                                var g = t.getVertexOffset(r),
                                    y = (0, _.jB)(n, r, i),
                                    v = y.iterable,
                                    m = y.objectInfo,
                                    b = !0,
                                    E = !1,
                                    x = void 0;
                                try {
                                    for (var S, O = v[Symbol.iterator](); !(b = (S = O.next()).done); b = !0) {
                                        var T = S.value;
                                        m.index++;
                                        var M = p(T, m);
                                        if (d && (M = d.call(this, M)), f) {
                                            var C = (m.index < f.length - 1 ? f[m.index + 1] : a) - f[m.index];
                                            if (M && Array.isArray(M[0])) {
                                                var A = g,
                                                    k = !0,
                                                    I = !1,
                                                    j = void 0;
                                                try {
                                                    for (var L, R = M[Symbol.iterator](); !(k = (L = R.next()).done); k = !0) {
                                                        var D = L.value;
                                                        t._normalizeValue(D, c, A), A += l
                                                    }
                                                } catch (F) {
                                                    I = !0, j = F
                                                } finally {
                                                    try {
                                                        k || null == R.return || R.return()
                                                    } finally {
                                                        if (I) throw j
                                                    }
                                                }
                                            } else M && M.length > l ? c.set(M, g) : (t._normalizeValue(M, m.target, 0), (0, P.k)({
                                                target: c,
                                                source: m.target,
                                                start: g,
                                                count: C
                                            }));
                                            g += C * l
                                        } else t._normalizeValue(M, c, g), g += l
                                    }
                                } catch (F) {
                                    E = !0, x = F
                                } finally {
                                    try {
                                        b || null == O.return || O.return()
                                    } finally {
                                        if (E) throw x
                                    }
                                }
                            }
                        }
                    }, {
                        key: "_validateAttributeUpdaters",
                        value: function() {
                            var t = this.settings;
                            if (!t.noAlloc && "function" !== typeof t.update) throw new Error("Attribute ".concat(this.id, " missing update or accessor"))
                        }
                    }, {
                        key: "_checkAttributeArray",
                        value: function() {
                            var t = this.value,
                                e = Math.min(4, this.size);
                            if (t && t.length >= e) {
                                var n = !0;
                                switch (e) {
                                    case 4:
                                        n = n && Number.isFinite(t[3]);
                                    case 3:
                                        n = n && Number.isFinite(t[2]);
                                    case 2:
                                        n = n && Number.isFinite(t[1]);
                                    case 1:
                                        n = n && Number.isFinite(t[0]);
                                        break;
                                    default:
                                        n = !1
                                }
                                if (!n) throw new Error("Illegal attribute generated for ".concat(this.id))
                            }
                        }
                    }]) && N(e.prototype, n), r && N(e, r), o
                }(b),
                Y = n(14270),
                q = n(29047);
            const $ = "out vec4 transform_output;\nvoid main() {\n  transform_output = vec4(0);\n}",
                X = `#version 300 es\n${$}`;

            function K(t, e) {
                e = Array.isArray(e) ? e : [e];
                const n = t.replace(/^\s+/, "").split(/\s+/),
                    [r, i, o] = n;
                if (!e.includes(r) || !i || !o) return null;
                return {
                    qualifier: r,
                    type: i,
                    name: o.split(";")[0]
                }
            }

            function J(t = {}) {
                const {
                    version: e = 100,
                    input: n,
                    inputType: r,
                    output: i
                } = t;
                if (!n) return 300 === e ? X : e > 300 ? `#version ${e}\n${$}` : "void main() {gl_FragColor = vec4(0);}";
                const o = function(t, e) {
                    switch (e) {
                        case "float":
                            return `vec4(${t}, 0.0, 0.0, 1.0)`;
                        case "vec2":
                            return `vec4(${t}, 0.0, 1.0)`;
                        case "vec3":
                            return `vec4(${t}, 1.0)`;
                        case "vec4":
                            return t;
                        default:
                            return (0, q.Z)(!1), null
                    }
                }(n, r);
                return e >= 300 ? `#version ${e} ${300===e?"es":""}\nin ${r} ${n};\nout vec4 ${i};\nvoid main() {\n  ${i} = ${o};\n}` : `varying ${r} ${n};\nvoid main() {\n  gl_FragColor = ${o};\n}`
            }
            var Q = n(1418),
                tt = n(51053),
                et = n(22525);
            class nt {
                constructor(t, e = {}) {
                    this.gl = t, this.currentIndex = 0, this.feedbackMap = {}, this.varyings = null, this.bindings = [], this.resources = {}, this._initialize(e), Object.seal(this)
                }
                setupResources(t) {
                    for (const e of this.bindings) this._setupTransformFeedback(e, t)
                }
                updateModelProps(t = {}) {
                    const {
                        varyings: e
                    } = this;
                    return e.length > 0 && (t = Object.assign({}, t, {
                        varyings: e
                    })), t
                }
                getDrawOptions(t = {}) {
                    const e = this.bindings[this.currentIndex],
                        {
                            sourceBuffers: n,
                            transformFeedback: r
                        } = e;
                    return {
                        attributes: Object.assign({}, n, t.attributes),
                        transformFeedback: r
                    }
                }
                swap() {
                    return !!this.feedbackMap && (this.currentIndex = this._getNextIndex(), !0)
                }
                update(t = {}) {
                    this._setupBuffers(t)
                }
                getBuffer(t) {
                    const {
                        feedbackBuffers: e
                    } = this.bindings[this.currentIndex], n = t ? e[t] : null;
                    return n ? n instanceof a.Z ? n : n.buffer : null
                }
                getData(t = {}) {
                    const {
                        varyingName: e
                    } = t, n = this.getBuffer(e);
                    return n ? n.getData() : null
                }
                delete() {
                    for (const t in this.resources) this.resources[t].delete()
                }
                _initialize(t = {}) {
                    this._setupBuffers(t), this.varyings = t.varyings || Object.keys(this.bindings[this.currentIndex].feedbackBuffers), this.varyings.length > 0 && (0, et.h)((0, Q.D0)(this.gl))
                }
                _getFeedbackBuffers(t) {
                    const {
                        sourceBuffers: e = {}
                    } = t, n = {};
                    if (this.bindings[this.currentIndex] && Object.assign(n, this.bindings[this.currentIndex].feedbackBuffers), this.feedbackMap)
                        for (const r in this.feedbackMap) {
                            const t = this.feedbackMap[r];
                            r in e && (n[t] = r)
                        }
                    Object.assign(n, t.feedbackBuffers);
                    for (const r in n) {
                        const t = n[r];
                        if ("string" === typeof t) {
                            const i = e[t],
                                {
                                    byteLength: o,
                                    usage: a,
                                    accessor: s
                                } = i;
                            n[r] = this._createNewBuffer(r, {
                                byteLength: o,
                                usage: a,
                                accessor: s
                            })
                        }
                    }
                    return n
                }
                _setupBuffers(t = {}) {
                    const {
                        sourceBuffers: e = null
                    } = t;
                    Object.assign(this.feedbackMap, t.feedbackMap);
                    const n = this._getFeedbackBuffers(t);
                    this._updateBindings({
                        sourceBuffers: e,
                        feedbackBuffers: n
                    })
                }
                _setupTransformFeedback(t, {
                    model: e
                }) {
                    const {
                        program: n
                    } = e;
                    t.transformFeedback = new tt.Z(this.gl, {
                        program: n,
                        buffers: t.feedbackBuffers
                    })
                }
                _updateBindings(t) {
                    if (this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], t), this.feedbackMap) {
                        const {
                            sourceBuffers: t,
                            feedbackBuffers: e
                        } = this._swapBuffers(this.bindings[this.currentIndex]), n = this._getNextIndex();
                        this.bindings[n] = this._updateBinding(this.bindings[n], {
                            sourceBuffers: t,
                            feedbackBuffers: e
                        })
                    }
                }
                _updateBinding(t, e) {
                    return t ? (Object.assign(t.sourceBuffers, e.sourceBuffers), Object.assign(t.feedbackBuffers, e.feedbackBuffers), t.transformFeedback && t.transformFeedback.setBuffers(t.feedbackBuffers), t) : {
                        sourceBuffers: Object.assign({}, e.sourceBuffers),
                        feedbackBuffers: Object.assign({}, e.feedbackBuffers)
                    }
                }
                _swapBuffers(t) {
                    if (!this.feedbackMap) return null;
                    const e = Object.assign({}, t.sourceBuffers),
                        n = Object.assign({}, t.feedbackBuffers);
                    for (const r in this.feedbackMap) {
                        const i = this.feedbackMap[r];
                        e[r] = t.feedbackBuffers[i], n[i] = t.sourceBuffers[r], (0, et.h)(n[i] instanceof a.Z)
                    }
                    return {
                        sourceBuffers: e,
                        feedbackBuffers: n
                    }
                }
                _createNewBuffer(t, e) {
                    const n = new a.Z(this.gl, e);
                    return this.resources[t] && this.resources[t].delete(), this.resources[t] = n, n
                }
                _getNextIndex() {
                    return (this.currentIndex + 1) % 2
                }
            }
            var rt = n(29295),
                it = n(51621),
                ot = n(53849),
                at = n(73462);

            function st(t) {
                let e = 100;
                const n = t.match(/[^\s]+/g);
                if (n.length >= 2 && "#version" === n[0]) {
                    const t = parseInt(n[1], 10);
                    Number.isFinite(t) && (e = t)
                }
                return e
            }
            var ut = n(60827);
            const ct = {
                name: "transform",
                vs: "attribute float transform_elementID;\nvec2 transform_getPixelSizeHalf(vec2 size) {\n  return vec2(1.) / (2. * size);\n}\n\nvec2 transform_getPixelIndices(vec2 texSize, vec2 pixelSizeHalf) {\n  float yIndex = floor((transform_elementID / texSize[0]) + pixelSizeHalf[1]);\n  float xIndex = transform_elementID - (yIndex * texSize[0]);\n  return vec2(xIndex, yIndex);\n}\nvec2 transform_getTexCoord(vec2 size) {\n  vec2 pixelSizeHalf = transform_getPixelSizeHalf(size);\n  vec2 indices = transform_getPixelIndices(size, pixelSizeHalf);\n  vec2 coord = indices / size + pixelSizeHalf;\n  return coord;\n}\nvec2 transform_getPos(vec2 size) {\n  vec2 texCoord = transform_getTexCoord(size);\n  vec2 pos = (texCoord * (2.0, 2.0)) - (1., 1.);\n  return pos;\n}\nvec4 transform_getInput(sampler2D texSampler, vec2 size) {\n  vec2 texCoord = transform_getTexCoord(size);\n  vec4 textureColor = texture2D(texSampler, texCoord);\n  return textureColor;\n}\n",
                fs: null
            };

            function lt({
                vs: t,
                sourceTextureMap: e,
                targetTextureVarying: n,
                targetTexture: r
            }) {
                let i = Object.keys(e).length,
                    o = null;
                const a = {};
                let s = t,
                    u = {};
                if (i > 0 || n) {
                    const t = s.split("\n"),
                        c = t.slice();
                    if (t.forEach(((t, r, s) => {
                            if (i > 0) {
                                const n = function(t, e) {
                                    const n = {},
                                        r = function(t) {
                                            return K(t, ["attribute", "in"])
                                        }(t);
                                    if (!r) return null;
                                    const {
                                        type: i,
                                        name: o
                                    } = r;
                                    if (o && e[o]) {
                                        const e = `// ${t} => Replaced by Transform with a sampler`,
                                            {
                                                samplerName: r,
                                                sizeName: a,
                                                uniformDeclerations: s
                                            } = function(t) {
                                                const e = `transform_uSampler_${t}`,
                                                    n = `transform_uSize_${t}`;
                                                return {
                                                    samplerName: e,
                                                    sizeName: n,
                                                    uniformDeclerations: `  uniform sampler2D ${e};\n  uniform vec2 ${n};`
                                                }
                                            }(o),
                                            u = `  ${i} ${o} = transform_getInput(${r}, ${a}).${function(t){switch(t){case"float":return"x";case"vec2":return"xy";case"vec3":return"xyz";case"vec4":return"xyzw";default:return(0,q.Z)(!1),null}}(i)};\n`;
                                        n[r] = o;
                                        return {
                                            updatedLine: e,
                                            inject: {
                                                "vs:#decl": s,
                                                "vs:#main-start": u
                                            },
                                            samplerTextureMap: n
                                        }
                                    }
                                    return null
                                }(t, e);
                                if (n) {
                                    const {
                                        updatedLine: t,
                                        inject: e
                                    } = n;
                                    c[r] = t, u = (0, ut.Lm)([u, e]), Object.assign(a, n.samplerTextureMap), i--
                                }
                            }
                            n && !o && (o = function(t, e) {
                                const n = K(t, ["varying", "out"]);
                                if (!n) return null;
                                return n.name === e ? n.type : null
                            }(t, n))
                        })), n) {
                        (0, et.h)(r);
                        const t = `transform_uSize_${n}`,
                            e = {
                                "vs:#decl": `uniform vec2 ${t};\n`,
                                "vs:#main-start": `     vec2 transform_position = transform_getPos(${t});\n     gl_Position = vec4(transform_position, 0, 1.);\n`
                            };
                        u = (0, ut.Lm)([u, e])
                    }
                    s = c.join("\n")
                }
                return {
                    vs: s,
                    targetTextureType: o,
                    inject: u,
                    samplerTextureMap: a
                }
            }
            const ft = {
                10241: 9728,
                10240: 9728,
                10242: 33071,
                10243: 33071
            };
            class ht {
                constructor(t, e = {}) {
                    this.gl = t, this.id = this.currentIndex = 0, this._swapTexture = null, this.targetTextureVarying = null, this.targetTextureType = null, this.samplerTextureMap = null, this.bindings = [], this.resources = {}, this._initialize(e), Object.seal(this)
                }
                updateModelProps(t = {}) {
                    const e = this._processVertexShader(t);
                    return Object.assign({}, t, e)
                }
                getDrawOptions(t = {}) {
                    const {
                        sourceBuffers: e,
                        sourceTextures: n,
                        framebuffer: r,
                        targetTexture: i
                    } = this.bindings[this.currentIndex], o = Object.assign({}, e, t.attributes), a = Object.assign({}, t.uniforms), s = Object.assign({}, t.parameters);
                    let u = t.discard;
                    if (this.hasSourceTextures || this.hasTargetTexture) {
                        o.transform_elementID = this.elementIDBuffer;
                        for (const e in this.samplerTextureMap) {
                            const t = this.samplerTextureMap[e];
                            a[e] = n[t]
                        }
                        this._setSourceTextureParameters();
                        const t = function({
                            sourceTextureMap: t,
                            targetTextureVarying: e,
                            targetTexture: n
                        }) {
                            const r = {};
                            let i, o;
                            e && (({
                                width: i,
                                height: o
                            } = n), r[`transform_uSize_${e}`] = [i, o]);
                            for (const a in t)({
                                width: i,
                                height: o
                            } = t[a]), r[`transform_uSize_${a}`] = [i, o];
                            return r
                        }({
                            sourceTextureMap: n,
                            targetTextureVarying: this.targetTextureVarying,
                            targetTexture: i
                        });
                        Object.assign(a, t)
                    }
                    return this.hasTargetTexture && (u = !1, s.viewport = [0, 0, r.width, r.height]), {
                        attributes: o,
                        framebuffer: r,
                        uniforms: a,
                        discard: u,
                        parameters: s
                    }
                }
                swap() {
                    return !!this._swapTexture && (this.currentIndex = this._getNextIndex(), !0)
                }
                update(t = {}) {
                    this._setupTextures(t)
                }
                getTargetTexture() {
                    const {
                        targetTexture: t
                    } = this.bindings[this.currentIndex];
                    return t
                }
                getData({
                    packed: t = !1
                } = {}) {
                    const {
                        framebuffer: e
                    } = this.bindings[this.currentIndex], n = (0, rt.z6)(e);
                    if (!t) return n;
                    const r = n.constructor,
                        i = function(t) {
                            switch (t) {
                                case "float":
                                    return 1;
                                case "vec2":
                                    return 2;
                                case "vec3":
                                    return 3;
                                case "vec4":
                                    return 4;
                                default:
                                    return (0, q.Z)(!1), null
                            }
                        }(this.targetTextureType),
                        o = new r(n.length * i / 4);
                    let a = 0;
                    for (let s = 0; s < n.length; s += 4)
                        for (let t = 0; t < i; t++) o[a++] = n[s + t];
                    return o
                }
                getFramebuffer() {
                    return this.bindings[this.currentIndex].framebuffer
                }
                delete() {
                    this.ownTexture && this.ownTexture.delete(), this.elementIDBuffer && this.elementIDBuffer.delete()
                }
                _initialize(t = {}) {
                    const {
                        _targetTextureVarying: e,
                        _swapTexture: n
                    } = t;
                    this._swapTexture = n, this.targetTextureVarying = e, this.hasTargetTexture = e, this._setupTextures(t)
                }
                _createTargetTexture(t) {
                    const {
                        sourceTextures: e,
                        textureOrReference: n
                    } = t;
                    if (n instanceof it.Z) return n;
                    const r = e[n];
                    return r ? (this._targetRefTexName = n, this._createNewTexture(r)) : null
                }
                _setupTextures(t = {}) {
                    const {
                        sourceBuffers: e,
                        _sourceTextures: n = {},
                        _targetTexture: r
                    } = t, i = this._createTargetTexture({
                        sourceTextures: n,
                        textureOrReference: r
                    });
                    this.hasSourceTextures = this.hasSourceTextures || n && Object.keys(n).length > 0, this._updateBindings({
                        sourceBuffers: e,
                        sourceTextures: n,
                        targetTexture: i
                    }), "elementCount" in t && this._updateElementIDBuffer(t.elementCount)
                }
                _updateElementIDBuffer(t) {
                    if ("number" !== typeof t || this.elementCount >= t) return;
                    const e = new Float32Array(t);
                    e.forEach(((t, e, n) => {
                        n[e] = e
                    })), this.elementIDBuffer ? this.elementIDBuffer.setData({
                        data: e
                    }) : this.elementIDBuffer = new a.Z(this.gl, {
                        data: e,
                        accessor: {
                            size: 1
                        }
                    }), this.elementCount = t
                }
                _updateBindings(t) {
                    if (this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], t), this._swapTexture) {
                        const {
                            sourceTextures: t,
                            targetTexture: e
                        } = this._swapTextures(this.bindings[this.currentIndex]), n = this._getNextIndex();
                        this.bindings[n] = this._updateBinding(this.bindings[n], {
                            sourceTextures: t,
                            targetTexture: e
                        })
                    }
                }
                _updateBinding(t, e) {
                    const {
                        sourceBuffers: n,
                        sourceTextures: r,
                        targetTexture: i
                    } = e;
                    if (t || (t = {
                            sourceBuffers: {},
                            sourceTextures: {},
                            targetTexture: null
                        }), Object.assign(t.sourceTextures, r), Object.assign(t.sourceBuffers, n), i) {
                        t.targetTexture = i;
                        const {
                            width: e,
                            height: n
                        } = i, {
                            framebuffer: r
                        } = t;
                        r ? (r.update({
                            attachments: {
                                36064: i
                            },
                            resizeAttachments: !1
                        }), r.resize({
                            width: e,
                            height: n
                        })) : t.framebuffer = new ot.Z(this.gl, {
                            id: "transform-framebuffer",
                            width: e,
                            height: n,
                            attachments: {
                                36064: i
                            }
                        })
                    }
                    return t
                }
                _setSourceTextureParameters() {
                    const t = this.currentIndex,
                        {
                            sourceTextures: e
                        } = this.bindings[t];
                    for (const n in e) e[n].setParameters(ft)
                }
                _swapTextures(t) {
                    if (!this._swapTexture) return null;
                    const e = Object.assign({}, t.sourceTextures);
                    e[this._swapTexture] = t.targetTexture;
                    return {
                        sourceTextures: e,
                        targetTexture: t.sourceTextures[this._swapTexture]
                    }
                }
                _createNewTexture(t) {
                    const e = (0, at.h)(t, {
                        parameters: {
                            10241: 9728,
                            10240: 9728,
                            10242: 33071,
                            10243: 33071
                        },
                        pixelStore: {
                            37440: !1
                        }
                    });
                    return this.ownTexture && this.ownTexture.delete(), this.ownTexture = e, e
                }
                _getNextIndex() {
                    return (this.currentIndex + 1) % 2
                }
                _processVertexShader(t = {}) {
                    const {
                        sourceTextures: e,
                        targetTexture: n
                    } = this.bindings[this.currentIndex], {
                        vs: r,
                        uniforms: i,
                        targetTextureType: o,
                        inject: a,
                        samplerTextureMap: s
                    } = lt({
                        vs: t.vs,
                        sourceTextureMap: e,
                        targetTextureVarying: this.targetTextureVarying,
                        targetTexture: n
                    }), u = (0, ut.Lm)([t.inject || {}, a]);
                    this.targetTextureType = o, this.samplerTextureMap = s;
                    return {
                        vs: r,
                        fs: t._fs || J({
                            version: st(r),
                            input: this.targetTextureVarying,
                            inputType: o,
                            output: "transform_output"
                        }),
                        modules: this.hasSourceTextures || this.targetTextureVarying ? [ct].concat(t.modules || []) : t.modules,
                        uniforms: i,
                        inject: u
                    }
                }
            }
            var dt = n(74538),
                pt = n(91375);
            class gt {
                static isSupported(t) {
                    return (0, Q.D0)(t)
                }
                constructor(t, e = {}) {
                    this.gl = t, this.model = null, this.elementCount = 0, this.bufferTransform = null, this.textureTransform = null, this.elementIDBuffer = null, this._initialize(e), Object.seal(this)
                }
                delete() {
                    const {
                        model: t,
                        bufferTransform: e,
                        textureTransform: n
                    } = this;
                    t && t.delete(), e && e.delete(), n && n.delete()
                }
                run(t = {}) {
                    const {
                        clearRenderTarget: e = !0
                    } = t, n = this._updateDrawOptions(t);
                    e && n.framebuffer && n.framebuffer.clear({
                        color: !0
                    }), this.model.transform(n)
                }
                swap() {
                    let t = !1;
                    const e = [this.bufferTransform, this.textureTransform].filter(Boolean);
                    for (const n of e) t = t || n.swap();
                    (0, et.h)(t, "Nothing to swap")
                }
                getBuffer(t = null) {
                    return this.bufferTransform && this.bufferTransform.getBuffer(t)
                }
                getData(t = {}) {
                    const e = [this.bufferTransform, this.textureTransform].filter(Boolean);
                    for (const n of e) {
                        const e = n.getData(t);
                        if (e) return e
                    }
                    return null
                }
                getFramebuffer() {
                    return this.textureTransform && this.textureTransform.getFramebuffer()
                }
                update(t = {}) {
                    "elementCount" in t && this.model.setVertexCount(t.elementCount);
                    const e = [this.bufferTransform, this.textureTransform].filter(Boolean);
                    for (const n of e) n.update(t)
                }
                _initialize(t = {}) {
                    const {
                        gl: e
                    } = this;
                    this._buildResourceTransforms(e, t), t = this._updateModelProps(t), this.model = new pt.Z(e, Object.assign({}, t, {
                        fs: t.fs || J({
                            version: st(t.vs)
                        }),
                        id: t.id || "transform-model",
                        drawMode: t.drawMode || 0,
                        vertexCount: t.elementCount
                    })), this.bufferTransform && this.bufferTransform.setupResources({
                        model: this.model
                    })
                }
                _updateModelProps(t) {
                    let e = Object.assign({}, t);
                    const n = [this.bufferTransform, this.textureTransform].filter(Boolean);
                    for (const r of n) e = r.updateModelProps(e);
                    return e
                }
                _buildResourceTransforms(t, e) {
                    (function(t) {
                        if (!(0, dt.nK)(t.feedbackBuffers) || !(0, dt.nK)(t.feedbackMap) || t.varyings && t.varyings.length > 0) return !0;
                        return !1
                    })(e) && (this.bufferTransform = new nt(t, e)),
                    function(t) {
                        if (!(0, dt.nK)(t._sourceTextures) || t._targetTexture || t._targetTextureVarying) return !0;
                        return !1
                    }(e) && (this.textureTransform = new ht(t, e)), (0, et.h)(this.bufferTransform || this.textureTransform, "must provide source/feedback buffers or source/target textures")
                }
                _updateDrawOptions(t) {
                    let e = Object.assign({}, t);
                    const n = [this.bufferTransform, this.textureTransform].filter(Boolean);
                    for (const r of n) e = Object.assign(e, r.getDrawOptions(e));
                    return e
                }
            }
            var yt = n(29420);

            function vt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function mt(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function bt(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        mt(t, e, n[e])
                    }))
                }
                return t
            }
            var wt = function() {
                    function t(e) {
                        var n = e.gl,
                            r = e.attribute,
                            i = e.timeline;
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this.gl = n, this.type = "interpolation", this.transition = new yt.Z(i), this.attribute = r, this.attributeInTransition = new W(n, r.settings), this.currentStartIndices = r.startIndices, this.currentLength = 0, this.transform = function(t, e) {
                            var n = I(e.size);
                            return new gt(t, {
                                vs: _t,
                                defines: {
                                    ATTRIBUTE_TYPE: n
                                },
                                varyings: ["vCurrent"]
                            })
                        }(n, r);
                        var o = {
                            byteLength: 0,
                            usage: 35050
                        };
                        this.buffers = [new a.Z(n, o), new a.Z(n, o)]
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "inProgress",
                        get: function() {
                            return this.transition.inProgress
                        }
                    }, {
                        key: "start",
                        value: function(t, e) {
                            if (t.duration <= 0) this.transition.cancel();
                            else {
                                var n = this,
                                    r = (n.gl, n.buffers),
                                    i = n.attribute;
                                j(r);
                                var o = {
                                        numInstances: e,
                                        attribute: i,
                                        fromLength: this.currentLength,
                                        fromStartIndices: this.currentStartIndices,
                                        getData: t.enter
                                    },
                                    a = !0,
                                    s = !1,
                                    u = void 0;
                                try {
                                    for (var c, l = r[Symbol.iterator](); !(a = (c = l.next()).done); a = !0) R(bt({
                                        buffer: c.value
                                    }, o))
                                } catch (f) {
                                    s = !0, u = f
                                } finally {
                                    try {
                                        a || null == l.return || l.return()
                                    } finally {
                                        if (s) throw u
                                    }
                                }
                                this.currentStartIndices = i.startIndices, this.currentLength = L(i, e), this.attributeInTransition.update({
                                    buffer: r[1],
                                    value: i.value
                                }), this.transition.start(t), this.transform.update({
                                    elementCount: Math.floor(this.currentLength / i.size),
                                    sourceBuffers: {
                                        aFrom: r[0],
                                        aTo: k(0, i)
                                    },
                                    feedbackBuffers: {
                                        vCurrent: r[1]
                                    }
                                })
                            }
                        }
                    }, {
                        key: "update",
                        value: function() {
                            var t = this.transition.update();
                            if (t) {
                                var e = this.transition,
                                    n = e.time,
                                    r = e.settings,
                                    i = r.duration,
                                    o = (0, r.easing)(n / i);
                                this.transform.run({
                                    uniforms: {
                                        time: o
                                    }
                                })
                            }
                            return t
                        }
                    }, {
                        key: "cancel",
                        value: function() {
                            for (this.transition.cancel(), this.transform.delete(); this.buffers.length;) this.buffers.pop().delete()
                        }
                    }]) && vt(e.prototype, n), r && vt(e, r), t
                }(),
                _t = "\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nattribute ATTRIBUTE_TYPE aFrom;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, time);\n  gl_Position = vec4(0.0);\n}\n";

            function Pt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function Et(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function xt(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        Et(t, e, n[e])
                    }))
                }
                return t
            }

            function St(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var Ot = {
                    interpolation: wt,
                    spring: function() {
                        function t(e) {
                            var n = e.gl,
                                r = e.attribute,
                                i = e.timeline;
                            ! function(t, e) {
                                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                            }(this, t), this.gl = n, this.type = "spring", this.transition = new yt.Z(i), this.attribute = r, this.attributeInTransition = new W(n, xt({}, r.settings, {
                                normalized: !1
                            })), this.currentStartIndices = r.startIndices, this.currentLength = 0, this.texture = function(t) {
                                return new it.Z(t, {
                                    data: new Uint8Array(4),
                                    format: 6408,
                                    type: 5121,
                                    border: 0,
                                    mipmaps: !1,
                                    dataFormat: 6408,
                                    width: 1,
                                    height: 1
                                })
                            }(n), this.framebuffer = function(t, e) {
                                return new ot.Z(t, {
                                    id: "spring-transition-is-transitioning-framebuffer",
                                    width: 1,
                                    height: 1,
                                    attachments: Et({}, 36064, e)
                                })
                            }(n, this.texture), this.transform = function(t, e, n) {
                                var r = I(e.size);
                                return new gt(t, {
                                    framebuffer: n,
                                    vs: "\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nuniform float stiffness;\nuniform float damping;\nattribute ATTRIBUTE_TYPE aPrev;\nattribute ATTRIBUTE_TYPE aCur;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vNext;\nvarying float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE spring = delta * stiffness;\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\n  return spring + damper + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",
                                    fs: "\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nvarying float vIsTransitioningFlag;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  gl_FragColor = vec4(1.0);\n}",
                                    defines: {
                                        ATTRIBUTE_TYPE: r
                                    },
                                    varyings: ["vNext"]
                                })
                            }(n, r, this.framebuffer);
                            var o = {
                                byteLength: 0,
                                usage: 35050
                            };
                            this.buffers = [new a.Z(n, o), new a.Z(n, o), new a.Z(n, o)]
                        }
                        var e, n, r;
                        return e = t, (n = [{
                            key: "inProgress",
                            get: function() {
                                return this.transition.inProgress
                            }
                        }, {
                            key: "start",
                            value: function(t, e) {
                                var n = this,
                                    r = (n.gl, n.buffers),
                                    i = n.attribute,
                                    o = {
                                        numInstances: e,
                                        attribute: i,
                                        fromLength: this.currentLength,
                                        fromStartIndices: this.currentStartIndices,
                                        getData: t.enter
                                    },
                                    a = !0,
                                    s = !1,
                                    u = void 0;
                                try {
                                    for (var c, l = r[Symbol.iterator](); !(a = (c = l.next()).done); a = !0) R(xt({
                                        buffer: c.value
                                    }, o))
                                } catch (f) {
                                    s = !0, u = f
                                } finally {
                                    try {
                                        a || null == l.return || l.return()
                                    } finally {
                                        if (s) throw u
                                    }
                                }
                                this.currentStartIndices = i.startIndices, this.currentLength = L(i, e), this.attributeInTransition.update({
                                    buffer: r[1],
                                    value: i.value
                                }), this.transition.start(t), this.transform.update({
                                    elementCount: Math.floor(this.currentLength / i.size),
                                    sourceBuffers: {
                                        aTo: k(0, i)
                                    }
                                })
                            }
                        }, {
                            key: "update",
                            value: function() {
                                var t = this,
                                    e = t.buffers,
                                    n = t.transform,
                                    r = t.framebuffer,
                                    i = t.transition;
                                return !!i.update() && (n.update({
                                    sourceBuffers: {
                                        aPrev: e[0],
                                        aCur: e[1]
                                    },
                                    feedbackBuffers: {
                                        vNext: e[2]
                                    }
                                }), n.run({
                                    framebuffer: r,
                                    discard: !1,
                                    clearRenderTarget: !0,
                                    uniforms: {
                                        stiffness: i.settings.stiffness,
                                        damping: i.settings.damping
                                    },
                                    parameters: {
                                        depthTest: !1,
                                        blend: !0,
                                        viewport: [0, 0, 1, 1],
                                        blendFunc: [1, 1],
                                        blendEquation: [32776, 32776]
                                    }
                                }), j(e), this.attributeInTransition.update({
                                    buffer: e[1],
                                    value: this.attribute.value
                                }), (0, rt.z6)(r)[0] > 0 || i.end(), !0)
                            }
                        }, {
                            key: "cancel",
                            value: function() {
                                for (this.transition.cancel(), this.transform.delete(); this.buffers.length;) this.buffers.pop().delete();
                                this.texture.delete(), this.texture = null, this.framebuffer.delete(), this.framebuffer = null
                            }
                        }]) && Pt(e.prototype, n), r && Pt(e, r), t
                    }()
                },
                Tt = function() {
                    function t(e, n) {
                        var r = n.id,
                            i = n.timeline;
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this.id = r, this.gl = e, this.timeline = i, this.transitions = {}, this.needsRedraw = !1, this.numInstances = 1, this.isSupported = gt.isSupported(e)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "finalize",
                        value: function() {
                            for (var t in this.transitions) this._removeTransition(t)
                        }
                    }, {
                        key: "update",
                        value: function(t) {
                            var e = t.attributes,
                                n = t.transitions,
                                r = t.numInstances;
                            for (var i in this.numInstances = r || 1, e) {
                                var o = e[i],
                                    a = o.getTransitionSetting(n);
                                a && this._updateAttribute(i, o, a)
                            }
                            for (var s in this.transitions) {
                                var u = e[s];
                                u && u.getTransitionSetting(n) || this._removeTransition(s)
                            }
                        }
                    }, {
                        key: "hasAttribute",
                        value: function(t) {
                            var e = this.transitions[t];
                            return e && e.inProgress
                        }
                    }, {
                        key: "getAttributes",
                        value: function() {
                            var t = {};
                            for (var e in this.transitions) {
                                var n = this.transitions[e];
                                n.inProgress && (t[e] = n.attributeInTransition)
                            }
                            return t
                        }
                    }, {
                        key: "run",
                        value: function() {
                            if (!this.isSupported || 0 === this.numInstances) return !1;
                            for (var t in this.transitions) this.transitions[t].update() && (this.needsRedraw = !0);
                            var e = this.needsRedraw;
                            return this.needsRedraw = !1, e
                        }
                    }, {
                        key: "_removeTransition",
                        value: function(t) {
                            this.transitions[t].cancel(), delete this.transitions[t]
                        }
                    }, {
                        key: "_updateAttribute",
                        value: function(t, e, n) {
                            var r = this.transitions[t],
                                i = !r || r.type !== n.type;
                            if (i) {
                                if (!this.isSupported) return void h.Z.warn("WebGL2 not supported by this browser. Transition for ".concat(t, " is disabled."))();
                                r && this._removeTransition(t);
                                var o = Ot[n.type];
                                o ? this.transitions[t] = new o({
                                    attribute: e,
                                    timeline: this.timeline,
                                    gl: this.gl
                                }) : (h.Z.error("unsupported transition type '".concat(n.type, "'"))(), i = !1)
                            }(i || e.needsRedraw()) && (this.needsRedraw = !0, this.transitions[t].start(n, this.numInstances))
                        }
                    }]) && St(e.prototype, n), r && St(e, r), t
                }();

            function Mt(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function Ct(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function At(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function kt(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        At(t, e, n[e])
                    }))
                }
                return t
            }
            var It = "attributeManager.invalidate",
                jt = "attributeManager.updateStart",
                Lt = "attributeManager.updateEnd",
                Rt = function() {
                    function t(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            r = n.id,
                            i = void 0 === r ? "attribute-manager" : r,
                            o = n.stats,
                            a = n.timeline;
                        Mt(this, t), this.id = i, this.gl = e, this.attributes = {}, this.updateTriggers = {}, this.accessors = {}, this.needsRedraw = !0, this.userData = {}, this.stats = o, this.attributeTransitionManager = new Tt(e, {
                            id: "".concat(i, "-transitions"),
                            timeline: a
                        }), Object.seal(this)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "finalize",
                        value: function() {
                            for (var t in this.attributes) this.attributes[t].delete();
                            this.attributeTransitionManager.finalize()
                        }
                    }, {
                        key: "getNeedsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                    clearRedrawFlags: !1
                                },
                                e = this.needsRedraw;
                            return this.needsRedraw = this.needsRedraw && !t.clearRedrawFlags, e && this.id
                        }
                    }, {
                        key: "setNeedsRedraw",
                        value: function() {
                            return this.needsRedraw = !0, this
                        }
                    }, {
                        key: "add",
                        value: function(t, e) {
                            this._add(t, e)
                        }
                    }, {
                        key: "addInstanced",
                        value: function(t, e) {
                            this._add(t, e, {
                                instanced: 1
                            })
                        }
                    }, {
                        key: "remove",
                        value: function(t) {
                            for (var e = 0; e < t.length; e++) {
                                var n = t[e];
                                void 0 !== this.attributes[n] && (this.attributes[n].delete(), delete this.attributes[n])
                            }
                        }
                    }, {
                        key: "invalidate",
                        value: function(t, e) {
                            var n = this._invalidateTrigger(t, e);
                            (0, Y.Z)(It, this, t, n)
                        }
                    }, {
                        key: "invalidateAll",
                        value: function(t) {
                            for (var e in this.attributes) this.attributes[e].setNeedsUpdate(e, t);
                            (0, Y.Z)(It, this, "all")
                        }
                    }, {
                        key: "update",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                e = t.data,
                                n = t.numInstances,
                                r = t.startIndices,
                                i = void 0 === r ? null : r,
                                o = t.transitions,
                                a = t.props,
                                s = void 0 === a ? {} : a,
                                u = t.buffers,
                                c = void 0 === u ? {} : u,
                                l = t.context,
                                f = void 0 === l ? {} : l,
                                d = !1;
                            for (var p in (0, Y.Z)(jt, this), this.stats && this.stats.get("Update Attributes").timeStart(), this.attributes) {
                                var g = this.attributes[p],
                                    y = g.settings.accessor;
                                g.startIndices = i, s[p] && h.Z.removed("props.".concat(p), "data.attributes.".concat(p))(), g.setExternalBuffer(c[p]) || g.setBinaryValue(c[y], e.startIndices) || !c[y] && g.setConstantValue(s[y]) || g.needsUpdate() && (d = !0, this._updateAttribute({
                                    attribute: g,
                                    numInstances: n,
                                    data: e,
                                    props: s,
                                    context: f
                                })), this.needsRedraw |= g.needsRedraw()
                            }
                            d && (0, Y.Z)(Lt, this, n), this.stats && this.stats.get("Update Attributes").timeEnd(), this.attributeTransitionManager.update({
                                attributes: this.attributes,
                                numInstances: n,
                                transitions: o
                            })
                        }
                    }, {
                        key: "updateTransition",
                        value: function() {
                            var t = this.attributeTransitionManager.run();
                            return this.needsRedraw = this.needsRedraw || t, t
                        }
                    }, {
                        key: "getAttributes",
                        value: function() {
                            return this.attributes
                        }
                    }, {
                        key: "getChangedAttributes",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                    clearChangedFlags: !1
                                },
                                e = this,
                                n = e.attributes,
                                r = e.attributeTransitionManager,
                                i = kt({}, r.getAttributes());
                            for (var o in n) {
                                var a = n[o];
                                a.needsRedraw(t) && !r.hasAttribute(o) && (i[o] = a)
                            }
                            return i
                        }
                    }, {
                        key: "getShaderAttributes",
                        value: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            t || (t = this.getAttributes());
                            var n = {};
                            for (var r in t) e[r] || Object.assign(n, t[r].getShaderAttributes());
                            return n
                        }
                    }, {
                        key: "getAccessors",
                        value: function() {
                            return this.updateTriggers
                        }
                    }, {
                        key: "_add",
                        value: function(t, e) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                            for (var r in e && h.Z.warn("AttributeManager.add({updaters}) - updater map no longer supported")(), t) {
                                var i = t[r];
                                this.attributes[r] = this._createAttribute(r, i, n)
                            }
                            this._mapUpdateTriggersToAttributes()
                        }
                    }, {
                        key: "_createAttribute",
                        value: function(t, e, n) {
                            var r = kt({}, e, {
                                id: t,
                                isIndexed: e.isIndexed || e.elements || !1,
                                constant: e.constant || !1,
                                size: (e.elements ? 1 : e.size) || 1,
                                value: e.value || null,
                                divisor: e.instanced || n.instanced ? 1 : e.divisor || 0
                            });
                            return new W(this.gl, r)
                        }
                    }, {
                        key: "_mapUpdateTriggersToAttributes",
                        value: function() {
                            var t = this,
                                e = function(e) {
                                    t.attributes[e].getUpdateTriggers().forEach((function(t) {
                                        n[t] || (n[t] = []), n[t].push(e)
                                    }))
                                },
                                n = {};
                            for (var r in this.attributes) e(r);
                            this.updateTriggers = n
                        }
                    }, {
                        key: "_invalidateTrigger",
                        value: function(t, e) {
                            var n = this.attributes,
                                r = this.updateTriggers[t];
                            return r && r.forEach((function(t) {
                                var r = n[t];
                                r && r.setNeedsUpdate(r.id, e)
                            })), r
                        }
                    }, {
                        key: "_updateAttribute",
                        value: function(t) {
                            var e = t.attribute,
                                n = t.numInstances;
                            (0, Y.Z)("attribute.updateStart", e), e.constant ? e.setConstantValue(e.value) : (e.allocate(n) && (0, Y.Z)("attribute.allocate", e, n), e.updateBuffer(t) && (this.needsRedraw = !0, (0, Y.Z)("attribute.updateEnd", e, n)))
                        }
                    }]) && Ct(e.prototype, n), r && Ct(e, r), t
                }(),
                Dt = n(14034);

            function Ft(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function Nt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function zt(t) {
                return (zt = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function Bt(t, e) {
                return !e || "object" !== Gt(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function Ut(t, e) {
                return (Ut = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var Gt = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function Zt(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = zt(t);
                    if (e) {
                        var i = zt(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return Bt(this, n)
                }
            }
            var Vt = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && Ut(t, e)
                }(o, t);
                var e, n, r, i = Zt(o);

                function o() {
                    return Ft(this, o), i.apply(this, arguments)
                }
                return e = o, (n = [{
                    key: "value",
                    get: function() {
                        return this._value
                    }
                }, {
                    key: "_onUpdate",
                    value: function() {
                        var t = this.time,
                            e = this.settings,
                            n = e.fromValue,
                            r = e.toValue,
                            i = e.duration,
                            o = (0, e.easing)(t / i);
                        this._value = (0, Dt.t7)(n, r, o)
                    }
                }]) && Nt(e.prototype, n), r && Nt(e, r), o
            }(yt.Z);

            function Ht(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function Wt(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function Yt(t) {
                return (Yt = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function qt(t, e) {
                return !e || "object" !== Xt(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function $t(t, e) {
                return ($t = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var Xt = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function Kt(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = Yt(t);
                    if (e) {
                        var i = Yt(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return qt(this, n)
                }
            }
            var Jt = 1e-5;

            function Qt(t, e, n, r, i) {
                var o = e - t;
                return (n - e) * i + -o * r + o + e
            }

            function te(t, e) {
                if (Array.isArray(t)) {
                    for (var n = 0, r = 0; r < t.length; r++) {
                        var i = t[r] - e[r];
                        n += i * i
                    }
                    return Math.sqrt(n)
                }
                return Math.abs(t - e)
            }

            function ee(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function ne(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function re(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function ie(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return ee(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ee(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var oe = {
                    interpolation: Vt,
                    spring: function(t) {
                        ! function(t, e) {
                            if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                            t.prototype = Object.create(e && e.prototype, {
                                constructor: {
                                    value: t,
                                    writable: !0,
                                    configurable: !0
                                }
                            }), e && $t(t, e)
                        }(o, t);
                        var e, n, r, i = Kt(o);

                        function o() {
                            return Ht(this, o), i.apply(this, arguments)
                        }
                        return e = o, (n = [{
                            key: "value",
                            get: function() {
                                return this._currValue
                            }
                        }, {
                            key: "_onUpdate",
                            value: function() {
                                var t = this.settings,
                                    e = t.fromValue,
                                    n = t.toValue,
                                    r = t.damping,
                                    i = t.stiffness,
                                    o = this._prevValue,
                                    a = void 0 === o ? e : o,
                                    s = this._currValue,
                                    u = void 0 === s ? e : s,
                                    c = function(t, e, n, r, i) {
                                        if (Array.isArray(n)) {
                                            for (var o = [], a = 0; a < n.length; a++) o[a] = Qt(t[a], e[a], n[a], r, i);
                                            return o
                                        }
                                        return Qt(t, e, n, r, i)
                                    }(a, u, n, r, i),
                                    l = te(c, n),
                                    f = te(c, u);
                                l < Jt && f < Jt && (c = n, this.end()), this._prevValue = u, this._currValue = c
                            }
                        }]) && Wt(e.prototype, n), r && Wt(e, r), o
                    }(yt.Z)
                },
                ae = function() {
                    function t(e) {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this.transitions = new Map, this.timeline = e
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "active",
                        get: function() {
                            return this.transitions.size > 0
                        }
                    }, {
                        key: "add",
                        value: function(t, e, n, r) {
                            var i = this.transitions;
                            if (i.has(t)) {
                                var o = i.get(t),
                                    a = o.value;
                                e = void 0 === a ? o.settings.fromValue : a, this.remove(t)
                            }
                            if (r = A(r)) {
                                var s = oe[r.type];
                                if (s) {
                                    var u = new s(this.timeline);
                                    u.start(function(t) {
                                        for (var e = 1; e < arguments.length; e++) {
                                            var n = null != arguments[e] ? arguments[e] : {},
                                                r = Object.keys(n);
                                            "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                                return Object.getOwnPropertyDescriptor(n, t).enumerable
                                            })))), r.forEach((function(e) {
                                                re(t, e, n[e])
                                            }))
                                        }
                                        return t
                                    }({}, r, {
                                        fromValue: e,
                                        toValue: n
                                    })), i.set(t, u)
                                } else h.Z.error("unsupported transition type '".concat(r.type, "'"))()
                            }
                        }
                    }, {
                        key: "remove",
                        value: function(t) {
                            var e = this.transitions;
                            e.has(t) && (e.get(t).cancel(), e.delete(t))
                        }
                    }, {
                        key: "update",
                        value: function() {
                            var t = {},
                                e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = this.transitions[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) {
                                    var a = ie(i.value, 2),
                                        s = a[0],
                                        u = a[1];
                                    u.update(), t[s] = u.value, u.inProgress || this.remove(s)
                                }
                            } catch (c) {
                                n = !0, r = c
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                            return t
                        }
                    }, {
                        key: "clear",
                        value: function() {
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = this.transitions.keys()[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) {
                                    var o = r.value;
                                    this.remove(o)
                                }
                            } catch (a) {
                                e = !0, n = a
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                        }
                    }]) && ne(e.prototype, n), r && ne(e, r), t
                }(),
                se = n(3472),
                ue = se.A.COMPONENT;

            function ce(t, e) {
                var n = fe({
                        newProps: t,
                        oldProps: e,
                        propTypes: ge(t),
                        ignoreProps: {
                            data: null,
                            updateTriggers: null,
                            extensions: null,
                            transitions: null
                        }
                    }),
                    r = function(t, e) {
                        if (null === e) return "oldProps is null, initial diff";
                        var n = null,
                            r = t.dataComparator,
                            i = t._dataDiff;
                        r ? r(t.data, e.data) || (n = "Data comparator detected a change") : t.data !== e.data && (n = "A new data container was supplied");
                        n && i && (n = i(t.data, e.data) || n);
                        return n
                    }(t, e),
                    i = !1;
                return r || (i = function(t, e) {
                    if (null === e) return "oldProps is null, initial diff";
                    if ("all" in t.updateTriggers) {
                        if (pe(t, e, "all")) return {
                            all: !0
                        }
                    }
                    var n = {},
                        r = !1;
                    for (var i in t.updateTriggers) {
                        if ("all" !== i) pe(t, e, i) && (n[i] = !0, r = n)
                    }
                    return r
                }(t, e)), {
                    dataChanged: r,
                    propsChanged: n,
                    updateTriggersChanged: i,
                    extensionsChanged: de(t, e),
                    transitionsChanged: le(t, e)
                }
            }

            function le(t, e) {
                if (!t.transitions) return null;
                var n = {},
                    r = ge(t);
                for (var i in t.transitions) {
                    var o = r[i],
                        a = o && o.type;
                    ("number" === a || "color" === a || "array" === a) && he(t[i], e[i], o) && (n[i] = !0)
                }
                return n
            }

            function fe() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = t.newProps,
                    n = t.oldProps,
                    r = t.ignoreProps,
                    i = void 0 === r ? {} : r,
                    o = t.propTypes,
                    a = void 0 === o ? {} : o,
                    s = t.triggerName,
                    u = void 0 === s ? "props" : s;
                if (n === e) return null;
                if ("object" !== typeof e || null === e) return "".concat(u, " changed shallowly");
                if ("object" !== typeof n || null === n) return "".concat(u, " changed shallowly");
                var c = !0,
                    l = !1,
                    f = void 0;
                try {
                    for (var h, d = Object.keys(e)[Symbol.iterator](); !(c = (h = d.next()).done); c = !0) {
                        var p = h.value;
                        if (!(p in i)) {
                            if (!(p in n)) return "".concat(u, ".").concat(p, " added");
                            var g = he(e[p], n[p], a[p]);
                            if (g) return "".concat(u, ".").concat(p, " ").concat(g)
                        }
                    }
                } catch (E) {
                    l = !0, f = E
                } finally {
                    try {
                        c || null == d.return || d.return()
                    } finally {
                        if (l) throw f
                    }
                }
                var y = !0,
                    v = !1,
                    m = void 0;
                try {
                    for (var b, w = Object.keys(n)[Symbol.iterator](); !(y = (b = w.next()).done); y = !0) {
                        var _ = b.value;
                        if (!(_ in i)) {
                            if (!(_ in e)) return "".concat(u, ".").concat(_, " dropped");
                            if (!Object.hasOwnProperty.call(e, _)) {
                                var P = he(e[_], n[_], a[_]);
                                if (P) return "".concat(u, ".").concat(_, " ").concat(P)
                            }
                        }
                    }
                } catch (E) {
                    v = !0, m = E
                } finally {
                    try {
                        y || null == w.return || w.return()
                    } finally {
                        if (v) throw m
                    }
                }
                return null
            }

            function he(t, e, n) {
                var r = n && n.equal;
                return r && !r(t, e, n) ? "changed deeply" : r || !(r = t && e && t.equals) || r.call(t, e) ? r || e === t ? null : "changed shallowly" : "changed deeply"
            }

            function de(t, e) {
                if (null === e) return "oldProps is null, initial diff";
                var n = e.extensions,
                    r = t.extensions;
                if (r === n) return !1;
                if (r.length !== n.length) return !0;
                for (var i = 0; i < r.length; i++)
                    if (!r[i].equals(n[i])) return !0;
                return !1
            }

            function pe(t, e, n) {
                var r = t.updateTriggers[n];
                r = void 0 === r || null === r ? {} : r;
                var i = e.updateTriggers[n];
                return fe({
                    oldProps: i = void 0 === i || null === i ? {} : i,
                    newProps: r,
                    triggerName: n
                })
            }

            function ge(t) {
                var e = t[ue],
                    n = e && e.constructor;
                return n ? n._propTypes : {}
            }

            function ye(t) {
                if (null === (e = t) || "object" !== typeof e) throw new Error("count(): argument not an object");
                var e;
                if ("function" === typeof t.count) return t.count();
                if (Number.isFinite(t.size)) return t.size;
                if (Number.isFinite(t.length)) return t.length;
                if (function(t) {
                        return null !== t && "object" === typeof t && t.constructor === Object
                    }(t)) return Object.keys(t).length;
                throw new Error("count(): argument not a container")
            }
            var ve = n(328);

            function me(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function be(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        me(t, e, n[e])
                    }))
                }
                return t
            }

            function we(t, e) {
                if (!e) return t;
                var n = be({}, t, e);
                if ("defines" in e && (n.defines = be({}, t.defines, e.defines)), "modules" in e && (n.modules = (t.modules || []).concat(e.modules), e.modules.some((function(t) {
                        return "project64" === t.name
                    })))) {
                    var r = n.modules.findIndex((function(t) {
                        return "project32" === t.name
                    }));
                    r >= 0 && n.modules.splice(r, 1)
                }
                if ("inject" in e)
                    if (t.inject) {
                        var i = be({}, t.inject);
                        for (var o in e.inject) i[o] = (i[o] || "") + e.inject[o];
                        n.inject = i
                    } else n.inject = e.inject;
                return n
            }
            var _e = n(98337),
                Pe = n(11605),
                Ee = n(10616),
                xe = n(54479);
            var Se, Oe = function(t, e, n) {
                    return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t
                },
                Te = (function() {
                    var t = function() {
                        var t = new xe.WT(3);
                        return xe.WT != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0), t
                    }()
                }(), n(78866));

            function Me(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function Ce(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Ae(t, e) {
                return null != e && "undefined" !== typeof Symbol && e[Symbol.hasInstance] ? e[Symbol.hasInstance](t) : t instanceof e
            }

            function ke(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return Me(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Me(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function Ie(t, e) {
                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    r = e.projectPosition(t);
                if (n && Ae(e, Pe.Z)) {
                    var i = ke(t, 3),
                        o = i[0],
                        a = i[1],
                        s = i[2],
                        u = void 0 === s ? 0 : s,
                        c = e.getDistanceScales([o, a]);
                    r[2] = u * c.unitsPerMeter[2]
                }
                return r
            }

            function je(t) {
                var e = function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {},
                                r = Object.keys(n);
                            "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                return Object.getOwnPropertyDescriptor(n, t).enumerable
                            })))), r.forEach((function(e) {
                                Ce(t, e, n[e])
                            }))
                        }
                        return t
                    }({}, t),
                    n = t.coordinateSystem,
                    i = t.viewport,
                    o = t.coordinateOrigin,
                    a = t.fromCoordinateSystem,
                    s = t.fromCoordinateOrigin;
                return n === r.Df.DEFAULT && (n = i.isGeospatial ? r.Df.LNGLAT : r.Df.CARTESIAN), void 0 === a && (e.fromCoordinateSystem = n), void 0 === s && (e.fromCoordinateOrigin = o), e.coordinateSystem = n, e
            }

            function Le(t, e) {
                var n, i = e.viewport,
                    o = e.modelMatrix,
                    a = e.coordinateSystem,
                    s = e.coordinateOrigin,
                    u = e.offsetMode,
                    c = ke(t, 3),
                    l = c[0],
                    f = c[1],
                    h = c[2],
                    d = void 0 === h ? 0 : h;
                o && (l = (n = ke(Ee.fF([], [l, f, d, 1], o), 3))[0], f = n[1], d = n[2]);
                switch (a) {
                    case r.Df.LNGLAT:
                        return Ie([l, f, d], i, u);
                    case r.Df.LNGLAT_OFFSETS:
                        return Ie([l + s[0], f + s[1], d + (s[2] || 0)], i, u);
                    case r.Df.METER_OFFSETS:
                        return Ie((0, Te.eG)(s, [l, f, d]), i, u);
                    case r.Df.CARTESIAN:
                    default:
                        return i.isGeospatial ? [l + s[0], f + s[1], d + s[2]] : i.projectPosition([l, f, d])
                }
            }

            function Re(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function De(t, e) {
                return null != e && "undefined" !== typeof Symbol && e[Symbol.hasInstance] ? e[Symbol.hasInstance](t) : t instanceof e
            }

            function Fe(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        Re(t, e, n[e])
                    }))
                }
                return t
            }
            var Ne = (Re(Se = {}, 10241, 9987), Re(Se, 10240, 9729), Re(Se, 10242, 33071), Re(Se, 10243, 33071), Se),
                ze = {};

            function Be(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function Ue(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Ge(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        Ue(t, e, n[e])
                    }))
                }
                return t
            }

            function Ze(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return Be(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Be(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var Ve = {
                boolean: {
                    validate: function(t, e) {
                        return !0
                    },
                    equal: function(t, e, n) {
                        return Boolean(t) === Boolean(e)
                    }
                },
                number: {
                    validate: function(t, e) {
                        return Number.isFinite(t) && (!("max" in e) || t <= e.max) && (!("min" in e) || t >= e.min)
                    }
                },
                color: {
                    validate: function(t, e) {
                        return e.optional && !t || qe(t) && (3 === t.length || 4 === t.length)
                    },
                    equal: function(t, e, n) {
                        return He(t, e)
                    }
                },
                accessor: {
                    validate: function(t, e) {
                        var n = $e(t);
                        return "function" === n || n === $e(e.value)
                    },
                    equal: function(t, e, n) {
                        return "function" === typeof e || He(t, e)
                    }
                },
                array: {
                    validate: function(t, e) {
                        return e.optional && !t || qe(t)
                    },
                    equal: function(t, e, n) {
                        return n.compare ? He(t, e) : t === e
                    }
                },
                function: {
                    validate: function(t, e) {
                        return e.optional && !t || "function" === typeof t
                    },
                    equal: function(t, e, n) {
                        return !n.compare || t === e
                    }
                },
                data: {
                    transform: function(t, e, n) {
                        var r = (n ? n.props : {}).dataTransform;
                        return r && t ? r(t) : t
                    }
                },
                image: {
                    transform: function(t, e, n) {
                        return function(t, e) {
                            var n = t.context && t.context.gl;
                            if (!n || !e) return null;
                            if (De(e, it.Z)) return e;
                            e.constructor && "Object" !== e.constructor.name && (e = {
                                data: e
                            });
                            var r = null;
                            e.compressed && (r = Re({}, 10241, e.data.length > 1 ? 9985 : 9729));
                            var i = new it.Z(n, Fe({}, e, {
                                parameters: Fe({}, Ne, r, t.props.textureParameters)
                            }));
                            return ze[i.id] = !0, i
                        }(n, t)
                    },
                    release: function(t) {
                        var e;
                        (e = t) && De(e, it.Z) && ze[e.id] && (e.delete(), delete ze[e.id])
                    }
                }
            };

            function He(t, e) {
                if (t === e) return !0;
                if (!qe(t) || !qe(e)) return !1;
                var n = t.length;
                if (n !== e.length) return !1;
                for (var r = 0; r < n; r++)
                    if (t[r] !== e[r]) return !1;
                return !0
            }

            function We(t, e) {
                switch ($e(e)) {
                    case "object":
                        return Ye(t, e);
                    case "array":
                        return Ye(t, {
                            type: "array",
                            value: e,
                            compare: !1
                        });
                    case "boolean":
                        return Ye(t, {
                            type: "boolean",
                            value: e
                        });
                    case "number":
                        return Ye(t, {
                            type: "number",
                            value: e
                        });
                    case "function":
                        return Ye(t, {
                            type: "function",
                            value: e,
                            compare: !0
                        });
                    default:
                        return {
                            name: t,
                            type: "unknown",
                            value: e
                        }
                }
            }

            function Ye(t, e) {
                return "type" in e ? Ge({
                    name: t
                }, Ve[e.type], e) : "value" in e ? Ge({
                    name: t,
                    type: $e(e.value)
                }, e) : {
                    name: t,
                    type: "object",
                    value: e
                }
            }

            function qe(t) {
                return Array.isArray(t) || ArrayBuffer.isView(t)
            }

            function $e(t) {
                return qe(t) ? "array" : null === t ? "null" : "undefined" === typeof t ? "undefined" : (e = t) && "undefined" !== typeof Symbol && e.constructor === Symbol ? "symbol" : typeof e;
                var e
            }

            function Xe(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function Ke(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        Xe(t, e, n[e])
                    }))
                }
                return t
            }
            var Je = se.A.COMPONENT,
                Qe = se.A.ASYNC_ORIGINAL,
                tn = se.A.ASYNC_RESOLVED,
                en = se.A.ASYNC_DEFAULTS;

            function nn() {
                var t = this,
                    e = rn(t.constructor),
                    n = Object.create(e);
                n[Je] = t, n[Qe] = {}, n[tn] = {};
                for (var r = 0; r < arguments.length; ++r) {
                    var i = arguments[r];
                    for (var o in i) n[o] = i[o]
                }
                return Object.freeze(n), n
            }

            function rn(t) {
                var e = sn(t, "_mergedDefaultProps");
                return e || (function(t) {
                    if (!t.prototype) return;
                    var e = Object.getPrototypeOf(t),
                        n = rn(e),
                        r = function(t) {
                            var e = {},
                                n = {},
                                r = {},
                                i = !0,
                                o = !1,
                                a = void 0;
                            try {
                                for (var s, u = Object.entries(t)[Symbol.iterator](); !(i = (s = u.next()).done); i = !0) {
                                    var c = Ze(s.value, 2),
                                        l = c[0],
                                        f = c[1];
                                    if (f && f.deprecatedFor) r[l] = Array.isArray(f.deprecatedFor) ? f.deprecatedFor : [f.deprecatedFor];
                                    else {
                                        var h = We(l, f);
                                        e[l] = h, n[l] = h.value
                                    }
                                }
                            } catch (d) {
                                o = !0, a = d
                            } finally {
                                try {
                                    i || null == u.return || u.return()
                                } finally {
                                    if (o) throw a
                                }
                            }
                            return {
                                propTypes: e,
                                defaultProps: n,
                                deprecatedProps: r
                            }
                        }(sn(t, "defaultProps") || {}),
                        i = function(t, e, n) {
                            var r = Object.create(null);
                            Object.assign(r, e, t);
                            var i = function(t) {
                                var e = sn(t, "layerName") || sn(t, "componentName");
                                e || h.Z.once(0, "".concat(t.name, ".componentName not specified"))();
                                return e || t.name
                            }(n);
                            return delete t.id, Object.defineProperties(r, {
                                id: {
                                    writable: !0,
                                    value: i
                                }
                            }), r
                        }(r.defaultProps, n, t),
                        o = Ke({}, e._propTypes, r.propTypes);
                    ! function(t, e) {
                        var n = {},
                            r = {};
                        for (var i in e) {
                            var o = e[i],
                                a = o.name,
                                s = o.value;
                            o.async && (n[a] = s, r[a] = on(a))
                        }
                        t[en] = n, t[Qe] = {}, Object.defineProperties(t, r)
                    }(i, o);
                    var a = Ke({}, e._deprecatedProps, r.deprecatedProps);
                    (function(t, e) {
                        var n = function(n) {
                            Object.defineProperty(t, n, {
                                enumerable: !1,
                                set: function(t) {
                                    var r = "".concat(this.id, ": ").concat(n),
                                        i = !0,
                                        o = !1,
                                        a = void 0;
                                    try {
                                        for (var s, u = e[n][Symbol.iterator](); !(i = (s = u.next()).done); i = !0) {
                                            var c = s.value;
                                            an(this, c) || (this[c] = t)
                                        }
                                    } catch (l) {
                                        o = !0, a = l
                                    } finally {
                                        try {
                                            i || null == u.return || u.return()
                                        } finally {
                                            if (o) throw a
                                        }
                                    }
                                    h.Z.deprecated(r, e[n].join("/"))()
                                }
                            })
                        };
                        for (var r in e) n(r)
                    })(i, a), t._mergedDefaultProps = i, t._propTypes = o, t._deprecatedProps = a
                }(t), t._mergedDefaultProps)
            }

            function on(t) {
                return {
                    enumerable: !0,
                    set: function(e) {
                        var n, r;
                        "string" === typeof e || (n = e, null != (r = Promise) && "undefined" !== typeof Symbol && r[Symbol.hasInstance] ? r[Symbol.hasInstance](n) : n instanceof r) || (0, _.D0)(e) ? this[Qe][t] = e : this[tn][t] = e
                    },
                    get: function() {
                        if (this[tn]) {
                            if (t in this[tn]) return this[tn][t] || this[en][t];
                            if (t in this[Qe]) {
                                var e = this[Je] && this[Je].internalState;
                                if (e && e.hasAsyncProp(t)) return e.getAsyncProp(t) || this[en][t]
                            }
                        }
                        return this[en][t]
                    }
                }
            }

            function an(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }

            function sn(t, e) {
                return an(t, e) && t[e]
            }
            var un = n(34051),
                cn = n.n(un);

            function ln(t) {
                var e;
                if ("function" === typeof Symbol) {
                    if (Symbol.asyncIterator && null != (e = t[Symbol.asyncIterator])) return e.call(t);
                    if (Symbol.iterator && null != (e = t[Symbol.iterator])) return e.call(t)
                }
                throw new TypeError("Object is not async iterable")
            }

            function fn(t, e, n, r, i, o, a) {
                try {
                    var s = t[o](a),
                        u = s.value
                } catch (c) {
                    return void n(c)
                }
                s.done ? e(u) : Promise.resolve(u).then(r, i)
            }

            function hn(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function dn(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var pn = se.A.ASYNC_ORIGINAL,
                gn = se.A.ASYNC_RESOLVED,
                yn = se.A.ASYNC_DEFAULTS,
                vn = Object.freeze({}),
                mn = function() {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        hn(this, t), this.component = e, this.asyncProps = {}, this.onAsyncPropUpdated = function() {}, this.oldProps = vn, this.oldAsyncProps = null
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "finalize",
                        value: function() {
                            for (var t in this.asyncProps) {
                                var e = this.asyncProps[t];
                                e.type && e.type.release && e.type.release(e.resolvedValue, e.type, this.component)
                            }
                        }
                    }, {
                        key: "getOldProps",
                        value: function() {
                            return this.oldAsyncProps || this.oldProps
                        }
                    }, {
                        key: "resetOldProps",
                        value: function() {
                            this.oldAsyncProps = null, this.oldProps = this.component.props
                        }
                    }, {
                        key: "freezeAsyncOldProps",
                        value: function() {
                            if (!this.oldAsyncProps)
                                for (var t in this.oldProps = this.oldProps || this.component.props, this.oldAsyncProps = Object.create(this.oldProps), this.asyncProps) Object.defineProperty(this.oldAsyncProps, t, {
                                    enumerable: !0,
                                    value: this.oldProps[t]
                                })
                        }
                    }, {
                        key: "hasAsyncProp",
                        value: function(t) {
                            return t in this.asyncProps
                        }
                    }, {
                        key: "getAsyncProp",
                        value: function(t) {
                            var e = this.asyncProps[t];
                            return e && e.resolvedValue
                        }
                    }, {
                        key: "isAsyncPropLoading",
                        value: function(t) {
                            if (t) {
                                var e = this.asyncProps[t];
                                return Boolean(e && e.pendingLoadCount > 0 && e.pendingLoadCount !== e.resolvedLoadCount)
                            }
                            for (var n in this.asyncProps)
                                if (this.isAsyncPropLoading(n)) return !0;
                            return !1
                        }
                    }, {
                        key: "reloadAsyncProp",
                        value: function(t, e) {
                            this._watchPromise(t, Promise.resolve(e))
                        }
                    }, {
                        key: "setAsyncProps",
                        value: function(t) {
                            var e = t[gn] || {},
                                n = t[pn] || t,
                                r = t[yn] || {};
                            for (var i in e) {
                                var o = e[i];
                                this._createAsyncPropData(i, r[i]), this._updateAsyncProp(i, o), e[i] = this.getAsyncProp(i)
                            }
                            for (var a in n) {
                                var s = n[a];
                                this._createAsyncPropData(a, r[a]), this._updateAsyncProp(a, s)
                            }
                        }
                    }, {
                        key: "_updateAsyncProp",
                        value: function(t, e) {
                            if (this._didAsyncInputValueChange(t, e)) {
                                if ("string" === typeof e) {
                                    var n, r = null === (n = this.layer) || void 0 === n ? void 0 : n.props.fetch;
                                    r && (e = r(e, {
                                        propName: t,
                                        layer: this.layer
                                    }))
                                }
                                var i, o;
                                i = e, (null != (o = Promise) && "undefined" !== typeof Symbol && o[Symbol.hasInstance] ? o[Symbol.hasInstance](i) : i instanceof o) ? this._watchPromise(t, e) : (0, _.D0)(e) ? this._resolveAsyncIterable(t, e) : this._setPropValue(t, e)
                            }
                        }
                    }, {
                        key: "_didAsyncInputValueChange",
                        value: function(t, e) {
                            var n = this.asyncProps[t];
                            return e !== n.resolvedValue && e !== n.lastValue && (n.lastValue = e, !0)
                        }
                    }, {
                        key: "_setPropValue",
                        value: function(t, e) {
                            this.freezeAsyncOldProps();
                            var n = this.asyncProps[t];
                            e = this._postProcessValue(n, e), n.resolvedValue = e, n.pendingLoadCount++, n.resolvedLoadCount = n.pendingLoadCount
                        }
                    }, {
                        key: "_setAsyncPropValue",
                        value: function(t, e, n) {
                            var r = this.asyncProps[t];
                            r && n >= r.resolvedLoadCount && void 0 !== e && (this.freezeAsyncOldProps(), r.resolvedValue = e, r.resolvedLoadCount = n, this.onAsyncPropUpdated(t, e))
                        }
                    }, {
                        key: "_watchPromise",
                        value: function(t, e) {
                            var n = this,
                                r = this.asyncProps[t];
                            r.pendingLoadCount++;
                            var i = r.pendingLoadCount;
                            e.then((function(e) {
                                var o;
                                e = n._postProcessValue(r, e), n._setAsyncPropValue(t, e, i);
                                var a = null === (o = n.layer) || void 0 === o ? void 0 : o.props.onDataLoad;
                                "data" === t && a && a(e, {
                                    propName: t,
                                    layer: n.layer
                                })
                            })).catch((function(e) {
                                var r;
                                null === (r = n.layer) || void 0 === r || r.raiseError(e, "loading ".concat(t, " of ").concat(n.layer))
                            }))
                        }
                    }, {
                        key: "_resolveAsyncIterable",
                        value: function(t, e) {
                            var n, r = this;
                            return (n = cn().mark((function n() {
                                var i, o, a, s, u, c, l, f, h, d, p, g, y, v;
                                return cn().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            "data" !== t && r._setPropValue(t, e), (o = r.asyncProps[t]).pendingLoadCount++, a = o.pendingLoadCount, s = [], u = 0, c = !1, l = !1, n.prev = 8, h = ln(e);
                                        case 10:
                                            return n.next = 12, h.next();
                                        case 12:
                                            if (!(c = !(d = n.sent).done)) {
                                                n.next = 17;
                                                break
                                            }
                                            p = d.value, g = p, y = (r.component ? r.component.props : {}).dataTransform, s = y ? y(g, s) : s.concat(g), Object.defineProperty(s, "__diff", {
                                                enumerable: !1,
                                                value: [{
                                                    startRow: u,
                                                    endRow: s.length
                                                }]
                                            }), u = s.length, r._setAsyncPropValue(t, s, a);
                                        case 14:
                                            c = !1, n.next = 10;
                                            break;
                                        case 17:
                                            n.next = 23;
                                            break;
                                        case 19:
                                            n.prev = 19, n.t0 = n.catch(8), l = !0, f = n.t0;
                                        case 23:
                                            if (n.prev = 23, n.prev = 24, !c || null == h.return) {
                                                n.next = 28;
                                                break
                                            }
                                            return n.next = 28, f.return();
                                        case 28:
                                            if (n.prev = 28, !l) {
                                                n.next = 31;
                                                break
                                            }
                                            throw f;
                                        case 31:
                                            return n.finish(28);
                                        case 32:
                                            return n.finish(23);
                                        case 33:
                                            (v = null === (i = r.layer) || void 0 === i ? void 0 : i.props.onDataLoad) && v(s, {
                                                propName: t,
                                                layer: r.layer
                                            });
                                        case 35:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, null, [
                                    [8, 19, 23, 33],
                                    [24, , 28, 32]
                                ])
                            })), function() {
                                var t = this,
                                    e = arguments;
                                return new Promise((function(r, i) {
                                    var o = n.apply(t, e);

                                    function a(t) {
                                        fn(o, r, i, a, s, "next", t)
                                    }

                                    function s(t) {
                                        fn(o, r, i, a, s, "throw", t)
                                    }
                                    a(void 0)
                                }))
                            })()
                        }
                    }, {
                        key: "_postProcessValue",
                        value: function(t, e) {
                            var n = t.type;
                            return n && (n.release && n.release(t.resolvedValue, n, this.component), n.transform) ? n.transform(e, n, this.component) : e
                        }
                    }, {
                        key: "_createAsyncPropData",
                        value: function(t, e) {
                            if (!this.asyncProps[t]) {
                                var n = this.component && this.component.constructor._propTypes;
                                this.asyncProps[t] = {
                                    type: n && n[t],
                                    lastValue: null,
                                    resolvedValue: e,
                                    pendingLoadCount: 0,
                                    resolvedLoadCount: 0
                                }
                            }
                        }
                    }]) && dn(e.prototype, n), r && dn(e, r), t
                }();

            function bn(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function wn(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function _n(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var Pn = se.A.ASYNC_ORIGINAL,
                En = se.A.ASYNC_RESOLVED,
                xn = se.A.ASYNC_DEFAULTS,
                Sn = 0,
                On = function() {
                    function t() {
                        bn(this, t), this.props = nn.apply(this, arguments), this.id = this.props.id, this.count = Sn++, this.lifecycle = se.d.NO_STATE, this.parent = null, this.context = null, this.state = null, this.internalState = null, Object.seal(this)
                    }
                    var e, n, r;
                    return e = t, (n = [{
                        key: "root",
                        get: function() {
                            for (var t = this; t.parent;) t = t.parent;
                            return t
                        }
                    }, {
                        key: "clone",
                        value: function(t) {
                            var e = this.props,
                                n = {};
                            for (var r in e[xn]) r in e[En] ? n[r] = e[En][r] : r in e[Pn] && (n[r] = e[Pn][r]);
                            return new this.constructor(function(t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var n = null != arguments[e] ? arguments[e] : {},
                                        r = Object.keys(n);
                                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                                    })))), r.forEach((function(e) {
                                        _n(t, e, n[e])
                                    }))
                                }
                                return t
                            }({}, e, n, t))
                        }
                    }, {
                        key: "stats",
                        get: function() {
                            return this.internalState.stats
                        }
                    }, {
                        key: "_initState",
                        value: function() {
                            this.internalState = new mn({})
                        }
                    }]) && wn(e.prototype, n), r && wn(e, r), t
                }();

            function Tn(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function Mn(t) {
                return (Mn = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function Cn(t, e) {
                return !e || "object" !== kn(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function An(t, e) {
                return (An = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            On.componentName = "Component", On.defaultProps = {};
            var kn = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function In(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = Mn(t);
                    if (e) {
                        var i = Mn(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return Cn(this, n)
                }
            }
            var jn = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && An(t, e)
                    }(o, t);
                    var e, n, r, i = In(o);

                    function o(t) {
                        var e, n = t.attributeManager,
                            r = t.layer;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, o), (e = i.call(this, r)).attributeManager = n, e.model = null, e.needsRedraw = !0, e.subLayers = null, e.usesPickingColorCache = !1, e
                    }
                    return e = o, (n = [{
                        key: "layer",
                        get: function() {
                            return this.component
                        },
                        set: function(t) {
                            this.component = t
                        }
                    }]) && Tn(e.prototype, n), r && Tn(e, r), o
                }(mn),
                Ln = n(49300);

            function Rn(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function Dn(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function Fn(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function Nn(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function zn(t) {
                return (zn = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function Bn(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        Nn(t, e, n[e])
                    }))
                }
                return t
            }

            function Un(t, e) {
                return !e || "object" !== Vn(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function Gn(t, e) {
                return (Gn = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function Zn(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return Rn(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Rn(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var Vn = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function Hn(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = zn(t);
                    if (e) {
                        var i = zn(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return Un(this, n)
                }
            }
            var Wn = Math.pow(2, 24) - 1,
                Yn = Object.freeze([]),
                qn = (0, ve.Z)((function(t) {
                    var e = t.oldViewport,
                        n = t.viewport;
                    return e.equals(n)
                })),
                $n = new Uint8ClampedArray(0),
                Xn = {
                    data: {
                        type: "data",
                        value: Yn,
                        async: !0
                    },
                    dataComparator: null,
                    _dataDiff: {
                        type: "function",
                        value: function(t) {
                            return t && t.__diff
                        },
                        compare: !1,
                        optional: !0
                    },
                    dataTransform: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    onDataLoad: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    onError: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    fetch: {
                        type: "function",
                        value: function(t, e) {
                            var n, r = e.propName,
                                i = e.layer,
                                o = e.loaders,
                                a = e.loadOptions,
                                s = e.signal,
                                u = i.context.resourceManager;
                            (a = a || i.getLoadOptions(), o = o || i.props.loaders, s) && (a = Bn({}, a, {
                                fetch: Bn({}, null === (n = a) || void 0 === n ? void 0 : n.fetch, {
                                    signal: s
                                })
                            }));
                            var c = u.contains(t);
                            return c || a || (u.add({
                                resourceId: t,
                                data: (0, Ln.z)(t, o),
                                persistent: !1
                            }), c = !0), c ? u.subscribe({
                                resourceId: t,
                                onChange: function(t) {
                                    return i.internalState.reloadAsyncProp(r, t)
                                },
                                consumerId: i.id,
                                requestId: r
                            }) : (0, Ln.z)(t, o, a)
                        },
                        compare: !1
                    },
                    updateTriggers: {},
                    visible: !0,
                    pickable: !1,
                    opacity: {
                        type: "number",
                        min: 0,
                        max: 1,
                        value: 1
                    },
                    onHover: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    onClick: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    onDragStart: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    onDrag: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    onDragEnd: {
                        type: "function",
                        value: null,
                        compare: !1,
                        optional: !0
                    },
                    coordinateSystem: r.Df.DEFAULT,
                    coordinateOrigin: {
                        type: "array",
                        value: [0, 0, 0],
                        compare: !0
                    },
                    modelMatrix: {
                        type: "array",
                        value: null,
                        compare: !0,
                        optional: !0
                    },
                    wrapLongitude: !1,
                    positionFormat: "XYZ",
                    colorFormat: "RGBA",
                    parameters: {},
                    transitions: null,
                    extensions: [],
                    loaders: {
                        type: "array",
                        value: [],
                        optional: !0,
                        compare: !0
                    },
                    getPolygonOffset: {
                        type: "function",
                        value: function(t) {
                            return [0, 100 * -t.layerIndex]
                        },
                        compare: !1
                    },
                    highlightedObjectIndex: -1,
                    autoHighlight: !1,
                    highlightColor: {
                        type: "accessor",
                        value: [0, 0, 128, 128]
                    }
                },
                Kn = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && Gn(t, e)
                    }(a, t);
                    var e, n, i, o = Hn(a);

                    function a() {
                        return Dn(this, a), o.apply(this, arguments)
                    }
                    return e = a, (n = [{
                        key: "toString",
                        value: function() {
                            var t = this.constructor.layerName || this.constructor.name;
                            return "".concat(t, "({id: '").concat(this.props.id, "'})")
                        }
                    }, {
                        key: "raiseError",
                        value: function(t, e) {
                            var n, r, i, o;
                            e && (t.message = "".concat(e, ": ").concat(t.message)), (null === (n = (r = this.props).onError) || void 0 === n ? void 0 : n.call(r, t)) || null === (i = this.context) || void 0 === i || null === (o = i.onError) || void 0 === o || o.call(i, t, this)
                        }
                    }, {
                        key: "setState",
                        value: function(t) {
                            this.setChangeFlags({
                                stateChanged: !0
                            }), Object.assign(this.state, t), this.setNeedsRedraw()
                        }
                    }, {
                        key: "setNeedsRedraw",
                        value: function() {
                            var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                            this.internalState && (this.internalState.needsRedraw = t)
                        }
                    }, {
                        key: "setNeedsUpdate",
                        value: function() {
                            this.context.layerManager.setNeedsUpdate(String(this)), this.internalState.needsUpdate = !0
                        }
                    }, {
                        key: "getNeedsRedraw",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                clearRedrawFlags: !1
                            };
                            return this._getNeedsRedraw(t)
                        }
                    }, {
                        key: "needsUpdate",
                        value: function() {
                            return this.internalState.needsUpdate || this.hasUniformTransition() || this.shouldUpdateState(this._getUpdateParams())
                        }
                    }, {
                        key: "hasUniformTransition",
                        value: function() {
                            return this.internalState.uniformTransitions.active
                        }
                    }, {
                        key: "isLoaded",
                        get: function() {
                            return this.internalState && !this.internalState.isAsyncPropLoading()
                        }
                    }, {
                        key: "wrapLongitude",
                        get: function() {
                            return this.props.wrapLongitude
                        }
                    }, {
                        key: "isPickable",
                        value: function() {
                            return this.props.pickable && this.props.visible
                        }
                    }, {
                        key: "getModels",
                        value: function() {
                            return this.state && (this.state.models || (this.state.model ? [this.state.model] : []))
                        }
                    }, {
                        key: "getAttributeManager",
                        value: function() {
                            return this.internalState && this.internalState.attributeManager
                        }
                    }, {
                        key: "getCurrentLayer",
                        value: function() {
                            return this.internalState && this.internalState.layer
                        }
                    }, {
                        key: "getLoadOptions",
                        value: function() {
                            return this.props.loadOptions
                        }
                    }, {
                        key: "project",
                        value: function(t) {
                            var e = this.context.viewport,
                                n = Le(t, {
                                    viewport: e,
                                    modelMatrix: this.props.modelMatrix,
                                    coordinateOrigin: this.props.coordinateOrigin,
                                    coordinateSystem: this.props.coordinateSystem
                                }),
                                r = Zn((0, Te.aW)(n, e.pixelProjectionMatrix), 3),
                                i = r[0],
                                o = r[1],
                                a = r[2];
                            return 2 === t.length ? [i, o] : [i, o, a]
                        }
                    }, {
                        key: "unproject",
                        value: function(t) {
                            return this.context.viewport.unproject(t)
                        }
                    }, {
                        key: "projectPosition",
                        value: function(t) {
                            return function(t, e) {
                                var n = je(e),
                                    r = n.viewport,
                                    i = n.coordinateSystem,
                                    o = n.coordinateOrigin,
                                    a = n.modelMatrix,
                                    s = n.fromCoordinateSystem,
                                    u = n.fromCoordinateOrigin,
                                    c = (0, _e.v)(r, i, o),
                                    l = c.geospatialOrigin,
                                    f = c.shaderCoordinateOrigin,
                                    h = c.offsetMode,
                                    d = Le(t, {
                                        viewport: r,
                                        modelMatrix: a,
                                        coordinateSystem: s,
                                        coordinateOrigin: u,
                                        offsetMode: h
                                    });
                                if (h) {
                                    var p = r.projectPosition(l || f);
                                    Oe(d, d, p)
                                }
                                return d
                            }(t, {
                                viewport: this.context.viewport,
                                modelMatrix: this.props.modelMatrix,
                                coordinateOrigin: this.props.coordinateOrigin,
                                coordinateSystem: this.props.coordinateSystem
                            })
                        }
                    }, {
                        key: "use64bitPositions",
                        value: function() {
                            var t = this.props.coordinateSystem;
                            return t === r.Df.DEFAULT || t === r.Df.LNGLAT || t === r.Df.CARTESIAN
                        }
                    }, {
                        key: "onHover",
                        value: function(t, e) {
                            return !!this.props.onHover && this.props.onHover(t, e)
                        }
                    }, {
                        key: "onClick",
                        value: function(t, e) {
                            return !!this.props.onClick && this.props.onClick(t, e)
                        }
                    }, {
                        key: "nullPickingColor",
                        value: function() {
                            return [0, 0, 0]
                        }
                    }, {
                        key: "encodePickingColor",
                        value: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                            return e[0] = t + 1 & 255, e[1] = t + 1 >> 8 & 255, e[2] = t + 1 >> 8 >> 8 & 255, e
                        }
                    }, {
                        key: "decodePickingColor",
                        value: function(t) {
                            var e, n;
                            (0, w.Z)((e = t, null != (n = Uint8Array) && "undefined" !== typeof Symbol && n[Symbol.hasInstance] ? n[Symbol.hasInstance](e) : e instanceof n));
                            var r = Zn(t, 3);
                            return r[0] + 256 * r[1] + 65536 * r[2] - 1
                        }
                    }, {
                        key: "initializeState",
                        value: function() {
                            throw new Error("Layer ".concat(this, " has not defined initializeState"))
                        }
                    }, {
                        key: "getShaders",
                        value: function(t) {
                            var e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = this.props.extensions[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) {
                                    var a = i.value;
                                    t = we(t, a.getShaders.call(this, a))
                                }
                            } catch (s) {
                                n = !0, r = s
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                            return t
                        }
                    }, {
                        key: "shouldUpdateState",
                        value: function(t) {
                            return t.oldProps, t.props, t.context, t.changeFlags.propsOrDataChanged
                        }
                    }, {
                        key: "updateState",
                        value: function(t) {
                            var e = t.oldProps,
                                n = t.props,
                                r = (t.context, t.changeFlags),
                                i = this.getAttributeManager();
                            if (r.dataChanged && i) {
                                var o = r.dataChanged;
                                if (Array.isArray(o)) {
                                    var a = !0,
                                        s = !1,
                                        u = void 0;
                                    try {
                                        for (var c, l = o[Symbol.iterator](); !(a = (c = l.next()).done); a = !0) {
                                            var f = c.value;
                                            i.invalidateAll(f)
                                        }
                                    } catch (m) {
                                        s = !0, u = m
                                    } finally {
                                        try {
                                            a || null == l.return || l.return()
                                        } finally {
                                            if (s) throw u
                                        }
                                    }
                                } else i.invalidateAll()
                            }
                            var h = e.highlightedObjectIndex >= 0 || e.pickable,
                                d = n.highlightedObjectIndex >= 0 || n.pickable;
                            if (h !== d && i) {
                                var p = i.attributes,
                                    g = p.pickingColors,
                                    y = p.instancePickingColors,
                                    v = g || y;
                                v && (d && v.constant && (v.constant = !1, i.invalidate(v.id)), v.value || d || (v.constant = !0, v.value = [0, 0, 0]))
                            }
                        }
                    }, {
                        key: "finalizeState",
                        value: function() {
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = this.getModels()[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) r.value.delete()
                            } catch (a) {
                                e = !0, n = a
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                            var o = this.getAttributeManager();
                            o && o.finalize(), this.context.resourceManager.unsubscribe({
                                consumerId: this.id
                            }), this.internalState.uniformTransitions.clear(), this.internalState.finalize()
                        }
                    }, {
                        key: "draw",
                        value: function(t) {
                            var e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = this.getModels()[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) i.value.draw(t)
                            } catch (a) {
                                n = !0, r = a
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                        }
                    }, {
                        key: "getPickingInfo",
                        value: function(t) {
                            var e = t.info,
                                n = (t.mode, e.index);
                            return n >= 0 && Array.isArray(this.props.data) && (e.object = this.props.data[n]), e
                        }
                    }, {
                        key: "activateViewport",
                        value: function(t) {
                            var e = this.internalState.viewport;
                            this.internalState.viewport = t, e && qn({
                                oldViewport: e,
                                viewport: t
                            }) || (this.setChangeFlags({
                                viewportChanged: !0
                            }), this.isComposite ? this.needsUpdate() && this.setNeedsUpdate() : this._update())
                        }
                    }, {
                        key: "invalidateAttribute",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "all",
                                e = this.getAttributeManager();
                            e && ("all" === t ? e.invalidateAll() : e.invalidate(t))
                        }
                    }, {
                        key: "updateAttributes",
                        value: function(t) {
                            var e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = this.getModels()[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) {
                                    var a = i.value;
                                    this._setModelAttributes(a, t)
                                }
                            } catch (s) {
                                n = !0, r = s
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                        }
                    }, {
                        key: "_updateAttributes",
                        value: function(t) {
                            var e = this.getAttributeManager();
                            if (e) {
                                var n = this.getNumInstances(t),
                                    r = this.getStartIndices(t);
                                e.update({
                                    data: t.data,
                                    numInstances: n,
                                    startIndices: r,
                                    props: t,
                                    transitions: t.transitions,
                                    buffers: t.data.attributes,
                                    context: this,
                                    ignoreUnknownAttributes: !0
                                });
                                var i = e.getChangedAttributes({
                                    clearChangedFlags: !0
                                });
                                this.updateAttributes(i)
                            }
                        }
                    }, {
                        key: "_updateAttributeTransition",
                        value: function() {
                            var t = this.getAttributeManager();
                            t && t.updateTransition()
                        }
                    }, {
                        key: "_updateUniformTransition",
                        value: function() {
                            var t = this.internalState.uniformTransitions;
                            if (t.active) {
                                var e = t.update(),
                                    n = Object.create(this.props);
                                for (var r in e) Object.defineProperty(n, r, {
                                    value: e[r]
                                });
                                return n
                            }
                            return this.props
                        }
                    }, {
                        key: "calculateInstancePickingColors",
                        value: function(t, e) {
                            var n = e.numInstances;
                            if (!t.constant) {
                                var r = Math.floor($n.length / 3);
                                if (this.internalState.usesPickingColorCache = !0, r < n) {
                                    n > Wn && h.Z.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(), $n = l.Z.allocate($n, n, {
                                        size: 3,
                                        copy: !0,
                                        maxCount: Math.max(n, Wn)
                                    });
                                    for (var i = Math.floor($n.length / 3), o = [], a = r; a < i; a++) this.encodePickingColor(a, o), $n[3 * a + 0] = o[0], $n[3 * a + 1] = o[1], $n[3 * a + 2] = o[2]
                                }
                                t.value = $n.subarray(0, 3 * n)
                            }
                        }
                    }, {
                        key: "_setModelAttributes",
                        value: function(t, e) {
                            var n = this.getAttributeManager(),
                                r = t.userData.excludeAttributes || {},
                                i = n.getShaderAttributes(e, r);
                            t.setAttributes(i)
                        }
                    }, {
                        key: "disablePickingIndex",
                        value: function(t) {
                            this._disablePickingIndex(t)
                        }
                    }, {
                        key: "_disablePickingIndex",
                        value: function(t) {
                            var e = this.getAttributeManager().attributes,
                                n = e.pickingColors,
                                r = e.instancePickingColors,
                                i = n || r,
                                o = i.getVertexOffset(t),
                                a = i.getVertexOffset(t + 1);
                            i.buffer.subData({
                                data: new Uint8Array(a - o),
                                offset: o
                            })
                        }
                    }, {
                        key: "restorePickingColors",
                        value: function() {
                            var t = this.getAttributeManager().attributes,
                                e = t.pickingColors,
                                n = t.instancePickingColors,
                                r = e || n;
                            this.internalState.usesPickingColorCache && r.value.buffer !== $n.buffer && (r.value = $n.subarray(0, r.value.length)), r.updateSubBuffer({
                                startOffset: 0
                            })
                        }
                    }, {
                        key: "getNumInstances",
                        value: function(t) {
                            return void 0 !== (t = t || this.props).numInstances ? t.numInstances : this.state && void 0 !== this.state.numInstances ? this.state.numInstances : ye(t.data)
                        }
                    }, {
                        key: "getStartIndices",
                        value: function(t) {
                            return void 0 !== (t = t || this.props).startIndices ? t.startIndices : this.state && this.state.startIndices ? this.state.startIndices : null
                        }
                    }, {
                        key: "_initialize",
                        value: function() {
                            (0, Y.Z)("layer.initialize", this), this._initState(), this.initializeState(this.context);
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = this.props.extensions[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) {
                                    var o = r.value;
                                    o.initializeState.call(this, this.context, o)
                                }
                            } catch (a) {
                                e = !0, n = a
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                            this.setChangeFlags({
                                dataChanged: !0,
                                propsChanged: !0,
                                viewportChanged: !0,
                                extensionsChanged: !0
                            }), this._updateState()
                        }
                    }, {
                        key: "_update",
                        value: function() {
                            var t = this.needsUpdate();
                            (0, Y.Z)("layer.update", this, t), t && this._updateState()
                        }
                    }, {
                        key: "_updateState",
                        value: function() {
                            var t = this.props,
                                e = this.context.viewport,
                                n = this._updateUniformTransition();
                            this.internalState.propsInTransition = n, this.context.viewport = this.internalState.viewport || e, this.props = n;
                            try {
                                var r = this._getUpdateParams(),
                                    i = this.getModels();
                                if (this.context.gl) this.updateState(r);
                                else try {
                                    this.updateState(r)
                                } catch (h) {}
                                var o = !0,
                                    a = !1,
                                    s = void 0;
                                try {
                                    for (var u, c = this.props.extensions[Symbol.iterator](); !(o = (u = c.next()).done); o = !0) {
                                        var l = u.value;
                                        l.updateState.call(this, r, l)
                                    }
                                } catch (d) {
                                    a = !0, s = d
                                } finally {
                                    try {
                                        o || null == c.return || c.return()
                                    } finally {
                                        if (a) throw s
                                    }
                                }
                                var f = this.getModels()[0] !== i[0];
                                this._updateModules(r, f), this.isComposite ? this._renderLayers(r) : (this.setNeedsRedraw(), this._updateAttributes(this.props), this.state.model && this.state.model.setInstanceCount(this.getNumInstances()))
                            } finally {
                                this.context.viewport = e, this.props = t, this.clearChangeFlags(), this.internalState.needsUpdate = !1, this.internalState.resetOldProps()
                            }
                        }
                    }, {
                        key: "_finalize",
                        value: function() {
                            (0, Y.Z)("layer.finalize", this), this.finalizeState(this.context);
                            var t = !0,
                                e = !1,
                                n = void 0;
                            try {
                                for (var r, i = this.props.extensions[Symbol.iterator](); !(t = (r = i.next()).done); t = !0) {
                                    var o = r.value;
                                    o.finalizeState.call(this, o)
                                }
                            } catch (a) {
                                e = !0, n = a
                            } finally {
                                try {
                                    t || null == i.return || i.return()
                                } finally {
                                    if (e) throw n
                                }
                            }
                        }
                    }, {
                        key: "drawLayer",
                        value: function(t) {
                            var e = t.moduleParameters,
                                n = void 0 === e ? null : e,
                                r = t.uniforms,
                                i = void 0 === r ? {} : r,
                                o = t.parameters,
                                a = void 0 === o ? {} : o;
                            this._updateAttributeTransition();
                            var s = this.props;
                            this.props = this.internalState.propsInTransition || s;
                            var u = this.props.opacity;
                            i.opacity = Math.pow(u, 1 / 2.2);
                            try {
                                var c = this;
                                n && this.setModuleParameters(n);
                                var l = this.props.getPolygonOffset,
                                    f = l && l(i) || [0, 0];
                                (0, Q.dR)(this.context.gl, {
                                    polygonOffset: f
                                }), (0, Q.s8)(this.context.gl, a, (function() {
                                    var t = {
                                            moduleParameters: n,
                                            uniforms: i,
                                            parameters: a,
                                            context: c.context
                                        },
                                        e = !0,
                                        r = !1,
                                        o = void 0;
                                    try {
                                        for (var s, u = c.props.extensions[Symbol.iterator](); !(e = (s = u.next()).done); e = !0) {
                                            var l = s.value;
                                            l.draw.call(c, t, l)
                                        }
                                    } catch (f) {
                                        r = !0, o = f
                                    } finally {
                                        try {
                                            e || null == u.return || u.return()
                                        } finally {
                                            if (r) throw o
                                        }
                                    }
                                    c.draw(t)
                                }))
                            } finally {
                                this.props = s
                            }
                        }
                    }, {
                        key: "getChangeFlags",
                        value: function() {
                            return this.internalState.changeFlags
                        }
                    }, {
                        key: "setChangeFlags",
                        value: function(t) {
                            var e = this.internalState.changeFlags;
                            for (var n in t)
                                if (t[n]) {
                                    var r = !1;
                                    switch (n) {
                                        case "dataChanged":
                                            Array.isArray(e[n]) && (e[n] = Array.isArray(t[n]) ? e[n].concat(t[n]) : t[n], r = !0);
                                        default:
                                            e[n] || (e[n] = t[n], r = !0)
                                    }
                                    r && (0, Y.Z)("layer.changeFlag", this, n, t)
                                }
                            var i = e.dataChanged || e.updateTriggersChanged || e.propsChanged || e.extensionsChanged;
                            e.propsOrDataChanged = i, e.somethingChanged = i || t.viewportChanged || t.stateChanged
                        }
                    }, {
                        key: "clearChangeFlags",
                        value: function() {
                            this.internalState.changeFlags = {
                                dataChanged: !1,
                                propsChanged: !1,
                                updateTriggersChanged: !1,
                                viewportChanged: !1,
                                stateChanged: !1,
                                extensionsChanged: !1,
                                propsOrDataChanged: !1,
                                somethingChanged: !1
                            }
                        }
                    }, {
                        key: "diffProps",
                        value: function(t, e) {
                            var n = ce(t, e);
                            if (n.updateTriggersChanged)
                                for (var r in n.updateTriggersChanged) n.updateTriggersChanged[r] && this.invalidateAttribute(r);
                            if (n.transitionsChanged)
                                for (var i in n.transitionsChanged) this.internalState.uniformTransitions.add(i, e[i], t[i], t.transitions[i]);
                            return this.setChangeFlags(n)
                        }
                    }, {
                        key: "validateProps",
                        value: function() {
                            ! function(t) {
                                var e = ge(t);
                                for (var n in e) {
                                    var r = e[n],
                                        i = r.validate;
                                    if (i && !i(t[n], r)) throw new Error("Invalid prop ".concat(n, ": ").concat(t[n]))
                                }
                            }(this.props)
                        }
                    }, {
                        key: "setModuleParameters",
                        value: function(t) {
                            var e = !0,
                                n = !1,
                                r = void 0;
                            try {
                                for (var i, o = this.getModels()[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) i.value.updateModuleSettings(t)
                            } catch (a) {
                                n = !0, r = a
                            } finally {
                                try {
                                    e || null == o.return || o.return()
                                } finally {
                                    if (n) throw r
                                }
                            }
                        }
                    }, {
                        key: "updateAutoHighlight",
                        value: function(t) {
                            this.props.autoHighlight && this._updateAutoHighlight(t)
                        }
                    }, {
                        key: "_updateAutoHighlight",
                        value: function(t) {
                            var e = {
                                    pickingSelectedColor: t.picked ? t.color : null
                                },
                                n = this.props.highlightColor;
                            t.picked && "function" === typeof n && (e.pickingHighlightColor = n(t)), this.setModuleParameters(e), this.setNeedsRedraw()
                        }
                    }, {
                        key: "_updateModules",
                        value: function(t, e) {
                            var n = t.props,
                                r = t.oldProps,
                                i = n.autoHighlight,
                                o = n.highlightedObjectIndex,
                                a = n.highlightColor;
                            if (e || r.autoHighlight !== i || r.highlightedObjectIndex !== o || r.highlightColor !== a) {
                                var s = {};
                                i || (s.pickingSelectedColor = null), Array.isArray(a) && (s.pickingHighlightColor = a), Number.isInteger(o) && (s.pickingSelectedColor = o >= 0 ? this.encodePickingColor(o) : null), this.setModuleParameters(s)
                            }
                        }
                    }, {
                        key: "_getUpdateParams",
                        value: function() {
                            return {
                                props: this.props,
                                oldProps: this.internalState.getOldProps(),
                                context: this.context,
                                changeFlags: this.internalState.changeFlags
                            }
                        }
                    }, {
                        key: "_getNeedsRedraw",
                        value: function(t) {
                            if (!this.internalState) return !1;
                            var e = !1;
                            e = e || this.internalState.needsRedraw && this.id, this.internalState.needsRedraw = this.internalState.needsRedraw && !t.clearRedrawFlags;
                            var n = this.getAttributeManager(),
                                r = n && n.getNeedsRedraw(t);
                            return e = e || r
                        }
                    }, {
                        key: "_getAttributeManager",
                        value: function() {
                            return new Rt(this.context.gl, {
                                id: this.props.id,
                                stats: this.context.stats,
                                timeline: this.context.timeline
                            })
                        }
                    }, {
                        key: "_initState",
                        value: function() {
                            (0, w.Z)(!this.internalState && !this.state), (0, w.Z)(isFinite(this.props.coordinateSystem));
                            var t = this._getAttributeManager();
                            t && t.addInstanced({
                                instancePickingColors: {
                                    type: 5121,
                                    size: 3,
                                    noAlloc: !0,
                                    update: this.calculateInstancePickingColors
                                }
                            }), this.internalState = new jn({
                                attributeManager: t,
                                layer: this
                            }), this.clearChangeFlags(), this.state = {}, Object.defineProperty(this.state, "attributeManager", {
                                get: function() {
                                    return h.Z.deprecated("layer.state.attributeManager", "layer.getAttributeManager()"), t
                                }
                            }), this.internalState.layer = this, this.internalState.uniformTransitions = new ae(this.context.timeline), this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this), this.internalState.setAsyncProps(this.props)
                        }
                    }, {
                        key: "_transferState",
                        value: function(t) {
                            (0, Y.Z)("layer.matched", this, this === t);
                            var e = t.state,
                                n = t.internalState;
                            this !== t && (this.internalState = n, this.internalState.layer = this, this.state = e, this.internalState.setAsyncProps(this.props), this.diffProps(this.props, this.internalState.getOldProps()))
                        }
                    }, {
                        key: "_onAsyncPropUpdated",
                        value: function() {
                            this.diffProps(this.props, this.internalState.getOldProps()), this.setNeedsUpdate()
                        }
                    }]) && Fn(e.prototype, n), i && Fn(e, i), a
                }(On);
            Kn.layerName = "Layer", Kn.defaultProps = Xn
        },
        3472: function(t, e, n) {
            "use strict";
            n.d(e, {
                d: function() {
                    return r
                },
                A: function() {
                    return i
                }
            });
            var r = {
                    NO_STATE: "Awaiting state",
                    MATCHED: "Matched. State transferred from previous layer",
                    INITIALIZED: "Initialized",
                    AWAITING_GC: "Discarded. Awaiting garbage collection",
                    AWAITING_FINALIZATION: "No longer matched. Awaiting garbage collection",
                    FINALIZED: "Finalized! Awaiting garbage collection"
                },
                i = {
                    COMPONENT: Symbol.for("component"),
                    ASYNC_DEFAULTS: Symbol.for("asyncPropDefaults"),
                    ASYNC_ORIGINAL: Symbol.for("asyncPropOriginal"),
                    ASYNC_RESOLVED: Symbol.for("asyncPropResolved")
                }
        },
        14917: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return h
                }
            });
            const r = {
                name: "fp32",
                vs: "#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\nconst float TWO_PI = 6.2831854820251465;\nconst float PI_2 = 1.5707963705062866;\nconst float PI_16 = 0.1963495463132858;\n\nconst float SIN_TABLE_0 = 0.19509032368659973;\nconst float SIN_TABLE_1 = 0.3826834261417389;\nconst float SIN_TABLE_2 = 0.5555702447891235;\nconst float SIN_TABLE_3 = 0.7071067690849304;\n\nconst float COS_TABLE_0 = 0.9807852506637573;\nconst float COS_TABLE_1 = 0.9238795042037964;\nconst float COS_TABLE_2 = 0.8314695954322815;\nconst float COS_TABLE_3 = 0.7071067690849304;\n\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01;\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03;\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04;\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06;\n\nfloat sin_taylor_fp32(float a) {\n  float r, s, t, x;\n\n  if (a == 0.0) {\n    return 0.0;\n  }\n\n  x = -a * a;\n  s = a;\n  r = a;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_3;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_5;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_7;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_9;\n  s = s + t;\n\n  return s;\n}\n\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\n  if (a == 0.0) {\n    sin_t = 0.0;\n    cos_t = 1.0;\n  }\n  sin_t = sin_taylor_fp32(a);\n  cos_t = sqrt(1.0 - sin_t * sin_t);\n}\n\nfloat tan_taylor_fp32(float a) {\n    float sin_a;\n    float cos_a;\n\n    if (a == 0.0) {\n        return 0.0;\n    }\n    float z = floor(a / TWO_PI);\n    float r = a - TWO_PI * z;\n\n    float t;\n    float q = floor(r / PI_2 + 0.5);\n    int j = int(q);\n\n    if (j < -2 || j > 2) {\n        return 1.0 / 0.0;\n    }\n\n    t = r - PI_2 * q;\n\n    q = floor(t / PI_16 + 0.5);\n    int k = int(q);\n    int abs_k = int(abs(float(k)));\n\n    if (abs_k > 4) {\n        return 1.0 / 0.0;\n    } else {\n        t = t - PI_16 * q;\n    }\n\n    float u = 0.0;\n    float v = 0.0;\n\n    float sin_t, cos_t;\n    float s, c;\n    sincos_taylor_fp32(t, sin_t, cos_t);\n\n    if (k == 0) {\n        s = sin_t;\n        c = cos_t;\n    } else {\n        if (abs(float(abs_k) - 1.0) < 0.5) {\n            u = COS_TABLE_0;\n            v = SIN_TABLE_0;\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\n            u = COS_TABLE_1;\n            v = SIN_TABLE_1;\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\n            u = COS_TABLE_2;\n            v = SIN_TABLE_2;\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\n            u = COS_TABLE_3;\n            v = SIN_TABLE_3;\n        }\n        if (k > 0) {\n            s = u * sin_t + v * cos_t;\n            c = u * cos_t - v * sin_t;\n        } else {\n            s = u * sin_t - v * cos_t;\n            c = u * cos_t + v * sin_t;\n        }\n    }\n\n    if (j == 0) {\n        sin_a = s;\n        cos_a = c;\n    } else if (j == 1) {\n        sin_a = c;\n        cos_a = -s;\n    } else if (j == -1) {\n        sin_a = -c;\n        cos_a = s;\n    } else {\n        sin_a = -s;\n        cos_a = -c;\n    }\n    return sin_a / cos_a;\n}\n#endif\n\nfloat tan_fp32(float a) {\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\n  return tan_taylor_fp32(a);\n#else\n  return tan(a);\n#endif\n}\n",
                fs: null
            };
            var i = {
                    name: "geometry",
                    vs: "\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n",
                    fs: "\n#define SMOOTH_EDGE_RADIUS 0.5\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n"
                },
                o = n(87529),
                a = Object.keys(o.Df).map((function(t) {
                    return "const int COORDINATE_SYSTEM_".concat(t, " = ").concat(o.Df[t], ";")
                })).join(""),
                s = Object.keys(o.zG).map((function(t) {
                    return "const int PROJECTION_MODE_".concat(t, " = ").concat(o.zG[t], ";")
                })).join(""),
                u = Object.keys(o.iI).map((function(t) {
                    return "const int UNIT_".concat(t.toUpperCase(), " = ").concat(o.iI[t], ";")
                })).join(""),
                c = "".concat(a, "\n").concat(s, "\n").concat(u, "\n\nuniform int project_uCoordinateSystem;\nuniform int project_uProjectionMode;\nuniform float project_uScale;\nuniform bool project_uWrapLongitude;\nuniform vec3 project_uCommonUnitsPerMeter;\nuniform vec3 project_uCommonUnitsPerWorldUnit;\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\nuniform vec4 project_uCenter;\nuniform mat4 project_uModelMatrix;\nuniform mat4 project_uViewProjectionMatrix;\nuniform vec2 project_uViewportSize;\nuniform float project_uDevicePixelRatio;\nuniform float project_uFocalDistance;\nuniform vec3 project_uCameraPosition;\nuniform vec3 project_uCoordinateOrigin;\nuniform vec3 project_uCommonOrigin;\nuniform bool project_uPseudoMeters;\n\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size() {\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n    project_uPseudoMeters == false) {\n    \n    if (geometry.position.w == 0.0) {\n      float y = clamp(geometry.worldPosition.y, -89.9, 89.9);\n      return 1.0 / cos(radians(y));\n    }\n  \n    float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    float y2 = y * y;\n    float y4 = y2 * y2;\n    float y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\nfloat project_size(float meters) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size();\n}\n\nvec2 project_size(vec2 meters) {\n  return meters * project_uCommonUnitsPerMeter.xy * project_size();\n}\n\nvec3 project_size(vec3 meters) {\n  return meters * project_uCommonUnitsPerMeter * project_size();\n}\n\nvec4 project_size(vec4 meters) {\n  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\n}\nvec3 project_normal(vec3 vector) {\n  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\n  return normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\n}\n\nvec4 project_offset_(vec4 offset) {\n  float dy = offset.y;\n  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\n  float x = lnglat.x;\n  if (project_uWrapLongitude) {\n    x = mod(x + 180., 360.0) - 180.;\n  }\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\nvec3 project_globe_(vec3 lnglatz) {\n  float lambda = radians(lnglatz.x);\n  float phi = radians(lnglatz.y);\n  float cosPhi = cos(phi);\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n\n  return vec3(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\n  vec4 position_world = project_uModelMatrix * position;\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_mercator_(position_world.xy),\n        project_size(position_world.z),\n        position_world.w\n      );\n    }\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world.xyz += project_uCoordinateOrigin;\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project_uCoordinateOrigin.y) > 0.25) {\n        return vec4(\n          project_mercator_(position_world.xy) - project_uCommonOrigin.xy,\n          project_size(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\n    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    position_world.xyz -= project_uCoordinateOrigin;\n  }\n  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));\n}\n\nvec4 project_position(vec4 position) {\n  return project_position(position, ZERO_64_LOW);\n}\n\nvec3 project_position(vec3 position, vec3 position64Low) {\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nvec3 project_position(vec3 position) {\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nvec2 project_position(vec2 position) {\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\n  return viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\n  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\n  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\n  return offset * project_uFocalDistance;\n}\n\nfloat project_size_to_pixel(float meters) {\n  return project_size(meters) * project_uScale;\n}\nfloat project_size_to_pixel(float size, int unit) {\n  if (unit == UNIT_METERS) return project_size_to_pixel(size);\n  if (unit == UNIT_COMMON) return size * project_uScale;\n  return size;\n}\nfloat project_pixel_size(float pixels) {\n  return pixels / project_uScale;\n}\nvec2 project_pixel_size(vec2 pixels) {\n  return pixels / project_uScale;\n}\nmat3 project_get_orientation_matrix(vec3 up) {\n  vec3 uz = normalize(up);\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\n  vec3 uy = cross(uz, ux);\n  return mat3(ux, uy, uz);\n}\n\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    transform = project_get_orientation_matrix(commonPosition);\n    return true;\n  }\n  return false;\n}\n"),
                l = n(98337),
                f = {};
            var h = {
                name: "project",
                dependencies: [r, i],
                vs: c,
                getUniforms: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : f;
                    return t.viewport ? (0, l.C)(t) : {}
                }
            }
        },
        98337: function(t, e, n) {
            "use strict";
            n.d(e, {
                v: function() {
                    return d
                },
                C: function() {
                    return p
                }
            });
            var r = n(69884),
                i = n(10616),
                o = n(87529),
                a = n(328),
                s = [0, 0, 0, 0],
                u = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                c = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                l = [0, 0, 0],
                f = [0, 0, 0],
                h = (0, a.Z)((function(t) {
                    var e = t.viewport,
                        n = t.devicePixelRatio,
                        a = t.coordinateSystem,
                        c = t.coordinateOrigin,
                        f = function(t, e, n) {
                            var o = t.viewMatrixUncentered,
                                a = t.projectionMatrix,
                                c = t.viewMatrix,
                                l = t.viewProjectionMatrix,
                                f = s,
                                h = s,
                                p = t.cameraPosition,
                                g = d(t, e, n),
                                y = g.geospatialOrigin,
                                v = g.shaderCoordinateOrigin;
                            g.offsetMode && (h = t.projectPosition(y || v), p = [p[0] - h[0], p[1] - h[1], p[2] - h[2]], h[3] = 1, f = i.fF([], h, l), c = o || c, l = r.Jp([], a, c), l = r.Jp([], l, u));
                            return {
                                viewMatrix: c,
                                viewProjectionMatrix: l,
                                projectionCenter: f,
                                originCommon: h,
                                cameraPosCommon: p,
                                shaderCoordinateOrigin: v,
                                geospatialOrigin: y
                            }
                        }(e, a, c),
                        h = f.projectionCenter,
                        p = f.viewProjectionMatrix,
                        g = f.originCommon,
                        y = f.cameraPosCommon,
                        v = f.shaderCoordinateOrigin,
                        m = f.geospatialOrigin,
                        b = e.getDistanceScales(),
                        w = [e.width * n, e.height * n],
                        _ = i.fF([], [0, 0, -e.focalDistance, 1], e.projectionMatrix)[3] || 1,
                        P = {
                            project_uCoordinateSystem: a,
                            project_uProjectionMode: e.projectionMode,
                            project_uCoordinateOrigin: v,
                            project_uCommonOrigin: g.slice(0, 3),
                            project_uCenter: h,
                            project_uPseudoMeters: Boolean(e._pseudoMeters),
                            project_uViewportSize: w,
                            project_uDevicePixelRatio: n,
                            project_uFocalDistance: _,
                            project_uCommonUnitsPerMeter: b.unitsPerMeter,
                            project_uCommonUnitsPerWorldUnit: b.unitsPerMeter,
                            project_uCommonUnitsPerWorldUnit2: l,
                            project_uScale: e.scale,
                            project_uViewProjectionMatrix: p,
                            project_uCameraPosition: y
                        };
                    if (m) {
                        var E = e.getDistanceScales(m);
                        switch (a) {
                            case o.Df.METER_OFFSETS:
                                P.project_uCommonUnitsPerWorldUnit = E.unitsPerMeter, P.project_uCommonUnitsPerWorldUnit2 = E.unitsPerMeter2;
                                break;
                            case o.Df.LNGLAT:
                            case o.Df.LNGLAT_OFFSETS:
                                e._pseudoMeters || (P.project_uCommonUnitsPerMeter = E.unitsPerMeter), P.project_uCommonUnitsPerWorldUnit = E.unitsPerDegree, P.project_uCommonUnitsPerWorldUnit2 = E.unitsPerDegree2;
                                break;
                            case o.Df.CARTESIAN:
                                P.project_uCommonUnitsPerWorldUnit = [1, 1, E.unitsPerMeter[2]], P.project_uCommonUnitsPerWorldUnit2 = [0, 0, E.unitsPerMeter2[2]]
                        }
                    }
                    return P
                }));

            function d(t, e) {
                var n, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : f,
                    i = r,
                    a = !0;
                switch (n = e === o.Df.LNGLAT_OFFSETS || e === o.Df.METER_OFFSETS ? r : t.isGeospatial ? [Math.fround(t.longitude), Math.fround(t.latitude), 0] : null, t.projectionMode) {
                    case o.zG.WEB_MERCATOR:
                        e !== o.Df.LNGLAT && e !== o.Df.CARTESIAN || (n = [0, 0, 0], a = !1);
                        break;
                    case o.zG.WEB_MERCATOR_AUTO_OFFSET:
                        e === o.Df.LNGLAT ? i = n : e === o.Df.CARTESIAN && (i = [Math.fround(t.center[0]), Math.fround(t.center[1]), 0], n = t.unprojectPosition(i), i[0] -= r[0], i[1] -= r[1], i[2] -= r[2]);
                        break;
                    case o.zG.IDENTITY:
                        i = t.position.map(Math.fround);
                        break;
                    case o.zG.GLOBE:
                        a = !1, n = null;
                        break;
                    default:
                        a = !1
                }
                return i[2] = i[2] || 0, {
                    geospatialOrigin: n,
                    shaderCoordinateOrigin: i,
                    offsetMode: a
                }
            }

            function p() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = t.viewport,
                    n = t.devicePixelRatio,
                    r = void 0 === n ? 1 : n,
                    i = t.modelMatrix,
                    a = void 0 === i ? null : i,
                    s = t.coordinateSystem,
                    u = void 0 === s ? o.Df.DEFAULT : s,
                    l = t.coordinateOrigin,
                    f = t.autoWrapLongitude,
                    d = void 0 !== f && f;
                u === o.Df.DEFAULT && (u = e.isGeospatial ? o.Df.LNGLAT : o.Df.CARTESIAN);
                var p = h({
                    viewport: e,
                    devicePixelRatio: r,
                    coordinateSystem: u,
                    coordinateOrigin: l
                });
                return p.project_uWrapLongitude = d, p.project_uModelMatrix = a || c, p
            }
        },
        29420: function(t, e, n) {
            "use strict";

            function r(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function i(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function o() {}
            n.d(e, {
                Z: function() {
                    return s
                }
            });
            var a = {
                    onStart: o,
                    onUpdate: o,
                    onInterrupt: o,
                    onEnd: o
                },
                s = function() {
                    function t(e) {
                        ! function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, t), this._inProgress = !1, this._handle = null, this.timeline = e, this.settings = {}
                    }
                    var e, n, o;
                    return e = t, (n = [{
                        key: "inProgress",
                        get: function() {
                            return this._inProgress
                        }
                    }, {
                        key: "start",
                        value: function(t) {
                            this.cancel(), this.settings = function(t) {
                                for (var e = 1; e < arguments.length; e++) {
                                    var n = null != arguments[e] ? arguments[e] : {},
                                        r = Object.keys(n);
                                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                                    })))), r.forEach((function(e) {
                                        i(t, e, n[e])
                                    }))
                                }
                                return t
                            }({}, a, t), this._inProgress = !0, this.settings.onStart(this)
                        }
                    }, {
                        key: "end",
                        value: function() {
                            this._inProgress && (this.timeline.removeChannel(this._handle), this._handle = null, this._inProgress = !1, this.settings.onEnd(this))
                        }
                    }, {
                        key: "cancel",
                        value: function() {
                            this._inProgress && (this.settings.onInterrupt(this), this.timeline.removeChannel(this._handle), this._handle = null, this._inProgress = !1)
                        }
                    }, {
                        key: "update",
                        value: function() {
                            if (!this._inProgress) return !1;
                            if (null === this._handle) {
                                var t = this.timeline,
                                    e = this.settings;
                                this._handle = t.addChannel({
                                    delay: t.getTime(),
                                    duration: e.duration
                                })
                            }
                            return this.time = this.timeline.getTime(this._handle), this._onUpdate(), this.settings.onUpdate(this), this.timeline.isFinished(this._handle) && this.end(), !0
                        }
                    }, {
                        key: "_onUpdate",
                        value: function() {}
                    }]) && r(e.prototype, n), o && r(e, o), t
                }()
        },
        47806: function(t, e, n) {
            "use strict";

            function r(t, e) {
                if (!t) throw new Error(e || "deck.gl: assertion failed.")
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        61310: function(t, e, n) {
            "use strict";

            function r(t, e) {
                if (t === e) return !0;
                if (!t || !e) return !1;
                for (var n in t) {
                    var i = t[n],
                        o = e[n];
                    if (!(i === o || Array.isArray(i) && Array.isArray(o) && r(i, o))) return !1
                }
                return !0
            }
            n.d(e, {
                v: function() {
                    return r
                }
            })
        },
        71997: function(t, e, n) {
            "use strict";

            function r(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {
                    return !0
                };
                return Array.isArray(t) ? i(t, e, []) : e(t) ? [t] : []
            }

            function i(t, e, n) {
                for (var r = -1; ++r < t.length;) {
                    var o = t[r];
                    Array.isArray(o) ? i(o, e, n) : e(o) && n.push(o)
                }
                return n
            }

            function o(t) {
                for (var e = t.target, n = t.source, r = t.start, i = void 0 === r ? 0 : r, o = t.count, a = void 0 === o ? 1 : o, s = n.length, u = a * s, c = 0, l = i; c < s; c++) e[l++] = n[c];
                for (; c < u;) c < u - c ? (e.copyWithin(i + c, i, i + c), c *= 2) : (e.copyWithin(i + c, i, i + u - c), c = u);
                return e
            }
            n.d(e, {
                x: function() {
                    return r
                },
                k: function() {
                    return o
                }
            })
        },
        71774: function(t, e, n) {
            "use strict";
            n.d(e, {
                jB: function() {
                    return o
                },
                D0: function() {
                    return a
                },
                jr: function() {
                    return s
                }
            });
            var r = [],
                i = [];

            function o(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1 / 0,
                    o = r,
                    a = {
                        index: -1,
                        data: t,
                        target: []
                    };
                return t ? "function" === typeof t[Symbol.iterator] ? o = t : t.length > 0 && (i.length = t.length, o = i) : o = r, (e > 0 || Number.isFinite(n)) && (o = (Array.isArray(o) ? o : Array.from(o)).slice(e, n), a.index = e - 1), {
                    iterable: o,
                    objectInfo: a
                }
            }

            function a(t) {
                return t && t[Symbol.asyncIterator]
            }

            function s(t, e) {
                var n = e.size,
                    r = e.stride,
                    i = e.offset,
                    o = e.startIndices,
                    a = e.nested,
                    s = t.BYTES_PER_ELEMENT,
                    u = r ? r / s : n,
                    c = i ? i / s : 0,
                    l = Math.floor((t.length - c) / u);
                return function(e, r) {
                    var i = r.index,
                        s = r.target;
                    if (!o) {
                        for (var f = i * u + c, h = 0; h < n; h++) s[h] = t[f + h];
                        return s
                    }
                    var d, p = o[i],
                        g = o[i + 1] || l;
                    if (a) {
                        d = new Array(g - p);
                        for (var y = p; y < g; y++) {
                            var v = y * u + c;
                            s = new Array(n);
                            for (var m = 0; m < n; m++) s[m] = t[v + m];
                            d[y - p] = s
                        }
                    } else if (u === n) d = t.subarray(p * n + c, g * n + c);
                    else {
                        d = new t.constructor((g - p) * n);
                        for (var b = 0, w = p; w < g; w++)
                            for (var _ = w * u + c, P = 0; P < n; P++) d[b++] = t[_ + P]
                    }
                    return d
                }
            }
        },
        553: function(t, e, n) {
            "use strict";
            var r = n(65028);
            e.Z = new r.Z({
                id: "deck"
            })
        },
        38366: function(t, e, n) {
            "use strict";
            n.d(e, {
                bS: function() {
                    return o
                },
                Xt: function() {
                    return a
                },
                Du: function() {
                    return s
                },
                TK: function() {
                    return f
                }
            });
            var r = n(85242),
                i = n(76695);

            function o() {
                return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
            }

            function a(t) {
                return [t[12], t[13], t[14]]
            }

            function s(t) {
                var e = {};
                return e.left = l(t[3] + t[0], t[7] + t[4], t[11] + t[8], t[15] + t[12]), e.right = l(t[3] - t[0], t[7] - t[4], t[11] - t[8], t[15] - t[12]), e.bottom = l(t[3] + t[1], t[7] + t[5], t[11] + t[9], t[15] + t[13]), e.top = l(t[3] - t[1], t[7] - t[5], t[11] - t[9], t[15] - t[13]), e.near = l(t[3] + t[2], t[7] + t[6], t[11] + t[10], t[15] + t[14]), e.far = l(t[3] - t[2], t[7] - t[6], t[11] - t[10], t[15] - t[14]), e
            }
            var u, c = new i.Z;

            function l(t, e, n, r) {
                c.set(t, e, n);
                var o = c.len();
                return {
                    distance: r / o,
                    normal: new i.Z(-t / o, -e / o, -n / o)
                }
            }

            function f(t, e) {
                var n = e.size,
                    i = void 0 === n ? 1 : n,
                    o = e.startIndex,
                    a = void 0 === o ? 0 : o,
                    s = e.endIndex;
                Number.isFinite(s) || (s = t.length);
                var c = (s - a) / i;
                u = r.Z.allocate(u, c, {
                    type: Float32Array,
                    size: 2 * i
                });
                for (var l, f = a, h = 0; f < s;) {
                    for (var d = 0; d < i; d++) {
                        var p = t[f++];
                        u[h + d] = p, u[h + d + i] = (l = p) - Math.fround(l)
                    }
                    h += 2 * i
                }
                return u.subarray(0, c * i * 2)
            }
        },
        328: function(t, e, n) {
            "use strict";

            function r(t, e) {
                if (t === e) return !0;
                if (Array.isArray(t)) {
                    var n = t.length;
                    if (!e || e.length !== n) return !1;
                    for (var r = 0; r < n; r++)
                        if (t[r] !== e[r]) return !1;
                    return !0
                }
                return !1
            }

            function i(t) {
                var e, n = {};
                return function(i) {
                    for (var o in i)
                        if (!r(i[o], n[o])) {
                            e = t(i), n = i;
                            break
                        }
                    return e
                }
            }
            n.d(e, {
                Z: function() {
                    return i
                }
            })
        },
        85242: function(t, e, n) {
            "use strict";

            function r(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }
            var i = function() {
                function t(e) {
                    ! function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), this._pool = [], this.props = {
                        overAlloc: 2,
                        poolSize: 100
                    }, this.setProps(e)
                }
                var e, n, i;
                return e = t, (n = [{
                    key: "setProps",
                    value: function(t) {
                        Object.assign(this.props, t)
                    }
                }, {
                    key: "allocate",
                    value: function(t, e, n) {
                        var r, i = n.size,
                            o = void 0 === i ? 1 : i,
                            a = n.type,
                            s = n.padding,
                            u = void 0 === s ? 0 : s,
                            c = n.copy,
                            l = void 0 !== c && c,
                            f = n.initialize,
                            h = void 0 !== f && f,
                            d = n.maxCount,
                            p = a || t && t.constructor || Float32Array,
                            g = e * o + u;
                        if (ArrayBuffer.isView(t)) {
                            if (g <= t.length) return t;
                            if (g * t.BYTES_PER_ELEMENT <= t.buffer.byteLength) return new p(t.buffer, 0, g)
                        }
                        d && (r = d * o + u);
                        var y = this._allocate(p, g, h, r);
                        return t && l ? y.set(t) : h || y.fill(0, 0, 4), this._release(t), y
                    }
                }, {
                    key: "release",
                    value: function(t) {
                        this._release(t)
                    }
                }, {
                    key: "_allocate",
                    value: function(t, e, n, r) {
                        var i = Math.max(Math.ceil(e * this.props.overAlloc), 1);
                        i > r && (i = r);
                        var o = this._pool,
                            a = t.BYTES_PER_ELEMENT * i,
                            s = o.findIndex((function(t) {
                                return t.byteLength >= a
                            }));
                        if (s >= 0) {
                            var u = new t(o.splice(s, 1)[0], 0, i);
                            return n && u.fill(0), u
                        }
                        return new t(i)
                    }
                }, {
                    key: "_release",
                    value: function(t) {
                        if (ArrayBuffer.isView(t)) {
                            var e = this._pool,
                                n = t.buffer,
                                r = n.byteLength,
                                i = e.findIndex((function(t) {
                                    return t.byteLength >= r
                                }));
                            i < 0 ? e.push(n) : (i > 0 || e.length < this.props.poolSize) && e.splice(i, 0, n), e.length > this.props.poolSize && e.shift()
                        }
                    }
                }]) && r(e.prototype, n), i && r(e, i), t
            }();
            e.Z = new i
        },
        13649: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return b
                }
            });
            var r = n(553),
                i = n(38366),
                o = n(14034),
                a = n(99572),
                s = n(76695),
                u = n(69884),
                c = n(78866),
                l = n(87529);

            function f(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function h(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function d(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function p(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return f(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return f(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var g = Math.PI / 180,
                y = (0, i.bS)(),
                v = [0, 0, 0],
                m = {
                    unitsPerMeter: [1, 1, 1],
                    metersPerUnit: [1, 1, 1]
                },
                b = function() {
                    function t() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        h(this, t);
                        var n = e.id,
                            r = void 0 === n ? null : n,
                            i = e.x,
                            o = void 0 === i ? 0 : i,
                            a = e.y,
                            s = void 0 === a ? 0 : a,
                            u = e.width,
                            c = void 0 === u ? 1 : u,
                            l = e.height,
                            f = void 0 === l ? 1 : l;
                        this.id = r || this.constructor.displayName || "viewport", this.x = o, this.y = s, this.width = c || 1, this.height = f || 1, this._frustumPlanes = {}, this._initViewMatrix(e), this._initProjectionMatrix(e), this._initPixelMatrices(), this.equals = this.equals.bind(this), this.project = this.project.bind(this), this.unproject = this.unproject.bind(this), this.projectPosition = this.projectPosition.bind(this), this.unprojectPosition = this.unprojectPosition.bind(this), this.projectFlat = this.projectFlat.bind(this), this.unprojectFlat = this.unprojectFlat.bind(this)
                    }
                    var e, n, f;
                    return e = t, (n = [{
                        key: "metersPerPixel",
                        get: function() {
                            return this.distanceScales.metersPerUnit[2] / this.scale
                        }
                    }, {
                        key: "projectionMode",
                        get: function() {
                            return this.isGeospatial ? this.zoom < 12 ? l.zG.WEB_MERCATOR : l.zG.WEB_MERCATOR_AUTO_OFFSET : l.zG.IDENTITY
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return n = e, !!(null != (r = t) && "undefined" !== typeof Symbol && r[Symbol.hasInstance] ? r[Symbol.hasInstance](n) : n instanceof r) && (this === e || e.width === this.width && e.height === this.height && e.scale === this.scale && (0, o.fS)(e.projectionMatrix, this.projectionMatrix) && (0, o.fS)(e.viewMatrix, this.viewMatrix));
                            var n, r
                        }
                    }, {
                        key: "project",
                        value: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                n = e.topLeft,
                                r = void 0 === n || n,
                                i = this.projectPosition(t),
                                o = (0, c.aW)(i, this.pixelProjectionMatrix),
                                a = p(o, 2),
                                s = a[0],
                                u = a[1],
                                l = r ? u : this.height - u;
                            return 2 === t.length ? [s, l] : [s, l, o[2]]
                        }
                    }, {
                        key: "unproject",
                        value: function(t) {
                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                n = e.topLeft,
                                r = void 0 === n || n,
                                i = e.targetZ,
                                o = p(t, 3),
                                a = o[0],
                                s = o[1],
                                u = o[2],
                                l = r ? s : this.height - s,
                                f = i && i * this.distanceScales.unitsPerMeter[2],
                                h = (0, c.CT)([a, l, u], this.pixelUnprojectionMatrix, f),
                                d = p(this.unprojectPosition(h), 3),
                                g = d[0],
                                y = d[1],
                                v = d[2];
                            return Number.isFinite(u) ? [g, y, v] : Number.isFinite(i) ? [g, y, i] : [g, y]
                        }
                    }, {
                        key: "projectPosition",
                        value: function(t) {
                            var e = p(this.projectFlat(t), 2);
                            return [e[0], e[1], (t[2] || 0) * this.distanceScales.unitsPerMeter[2]]
                        }
                    }, {
                        key: "unprojectPosition",
                        value: function(t) {
                            var e = p(this.unprojectFlat(t), 2);
                            return [e[0], e[1], (t[2] || 0) * this.distanceScales.metersPerUnit[2]]
                        }
                    }, {
                        key: "projectFlat",
                        value: function(t) {
                            return this.isGeospatial ? (0, c.w5)(t) : t
                        }
                    }, {
                        key: "unprojectFlat",
                        value: function(t) {
                            return this.isGeospatial ? (0, c.es)(t) : t
                        }
                    }, {
                        key: "getBounds",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                e = {
                                    targetZ: t.z || 0
                                },
                                n = this.unproject([0, 0], e),
                                r = this.unproject([this.width, 0], e),
                                i = this.unproject([0, this.height], e),
                                o = this.unproject([this.width, this.height], e);
                            return [Math.min(n[0], r[0], i[0], o[0]), Math.min(n[1], r[1], i[1], o[1]), Math.max(n[0], r[0], i[0], o[0]), Math.max(n[1], r[1], i[1], o[1])]
                        }
                    }, {
                        key: "getDistanceScales",
                        value: function() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            return t ? (0, c.ro)({
                                longitude: t[0],
                                latitude: t[1],
                                highPrecision: !0
                            }) : this.distanceScales
                        }
                    }, {
                        key: "containsPixel",
                        value: function(t) {
                            var e = t.x,
                                n = t.y,
                                r = t.width,
                                i = void 0 === r ? 1 : r,
                                o = t.height,
                                a = void 0 === o ? 1 : o;
                            return e < this.x + this.width && this.x < e + i && n < this.y + this.height && this.y < n + a
                        }
                    }, {
                        key: "getFrustumPlanes",
                        value: function() {
                            return this._frustumPlanes.near || Object.assign(this._frustumPlanes, (0, i.Du)(this.viewProjectionMatrix)), this._frustumPlanes
                        }
                    }, {
                        key: "panByPosition",
                        value: function(t, e) {
                            return null
                        }
                    }, {
                        key: "getCameraPosition",
                        value: function() {
                            return this.cameraPosition
                        }
                    }, {
                        key: "getCameraDirection",
                        value: function() {
                            return this.cameraDirection
                        }
                    }, {
                        key: "getCameraUp",
                        value: function() {
                            return this.cameraUp
                        }
                    }, {
                        key: "_createProjectionMatrix",
                        value: function(t) {
                            var e = t.orthographic,
                                n = t.fovyRadians,
                                r = t.aspect,
                                i = t.focalDistance,
                                o = t.near,
                                s = t.far;
                            return e ? (new a.Z).orthographic({
                                fovy: n,
                                aspect: r,
                                focalDistance: i,
                                near: o,
                                far: s
                            }) : (new a.Z).perspective({
                                fovy: n,
                                aspect: r,
                                near: o,
                                far: s
                            })
                        }
                    }, {
                        key: "_initViewMatrix",
                        value: function(t) {
                            var e = t.viewMatrix,
                                n = void 0 === e ? y : e,
                                r = t.longitude,
                                i = void 0 === r ? null : r,
                                o = t.latitude,
                                u = void 0 === o ? null : o,
                                l = t.zoom,
                                f = void 0 === l ? null : l,
                                h = t.position,
                                d = void 0 === h ? null : h,
                                p = t.modelMatrix,
                                g = void 0 === p ? null : p,
                                b = t.focalDistance,
                                w = void 0 === b ? 1 : b,
                                _ = t.distanceScales,
                                P = void 0 === _ ? null : _;
                            this.isGeospatial = Number.isFinite(u) && Number.isFinite(i), this.zoom = f, Number.isFinite(this.zoom) || (this.zoom = this.isGeospatial ? (0, c.Bf)({
                                latitude: u
                            }) + Math.log2(w) : 0);
                            var E = Math.pow(2, this.zoom);
                            this.scale = E, this.distanceScales = this.isGeospatial ? (0, c.ro)({
                                latitude: u,
                                longitude: i
                            }) : P || m, this.focalDistance = w, this.distanceScales.metersPerUnit = new s.Z(this.distanceScales.metersPerUnit), this.distanceScales.unitsPerMeter = new s.Z(this.distanceScales.unitsPerMeter), this.position = v, this.meterOffset = v, d && (this.position = d, this.modelMatrix = g, this.meterOffset = g ? g.transformVector(d) : d), this.isGeospatial ? (this.longitude = i, this.latitude = u, this.center = this._getCenterInWorld({
                                longitude: i,
                                latitude: u
                            })) : this.center = d ? this.projectPosition(d) : [0, 0, 0], this.viewMatrixUncentered = n, this.viewMatrix = (new a.Z).multiplyRight(this.viewMatrixUncentered).translate(new s.Z(this.center || v).negate())
                        }
                    }, {
                        key: "_getCenterInWorld",
                        value: function(t) {
                            var e = t.longitude,
                                n = t.latitude,
                                r = this.meterOffset,
                                i = this.distanceScales,
                                o = new s.Z(this.projectPosition([e, n, 0]));
                            if (r) {
                                var a = new s.Z(r).scale(i.unitsPerMeter);
                                o.add(a)
                            }
                            return o
                        }
                    }, {
                        key: "_initProjectionMatrix",
                        value: function(t) {
                            var e = t.projectionMatrix,
                                n = void 0 === e ? null : e,
                                r = t.orthographic,
                                i = void 0 !== r && r,
                                o = t.fovyRadians,
                                a = t.fovy,
                                s = void 0 === a ? 75 : a,
                                u = t.near,
                                c = void 0 === u ? .1 : u,
                                l = t.far,
                                f = void 0 === l ? 1e3 : l,
                                h = t.focalDistance,
                                d = void 0 === h ? 1 : h;
                            this.projectionMatrix = n || this._createProjectionMatrix({
                                orthographic: i,
                                fovyRadians: o || s * g,
                                aspect: this.width / this.height,
                                focalDistance: d,
                                near: c,
                                far: f
                            })
                        }
                    }, {
                        key: "_initPixelMatrices",
                        value: function() {
                            var t = (0, i.bS)();
                            u.Jp(t, t, this.projectionMatrix), u.Jp(t, t, this.viewMatrix), this.viewProjectionMatrix = t, this.viewMatrixInverse = u.U_([], this.viewMatrix) || this.viewMatrix, this.cameraPosition = (0, i.Xt)(this.viewMatrixInverse);
                            var e = (0, i.bS)(),
                                n = (0, i.bS)();
                            u.bA(e, e, [this.width / 2, -this.height / 2, 1]), u.Iu(e, e, [1, -1, 0]), u.Jp(n, e, this.viewProjectionMatrix), this.pixelProjectionMatrix = n, this.viewportMatrix = e, this.pixelUnprojectionMatrix = u.U_((0, i.bS)(), this.pixelProjectionMatrix), this.pixelUnprojectionMatrix || r.Z.warn("Pixel project matrix not invertible")()
                        }
                    }]) && d(e.prototype, n), f && d(e, f), t
                }();
            b.displayName = "Viewport"
        },
        11605: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return E
                }
            });
            var r = n(13649),
                i = n(78866),
                o = n(54479);

            function a(t, e, n) {
                return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t
            }! function() {
                var t = function() {
                    var t = new o.WT(2);
                    return o.WT != Float32Array && (t[0] = 0, t[1] = 0), t
                }()
            }();
            var s = n(99572);

            function u(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function c(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function l(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function f(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function h(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function d(t, e, n) {
                return (d = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get : function(t, e, n) {
                    var r = function(t, e) {
                        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = p(t)););
                        return t
                    }(t, e);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, e);
                        return i.get ? i.get.call(n) : i.value
                    }
                })(t, e, n || t)
            }

            function p(t) {
                return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function g(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        h(t, e, n[e])
                    }))
                }
                return t
            }

            function y(t, e) {
                return !e || "object" !== b(e) && "function" !== typeof e ? c(t) : e
            }

            function v(t, e) {
                return (v = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function m(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return u(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return u(t, e)
                }(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var b = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function w(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = p(t);
                    if (e) {
                        var i = p(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return y(this, n)
                }
            }
            var _ = Math.PI / 180;

            function P(t) {
                return 512 / 4003e4 / Math.cos(t * _)
            }
            var E = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && v(t, e)
                }(u, t);
                var e, n, r, o = w(u);

                function u() {
                    var t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    l(this, u);
                    var n, r = e.latitude,
                        a = void 0 === r ? 0 : r,
                        f = e.longitude,
                        h = void 0 === f ? 0 : f,
                        d = e.zoom,
                        p = void 0 === d ? 11 : d,
                        y = e.pitch,
                        v = void 0 === y ? 0 : y,
                        m = e.bearing,
                        b = void 0 === m ? 0 : m,
                        w = e.nearZMultiplier,
                        _ = void 0 === w ? .1 : w,
                        P = e.farZMultiplier,
                        E = void 0 === P ? 1.01 : P,
                        x = e.orthographic,
                        S = void 0 !== x && x,
                        O = e.projectionMatrix,
                        T = e.repeat,
                        M = void 0 !== T && T,
                        C = e.worldOffset,
                        A = void 0 === C ? 0 : C,
                        k = e.legacyMeterSizes,
                        I = void 0 !== k && k,
                        j = e.width,
                        L = e.height,
                        R = e.altitude,
                        D = void 0 === R ? 1.5 : R,
                        F = Math.pow(2, p);
                    j = j || 1, L = L || 1;
                    var N = null;
                    O ? (D = O[5] / 2, n = (0, i.Lu)(D)) : (e.fovy ? (n = e.fovy, D = (0, i.sj)(n)) : n = (0, i.Lu)(D), N = (0, i.wl)({
                        width: j,
                        height: L,
                        pitch: v,
                        fovy: n,
                        nearZMultiplier: _,
                        farZMultiplier: E
                    }));
                    var z = (0, i.lf)({
                        height: L,
                        pitch: v,
                        bearing: b,
                        scale: F,
                        altitude: D
                    });
                    if (A) {
                        var B = (new s.Z).translate([512 * A, 0, 0]);
                        z = B.multiplyLeft(z)
                    }
                    return (t = o.call(this, g({}, e, {
                        width: j,
                        height: L,
                        viewMatrix: z,
                        longitude: h,
                        latitude: a,
                        zoom: p
                    }, N, {
                        fovy: n,
                        focalDistance: D
                    }))).latitude = a, t.longitude = h, t.zoom = p, t.pitch = v, t.bearing = b, t.altitude = D, t.fovy = n, t.orthographic = S, t._subViewports = M ? [] : null, t._pseudoMeters = I, Object.freeze(c(t)), t
                }
                return e = u, (n = [{
                    key: "subViewports",
                    get: function() {
                        if (this._subViewports && !this._subViewports.length)
                            for (var t = this.getBounds(), e = Math.floor((t[0] + 180) / 360), n = Math.ceil((t[2] - 180) / 360), r = e; r <= n; r++) {
                                var i = r ? new u(g({}, this, {
                                    worldOffset: r
                                })) : this;
                                this._subViewports.push(i)
                            }
                        return this._subViewports
                    }
                }, {
                    key: "projectPosition",
                    value: function(t) {
                        if (this._pseudoMeters) return d(p(u.prototype), "projectPosition", this).call(this, t);
                        var e = m(this.projectFlat(t), 2);
                        return [e[0], e[1], (t[2] || 0) * P(t[1])]
                    }
                }, {
                    key: "unprojectPosition",
                    value: function(t) {
                        if (this._pseudoMeters) return d(p(u.prototype), "unprojectPosition", this).call(this, t);
                        var e = m(this.unprojectFlat(t), 2),
                            n = e[0],
                            r = e[1];
                        return [n, r, (t[2] || 0) / P(r)]
                    }
                }, {
                    key: "addMetersToLngLat",
                    value: function(t, e) {
                        return (0, i.eG)(t, e)
                    }
                }, {
                    key: "panByPosition",
                    value: function(t, e) {
                        var n, r, o = (0, i.CT)(e, this.pixelUnprojectionMatrix),
                            s = a([], this.projectFlat(t), ((n = [])[0] = -(r = o)[0], n[1] = -r[1], n)),
                            u = a([], this.center, s),
                            c = m(this.unprojectFlat(u), 2);
                        return {
                            longitude: c[0],
                            latitude: c[1]
                        }
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            e = (0, i.zX)(this, t.z || 0);
                        return [Math.min(e[0][0], e[1][0], e[2][0], e[3][0]), Math.min(e[0][1], e[1][1], e[2][1], e[3][1]), Math.max(e[0][0], e[1][0], e[2][0], e[3][0]), Math.max(e[0][1], e[1][1], e[2][1], e[3][1])]
                    }
                }, {
                    key: "fitBounds",
                    value: function(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = this,
                            r = n.width,
                            o = n.height,
                            a = (0, i.Xg)(g({
                                width: r,
                                height: o,
                                bounds: t
                            }, e)),
                            s = a.longitude,
                            c = a.latitude,
                            l = a.zoom;
                        return new u({
                            width: r,
                            height: o,
                            longitude: s,
                            latitude: c,
                            zoom: l
                        })
                    }
                }]) && f(e.prototype, n), r && f(e, r), u
            }(r.Z);
            E.displayName = "WebMercatorViewport"
        },
        22260: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return d
                }
            });
            var r = n(60382),
                i = n(11605),
                o = n(17413);

            function a(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function s(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function u(t) {
                return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function c(t, e) {
                return !e || "object" !== f(e) && "function" !== typeof e ? function(t) {
                    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(t) : e
            }

            function l(t, e) {
                return (l = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            var f = function(t) {
                return t && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t
            };

            function h(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = u(t);
                    if (e) {
                        var i = u(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return c(this, n)
                }
            }
            var d = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && l(t, e)
                }(c, t);
                var e, n, r, u = h(c);

                function c(t) {
                    return function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, c), u.call(this, function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {},
                                r = Object.keys(n);
                            "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                                return Object.getOwnPropertyDescriptor(n, t).enumerable
                            })))), r.forEach((function(e) {
                                s(t, e, n[e])
                            }))
                        }
                        return t
                    }({}, t, {
                        type: i.Z
                    }))
                }
                return e = c, (n = [{
                    key: "controller",
                    get: function() {
                        return this._getControllerProps({
                            type: o.Z
                        })
                    }
                }]) && a(e.prototype, n), r && a(e, r), c
            }(r.Z);
            d.displayName = "MapView"
        },
        60382: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return p
                }
            });
            var r = n(13649),
                i = /([0-9]+\.?[0-9]*)(%|px)/;

            function o(t) {
                switch ("undefined" === typeof t ? "undefined" : (o = t) && "undefined" !== typeof Symbol && o.constructor === Symbol ? "symbol" : typeof o) {
                    case "number":
                        return {
                            position: t,
                            relative: !1
                        };
                    case "string":
                        var e = t.match(i);
                        if (e && e.length >= 3) {
                            var n = "%" === e[2],
                                r = parseFloat(e[1]);
                            return {
                                position: n ? r / 100 : r,
                                relative: n
                            }
                        }
                    default:
                        throw new Error("Could not parse position string ".concat(t))
                }
                var o
            }

            function a(t, e) {
                return t.relative ? Math.round(t.position * e) : t.position
            }
            var s = n(61310),
                u = n(47806);

            function c(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function l(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function f(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }

            function h(t, e) {
                return null != e && "undefined" !== typeof Symbol && e[Symbol.hasInstance] ? e[Symbol.hasInstance](t) : t instanceof e
            }

            function d(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {},
                        r = Object.keys(n);
                    "function" === typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter((function(t) {
                        return Object.getOwnPropertyDescriptor(n, t).enumerable
                    })))), r.forEach((function(e) {
                        f(t, e, n[e])
                    }))
                }
                return t
            }
            var p = function() {
                function t() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    c(this, t);
                    var n = e.id,
                        i = void 0 === n ? null : n,
                        o = e.x,
                        a = void 0 === o ? 0 : o,
                        s = e.y,
                        l = void 0 === s ? 0 : s,
                        f = e.width,
                        p = void 0 === f ? "100%" : f,
                        g = e.height,
                        y = void 0 === g ? "100%" : g,
                        v = e.viewportInstance,
                        m = e.type,
                        b = void 0 === m ? r.Z : m;
                    (0, u.Z)(!v || h(v, r.Z)), this.viewportInstance = v, this.id = i || this.constructor.displayName || "view", this.type = b, this.props = d({}, e, {
                        id: this.id
                    }), this._parseDimensions({
                        x: a,
                        y: l,
                        width: p,
                        height: y
                    }), this.equals = this.equals.bind(this), Object.seal(this)
                }
                var e, n, i;
                return e = t, (n = [{
                    key: "equals",
                    value: function(t) {
                        return this === t || (this.viewportInstance ? t.viewportInstance && this.viewportInstance.equals(t.viewportInstance) : (0, s.v)(this.props, t.props))
                    }
                }, {
                    key: "makeViewport",
                    value: function(t) {
                        var e = t.width,
                            n = t.height,
                            r = t.viewState;
                        if (this.viewportInstance) return this.viewportInstance;
                        r = this.filterViewState(r);
                        var i = this.getDimensions({
                            width: e,
                            height: n
                        });
                        return this._getViewport(r, i)
                    }
                }, {
                    key: "getViewStateId",
                    value: function() {
                        switch ((t = this.props.viewState) && "undefined" !== typeof Symbol && t.constructor === Symbol ? "symbol" : typeof t) {
                            case "string":
                                return this.props.viewState;
                            case "object":
                                return this.props.viewState && this.props.viewState.id;
                            default:
                                return this.id
                        }
                        var t
                    }
                }, {
                    key: "filterViewState",
                    value: function(t) {
                        if (this.props.viewState && "object" === typeof this.props.viewState) {
                            if (!this.props.viewState.id) return this.props.viewState;
                            var e = d({}, t);
                            for (var n in this.props.viewState) "id" !== n && (e[n] = this.props.viewState[n]);
                            return e
                        }
                        return t
                    }
                }, {
                    key: "getDimensions",
                    value: function(t) {
                        var e = t.width,
                            n = t.height;
                        return {
                            x: a(this._x, e),
                            y: a(this._y, n),
                            width: a(this._width, e),
                            height: a(this._height, n)
                        }
                    }
                }, {
                    key: "_getControllerProps",
                    value: function(t) {
                        var e = this.props.controller;
                        return e ? !0 === e ? t : ("function" === typeof e && (e = {
                            type: e
                        }), d({}, t, e)) : null
                    }
                }, {
                    key: "_getViewport",
                    value: function(t, e) {
                        return new(0, this.type)(d({}, t, this.props, e))
                    }
                }, {
                    key: "_parseDimensions",
                    value: function(t) {
                        var e = t.x,
                            n = t.y,
                            r = t.width,
                            i = t.height;
                        this._x = o(e), this._y = o(n), this._width = o(r), this._height = o(i)
                    }
                }]) && l(e.prototype, n), i && l(e, i), t
            }()
        },
        32676: function(t, e, n) {
            var r = n(83454);
            t.exports = function() {
                "use strict";

                function t(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }

                function e(t, e) {
                    for (var n = 0; n < e.length; n++) {
                        var r = e[n];
                        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                    }
                }

                function n(t, n, r) {
                    return n && e(t.prototype, n), r && e(t, r), t
                }
                var i = function() {
                    function t(t, e) {
                        this.next = null, this.key = t, this.data = e, this.left = null, this.right = null
                    }
                    return t
                }();

                function o(t, e) {
                    return t > e ? 1 : t < e ? -1 : 0
                }

                function a(t, e, n) {
                    for (var r = new i(null, null), o = r, a = r;;) {
                        var s = n(t, e.key);
                        if (s < 0) {
                            if (null === e.left) break;
                            if (n(t, e.left.key) < 0) {
                                var u = e.left;
                                if (e.left = u.right, u.right = e, null === (e = u).left) break
                            }
                            a.left = e, a = e, e = e.left
                        } else {
                            if (!(s > 0)) break;
                            if (null === e.right) break;
                            if (n(t, e.right.key) > 0 && (u = e.right, e.right = u.left, u.left = e, null === (e = u).right)) break;
                            o.right = e, o = e, e = e.right
                        }
                    }
                    return o.right = e.left, a.left = e.right, e.left = r.right, e.right = r.left, e
                }

                function s(t, e, n, r) {
                    var o = new i(t, e);
                    if (null === n) return o.left = o.right = null, o;
                    var s = r(t, (n = a(t, n, r)).key);
                    return s < 0 ? (o.left = n.left, o.right = n, n.left = null) : s >= 0 && (o.right = n.right, o.left = n, n.right = null), o
                }

                function u(t, e, n) {
                    var r = null,
                        i = null;
                    if (e) {
                        var o = n((e = a(t, e, n)).key, t);
                        0 === o ? (r = e.left, i = e.right) : o < 0 ? (i = e.right, e.right = null, r = e) : (r = e.left, e.left = null, i = e)
                    }
                    return {
                        left: r,
                        right: i
                    }
                }

                function c(t, e, n) {
                    return null === e ? t : (null === t || ((e = a(t.key, e, n)).left = t), e)
                }

                function l(t, e, n, r, i) {
                    if (t) {
                        r(e + (n ? "\u2514\u2500\u2500 " : "\u251c\u2500\u2500 ") + i(t) + "\n");
                        var o = e + (n ? "    " : "\u2502   ");
                        t.left && l(t.left, o, !1, r, i), t.right && l(t.right, o, !0, r, i)
                    }
                }
                var f = function() {
                    function t(t) {
                        void 0 === t && (t = o), this._root = null, this._size = 0, this._comparator = t
                    }
                    return t.prototype.insert = function(t, e) {
                        return this._size++, this._root = s(t, e, this._root, this._comparator)
                    }, t.prototype.add = function(t, e) {
                        var n = new i(t, e);
                        null === this._root && (n.left = n.right = null, this._size++, this._root = n);
                        var r = this._comparator,
                            o = a(t, this._root, r),
                            s = r(t, o.key);
                        return 0 === s ? this._root = o : (s < 0 ? (n.left = o.left, n.right = o, o.left = null) : s > 0 && (n.right = o.right, n.left = o, o.right = null), this._size++, this._root = n), this._root
                    }, t.prototype.remove = function(t) {
                        this._root = this._remove(t, this._root, this._comparator)
                    }, t.prototype._remove = function(t, e, n) {
                        var r;
                        return null === e ? null : 0 === n(t, (e = a(t, e, n)).key) ? (null === e.left ? r = e.right : (r = a(t, e.left, n)).right = e.right, this._size--, r) : e
                    }, t.prototype.pop = function() {
                        var t = this._root;
                        if (t) {
                            for (; t.left;) t = t.left;
                            return this._root = a(t.key, this._root, this._comparator), this._root = this._remove(t.key, this._root, this._comparator), {
                                key: t.key,
                                data: t.data
                            }
                        }
                        return null
                    }, t.prototype.findStatic = function(t) {
                        for (var e = this._root, n = this._comparator; e;) {
                            var r = n(t, e.key);
                            if (0 === r) return e;
                            e = r < 0 ? e.left : e.right
                        }
                        return null
                    }, t.prototype.find = function(t) {
                        return this._root && (this._root = a(t, this._root, this._comparator), 0 !== this._comparator(t, this._root.key)) ? null : this._root
                    }, t.prototype.contains = function(t) {
                        for (var e = this._root, n = this._comparator; e;) {
                            var r = n(t, e.key);
                            if (0 === r) return !0;
                            e = r < 0 ? e.left : e.right
                        }
                        return !1
                    }, t.prototype.forEach = function(t, e) {
                        for (var n = this._root, r = [], i = !1; !i;) null !== n ? (r.push(n), n = n.left) : 0 !== r.length ? (n = r.pop(), t.call(e, n), n = n.right) : i = !0;
                        return this
                    }, t.prototype.range = function(t, e, n, r) {
                        for (var i = [], o = this._comparator, a = this._root; 0 !== i.length || a;)
                            if (a) i.push(a), a = a.left;
                            else {
                                if (o((a = i.pop()).key, e) > 0) break;
                                if (o(a.key, t) >= 0 && n.call(r, a)) return this;
                                a = a.right
                            }
                        return this
                    }, t.prototype.keys = function() {
                        var t = [];
                        return this.forEach((function(e) {
                            var n = e.key;
                            return t.push(n)
                        })), t
                    }, t.prototype.values = function() {
                        var t = [];
                        return this.forEach((function(e) {
                            var n = e.data;
                            return t.push(n)
                        })), t
                    }, t.prototype.min = function() {
                        return this._root ? this.minNode(this._root).key : null
                    }, t.prototype.max = function() {
                        return this._root ? this.maxNode(this._root).key : null
                    }, t.prototype.minNode = function(t) {
                        if (void 0 === t && (t = this._root), t)
                            for (; t.left;) t = t.left;
                        return t
                    }, t.prototype.maxNode = function(t) {
                        if (void 0 === t && (t = this._root), t)
                            for (; t.right;) t = t.right;
                        return t
                    }, t.prototype.at = function(t) {
                        for (var e = this._root, n = !1, r = 0, i = []; !n;)
                            if (e) i.push(e), e = e.left;
                            else if (i.length > 0) {
                            if (e = i.pop(), r === t) return e;
                            r++, e = e.right
                        } else n = !0;
                        return null
                    }, t.prototype.next = function(t) {
                        var e = this._root,
                            n = null;
                        if (t.right) {
                            for (n = t.right; n.left;) n = n.left;
                            return n
                        }
                        for (var r = this._comparator; e;) {
                            var i = r(t.key, e.key);
                            if (0 === i) break;
                            i < 0 ? (n = e, e = e.left) : e = e.right
                        }
                        return n
                    }, t.prototype.prev = function(t) {
                        var e = this._root,
                            n = null;
                        if (null !== t.left) {
                            for (n = t.left; n.right;) n = n.right;
                            return n
                        }
                        for (var r = this._comparator; e;) {
                            var i = r(t.key, e.key);
                            if (0 === i) break;
                            i < 0 ? e = e.left : (n = e, e = e.right)
                        }
                        return n
                    }, t.prototype.clear = function() {
                        return this._root = null, this._size = 0, this
                    }, t.prototype.toList = function() {
                        return p(this._root)
                    }, t.prototype.load = function(t, e, n) {
                        void 0 === e && (e = []), void 0 === n && (n = !1);
                        var r = t.length,
                            i = this._comparator;
                        if (n && v(t, e, 0, r - 1, i), null === this._root) this._root = h(t, e, 0, r), this._size = r;
                        else {
                            var o = y(this.toList(), d(t, e), i);
                            r = this._size + r, this._root = g({
                                head: o
                            }, 0, r)
                        }
                        return this
                    }, t.prototype.isEmpty = function() {
                        return null === this._root
                    }, Object.defineProperty(t.prototype, "size", {
                        get: function() {
                            return this._size
                        },
                        enumerable: !0,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "root", {
                        get: function() {
                            return this._root
                        },
                        enumerable: !0,
                        configurable: !0
                    }), t.prototype.toString = function(t) {
                        void 0 === t && (t = function(t) {
                            return String(t.key)
                        });
                        var e = [];
                        return l(this._root, "", !0, (function(t) {
                            return e.push(t)
                        }), t), e.join("")
                    }, t.prototype.update = function(t, e, n) {
                        var r = this._comparator,
                            i = u(t, this._root, r),
                            o = i.left,
                            a = i.right;
                        r(t, e) < 0 ? a = s(e, n, a, r) : o = s(e, n, o, r), this._root = c(o, a, r)
                    }, t.prototype.split = function(t) {
                        return u(t, this._root, this._comparator)
                    }, t
                }();

                function h(t, e, n, r) {
                    var o = r - n;
                    if (o > 0) {
                        var a = n + Math.floor(o / 2),
                            s = t[a],
                            u = e[a],
                            c = new i(s, u);
                        return c.left = h(t, e, n, a), c.right = h(t, e, a + 1, r), c
                    }
                    return null
                }

                function d(t, e) {
                    for (var n = new i(null, null), r = n, o = 0; o < t.length; o++) r = r.next = new i(t[o], e[o]);
                    return r.next = null, n.next
                }

                function p(t) {
                    for (var e = t, n = [], r = !1, o = new i(null, null), a = o; !r;) e ? (n.push(e), e = e.left) : n.length > 0 ? e = (e = a = a.next = n.pop()).right : r = !0;
                    return a.next = null, o.next
                }

                function g(t, e, n) {
                    var r = n - e;
                    if (r > 0) {
                        var i = e + Math.floor(r / 2),
                            o = g(t, e, i),
                            a = t.head;
                        return a.left = o, t.head = t.head.next, a.right = g(t, i + 1, n), a
                    }
                    return null
                }

                function y(t, e, n) {
                    for (var r = new i(null, null), o = r, a = t, s = e; null !== a && null !== s;) n(a.key, s.key) < 0 ? (o.next = a, a = a.next) : (o.next = s, s = s.next), o = o.next;
                    return null !== a ? o.next = a : null !== s && (o.next = s), r.next
                }

                function v(t, e, n, r, i) {
                    if (!(n >= r)) {
                        for (var o = t[n + r >> 1], a = n - 1, s = r + 1;;) {
                            do {
                                a++
                            } while (i(t[a], o) < 0);
                            do {
                                s--
                            } while (i(t[s], o) > 0);
                            if (a >= s) break;
                            var u = t[a];
                            t[a] = t[s], t[s] = u, u = e[a], e[a] = e[s], e[s] = u
                        }
                        v(t, e, n, s, i), v(t, e, s + 1, r, i)
                    }
                }
                var m = function(t, e) {
                        return t.ll.x <= e.x && e.x <= t.ur.x && t.ll.y <= e.y && e.y <= t.ur.y
                    },
                    b = function(t, e) {
                        if (e.ur.x < t.ll.x || t.ur.x < e.ll.x || e.ur.y < t.ll.y || t.ur.y < e.ll.y) return null;
                        var n = t.ll.x < e.ll.x ? e.ll.x : t.ll.x,
                            r = t.ur.x < e.ur.x ? t.ur.x : e.ur.x;
                        return {
                            ll: {
                                x: n,
                                y: t.ll.y < e.ll.y ? e.ll.y : t.ll.y
                            },
                            ur: {
                                x: r,
                                y: t.ur.y < e.ur.y ? t.ur.y : e.ur.y
                            }
                        }
                    },
                    w = Number.EPSILON;
                void 0 === w && (w = Math.pow(2, -52));
                var _ = w * w,
                    P = function(t, e) {
                        if (-w < t && t < w && -w < e && e < w) return 0;
                        var n = t - e;
                        return n * n < _ * t * e ? 0 : t < e ? -1 : 1
                    },
                    E = function() {
                        function e() {
                            t(this, e), this.reset()
                        }
                        return n(e, [{
                            key: "reset",
                            value: function() {
                                this.xRounder = new x, this.yRounder = new x
                            }
                        }, {
                            key: "round",
                            value: function(t, e) {
                                return {
                                    x: this.xRounder.round(t),
                                    y: this.yRounder.round(e)
                                }
                            }
                        }]), e
                    }(),
                    x = function() {
                        function e() {
                            t(this, e), this.tree = new f, this.round(0)
                        }
                        return n(e, [{
                            key: "round",
                            value: function(t) {
                                var e = this.tree.add(t),
                                    n = this.tree.prev(e);
                                if (null !== n && 0 === P(e.key, n.key)) return this.tree.remove(t), n.key;
                                var r = this.tree.next(e);
                                return null !== r && 0 === P(e.key, r.key) ? (this.tree.remove(t), r.key) : t
                            }
                        }]), e
                    }(),
                    S = new E,
                    O = function(t, e) {
                        return t.x * e.y - t.y * e.x
                    },
                    T = function(t, e) {
                        return t.x * e.x + t.y * e.y
                    },
                    M = function(t, e, n) {
                        var r = {
                                x: e.x - t.x,
                                y: e.y - t.y
                            },
                            i = {
                                x: n.x - t.x,
                                y: n.y - t.y
                            },
                            o = O(r, i);
                        return P(o, 0)
                    },
                    C = function(t) {
                        return Math.sqrt(T(t, t))
                    },
                    A = function(t, e, n) {
                        var r = {
                                x: e.x - t.x,
                                y: e.y - t.y
                            },
                            i = {
                                x: n.x - t.x,
                                y: n.y - t.y
                            };
                        return O(i, r) / C(i) / C(r)
                    },
                    k = function(t, e, n) {
                        var r = {
                                x: e.x - t.x,
                                y: e.y - t.y
                            },
                            i = {
                                x: n.x - t.x,
                                y: n.y - t.y
                            };
                        return T(i, r) / C(i) / C(r)
                    },
                    I = function(t, e, n) {
                        return 0 === e.y ? null : {
                            x: t.x + e.x / e.y * (n - t.y),
                            y: n
                        }
                    },
                    j = function(t, e, n) {
                        return 0 === e.x ? null : {
                            x: n,
                            y: t.y + e.y / e.x * (n - t.x)
                        }
                    },
                    L = function(t, e, n, r) {
                        if (0 === e.x) return j(n, r, t.x);
                        if (0 === r.x) return j(t, e, n.x);
                        if (0 === e.y) return I(n, r, t.y);
                        if (0 === r.y) return I(t, e, n.y);
                        var i = O(e, r);
                        if (0 == i) return null;
                        var o = {
                                x: n.x - t.x,
                                y: n.y - t.y
                            },
                            a = O(o, e) / i,
                            s = O(o, r) / i;
                        return {
                            x: (t.x + s * e.x + (n.x + a * r.x)) / 2,
                            y: (t.y + s * e.y + (n.y + a * r.y)) / 2
                        }
                    },
                    R = function() {
                        function e(n, r) {
                            t(this, e), void 0 === n.events ? n.events = [this] : n.events.push(this), this.point = n, this.isLeft = r
                        }
                        return n(e, null, [{
                            key: "compare",
                            value: function(t, n) {
                                var r = e.comparePoints(t.point, n.point);
                                return 0 !== r ? r : (t.point !== n.point && t.link(n), t.isLeft !== n.isLeft ? t.isLeft ? 1 : -1 : F.compare(t.segment, n.segment))
                            }
                        }, {
                            key: "comparePoints",
                            value: function(t, e) {
                                return t.x < e.x ? -1 : t.x > e.x ? 1 : t.y < e.y ? -1 : t.y > e.y ? 1 : 0
                            }
                        }]), n(e, [{
                            key: "link",
                            value: function(t) {
                                if (t.point === this.point) throw new Error("Tried to link already linked events");
                                for (var e = t.point.events, n = 0, r = e.length; n < r; n++) {
                                    var i = e[n];
                                    this.point.events.push(i), i.point = this.point
                                }
                                this.checkForConsuming()
                            }
                        }, {
                            key: "checkForConsuming",
                            value: function() {
                                for (var t = this.point.events.length, e = 0; e < t; e++) {
                                    var n = this.point.events[e];
                                    if (void 0 === n.segment.consumedBy)
                                        for (var r = e + 1; r < t; r++) {
                                            var i = this.point.events[r];
                                            void 0 === i.consumedBy && n.otherSE.point.events === i.otherSE.point.events && n.segment.consume(i.segment)
                                        }
                                }
                            }
                        }, {
                            key: "getAvailableLinkedEvents",
                            value: function() {
                                for (var t = [], e = 0, n = this.point.events.length; e < n; e++) {
                                    var r = this.point.events[e];
                                    r !== this && !r.segment.ringOut && r.segment.isInResult() && t.push(r)
                                }
                                return t
                            }
                        }, {
                            key: "getLeftmostComparator",
                            value: function(t) {
                                var e = this,
                                    n = new Map,
                                    r = function(r) {
                                        var i = r.otherSE;
                                        n.set(r, {
                                            sine: A(e.point, t.point, i.point),
                                            cosine: k(e.point, t.point, i.point)
                                        })
                                    };
                                return function(t, e) {
                                    n.has(t) || r(t), n.has(e) || r(e);
                                    var i = n.get(t),
                                        o = i.sine,
                                        a = i.cosine,
                                        s = n.get(e),
                                        u = s.sine,
                                        c = s.cosine;
                                    return o >= 0 && u >= 0 ? a < c ? 1 : a > c ? -1 : 0 : o < 0 && u < 0 ? a < c ? -1 : a > c ? 1 : 0 : u < o ? -1 : u > o ? 1 : 0
                                }
                            }
                        }]), e
                    }(),
                    D = 0,
                    F = function() {
                        function e(n, r, i, o) {
                            t(this, e), this.id = ++D, this.leftSE = n, n.segment = this, n.otherSE = r, this.rightSE = r, r.segment = this, r.otherSE = n, this.rings = i, this.windings = o
                        }
                        return n(e, null, [{
                            key: "compare",
                            value: function(t, e) {
                                var n = t.leftSE.point.x,
                                    r = e.leftSE.point.x,
                                    i = t.rightSE.point.x,
                                    o = e.rightSE.point.x;
                                if (o < n) return 1;
                                if (i < r) return -1;
                                var a = t.leftSE.point.y,
                                    s = e.leftSE.point.y,
                                    u = t.rightSE.point.y,
                                    c = e.rightSE.point.y;
                                if (n < r) {
                                    if (s < a && s < u) return 1;
                                    if (s > a && s > u) return -1;
                                    var l = t.comparePoint(e.leftSE.point);
                                    if (l < 0) return 1;
                                    if (l > 0) return -1;
                                    var f = e.comparePoint(t.rightSE.point);
                                    return 0 !== f ? f : -1
                                }
                                if (n > r) {
                                    if (a < s && a < c) return -1;
                                    if (a > s && a > c) return 1;
                                    var h = e.comparePoint(t.leftSE.point);
                                    if (0 !== h) return h;
                                    var d = t.comparePoint(e.rightSE.point);
                                    return d < 0 ? 1 : d > 0 ? -1 : 1
                                }
                                if (a < s) return -1;
                                if (a > s) return 1;
                                if (i < o) {
                                    var p = e.comparePoint(t.rightSE.point);
                                    if (0 !== p) return p
                                }
                                if (i > o) {
                                    var g = t.comparePoint(e.rightSE.point);
                                    if (g < 0) return 1;
                                    if (g > 0) return -1
                                }
                                if (i !== o) {
                                    var y = u - a,
                                        v = i - n,
                                        m = c - s,
                                        b = o - r;
                                    if (y > v && m < b) return 1;
                                    if (y < v && m > b) return -1
                                }
                                return i > o ? 1 : i < o || u < c ? -1 : u > c ? 1 : t.id < e.id ? -1 : t.id > e.id ? 1 : 0
                            }
                        }]), n(e, [{
                            key: "replaceRightSE",
                            value: function(t) {
                                this.rightSE = t, this.rightSE.segment = this, this.rightSE.otherSE = this.leftSE, this.leftSE.otherSE = this.rightSE
                            }
                        }, {
                            key: "bbox",
                            value: function() {
                                var t = this.leftSE.point.y,
                                    e = this.rightSE.point.y;
                                return {
                                    ll: {
                                        x: this.leftSE.point.x,
                                        y: t < e ? t : e
                                    },
                                    ur: {
                                        x: this.rightSE.point.x,
                                        y: t > e ? t : e
                                    }
                                }
                            }
                        }, {
                            key: "vector",
                            value: function() {
                                return {
                                    x: this.rightSE.point.x - this.leftSE.point.x,
                                    y: this.rightSE.point.y - this.leftSE.point.y
                                }
                            }
                        }, {
                            key: "isAnEndpoint",
                            value: function(t) {
                                return t.x === this.leftSE.point.x && t.y === this.leftSE.point.y || t.x === this.rightSE.point.x && t.y === this.rightSE.point.y
                            }
                        }, {
                            key: "comparePoint",
                            value: function(t) {
                                if (this.isAnEndpoint(t)) return 0;
                                var e = this.leftSE.point,
                                    n = this.rightSE.point,
                                    r = this.vector();
                                if (e.x === n.x) return t.x === e.x ? 0 : t.x < e.x ? 1 : -1;
                                var i = (t.y - e.y) / r.y,
                                    o = e.x + i * r.x;
                                if (t.x === o) return 0;
                                var a = (t.x - e.x) / r.x,
                                    s = e.y + a * r.y;
                                return t.y === s ? 0 : t.y < s ? -1 : 1
                            }
                        }, {
                            key: "getIntersection",
                            value: function(t) {
                                var e = this.bbox(),
                                    n = t.bbox(),
                                    r = b(e, n);
                                if (null === r) return null;
                                var i = this.leftSE.point,
                                    o = this.rightSE.point,
                                    a = t.leftSE.point,
                                    s = t.rightSE.point,
                                    u = m(e, a) && 0 === this.comparePoint(a),
                                    c = m(n, i) && 0 === t.comparePoint(i),
                                    l = m(e, s) && 0 === this.comparePoint(s),
                                    f = m(n, o) && 0 === t.comparePoint(o);
                                if (c && u) return f && !l ? o : !f && l ? s : null;
                                if (c) return l && i.x === s.x && i.y === s.y ? null : i;
                                if (u) return f && o.x === a.x && o.y === a.y ? null : a;
                                if (f && l) return null;
                                if (f) return o;
                                if (l) return s;
                                var h = L(i, this.vector(), a, t.vector());
                                return null === h ? null : m(r, h) ? S.round(h.x, h.y) : null
                            }
                        }, {
                            key: "split",
                            value: function(t) {
                                var n = [],
                                    r = void 0 !== t.events,
                                    i = new R(t, !0),
                                    o = new R(t, !1),
                                    a = this.rightSE;
                                this.replaceRightSE(o), n.push(o), n.push(i);
                                var s = new e(i, a, this.rings.slice(), this.windings.slice());
                                return R.comparePoints(s.leftSE.point, s.rightSE.point) > 0 && s.swapEvents(), R.comparePoints(this.leftSE.point, this.rightSE.point) > 0 && this.swapEvents(), r && (i.checkForConsuming(), o.checkForConsuming()), n
                            }
                        }, {
                            key: "swapEvents",
                            value: function() {
                                var t = this.rightSE;
                                this.rightSE = this.leftSE, this.leftSE = t, this.leftSE.isLeft = !0, this.rightSE.isLeft = !1;
                                for (var e = 0, n = this.windings.length; e < n; e++) this.windings[e] *= -1
                            }
                        }, {
                            key: "consume",
                            value: function(t) {
                                for (var n = this, r = t; n.consumedBy;) n = n.consumedBy;
                                for (; r.consumedBy;) r = r.consumedBy;
                                var i = e.compare(n, r);
                                if (0 !== i) {
                                    if (i > 0) {
                                        var o = n;
                                        n = r, r = o
                                    }
                                    if (n.prev === r) {
                                        var a = n;
                                        n = r, r = a
                                    }
                                    for (var s = 0, u = r.rings.length; s < u; s++) {
                                        var c = r.rings[s],
                                            l = r.windings[s],
                                            f = n.rings.indexOf(c); - 1 === f ? (n.rings.push(c), n.windings.push(l)) : n.windings[f] += l
                                    }
                                    r.rings = null, r.windings = null, r.consumedBy = n, r.leftSE.consumedBy = n.leftSE, r.rightSE.consumedBy = n.rightSE
                                }
                            }
                        }, {
                            key: "prevInResult",
                            value: function() {
                                return void 0 !== this._prevInResult || (this.prev ? this.prev.isInResult() ? this._prevInResult = this.prev : this._prevInResult = this.prev.prevInResult() : this._prevInResult = null), this._prevInResult
                            }
                        }, {
                            key: "beforeState",
                            value: function() {
                                if (void 0 !== this._beforeState) return this._beforeState;
                                if (this.prev) {
                                    var t = this.prev.consumedBy || this.prev;
                                    this._beforeState = t.afterState()
                                } else this._beforeState = {
                                    rings: [],
                                    windings: [],
                                    multiPolys: []
                                };
                                return this._beforeState
                            }
                        }, {
                            key: "afterState",
                            value: function() {
                                if (void 0 !== this._afterState) return this._afterState;
                                var t = this.beforeState();
                                this._afterState = {
                                    rings: t.rings.slice(0),
                                    windings: t.windings.slice(0),
                                    multiPolys: []
                                };
                                for (var e = this._afterState.rings, n = this._afterState.windings, r = this._afterState.multiPolys, i = 0, o = this.rings.length; i < o; i++) {
                                    var a = this.rings[i],
                                        s = this.windings[i],
                                        u = e.indexOf(a); - 1 === u ? (e.push(a), n.push(s)) : n[u] += s
                                }
                                for (var c = [], l = [], f = 0, h = e.length; f < h; f++)
                                    if (0 !== n[f]) {
                                        var d = e[f],
                                            p = d.poly;
                                        if (-1 === l.indexOf(p))
                                            if (d.isExterior) c.push(p);
                                            else {
                                                -1 === l.indexOf(p) && l.push(p);
                                                var g = c.indexOf(d.poly); - 1 !== g && c.splice(g, 1)
                                            }
                                    }
                                for (var y = 0, v = c.length; y < v; y++) {
                                    var m = c[y].multiPoly; - 1 === r.indexOf(m) && r.push(m)
                                }
                                return this._afterState
                            }
                        }, {
                            key: "isInResult",
                            value: function() {
                                if (this.consumedBy) return !1;
                                if (void 0 !== this._isInResult) return this._isInResult;
                                var t = this.beforeState().multiPolys,
                                    e = this.afterState().multiPolys;
                                switch (Y.type) {
                                    case "union":
                                        var n = 0 === t.length,
                                            r = 0 === e.length;
                                        this._isInResult = n !== r;
                                        break;
                                    case "intersection":
                                        var i, o;
                                        t.length < e.length ? (i = t.length, o = e.length) : (i = e.length, o = t.length), this._isInResult = o === Y.numMultiPolys && i < o;
                                        break;
                                    case "xor":
                                        var a = Math.abs(t.length - e.length);
                                        this._isInResult = a % 2 === 1;
                                        break;
                                    case "difference":
                                        var s = function(t) {
                                            return 1 === t.length && t[0].isSubject
                                        };
                                        this._isInResult = s(t) !== s(e);
                                        break;
                                    default:
                                        throw new Error("Unrecognized operation type found ".concat(Y.type))
                                }
                                return this._isInResult
                            }
                        }], [{
                            key: "fromRing",
                            value: function(t, n, r) {
                                var i, o, a, s = R.comparePoints(t, n);
                                if (s < 0) i = t, o = n, a = 1;
                                else {
                                    if (!(s > 0)) throw new Error("Tried to create degenerate segment at [".concat(t.x, ", ").concat(t.y, "]"));
                                    i = n, o = t, a = -1
                                }
                                return new e(new R(i, !0), new R(o, !1), [r], [a])
                            }
                        }]), e
                    }(),
                    N = function() {
                        function e(n, r, i) {
                            if (t(this, e), !Array.isArray(n) || 0 === n.length) throw new Error("Input geometry is not a valid Polygon or MultiPolygon");
                            if (this.poly = r, this.isExterior = i, this.segments = [], "number" !== typeof n[0][0] || "number" !== typeof n[0][1]) throw new Error("Input geometry is not a valid Polygon or MultiPolygon");
                            var o = S.round(n[0][0], n[0][1]);
                            this.bbox = {
                                ll: {
                                    x: o.x,
                                    y: o.y
                                },
                                ur: {
                                    x: o.x,
                                    y: o.y
                                }
                            };
                            for (var a = o, s = 1, u = n.length; s < u; s++) {
                                if ("number" !== typeof n[s][0] || "number" !== typeof n[s][1]) throw new Error("Input geometry is not a valid Polygon or MultiPolygon");
                                var c = S.round(n[s][0], n[s][1]);
                                c.x === a.x && c.y === a.y || (this.segments.push(F.fromRing(a, c, this)), c.x < this.bbox.ll.x && (this.bbox.ll.x = c.x), c.y < this.bbox.ll.y && (this.bbox.ll.y = c.y), c.x > this.bbox.ur.x && (this.bbox.ur.x = c.x), c.y > this.bbox.ur.y && (this.bbox.ur.y = c.y), a = c)
                            }
                            o.x === a.x && o.y === a.y || this.segments.push(F.fromRing(a, o, this))
                        }
                        return n(e, [{
                            key: "getSweepEvents",
                            value: function() {
                                for (var t = [], e = 0, n = this.segments.length; e < n; e++) {
                                    var r = this.segments[e];
                                    t.push(r.leftSE), t.push(r.rightSE)
                                }
                                return t
                            }
                        }]), e
                    }(),
                    z = function() {
                        function e(n, r) {
                            if (t(this, e), !Array.isArray(n)) throw new Error("Input geometry is not a valid Polygon or MultiPolygon");
                            this.exteriorRing = new N(n[0], this, !0), this.bbox = {
                                ll: {
                                    x: this.exteriorRing.bbox.ll.x,
                                    y: this.exteriorRing.bbox.ll.y
                                },
                                ur: {
                                    x: this.exteriorRing.bbox.ur.x,
                                    y: this.exteriorRing.bbox.ur.y
                                }
                            }, this.interiorRings = [];
                            for (var i = 1, o = n.length; i < o; i++) {
                                var a = new N(n[i], this, !1);
                                a.bbox.ll.x < this.bbox.ll.x && (this.bbox.ll.x = a.bbox.ll.x), a.bbox.ll.y < this.bbox.ll.y && (this.bbox.ll.y = a.bbox.ll.y), a.bbox.ur.x > this.bbox.ur.x && (this.bbox.ur.x = a.bbox.ur.x), a.bbox.ur.y > this.bbox.ur.y && (this.bbox.ur.y = a.bbox.ur.y), this.interiorRings.push(a)
                            }
                            this.multiPoly = r
                        }
                        return n(e, [{
                            key: "getSweepEvents",
                            value: function() {
                                for (var t = this.exteriorRing.getSweepEvents(), e = 0, n = this.interiorRings.length; e < n; e++)
                                    for (var r = this.interiorRings[e].getSweepEvents(), i = 0, o = r.length; i < o; i++) t.push(r[i]);
                                return t
                            }
                        }]), e
                    }(),
                    B = function() {
                        function e(n, r) {
                            if (t(this, e), !Array.isArray(n)) throw new Error("Input geometry is not a valid Polygon or MultiPolygon");
                            try {
                                "number" === typeof n[0][0][0] && (n = [n])
                            } catch (s) {}
                            this.polys = [], this.bbox = {
                                ll: {
                                    x: Number.POSITIVE_INFINITY,
                                    y: Number.POSITIVE_INFINITY
                                },
                                ur: {
                                    x: Number.NEGATIVE_INFINITY,
                                    y: Number.NEGATIVE_INFINITY
                                }
                            };
                            for (var i = 0, o = n.length; i < o; i++) {
                                var a = new z(n[i], this);
                                a.bbox.ll.x < this.bbox.ll.x && (this.bbox.ll.x = a.bbox.ll.x), a.bbox.ll.y < this.bbox.ll.y && (this.bbox.ll.y = a.bbox.ll.y), a.bbox.ur.x > this.bbox.ur.x && (this.bbox.ur.x = a.bbox.ur.x), a.bbox.ur.y > this.bbox.ur.y && (this.bbox.ur.y = a.bbox.ur.y), this.polys.push(a)
                            }
                            this.isSubject = r
                        }
                        return n(e, [{
                            key: "getSweepEvents",
                            value: function() {
                                for (var t = [], e = 0, n = this.polys.length; e < n; e++)
                                    for (var r = this.polys[e].getSweepEvents(), i = 0, o = r.length; i < o; i++) t.push(r[i]);
                                return t
                            }
                        }]), e
                    }(),
                    U = function() {
                        function e(n) {
                            t(this, e), this.events = n;
                            for (var r = 0, i = n.length; r < i; r++) n[r].segment.ringOut = this;
                            this.poly = null
                        }
                        return n(e, null, [{
                            key: "factory",
                            value: function(t) {
                                for (var n = [], r = 0, i = t.length; r < i; r++) {
                                    var o = t[r];
                                    if (o.isInResult() && !o.ringOut) {
                                        for (var a = null, s = o.leftSE, u = o.rightSE, c = [s], l = s.point, f = []; a = s, s = u, c.push(s), s.point !== l;)
                                            for (;;) {
                                                var h = s.getAvailableLinkedEvents();
                                                if (0 === h.length) {
                                                    var d = c[0].point,
                                                        p = c[c.length - 1].point;
                                                    throw new Error("Unable to complete output ring starting at [".concat(d.x, ",") + " ".concat(d.y, "]. Last matching segment found ends at") + " [".concat(p.x, ", ").concat(p.y, "]."))
                                                }
                                                if (1 === h.length) {
                                                    u = h[0].otherSE;
                                                    break
                                                }
                                                for (var g = null, y = 0, v = f.length; y < v; y++)
                                                    if (f[y].point === s.point) {
                                                        g = y;
                                                        break
                                                    }
                                                if (null === g) {
                                                    f.push({
                                                        index: c.length,
                                                        point: s.point
                                                    });
                                                    var m = s.getLeftmostComparator(a);
                                                    u = h.sort(m)[0].otherSE;
                                                    break
                                                }
                                                var b = f.splice(g)[0],
                                                    w = c.splice(b.index);
                                                w.unshift(w[0].otherSE), n.push(new e(w.reverse()))
                                            }
                                        n.push(new e(c))
                                    }
                                }
                                return n
                            }
                        }]), n(e, [{
                            key: "getGeom",
                            value: function() {
                                for (var t = this.events[0].point, e = [t], n = 1, r = this.events.length - 1; n < r; n++) {
                                    var i = this.events[n].point,
                                        o = this.events[n + 1].point;
                                    0 !== M(i, t, o) && (e.push(i), t = i)
                                }
                                if (1 === e.length) return null;
                                var a = e[0],
                                    s = e[1];
                                0 === M(a, t, s) && e.shift(), e.push(e[0]);
                                for (var u = this.isExteriorRing() ? 1 : -1, c = this.isExteriorRing() ? 0 : e.length - 1, l = this.isExteriorRing() ? e.length : -1, f = [], h = c; h != l; h += u) f.push([e[h].x, e[h].y]);
                                return f
                            }
                        }, {
                            key: "isExteriorRing",
                            value: function() {
                                if (void 0 === this._isExteriorRing) {
                                    var t = this.enclosingRing();
                                    this._isExteriorRing = !t || !t.isExteriorRing()
                                }
                                return this._isExteriorRing
                            }
                        }, {
                            key: "enclosingRing",
                            value: function() {
                                return void 0 === this._enclosingRing && (this._enclosingRing = this._calcEnclosingRing()), this._enclosingRing
                            }
                        }, {
                            key: "_calcEnclosingRing",
                            value: function() {
                                for (var t = this.events[0], e = 1, n = this.events.length; e < n; e++) {
                                    var r = this.events[e];
                                    R.compare(t, r) > 0 && (t = r)
                                }
                                for (var i = t.segment.prevInResult(), o = i ? i.prevInResult() : null;;) {
                                    if (!i) return null;
                                    if (!o) return i.ringOut;
                                    if (o.ringOut !== i.ringOut) return o.ringOut.enclosingRing() !== i.ringOut ? i.ringOut : i.ringOut.enclosingRing();
                                    i = o.prevInResult(), o = i ? i.prevInResult() : null
                                }
                            }
                        }]), e
                    }(),
                    G = function() {
                        function e(n) {
                            t(this, e), this.exteriorRing = n, n.poly = this, this.interiorRings = []
                        }
                        return n(e, [{
                            key: "addInterior",
                            value: function(t) {
                                this.interiorRings.push(t), t.poly = this
                            }
                        }, {
                            key: "getGeom",
                            value: function() {
                                var t = [this.exteriorRing.getGeom()];
                                if (null === t[0]) return null;
                                for (var e = 0, n = this.interiorRings.length; e < n; e++) {
                                    var r = this.interiorRings[e].getGeom();
                                    null !== r && t.push(r)
                                }
                                return t
                            }
                        }]), e
                    }(),
                    Z = function() {
                        function e(n) {
                            t(this, e), this.rings = n, this.polys = this._composePolys(n)
                        }
                        return n(e, [{
                            key: "getGeom",
                            value: function() {
                                for (var t = [], e = 0, n = this.polys.length; e < n; e++) {
                                    var r = this.polys[e].getGeom();
                                    null !== r && t.push(r)
                                }
                                return t
                            }
                        }, {
                            key: "_composePolys",
                            value: function(t) {
                                for (var e = [], n = 0, r = t.length; n < r; n++) {
                                    var i = t[n];
                                    if (!i.poly)
                                        if (i.isExteriorRing()) e.push(new G(i));
                                        else {
                                            var o = i.enclosingRing();
                                            o.poly || e.push(new G(o)), o.poly.addInterior(i)
                                        }
                                }
                                return e
                            }
                        }]), e
                    }(),
                    V = function() {
                        function e(n) {
                            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : F.compare;
                            t(this, e), this.queue = n, this.tree = new f(r), this.segments = []
                        }
                        return n(e, [{
                            key: "process",
                            value: function(t) {
                                var e = t.segment,
                                    n = [];
                                if (t.consumedBy) return t.isLeft ? this.queue.remove(t.otherSE) : this.tree.remove(e), n;
                                var r = t.isLeft ? this.tree.insert(e) : this.tree.find(e);
                                if (!r) throw new Error("Unable to find segment #".concat(e.id, " ") + "[".concat(e.leftSE.point.x, ", ").concat(e.leftSE.point.y, "] -> ") + "[".concat(e.rightSE.point.x, ", ").concat(e.rightSE.point.y, "] ") + "in SweepLine tree. Please submit a bug report.");
                                for (var i = r, o = r, a = void 0, s = void 0; void 0 === a;) null === (i = this.tree.prev(i)) ? a = null : void 0 === i.key.consumedBy && (a = i.key);
                                for (; void 0 === s;) null === (o = this.tree.next(o)) ? s = null : void 0 === o.key.consumedBy && (s = o.key);
                                if (t.isLeft) {
                                    var u = null;
                                    if (a) {
                                        var c = a.getIntersection(e);
                                        if (null !== c && (e.isAnEndpoint(c) || (u = c), !a.isAnEndpoint(c)))
                                            for (var l = this._splitSafely(a, c), f = 0, h = l.length; f < h; f++) n.push(l[f])
                                    }
                                    var d = null;
                                    if (s) {
                                        var p = s.getIntersection(e);
                                        if (null !== p && (e.isAnEndpoint(p) || (d = p), !s.isAnEndpoint(p)))
                                            for (var g = this._splitSafely(s, p), y = 0, v = g.length; y < v; y++) n.push(g[y])
                                    }
                                    if (null !== u || null !== d) {
                                        var m = null;
                                        m = null === u ? d : null === d || R.comparePoints(u, d) <= 0 ? u : d, this.queue.remove(e.rightSE), n.push(e.rightSE);
                                        for (var b = e.split(m), w = 0, _ = b.length; w < _; w++) n.push(b[w])
                                    }
                                    n.length > 0 ? (this.tree.remove(e), n.push(t)) : (this.segments.push(e), e.prev = a)
                                } else {
                                    if (a && s) {
                                        var P = a.getIntersection(s);
                                        if (null !== P) {
                                            if (!a.isAnEndpoint(P))
                                                for (var E = this._splitSafely(a, P), x = 0, S = E.length; x < S; x++) n.push(E[x]);
                                            if (!s.isAnEndpoint(P))
                                                for (var O = this._splitSafely(s, P), T = 0, M = O.length; T < M; T++) n.push(O[T])
                                        }
                                    }
                                    this.tree.remove(e)
                                }
                                return n
                            }
                        }, {
                            key: "_splitSafely",
                            value: function(t, e) {
                                this.tree.remove(t);
                                var n = t.rightSE;
                                this.queue.remove(n);
                                var r = t.split(e);
                                return r.push(n), void 0 === t.consumedBy && this.tree.insert(t), r
                            }
                        }]), e
                    }(),
                    H = "undefined" !== typeof r && r.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1e6,
                    W = "undefined" !== typeof r && r.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1e6,
                    Y = new(function() {
                        function e() {
                            t(this, e)
                        }
                        return n(e, [{
                            key: "run",
                            value: function(t, e, n) {
                                Y.type = t, S.reset();
                                for (var r = [new B(e, !0)], i = 0, o = n.length; i < o; i++) r.push(new B(n[i], !1));
                                if (Y.numMultiPolys = r.length, "difference" === Y.type)
                                    for (var a = r[0], s = 1; s < r.length;) null !== b(r[s].bbox, a.bbox) ? s++ : r.splice(s, 1);
                                if ("intersection" === Y.type)
                                    for (var u = 0, c = r.length; u < c; u++)
                                        for (var l = r[u], h = u + 1, d = r.length; h < d; h++)
                                            if (null === b(l.bbox, r[h].bbox)) return [];
                                for (var p = new f(R.compare), g = 0, y = r.length; g < y; g++)
                                    for (var v = r[g].getSweepEvents(), m = 0, w = v.length; m < w; m++)
                                        if (p.insert(v[m]), p.size > H) throw new Error("Infinite loop when putting segment endpoints in a priority queue (queue size too big). Please file a bug report.");
                                for (var _ = new V(p), P = p.size, E = p.pop(); E;) {
                                    var x = E.key;
                                    if (p.size === P) {
                                        var O = x.segment;
                                        throw new Error("Unable to pop() ".concat(x.isLeft ? "left" : "right", " SweepEvent ") + "[".concat(x.point.x, ", ").concat(x.point.y, "] from segment #").concat(O.id, " ") + "[".concat(O.leftSE.point.x, ", ").concat(O.leftSE.point.y, "] -> ") + "[".concat(O.rightSE.point.x, ", ").concat(O.rightSE.point.y, "] from queue. ") + "Please file a bug report.")
                                    }
                                    if (p.size > H) throw new Error("Infinite loop when passing sweep line over endpoints (queue size too big). Please file a bug report.");
                                    if (_.segments.length > W) throw new Error("Infinite loop when passing sweep line over endpoints (too many sweep line segments). Please file a bug report.");
                                    for (var T = _.process(x), M = 0, C = T.length; M < C; M++) {
                                        var A = T[M];
                                        void 0 === A.consumedBy && p.insert(A)
                                    }
                                    P = p.size, E = p.pop()
                                }
                                S.reset();
                                var k = U.factory(_.segments);
                                return new Z(k).getGeom()
                            }
                        }]), e
                    }());
                return {
                    union: function(t) {
                        for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) n[r - 1] = arguments[r];
                        return Y.run("union", t, n)
                    },
                    intersection: function(t) {
                        for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) n[r - 1] = arguments[r];
                        return Y.run("intersection", t, n)
                    },
                    xor: function(t) {
                        for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) n[r - 1] = arguments[r];
                        return Y.run("xor", t, n)
                    },
                    difference: function(t) {
                        for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) n[r - 1] = arguments[r];
                        return Y.run("difference", t, n)
                    }
                }
            }()
        },
        18297: function(t, e, n) {
            "use strict";
            var r = n(95318);
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isMobile = function() {
                return "undefined" !== typeof i.window.orientation
            }, e.default = function(t) {
                if (!t && !(0, o.default)()) return "Node";
                if ((0, a.default)(t)) return "Electron";
                var e = "undefined" !== typeof navigator ? navigator : {},
                    n = t || e.userAgent || "";
                if (n.indexOf("Edge") > -1) return "Edge";
                var r = -1 !== n.indexOf("MSIE "),
                    s = -1 !== n.indexOf("Trident/");
                if (r || s) return "IE";
                if (i.window.chrome) return "Chrome";
                if (i.window.safari) return "Safari";
                if (i.window.mozInnerScreenX) return "Firefox";
                return "Unknown"
            };
            var i = n(92361),
                o = r(n(22999)),
                a = r(n(33941))
        },
        92361: function(t, e, n) {
            "use strict";
            var r = n(83454),
                i = n(95318);
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.console = e.process = e.document = e.global = e.window = e.self = void 0;
            var o = i(n(50008)),
                a = {
                    self: "undefined" !== typeof self && self,
                    window: "undefined" !== typeof window && window,
                    global: "undefined" !== typeof n.g && n.g,
                    document: "undefined" !== typeof document && document,
                    process: "object" === ("undefined" === typeof r ? "undefined" : (0, o.default)(r)) && r
                },
                s = a.self || a.window || a.global;
            e.self = s;
            var u = a.window || a.self || a.global;
            e.window = u;
            var c = a.global || a.self || a.window;
            e.global = c;
            var l = a.document || {};
            e.document = l;
            var f = a.process || {};
            e.process = f;
            var h = console;
            e.console = h
        },
        89718: function(t, e, n) {
            "use strict";
            var r = n(95318),
                i = n(50008);
            Object.defineProperty(e, "CO", {
                enumerable: !0,
                get: function() {
                    return o.global
                }
            }), Object.defineProperty(e, "jU", {
                enumerable: !0,
                get: function() {
                    return a.default
                }
            }), Object.defineProperty(e, "qs", {
                enumerable: !0,
                get: function() {
                    return s.default
                }
            });
            var o = n(92361),
                a = l(n(22999)),
                s = l(n(18297)),
                u = r(n(33941));

            function c(t) {
                if ("function" !== typeof WeakMap) return null;
                var e = new WeakMap,
                    n = new WeakMap;
                return (c = function(t) {
                    return t ? n : e
                })(t)
            }

            function l(t, e) {
                if (!e && t && t.__esModule) return t;
                if (null === t || "object" !== i(t) && "function" !== typeof t) return {
                    default: t
                };
                var n = c(e);
                if (n && n.has(t)) return n.get(t);
                var r = {},
                    o = Object.defineProperty && Object.getOwnPropertyDescriptor;
                for (var a in t)
                    if ("default" !== a && Object.prototype.hasOwnProperty.call(t, a)) {
                        var s = o ? Object.getOwnPropertyDescriptor(t, a) : null;
                        s && (s.get || s.set) ? Object.defineProperty(r, a, s) : r[a] = t[a]
                    }
                return r.default = t, n && n.set(t, r), r
            }
        },
        22999: function(t, e, n) {
            "use strict";
            var r = n(83454),
                i = n(95318);
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = s, e.isBrowserMainThread = function() {
                return s() && "undefined" !== typeof document
            };
            var o = i(n(50008)),
                a = i(n(33941));

            function s() {
                return !("object" === ("undefined" === typeof r ? "undefined" : (0, o.default)(r)) && "[object process]" === String(r) && !1) || (0, a.default)()
            }
        },
        33941: function(t, e, n) {
            "use strict";
            var r = n(83454),
                i = n(95318);
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = function(t) {
                if ("undefined" !== typeof window && "object" === (0, o.default)(window.process) && "renderer" === window.process.type) return !0;
                if ("undefined" !== typeof r && "object" === (0, o.default)(r.versions) && Boolean(r.versions.electron)) return !0;
                var e = "object" === ("undefined" === typeof navigator ? "undefined" : (0, o.default)(navigator)) && "string" === typeof navigator.userAgent && navigator.userAgent,
                    n = t || e;
                if (n && n.indexOf("Electron") >= 0) return !0;
                return !1
            };
            var o = i(n(50008))
        },
        26073: function(t, e, n) {
            "use strict";
            n.d(e, {
                u9: function() {
                    return o
                },
                N4: function() {
                    return a
                }
            });
            var r = n(83454);
            const i = {
                    self: "undefined" !== typeof self && self,
                    window: "undefined" !== typeof window && window,
                    global: "undefined" !== typeof n.g && n.g,
                    document: "undefined" !== typeof document && document,
                    process: "object" === typeof r && r
                },
                o = i.window || i.self || i.global,
                a = i.process || {};
            console
        },
        25989: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return o
                }
            });
            var r = n(71202),
                i = n(83454);

            function o() {
                return !("object" === typeof i && "[object process]" === String(i) && !1) || (0, r.Z)()
            }
        },
        71202: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return i
                }
            });
            var r = n(83454);

            function i(t) {
                if ("undefined" !== typeof window && "object" === typeof window.process && "renderer" === window.process.type) return !0;
                if ("undefined" !== typeof r && "object" === typeof r.versions && Boolean(r.versions.electron)) return !0;
                const e = "object" === typeof navigator && "string" === typeof navigator.userAgent && navigator.userAgent,
                    n = t || e;
                return !!(n && n.indexOf("Electron") >= 0)
            }
        },
        65028: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return b
                }
            });
            var r = n(25989);
            const i = "undefined" !== typeof __VERSION__ ? __VERSION__ : "untranspiled source",
                o = (0, r.Z)();
            class a {
                constructor(t, e, n = "sessionStorage") {
                    this.storage = function(t) {
                        try {
                            const e = window[t],
                                n = "__storage_test__";
                            return e.setItem(n, n), e.removeItem(n), e
                        } catch (e) {
                            return null
                        }
                    }(n), this.id = t, this.config = {}, Object.assign(this.config, e), this._loadConfiguration()
                }
                getConfiguration() {
                    return this.config
                }
                setConfiguration(t) {
                    return this.config = {}, this.updateConfiguration(t)
                }
                updateConfiguration(t) {
                    if (Object.assign(this.config, t), this.storage) {
                        const t = JSON.stringify(this.config);
                        this.storage.setItem(this.id, t)
                    }
                    return this
                }
                _loadConfiguration() {
                    let t = {};
                    if (this.storage) {
                        const e = this.storage.getItem(this.id);
                        t = e ? JSON.parse(e) : {}
                    }
                    return Object.assign(this.config, t), this
                }
            }

            function s(t, e, n, r = 600) {
                const i = t.src.replace(/\(/g, "%28").replace(/\)/g, "%29");
                t.width > r && (n = Math.min(n, r / t.width));
                const o = t.width * n,
                    a = t.height * n,
                    s = ["font-size:1px;", "padding:".concat(Math.floor(a / 2), "px ").concat(Math.floor(o / 2), "px;"), "line-height:".concat(a, "px;"), "background:url(".concat(i, ");"), "background-size:".concat(o, "px ").concat(a, "px;"), "color:transparent;"].join("");
                return ["".concat(e, " %c+"), s]
            }
            const u = {
                BLACK: 30,
                RED: 31,
                GREEN: 32,
                YELLOW: 33,
                BLUE: 34,
                MAGENTA: 35,
                CYAN: 36,
                WHITE: 37,
                BRIGHT_BLACK: 90,
                BRIGHT_RED: 91,
                BRIGHT_GREEN: 92,
                BRIGHT_YELLOW: 93,
                BRIGHT_BLUE: 94,
                BRIGHT_MAGENTA: 95,
                BRIGHT_CYAN: 96,
                BRIGHT_WHITE: 97
            };

            function c(t) {
                return "string" === typeof t ? u[t.toUpperCase()] || u.WHITE : t
            }

            function l(t, e) {
                if (!t) throw new Error(e || "Assertion failed")
            }
            var f = n(26073);

            function h() {
                let t;
                if (o && f.u9.performance) t = f.u9.performance.now();
                else if (f.N4.hrtime) {
                    const e = f.N4.hrtime();
                    t = 1e3 * e[0] + e[1] / 1e6
                } else t = Date.now();
                return t
            }
            const d = {
                    debug: o && console.debug || console.log,
                    log: console.log,
                    info: console.info,
                    warn: console.warn,
                    error: console.error
                },
                p = {
                    enabled: !0,
                    level: 0
                };

            function g() {}
            const y = {},
                v = {
                    once: !0
                };

            function m(t) {
                for (const e in t)
                    for (const n in t[e]) return n || "untitled";
                return "empty"
            }
            class b {
                constructor({
                    id: t
                } = {
                    id: ""
                }) {
                    this.id = t, this.VERSION = i, this._startTs = h(), this._deltaTs = h(), this.LOG_THROTTLE_TIMEOUT = 0, this._storage = new a("__probe-".concat(this.id, "__"), p), this.userData = {}, this.timeStamp("".concat(this.id, " started")),
                        function(t, e = ["constructor"]) {
                            const n = Object.getPrototypeOf(t),
                                r = Object.getOwnPropertyNames(n);
                            for (const i of r) "function" === typeof t[i] && (e.find((t => i === t)) || (t[i] = t[i].bind(t)))
                        }(this), Object.seal(this)
                }
                set level(t) {
                    this.setLevel(t)
                }
                get level() {
                    return this.getLevel()
                }
                isEnabled() {
                    return this._storage.config.enabled
                }
                getLevel() {
                    return this._storage.config.level
                }
                getTotal() {
                    return Number((h() - this._startTs).toPrecision(10))
                }
                getDelta() {
                    return Number((h() - this._deltaTs).toPrecision(10))
                }
                set priority(t) {
                    this.level = t
                }
                get priority() {
                    return this.level
                }
                getPriority() {
                    return this.level
                }
                enable(t = !0) {
                    return this._storage.updateConfiguration({
                        enabled: t
                    }), this
                }
                setLevel(t) {
                    return this._storage.updateConfiguration({
                        level: t
                    }), this
                }
                assert(t, e) {
                    l(t, e)
                }
                warn(t) {
                    return this._getLogFunction(0, t, d.warn, arguments, v)
                }
                error(t) {
                    return this._getLogFunction(0, t, d.error, arguments)
                }
                deprecated(t, e) {
                    return this.warn("`".concat(t, "` is deprecated and will be removed in a later version. Use `").concat(e, "` instead"))
                }
                removed(t, e) {
                    return this.error("`".concat(t, "` has been removed. Use `").concat(e, "` instead"))
                }
                probe(t, e) {
                    return this._getLogFunction(t, e, d.log, arguments, {
                        time: !0,
                        once: !0
                    })
                }
                log(t, e) {
                    return this._getLogFunction(t, e, d.debug, arguments)
                }
                info(t, e) {
                    return this._getLogFunction(t, e, console.info, arguments)
                }
                once(t, e) {
                    return this._getLogFunction(t, e, d.debug || d.info, arguments, v)
                }
                table(t, e, n) {
                    return e ? this._getLogFunction(t, e, console.table || g, n && [n], {
                        tag: m(e)
                    }) : g
                }
                image({
                    logLevel: t,
                    priority: e,
                    image: r,
                    message: i = "",
                    scale: a = 1
                }) {
                    return this._shouldLog(t || e) ? o ? function({
                        image: t,
                        message: e = "",
                        scale: n = 1
                    }) {
                        if ("string" === typeof t) {
                            const r = new Image;
                            return r.onload = () => {
                                const t = s(r, e, n);
                                console.log(...t)
                            }, r.src = t, g
                        }
                        const r = t.nodeName || "";
                        if ("img" === r.toLowerCase()) return console.log(...s(t, e, n)), g;
                        if ("canvas" === r.toLowerCase()) {
                            const r = new Image;
                            return r.onload = () => console.log(...s(r, e, n)), r.src = t.toDataURL(), g
                        }
                        return g
                    }({
                        image: r,
                        message: i,
                        scale: a
                    }) : function({
                        image: t,
                        message: e = "",
                        scale: r = 1
                    }) {
                        let i = null;
                        try {
                            i = n(75307)
                        } catch (o) {}
                        if (i) return () => i(t, {
                            fit: "box",
                            width: "".concat(Math.round(80 * r), "%")
                        }).then((t => console.log(t)));
                        return g
                    }({
                        image: r,
                        message: i,
                        scale: a
                    }) : g
                }
                settings() {
                    console.table ? console.table(this._storage.config) : console.log(this._storage.config)
                }
                get(t) {
                    return this._storage.config[t]
                }
                set(t, e) {
                    this._storage.updateConfiguration({
                        [t]: e
                    })
                }
                time(t, e) {
                    return this._getLogFunction(t, e, console.time ? console.time : console.info)
                }
                timeEnd(t, e) {
                    return this._getLogFunction(t, e, console.timeEnd ? console.timeEnd : console.info)
                }
                timeStamp(t, e) {
                    return this._getLogFunction(t, e, console.timeStamp || g)
                }
                group(t, e, n = {
                    collapsed: !1
                }) {
                    n = _({
                        logLevel: t,
                        message: e,
                        opts: n
                    });
                    const {
                        collapsed: r
                    } = n;
                    return n.method = (r ? console.groupCollapsed : console.group) || console.info, this._getLogFunction(n)
                }
                groupCollapsed(t, e, n = {}) {
                    return this.group(t, e, Object.assign({}, n, {
                        collapsed: !0
                    }))
                }
                groupEnd(t) {
                    return this._getLogFunction(t, "", console.groupEnd || g)
                }
                withGroup(t, e, n) {
                    this.group(t, e)();
                    try {
                        n()
                    } finally {
                        this.groupEnd(t)()
                    }
                }
                trace() {
                    console.trace && console.trace()
                }
                _shouldLog(t) {
                    return this.isEnabled() && this.getLevel() >= w(t)
                }
                _getLogFunction(t, e, n, r = [], i) {
                    if (this._shouldLog(t)) {
                        i = _({
                            logLevel: t,
                            message: e,
                            args: r,
                            opts: i
                        }), l(n = n || i.method), i.total = this.getTotal(), i.delta = this.getDelta(), this._deltaTs = h();
                        const a = i.tag || i.message;
                        if (i.once) {
                            if (y[a]) return g;
                            y[a] = h()
                        }
                        return e = function(t, e, n) {
                            if ("string" === typeof e) {
                                const s = n.time ? function(t, e = 8) {
                                    const n = Math.max(e - t.length, 0);
                                    return "".concat(" ".repeat(n)).concat(t)
                                }(function(t) {
                                    let e;
                                    return e = t < 10 ? "".concat(t.toFixed(2), "ms") : t < 100 ? "".concat(t.toFixed(1), "ms") : t < 1e3 ? "".concat(t.toFixed(0), "ms") : "".concat((t / 1e3).toFixed(2), "s"), e
                                }(n.total)) : "";
                                e = n.time ? "".concat(t, ": ").concat(s, "  ").concat(e) : "".concat(t, ": ").concat(e), r = e, i = n.color, a = n.background, o || "string" !== typeof r || (i && (i = c(i), r = "\x1b[".concat(i, "m").concat(r, "\x1b[39m")), a && (i = c(a), r = "\x1b[".concat(a + 10, "m").concat(r, "\x1b[49m"))), e = r
                            }
                            var r, i, a;
                            return e
                        }(this.id, i.message, i), n.bind(console, e, ...i.args)
                    }
                    return g
                }
            }

            function w(t) {
                if (!t) return 0;
                let e;
                switch (typeof t) {
                    case "number":
                        e = t;
                        break;
                    case "object":
                        e = t.logLevel || t.priority || 0;
                        break;
                    default:
                        return 0
                }
                return l(Number.isFinite(e) && e >= 0), e
            }

            function _(t) {
                const {
                    logLevel: e,
                    message: n
                } = t;
                t.logLevel = w(e);
                const r = t.args ? Array.from(t.args) : [];
                for (; r.length && r.shift() !== n;);
                switch (t.args = r, typeof e) {
                    case "string":
                    case "function":
                        void 0 !== n && r.unshift(n), t.message = e;
                        break;
                    case "object":
                        Object.assign(t, e)
                }
                "function" === typeof t.message && (t.message = t.message());
                const i = typeof t.message;
                return l("string" === i || "object" === i), Object.assign(t, t.opts)
            }
            b.VERSION = i
        },
        65510: function(t, e, n) {
            "use strict";
            t.exports = i, t.exports.default = i;
            var r = n(84291);

            function i(t, e) {
                if (!(this instanceof i)) return new i(t, e);
                this._maxEntries = Math.max(4, t || 9), this._minEntries = Math.max(2, Math.ceil(.4 * this._maxEntries)), e && this._initFormat(e), this.clear()
            }

            function o(t, e, n) {
                if (!n) return e.indexOf(t);
                for (var r = 0; r < e.length; r++)
                    if (n(t, e[r])) return r;
                return -1
            }

            function a(t, e) {
                s(t, 0, t.children.length, e, t)
            }

            function s(t, e, n, r, i) {
                i || (i = y(null)), i.minX = 1 / 0, i.minY = 1 / 0, i.maxX = -1 / 0, i.maxY = -1 / 0;
                for (var o, a = e; a < n; a++) o = t.children[a], u(i, t.leaf ? r(o) : o);
                return i
            }

            function u(t, e) {
                return t.minX = Math.min(t.minX, e.minX), t.minY = Math.min(t.minY, e.minY), t.maxX = Math.max(t.maxX, e.maxX), t.maxY = Math.max(t.maxY, e.maxY), t
            }

            function c(t, e) {
                return t.minX - e.minX
            }

            function l(t, e) {
                return t.minY - e.minY
            }

            function f(t) {
                return (t.maxX - t.minX) * (t.maxY - t.minY)
            }

            function h(t) {
                return t.maxX - t.minX + (t.maxY - t.minY)
            }

            function d(t, e) {
                var n = Math.max(t.minX, e.minX),
                    r = Math.max(t.minY, e.minY),
                    i = Math.min(t.maxX, e.maxX),
                    o = Math.min(t.maxY, e.maxY);
                return Math.max(0, i - n) * Math.max(0, o - r)
            }

            function p(t, e) {
                return t.minX <= e.minX && t.minY <= e.minY && e.maxX <= t.maxX && e.maxY <= t.maxY
            }

            function g(t, e) {
                return e.minX <= t.maxX && e.minY <= t.maxY && e.maxX >= t.minX && e.maxY >= t.minY
            }

            function y(t) {
                return {
                    children: t,
                    height: 1,
                    leaf: !0,
                    minX: 1 / 0,
                    minY: 1 / 0,
                    maxX: -1 / 0,
                    maxY: -1 / 0
                }
            }

            function v(t, e, n, i, o) {
                for (var a, s = [e, n]; s.length;)(n = s.pop()) - (e = s.pop()) <= i || (a = e + Math.ceil((n - e) / i / 2) * i, r(t, a, e, n, o), s.push(e, a, a, n))
            }
            i.prototype = {
                all: function() {
                    return this._all(this.data, [])
                },
                search: function(t) {
                    var e = this.data,
                        n = [],
                        r = this.toBBox;
                    if (!g(t, e)) return n;
                    for (var i, o, a, s, u = []; e;) {
                        for (i = 0, o = e.children.length; i < o; i++) a = e.children[i], g(t, s = e.leaf ? r(a) : a) && (e.leaf ? n.push(a) : p(t, s) ? this._all(a, n) : u.push(a));
                        e = u.pop()
                    }
                    return n
                },
                collides: function(t) {
                    var e = this.data,
                        n = this.toBBox;
                    if (!g(t, e)) return !1;
                    for (var r, i, o, a, s = []; e;) {
                        for (r = 0, i = e.children.length; r < i; r++)
                            if (o = e.children[r], g(t, a = e.leaf ? n(o) : o)) {
                                if (e.leaf || p(t, a)) return !0;
                                s.push(o)
                            }
                        e = s.pop()
                    }
                    return !1
                },
                load: function(t) {
                    if (!t || !t.length) return this;
                    if (t.length < this._minEntries) {
                        for (var e = 0, n = t.length; e < n; e++) this.insert(t[e]);
                        return this
                    }
                    var r = this._build(t.slice(), 0, t.length - 1, 0);
                    if (this.data.children.length)
                        if (this.data.height === r.height) this._splitRoot(this.data, r);
                        else {
                            if (this.data.height < r.height) {
                                var i = this.data;
                                this.data = r, r = i
                            }
                            this._insert(r, this.data.height - r.height - 1, !0)
                        }
                    else this.data = r;
                    return this
                },
                insert: function(t) {
                    return t && this._insert(t, this.data.height - 1), this
                },
                clear: function() {
                    return this.data = y([]), this
                },
                remove: function(t, e) {
                    if (!t) return this;
                    for (var n, r, i, a, s = this.data, u = this.toBBox(t), c = [], l = []; s || c.length;) {
                        if (s || (s = c.pop(), r = c[c.length - 1], n = l.pop(), a = !0), s.leaf && -1 !== (i = o(t, s.children, e))) return s.children.splice(i, 1), c.push(s), this._condense(c), this;
                        a || s.leaf || !p(s, u) ? r ? (n++, s = r.children[n], a = !1) : s = null : (c.push(s), l.push(n), n = 0, r = s, s = s.children[0])
                    }
                    return this
                },
                toBBox: function(t) {
                    return t
                },
                compareMinX: c,
                compareMinY: l,
                toJSON: function() {
                    return this.data
                },
                fromJSON: function(t) {
                    return this.data = t, this
                },
                _all: function(t, e) {
                    for (var n = []; t;) t.leaf ? e.push.apply(e, t.children) : n.push.apply(n, t.children), t = n.pop();
                    return e
                },
                _build: function(t, e, n, r) {
                    var i, o = n - e + 1,
                        s = this._maxEntries;
                    if (o <= s) return a(i = y(t.slice(e, n + 1)), this.toBBox), i;
                    r || (r = Math.ceil(Math.log(o) / Math.log(s)), s = Math.ceil(o / Math.pow(s, r - 1))), (i = y([])).leaf = !1, i.height = r;
                    var u, c, l, f, h = Math.ceil(o / s),
                        d = h * Math.ceil(Math.sqrt(s));
                    for (v(t, e, n, d, this.compareMinX), u = e; u <= n; u += d)
                        for (v(t, u, l = Math.min(u + d - 1, n), h, this.compareMinY), c = u; c <= l; c += h) f = Math.min(c + h - 1, l), i.children.push(this._build(t, c, f, r - 1));
                    return a(i, this.toBBox), i
                },
                _chooseSubtree: function(t, e, n, r) {
                    for (var i, o, a, s, u, c, l, h, d, p; r.push(e), !e.leaf && r.length - 1 !== n;) {
                        for (l = h = 1 / 0, i = 0, o = e.children.length; i < o; i++) u = f(a = e.children[i]), d = t, p = a, (c = (Math.max(p.maxX, d.maxX) - Math.min(p.minX, d.minX)) * (Math.max(p.maxY, d.maxY) - Math.min(p.minY, d.minY)) - u) < h ? (h = c, l = u < l ? u : l, s = a) : c === h && u < l && (l = u, s = a);
                        e = s || e.children[0]
                    }
                    return e
                },
                _insert: function(t, e, n) {
                    var r = this.toBBox,
                        i = n ? t : r(t),
                        o = [],
                        a = this._chooseSubtree(i, this.data, e, o);
                    for (a.children.push(t), u(a, i); e >= 0 && o[e].children.length > this._maxEntries;) this._split(o, e), e--;
                    this._adjustParentBBoxes(i, o, e)
                },
                _split: function(t, e) {
                    var n = t[e],
                        r = n.children.length,
                        i = this._minEntries;
                    this._chooseSplitAxis(n, i, r);
                    var o = this._chooseSplitIndex(n, i, r),
                        s = y(n.children.splice(o, n.children.length - o));
                    s.height = n.height, s.leaf = n.leaf, a(n, this.toBBox), a(s, this.toBBox), e ? t[e - 1].children.push(s) : this._splitRoot(n, s)
                },
                _splitRoot: function(t, e) {
                    this.data = y([t, e]), this.data.height = t.height + 1, this.data.leaf = !1, a(this.data, this.toBBox)
                },
                _chooseSplitIndex: function(t, e, n) {
                    var r, i, o, a, u, c, l, h;
                    for (c = l = 1 / 0, r = e; r <= n - e; r++) a = d(i = s(t, 0, r, this.toBBox), o = s(t, r, n, this.toBBox)), u = f(i) + f(o), a < c ? (c = a, h = r, l = u < l ? u : l) : a === c && u < l && (l = u, h = r);
                    return h
                },
                _chooseSplitAxis: function(t, e, n) {
                    var r = t.leaf ? this.compareMinX : c,
                        i = t.leaf ? this.compareMinY : l;
                    this._allDistMargin(t, e, n, r) < this._allDistMargin(t, e, n, i) && t.children.sort(r)
                },
                _allDistMargin: function(t, e, n, r) {
                    t.children.sort(r);
                    var i, o, a = this.toBBox,
                        c = s(t, 0, e, a),
                        l = s(t, n - e, n, a),
                        f = h(c) + h(l);
                    for (i = e; i < n - e; i++) o = t.children[i], u(c, t.leaf ? a(o) : o), f += h(c);
                    for (i = n - e - 1; i >= e; i--) o = t.children[i], u(l, t.leaf ? a(o) : o), f += h(l);
                    return f
                },
                _adjustParentBBoxes: function(t, e, n) {
                    for (var r = n; r >= 0; r--) u(e[r], t)
                },
                _condense: function(t) {
                    for (var e, n = t.length - 1; n >= 0; n--) 0 === t[n].children.length ? n > 0 ? (e = t[n - 1].children).splice(e.indexOf(t[n]), 1) : this.clear() : a(t[n], this.toBBox)
                },
                _initFormat: function(t) {
                    var e = ["return a", " - b", ";"];
                    this.compareMinX = new Function("a", "b", e.join(t[0])), this.compareMinY = new Function("a", "b", e.join(t[1])), this.toBBox = new Function("a", "return {minX: a" + t[0] + ", minY: a" + t[1] + ", maxX: a" + t[2] + ", maxY: a" + t[3] + "};")
                }
            }
        },
        84291: function(t) {
            t.exports = function() {
                "use strict";

                function t(t, n, i, o, a) {
                    e(t, n, i || 0, o || t.length - 1, a || r)
                }

                function e(t, r, i, o, a) {
                    for (; o > i;) {
                        if (o - i > 600) {
                            var s = o - i + 1,
                                u = r - i + 1,
                                c = Math.log(s),
                                l = .5 * Math.exp(2 * c / 3),
                                f = .5 * Math.sqrt(c * l * (s - l) / s) * (u - s / 2 < 0 ? -1 : 1);
                            e(t, r, Math.max(i, Math.floor(r - u * l / s + f)), Math.min(o, Math.floor(r + (s - u) * l / s + f)), a)
                        }
                        var h = t[r],
                            d = i,
                            p = o;
                        for (n(t, i, r), a(t[o], h) > 0 && n(t, i, o); d < p;) {
                            for (n(t, d, p), d++, p--; a(t[d], h) < 0;) d++;
                            for (; a(t[p], h) > 0;) p--
                        }
                        0 === a(t[i], h) ? n(t, i, p) : n(t, ++p, o), p <= r && (i = p + 1), r <= p && (o = p - 1)
                    }
                }

                function n(t, e, n) {
                    var r = t[e];
                    t[e] = t[n], t[n] = r
                }

                function r(t, e) {
                    return t < e ? -1 : t > e ? 1 : 0
                }
                return t
            }()
        },
        10663: function(t, e) {
            "use strict";
            var n, r, i, o, a, s, u;
            Object.defineProperty(e, "__esModule", {
                    value: !0
                }), e.EDIT_TYPE = e.ELEMENT_TYPE = e.GUIDE_TYPE = e.RENDER_STATE = e.RENDER_TYPE = e.SHAPE = e.GEOJSON_TYPE = void 0, e.GEOJSON_TYPE = n,
                function(t) {
                    t.POINT = "Point", t.LINE_STRING = "LineString", t.POLYGON = "Polygon"
                }(n || (e.GEOJSON_TYPE = n = {})), e.SHAPE = r,
                function(t) {
                    t.POINT = "Point", t.LINE_STRING = "LineString", t.POLYGON = "Polygon", t.RECTANGLE = "Rectangle", t.CIRCLE = "Circle"
                }(r || (e.SHAPE = r = {})), e.RENDER_TYPE = i,
                function(t) {
                    t.POINT = "Point", t.LINE_STRING = "LineString", t.POLYGON = "Polygon", t.RECTANGLE = "Rectangle"
                }(i || (e.RENDER_TYPE = i = {})), e.RENDER_STATE = o,
                function(t) {
                    t.INACTIVE = "INACTIVE", t.UNCOMMITTED = "UNCOMMITTED", t.SELECTED = "SELECTED", t.HOVERED = "HOVERED", t.CLOSING = "CLOSING"
                }(o || (e.RENDER_STATE = o = {})), e.GUIDE_TYPE = a,
                function(t) {
                    t.TENTATIVE = "tentative", t.EDIT_HANDLE = "editHandle", t.CURSOR_EDIT_HANDLE = "cursorEditHandle"
                }(a || (e.GUIDE_TYPE = a = {})), e.ELEMENT_TYPE = s,
                function(t) {
                    t.FEATURE = "feature", t.FILL = "fill", t.SEGMENT = "segment", t.EDIT_HANDLE = "editHandle"
                }(s || (e.ELEMENT_TYPE = s = {})), e.EDIT_TYPE = u,
                function(t) {
                    t.ADD_FEATURE = "addFeature", t.ADD_POSITION = "addPosition", t.REMOVE_POSITION = "removePosition", t.MOVE_POSITION = "movePosition", t.FINISH_MOVE_POSITION = "finishMovePosition"
                }(u || (e.EDIT_TYPE = u = {}))
        },
        76191: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = void 0;
            var r = n(10663),
                i = n(71103);

            function o(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function a(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var s = function() {
                function t() {
                    var e = this;
                    ! function(t, e) {
                        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), a(this, "_tentativeFeature", void 0), a(this, "_editHandles", void 0), a(this, "getTentativeFeature", (function() {
                        return e._tentativeFeature
                    })), a(this, "getEditHandles", (function() {
                        return e._editHandles
                    })), a(this, "setTentativeFeature", (function(t) {
                        e._tentativeFeature = t
                    })), a(this, "getSelectedFeature", (function(t, e) {
                        var n = t.data,
                            r = t.selectedIndexes,
                            o = n && n.features,
                            a = (0, i.isNumeric)(e) ? Number(e) : r && r[0];
                        return o && o[a]
                    })), this._tentativeFeature = null, this._editHandles = null
                }
                var e, n, s;
                return e = t, (n = [{
                    key: "handlePan",
                    value: function(t, e) {}
                }, {
                    key: "handleClick",
                    value: function(t, e) {}
                }, {
                    key: "handleDblClick",
                    value: function(t, e) {}
                }, {
                    key: "handlePointerMove",
                    value: function(t, e) {}
                }, {
                    key: "handleStartDragging",
                    value: function(t, e) {}
                }, {
                    key: "handleStopDragging",
                    value: function(t, e) {}
                }, {
                    key: "handleKeyUp",
                    value: function(t, e) {}
                }, {
                    key: "getGuides",
                    value: function(t) {
                        return null
                    }
                }, {
                    key: "getTooltips",
                    value: function(t) {
                        return []
                    }
                }, {
                    key: "handleDragging",
                    value: function(t, e) {}
                }, {
                    key: "getEditHandlesFromFeature",
                    value: function(t, e) {
                        var n = (0, i.getFeatureCoordinates)(t);
                        return n ? n.map((function(n, i) {
                            return {
                                type: "Feature",
                                properties: {
                                    renderType: t.properties.renderType,
                                    guideType: r.GUIDE_TYPE.EDIT_HANDLE,
                                    editHandleType: "existing",
                                    featureIndex: e,
                                    positionIndexes: [i]
                                },
                                geometry: {
                                    type: r.GEOJSON_TYPE.POINT,
                                    coordinates: n
                                }
                            }
                        })) : null
                    }
                }]) && o(e.prototype, n), s && o(e, s), t
            }();
            e.default = s
        },
        95848: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = void 0;
            var r, i = n(87359),
                o = n(10663),
                a = (r = n(76191)) && r.__esModule ? r : {
                    default: r
                },
                s = n(71103);

            function u(t) {
                return (u = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function c(t) {
                return function(t) {
                    if (Array.isArray(t)) return l(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return l(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return l(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function l(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function f(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function h(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function d(t, e) {
                return !e || "object" !== u(e) && "function" !== typeof e ? p(t) : e
            }

            function p(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function g() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function y(t) {
                return (y = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function v(t, e) {
                return (v = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function m(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var b = function(t) {
                ! function(t, e) {
                    if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && v(t, e)
                }(l, t);
                var e, n, r, a, u = (e = l, function() {
                    var t, n = y(e);
                    if (g()) {
                        var r = y(this).constructor;
                        t = Reflect.construct(n, arguments, r)
                    } else t = n.apply(this, arguments);
                    return d(this, t)
                });

                function l() {
                    var t;
                    f(this, l);
                    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                    return m(p(t = u.call.apply(u, [this].concat(n))), "handleClick", (function(e, n) {
                        var r = e.picks && e.picks[0],
                            a = n.selectedIndexes && n.selectedIndexes[0];
                        if (r && r.object && r.featureIndex === a) {
                            var u = r.type,
                                c = r.featureIndex,
                                l = r.index,
                                f = t.getSelectedFeature(n, c);
                            if (f && (f.geometry.type === o.GEOJSON_TYPE.POLYGON || f.geometry.type === o.GEOJSON_TYPE.LINE_STRING) && u === o.ELEMENT_TYPE.SEGMENT) {
                                var h = (0, s.getFeatureCoordinates)(f);
                                if (!h) return;
                                var d = (l + 1) % h.length,
                                    p = f.geometry.type === o.SHAPE.POLYGON ? [0, d] : [d],
                                    g = t._getPointOnSegment(f, r, e.mapCoords),
                                    y = new i.ImmutableFeatureCollection(n.data).addPosition(c, p, g).getObject();
                                n.onEdit({
                                    editType: o.EDIT_TYPE.ADD_POSITION,
                                    updatedData: y,
                                    editContext: [{
                                        featureIndex: c,
                                        editHandleIndex: d,
                                        screenCoords: n.viewport && n.viewport.project(g),
                                        mapCoords: g
                                    }]
                                })
                            }
                        }
                    })), m(p(t), "_handleDragging", (function(e, n) {
                        var r = n.onEdit,
                            i = t.getSelectedFeature(n),
                            a = e.isDragging,
                            u = e.pointerDownPicks,
                            c = e.screenCoords,
                            l = n.lastPointerMoveEvent,
                            f = u && u[0];
                        if (f && f.object && (0, s.isNumeric)(f.featureIndex)) {
                            var h = f.type,
                                d = f.index,
                                p = a ? o.EDIT_TYPE.MOVE_POSITION : o.EDIT_TYPE.FINISH_MOVE_POSITION;
                            switch (h) {
                                case o.ELEMENT_TYPE.FEATURE:
                                case o.ELEMENT_TYPE.FILL:
                                case o.ELEMENT_TYPE.SEGMENT:
                                    if (!n.featuresDraggable) break;
                                    var g = c[0] - l.screenCoords[0],
                                        y = c[1] - l.screenCoords[1];
                                    r({
                                        editType: p,
                                        updatedData: t._updateFeature(n, "feature", {
                                            dx: g,
                                            dy: y
                                        }),
                                        editContext: null
                                    });
                                    break;
                                case o.ELEMENT_TYPE.EDIT_HANDLE:
                                    var v = i.properties.shape === o.SHAPE.RECTANGLE ? "rectangle" : "editHandle";
                                    r({
                                        editType: p,
                                        updatedData: t._updateFeature(n, v, {
                                            editHandleIndex: d,
                                            mapCoords: e.mapCoords
                                        }),
                                        editContext: null
                                    })
                            }
                        }
                    })), m(p(t), "handlePointerMove", (function(e, n) {
                        t.getSelectedFeature(n) && e.isDragging && t._handleDragging(e, n)
                    })), m(p(t), "_updateFeature", (function(e, n) {
                        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                            a = e.data,
                            u = e.selectedIndexes,
                            l = e.viewport,
                            f = u && u[0],
                            h = t.getSelectedFeature(e, f),
                            d = null,
                            p = (0, s.getFeatureCoordinates)(h);
                        if (!p) return null;
                        var g = c(p);
                        switch (n) {
                            case "editHandle":
                                var y = h.geometry.type === o.GEOJSON_TYPE.POLYGON ? [0, r.editHandleIndex] : [r.editHandleIndex];
                                return new i.ImmutableFeatureCollection(a).replacePosition(f, y, r.mapCoords).getObject();
                            case "feature":
                                var v = r.dx,
                                    m = r.dy;
                                return g = g.map((function(t) {
                                    var e = l && l.project(t);
                                    return e ? (e[0] += v, e[1] += m, l && l.unproject(e)) : null
                                })).filter(Boolean), d = {
                                    type: h.geometry.type,
                                    coordinates: h.geometry.type === o.GEOJSON_TYPE.POLYGON ? [g] : h.geometry.type === o.GEOJSON_TYPE.POINT ? g[0] : g
                                }, new i.ImmutableFeatureCollection(a).replaceGeometry(f, d).getObject();
                            case "rectangle":
                                return g = (0, s.updateRectanglePosition)(h, r.editHandleIndex, r.mapCoords), d = {
                                    type: o.GEOJSON_TYPE.POLYGON,
                                    coordinates: g
                                }, new i.ImmutableFeatureCollection(a).replaceGeometry(f, d).getObject();
                            default:
                                return a && new i.ImmutableFeatureCollection(a).getObject()
                        }
                    })), m(p(t), "_getCursorEditHandle", (function(e, n) {
                        if (!e) return null;
                        var r = e.isDragging,
                            i = e.picks,
                            a = i && i[0];
                        if (!a || !(0, s.isNumeric)(a.featureIndex) || a.type !== o.ELEMENT_TYPE.SEGMENT) return null;
                        if (r || n.geometry.type !== o.GEOJSON_TYPE.POLYGON && n.geometry.type !== o.GEOJSON_TYPE.LINE_STRING) return null;
                        var u = t._getPointOnSegment(n, a, e.mapCoords);
                        return u ? {
                            type: "Feature",
                            properties: {
                                guideType: o.GUIDE_TYPE.CURSOR_EDIT_HANDLE,
                                shape: n.properties.shape,
                                positionIndexes: [-1],
                                editHandleType: "intermediate"
                            },
                            geometry: {
                                type: o.GEOJSON_TYPE.POINT,
                                coordinates: u
                            }
                        } : null
                    })), m(p(t), "getGuides", (function(e) {
                        var n = t.getSelectedFeature(e),
                            r = e.selectedIndexes && e.selectedIndexes[0];
                        if (!n || n.geometry.type === o.GEOJSON_TYPE.POINT) return null;
                        var i = e.lastPointerMoveEvent,
                            a = t.getEditHandlesFromFeature(n, r) || [],
                            s = t._getCursorEditHandle(i, n);
                        return s && a.push(s), {
                            type: "FeatureCollection",
                            features: a.length ? a : null
                        }
                    })), t
                }
                return n = l, (r = [{
                    key: "handleStopDragging",
                    value: function(t, e) {
                        var n = t.picks && t.picks[0];
                        if (n && n.Object && (0, s.isNumeric)(n.featureIndex)) switch (n.object.type) {
                            case o.ELEMENT_TYPE.FEATURE:
                            case o.ELEMENT_TYPE.FILL:
                            case o.ELEMENT_TYPE.EDIT_HANDLE:
                                this._handleDragging(t, e)
                        }
                    }
                }, {
                    key: "_getPointOnSegment",
                    value: function(t, e, n) {
                        var r = (0, s.getFeatureCoordinates)(t);
                        if (!r) return null;
                        var i = e.index,
                            o = e.index + 1;
                        return (0, s.findClosestPointOnLineSegment)(r[i], r[o], n)
                    }
                }]) && h(n.prototype, r), a && h(n, a), l
            }(a.default);
            e.default = b
        },
        69993: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), Object.defineProperty(e, "EditingMode", {
                enumerable: !0,
                get: function() {
                    return i.default
                }
            });
            var r, i = (r = n(95848)) && r.__esModule ? r : {
                default: r
            }
        },
        71103: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isNumeric = a, e.parseEventElement = function(t, e, n) {
                var i = t.target;
                if (!i || !i.dataset || !i.dataset.type) return null;
                var o = i.dataset.featureIndex;
                o = a(o) ? Number(o) : -1;
                var s = i.dataset.index;
                s = a(s) ? Number(s) : void 0;
                var u = i.dataset.type,
                    c = n && n.find((function(t) {
                        return t.properties.guideType === r.GUIDE_TYPE.TENTATIVE
                    })),
                    l = null,
                    f = !1;
                switch (u) {
                    case r.ELEMENT_TYPE.EDIT_HANDLE:
                        l = n.find((function(t) {
                            var e = t.properties.positionIndexes;
                            return !!e && e[e.length - 1] === s
                        })), f = !0;
                        break;
                    case r.ELEMENT_TYPE.SEGMENT:
                    case r.ELEMENT_TYPE.FEATURE:
                    case r.ELEMENT_TYPE.FILL:
                        l = e[o] || c
                }
                return {
                    object: l,
                    isGuide: f,
                    type: u,
                    index: s,
                    featureIndex: o
                }
            }, e.getScreenCoords = function(t) {
                var e = t.offsetCenter,
                    n = e.x,
                    r = e.y;
                return [Number(n), Number(r)]
            }, e.findClosestPointOnLineSegment = function(t, e, n) {
                var r = (e[1] - t[1]) / (e[0] - t[0]),
                    i = t[1] - r * t[0];
                if (!isFinite(r)) {
                    var o = [t[0], n[1]];
                    return u(t, e, o) ? o : null
                }
                if (n[0] * r + i - n[1] === 0) return u(t, e, n) ? n : null;
                var a = (r * n[1] + n[0] - r * i) / (r * r + 1),
                    s = r * a + i;
                return u(t, e, [a, s]) ? [a, s] : null
            }, e.getFeatureCoordinates = s, e.updateRectanglePosition = function(t, e, n) {
                var o = s(t);
                if (!o) return null;
                var a = o.slice(0, 4);
                a[e % 4] = n;
                var u = a[(e + 2) % 4],
                    c = a[e % 4];
                return a[(e + 1) % 4] = [c[0], u[1]], a[(e + 3) % 4] = [u[0], c[1]], t.geometry.type === r.GEOJSON_TYPE.POLYGON ? [
                    [].concat(i(a), [a[0]])
                ] : a
            };
            var r = n(10663);

            function i(t) {
                return function(t) {
                    if (Array.isArray(t)) return o(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return o(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return o(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function o(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function a(t) {
                return !Array.isArray(t) && !isNaN(parseFloat(t)) && isFinite(t)
            }

            function s(t) {
                var e = t && t.geometry && t.geometry.coordinates;
                if (!e) return null;
                var n = t.geometry.type === r.GEOJSON_TYPE.POLYGON,
                    i = t.geometry.type === r.GEOJSON_TYPE.POINT;
                return n ? e[0] : i ? [e] : e
            }

            function u(t, e, n) {
                var r = [Math.min(t[0], e[0]), Math.max(t[0], e[0]), Math.min(t[1], e[1]), Math.max(t[1], e[1])];
                return n[0] >= r[0] && n[0] <= r[1] && n[1] >= r[2] && n[1] <= r[3]
            }
        },
        35210: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = void 0;
            var r, i = function(t) {
                    if (t && t.__esModule) return t;
                    if (null === t || "object" !== l(t) && "function" !== typeof t) return {
                        default: t
                    };
                    var e = c();
                    if (e && e.has(t)) return e.get(t);
                    var n = {},
                        r = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in t)
                        if (Object.prototype.hasOwnProperty.call(t, i)) {
                            var o = r ? Object.getOwnPropertyDescriptor(t, i) : null;
                            o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = t[i]
                        }
                    n.default = t, e && e.set(t, n);
                    return n
                }(n(67294)),
                o = n(10663),
                a = (r = n(34861)) && r.__esModule ? r : {
                    default: r
                },
                s = n(71103),
                u = n(53723);

            function c() {
                if ("function" !== typeof WeakMap) return null;
                var t = new WeakMap;
                return c = function() {
                    return t
                }, t
            }

            function l(t) {
                return (l = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function f(t) {
                return function(t) {
                    if (Array.isArray(t)) return h(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
                }(t) || function(t, e) {
                    if (!t) return;
                    if ("string" === typeof t) return h(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    "Object" === n && t.constructor && (n = t.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(n);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return h(t, e)
                }(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function h(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function d(t, e) {
                if (null == t) return {};
                var n, r, i = function(t, e) {
                    if (null == t) return {};
                    var n, r, i = {},
                        o = Object.keys(t);
                    for (r = 0; r < o.length; r++) n = o[r], e.indexOf(n) >= 0 || (i[n] = t[n]);
                    return i
                }(t, e);
                if (Object.getOwnPropertySymbols) {
                    var o = Object.getOwnPropertySymbols(t);
                    for (r = 0; r < o.length; r++) n = o[r], e.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(t, n) && (i[n] = t[n])
                }
                return i
            }

            function p(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function g(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function y(t, e) {
                return !e || "object" !== l(e) && "function" !== typeof e ? v(t) : e
            }

            function v(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function m() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function b(t) {
                return (b = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function w(t, e) {
                return (w = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function _(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function P(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? _(Object(n), !0).forEach((function(e) {
                        E(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : _(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }

            function E(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var x = P({}, a.default.defaultProps, {
                    clickRadius: 0,
                    featureShape: "circle",
                    editHandleShape: "rect",
                    editHandleStyle: u.editHandleStyle,
                    featureStyle: u.featureStyle,
                    featuresDraggable: !0
                }),
                S = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && w(t, e)
                    }(c, t);
                    var e, n, r, a, u = (e = c, function() {
                        var t, n = b(e);
                        if (m()) {
                            var r = b(this).constructor;
                            t = Reflect.construct(n, arguments, r)
                        } else t = n.apply(this, arguments);
                        return y(this, t)
                    });

                    function c() {
                        var t;
                        p(this, c);
                        for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                        return E(v(t = u.call.apply(u, [this].concat(n))), "_getEditHandleState", (function(e, n) {
                            var r = t.state,
                                i = r.pointerDownPicks,
                                a = r.hovered;
                            if (n) return n;
                            var s = e.properties.positionIndexes[0],
                                u = null,
                                c = i && i[0] && i[0].object;
                            if (c && c.guideType === o.GUIDE_TYPE.EDIT_HANDLE && (u = c.index), s === u) return o.RENDER_STATE.SELECTED;
                            if (a && a.type === o.ELEMENT_TYPE.EDIT_HANDLE) {
                                if (a.index === s) return o.RENDER_STATE.HOVERED;
                                if (0 === a.index && e.properties.guideType === o.GUIDE_TYPE.CURSOR_EDIT_HANDLE) return o.RENDER_STATE.CLOSING
                            }
                            return o.RENDER_STATE.INACTIVE
                        })), E(v(t), "_getFeatureRenderState", (function(e, n) {
                            var r = t.state.hovered,
                                i = t._getSelectedFeatureIndex();
                            return n || (e === i ? o.RENDER_STATE.SELECTED : r && r.type === o.ELEMENT_TYPE.FEATURE && r.featureIndex === e ? o.RENDER_STATE.HOVERED : o.RENDER_STATE.INACTIVE)
                        })), E(v(t), "_getStyleProp", (function(t, e) {
                            return "function" === typeof t ? t(e) : t
                        })), E(v(t), "_renderEditHandle", (function(e, n) {
                            var r = (0, s.getFeatureCoordinates)(e),
                                a = t.project(r && r[0]);
                            if (!a) return null;
                            var u = e.properties,
                                c = u.featureIndex,
                                l = u.positionIndexes,
                                f = u.editHandleType,
                                h = t.props,
                                d = h.clickRadius,
                                p = h.editHandleShape,
                                g = h.editHandleStyle,
                                y = l.length > 1 ? l[1] : l[0],
                                v = t._getStyleProp(p, {
                                    feature: n || e,
                                    index: y,
                                    featureIndex: c,
                                    state: t._getEditHandleState(e)
                                }),
                                m = t._getStyleProp(g, {
                                    feature: n || e,
                                    index: y,
                                    featureIndex: c,
                                    shape: v,
                                    state: t._getEditHandleState(e)
                                });
                            e.properties.guideType === o.GUIDE_TYPE.CURSOR_EDIT_HANDLE && (m = P({}, m, {
                                pointerEvents: "none"
                            }));
                            var b = "".concat(o.ELEMENT_TYPE.EDIT_HANDLE, ".").concat(c, ".").concat(y, ".").concat(f);
                            switch (v) {
                                case "circle":
                                    return i.createElement("g", {
                                        key: b,
                                        transform: "translate(".concat(a[0], ", ").concat(a[1], ")")
                                    }, i.createElement("circle", {
                                        "data-type": o.ELEMENT_TYPE.EDIT_HANDLE,
                                        "data-index": y,
                                        "data-feature-index": c,
                                        key: "".concat(b, ".hidden"),
                                        style: P({}, m, {
                                            stroke: "none",
                                            fill: "#000",
                                            fillOpacity: 0
                                        }),
                                        cx: 0,
                                        cy: 0,
                                        r: d
                                    }), i.createElement("circle", {
                                        "data-type": o.ELEMENT_TYPE.EDIT_HANDLE,
                                        "data-index": y,
                                        "data-feature-index": c,
                                        key: b,
                                        style: m,
                                        cx: 0,
                                        cy: 0
                                    }));
                                case "rect":
                                    return i.createElement("g", {
                                        key: b,
                                        transform: "translate(".concat(a[0], ", ").concat(a[1], ")")
                                    }, i.createElement("rect", {
                                        "data-type": o.ELEMENT_TYPE.EDIT_HANDLE,
                                        "data-index": y,
                                        "data-feature-index": c,
                                        key: "".concat(b, ".hidden"),
                                        style: P({}, m, {
                                            height: d,
                                            width: d,
                                            fill: "#000",
                                            fillOpacity: 0
                                        }),
                                        r: d
                                    }), i.createElement("rect", {
                                        "data-type": o.ELEMENT_TYPE.EDIT_HANDLE,
                                        "data-index": y,
                                        "data-feature-index": c,
                                        key: "".concat(b),
                                        style: m
                                    }));
                                default:
                                    return null
                            }
                        })), E(v(t), "_renderSegment", (function(e, n, r, a) {
                            var s = t._getPathInScreenCoords(r, o.GEOJSON_TYPE.LINE_STRING),
                                u = a.radius,
                                c = d(a, ["radius"]),
                                l = t.props.clickRadius,
                                f = "".concat(o.ELEMENT_TYPE.SEGMENT, ".").concat(e, ".").concat(n);
                            return i.createElement("g", {
                                key: f
                            }, i.createElement("path", {
                                key: "".concat(f, ".hidden"),
                                "data-type": o.ELEMENT_TYPE.SEGMENT,
                                "data-index": n,
                                "data-feature-index": e,
                                style: P({}, c, {
                                    stroke: "rgba(0,0,0,0)",
                                    strokeWidth: l || u,
                                    opacity: 0
                                }),
                                d: s
                            }), i.createElement("path", {
                                key: f,
                                "data-type": o.ELEMENT_TYPE.SEGMENT,
                                "data-index": n,
                                "data-feature-index": e,
                                style: c,
                                d: s
                            }))
                        })), E(v(t), "_renderSegments", (function(e, n, r) {
                            for (var i = [], o = 0; o < n.length - 1; o++) i.push(t._renderSegment(e, o, [n[o], n[o + 1]], r));
                            return i
                        })), E(v(t), "_renderFill", (function(e, n, r) {
                            var a = t._getPathInScreenCoords(n, o.GEOJSON_TYPE.POLYGON);
                            return i.createElement("path", {
                                key: "".concat(o.ELEMENT_TYPE.FILL, ".").concat(e),
                                "data-type": o.ELEMENT_TYPE.FILL,
                                "data-feature-index": e,
                                style: P({}, r, {
                                    stroke: "none"
                                }),
                                d: a
                            })
                        })), E(v(t), "_renderTentativeFeature", (function(e, n) {
                            var r = t.props.featureStyle,
                                i = e.geometry.type,
                                a = e.properties.shape,
                                u = (0, s.getFeatureCoordinates)(e);
                            if (!u || !Array.isArray(u) || u.length < 2) return null;
                            var c, l, h, d = u[0],
                                p = u[u.length - 1],
                                g = t._getStyleProp(r, {
                                    feature: e,
                                    index: null,
                                    state: o.RENDER_STATE.UNCOMMITTED
                                }),
                                y = t._renderFill("tentative", u, g);
                            switch (a || i) {
                                case o.SHAPE.LINE_STRING:
                                case o.SHAPE.POLYGON:
                                    var v = t._getStyleProp(r, {
                                        feature: e,
                                        state: o.RENDER_STATE.SELECTED
                                    });
                                    if (n) {
                                        var m = u[u.length - 2];
                                        c = t._renderSegments("tentative", u.slice(0, u.length - 1), v), l = t._renderSegment("tentative-uncommitted", u.length - 2, [m, p], g)
                                    } else c = t._renderSegments("tentative", u, v);
                                    if (a === o.SHAPE.POLYGON) {
                                        var b = t._getStyleProp(r, {
                                            feature: e,
                                            index: null,
                                            state: o.RENDER_STATE.CLOSING
                                        });
                                        h = t._renderSegment("tentative-closing", u.length - 1, [p, d], b)
                                    }
                                    break;
                                case o.SHAPE.RECTANGLE:
                                    l = t._renderSegments("tentative", [].concat(f(u), [d]), g)
                            }
                            return [y, c, l, h].filter(Boolean)
                        })), E(v(t), "_renderGuides", (function(e) {
                            var n = t.getFeatures(),
                                r = e && e.find((function(t) {
                                    return t.properties.guideType === o.GUIDE_TYPE.CURSOR_EDIT_HANDLE
                                })),
                                a = n.find((function(t) {
                                    return t.properties.guideType === o.GUIDE_TYPE.TENTATIVE
                                }));
                            return i.createElement("g", {
                                key: "feature-guides"
                            }, e.map((function(e) {
                                switch (e.properties.guideType) {
                                    case o.GUIDE_TYPE.TENTATIVE:
                                        return t._renderTentativeFeature(e, r);
                                    case o.GUIDE_TYPE.EDIT_HANDLE:
                                    case o.GUIDE_TYPE.CURSOR_EDIT_HANDLE:
                                        if ((e.properties.shape || e.geometry.type) === o.SHAPE.RECTANGLE && "intermediate" === e.properties.editHandleType) return null;
                                        var i = n && n[e.properties.featureIndex] || a;
                                        return t._renderEditHandle(e, i);
                                    default:
                                        return null
                                }
                            })))
                        })), E(v(t), "_renderPoint", (function(e, n, r) {
                            var a = t._getFeatureRenderState(n),
                                s = t.props,
                                u = s.featureStyle,
                                c = s.featureShape,
                                l = s.clickRadius,
                                f = t._getStyleProp(c, {
                                    feature: e,
                                    index: n,
                                    state: a
                                }),
                                h = t._getStyleProp(u, {
                                    feature: e,
                                    index: n,
                                    state: a
                                }),
                                d = "feature.".concat(n);
                            return "rect" === f ? i.createElement("g", {
                                key: d,
                                transform: "translate(".concat(r[0][0], ", ").concat(r[0][1], ")")
                            }, i.createElement("rect", {
                                "data-type": o.ELEMENT_TYPE.FEATURE,
                                "data-feature-index": n,
                                key: "".concat(d, ".hidden"),
                                style: P({}, h, {
                                    width: l,
                                    height: l,
                                    fill: "#000",
                                    fillOpacity: 0
                                })
                            }), i.createElement("rect", {
                                "data-type": o.ELEMENT_TYPE.FEATURE,
                                "data-feature-index": n,
                                key: d,
                                style: h
                            })) : i.createElement("g", {
                                key: "feature.".concat(n),
                                transform: "translate(".concat(r[0][0], ", ").concat(r[0][1], ")")
                            }, i.createElement("circle", {
                                "data-type": o.ELEMENT_TYPE.FEATURE,
                                "data-feature-index": n,
                                key: "".concat(d, ".hidden"),
                                style: P({}, h, {
                                    opacity: 0
                                }),
                                cx: 0,
                                cy: 0,
                                r: l
                            }), i.createElement("circle", {
                                "data-type": o.ELEMENT_TYPE.FEATURE,
                                "data-feature-index": n,
                                key: d,
                                style: h,
                                cx: 0,
                                cy: 0
                            }))
                        })), E(v(t), "_renderPath", (function(e, n, r) {
                            var a = t.props,
                                s = a.featureStyle,
                                u = a.clickRadius,
                                c = n === t._getSelectedFeatureIndex(),
                                l = t._getFeatureRenderState(n),
                                f = t._getStyleProp(s, {
                                    feature: e,
                                    index: n,
                                    state: l
                                }),
                                h = "feature.".concat(n);
                            return c ? i.createElement("g", {
                                key: h
                            }, t._renderSegments(n, e.geometry.coordinates, f)) : i.createElement("g", {
                                key: h
                            }, i.createElement("path", {
                                "data-type": o.ELEMENT_TYPE.FEATURE,
                                "data-feature-index": n,
                                key: "".concat(h, ".hidden"),
                                style: P({}, f, {
                                    stroke: "rgba(0,0,0,0)",
                                    strokeWidth: u,
                                    opacity: 0
                                }),
                                d: r
                            }), i.createElement("path", {
                                "data-type": o.ELEMENT_TYPE.FEATURE,
                                "data-feature-index": n,
                                key: h,
                                style: f,
                                d: r
                            }))
                        })), E(v(t), "_renderPolygon", (function(e, n, r) {
                            var a = t.props.featureStyle,
                                u = n === t._getSelectedFeatureIndex(),
                                c = t._getFeatureRenderState(n),
                                l = t._getStyleProp(a, {
                                    feature: e,
                                    index: n,
                                    state: c
                                }),
                                f = "feature.".concat(n);
                            if (u) {
                                var h = (0, s.getFeatureCoordinates)(e);
                                return h ? i.createElement("g", {
                                    key: f
                                }, t._renderFill(n, h, l), t._renderSegments(n, h, l)) : null
                            }
                            return i.createElement("path", {
                                "data-type": o.ELEMENT_TYPE.FEATURE,
                                "data-feature-index": n,
                                key: f,
                                style: l,
                                d: r
                            })
                        })), E(v(t), "_renderFeature", (function(e, n) {
                            var r = (0, s.getFeatureCoordinates)(e);
                            if (!r || !r.length) return null;
                            var i = e.properties.shape,
                                a = e.geometry.type,
                                u = t._getPathInScreenCoords(r, a);
                            if (!u) return null;
                            switch (i || a) {
                                case o.SHAPE.POINT:
                                    return t._renderPoint(e, n, u);
                                case o.SHAPE.LINE_STRING:
                                    return t._renderPath(e, n, u);
                                case o.SHAPE.CIRCLE:
                                case o.SHAPE.POLYGON:
                                case o.SHAPE.RECTANGLE:
                                    return t._renderPolygon(e, n, u);
                                default:
                                    return null
                            }
                        })), E(v(t), "_renderCanvas", (function() {
                            var e = t.getFeatures(),
                                n = t._modeHandler && t._modeHandler.getGuides(t.getModeProps()),
                                r = n && n.features;
                            return i.createElement("svg", {
                                key: "draw-canvas",
                                width: "100%",
                                height: "100%"
                            }, e && e.length > 0 && i.createElement("g", {
                                key: "feature-group"
                            }, e.map(t._renderFeature)), r && r.length > 0 && i.createElement("g", {
                                key: "feature-guides"
                            }, t._renderGuides(r)))
                        })), E(v(t), "_render", (function() {
                            var e = t._context && t._context.viewport || {},
                                n = t.props.style,
                                r = e.width,
                                o = void 0 === r ? 0 : r,
                                a = e.height,
                                s = void 0 === a ? 0 : a;
                            return i.createElement("div", {
                                id: "editor",
                                style: P({
                                    width: o,
                                    height: s
                                }, n),
                                ref: function(e) {
                                    t._containerRef = e
                                }
                            }, t._renderCanvas())
                        })), t
                    }
                    return n = c, (r = [{
                        key: "_getPathInScreenCoords",
                        value: function(t, e) {
                            var n = this;
                            if (0 === t.length) return "";
                            var r = t.map((function(t) {
                                    return n.project(t)
                                })),
                                i = "";
                            switch (e) {
                                case o.GEOJSON_TYPE.POINT:
                                    return r;
                                case o.GEOJSON_TYPE.LINE_STRING:
                                    return i = r.map((function(t) {
                                        return "".concat(t[0], ",").concat(t[1])
                                    })).join("L"), "M ".concat(i);
                                case o.GEOJSON_TYPE.POLYGON:
                                    return i = r.map((function(t) {
                                        return "".concat(t[0], ",").concat(t[1])
                                    })).join("L"), "M ".concat(i, " z");
                                default:
                                    return null
                            }
                        }
                    }]) && g(n.prototype, r), a && g(n, a), c
                }(a.default);
            e.default = S, E(S, "defaultProps", x)
        },
        73772: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var r = {
                Editor: !0,
                GEOJSON_TYPE: !0,
                SHAPE: !0,
                RENDER_STATE: !0,
                ELEMENT_TYPE: !0,
                EDIT_TYPE: !0,
                DrawCircleFromCenterMode: !0,
                DrawCircleByDiameterMode: !0,
                DrawPointMode: !0,
                DrawLineStringMode: !0,
                DrawPolygonMode: !0,
                DrawRectangleMode: !0
            };
            Object.defineProperty(e, "Editor", {
                enumerable: !0,
                get: function() {
                    return o.default
                }
            }), Object.defineProperty(e, "GEOJSON_TYPE", {
                enumerable: !0,
                get: function() {
                    return a.GEOJSON_TYPE
                }
            }), Object.defineProperty(e, "SHAPE", {
                enumerable: !0,
                get: function() {
                    return a.SHAPE
                }
            }), Object.defineProperty(e, "RENDER_STATE", {
                enumerable: !0,
                get: function() {
                    return a.RENDER_STATE
                }
            }), Object.defineProperty(e, "ELEMENT_TYPE", {
                enumerable: !0,
                get: function() {
                    return a.ELEMENT_TYPE
                }
            }), Object.defineProperty(e, "EDIT_TYPE", {
                enumerable: !0,
                get: function() {
                    return a.EDIT_TYPE
                }
            }), Object.defineProperty(e, "DrawCircleFromCenterMode", {
                enumerable: !0,
                get: function() {
                    return c.DrawCircleFromCenterMode
                }
            }), Object.defineProperty(e, "DrawCircleByDiameterMode", {
                enumerable: !0,
                get: function() {
                    return c.DrawCircleByDiameterMode
                }
            }), Object.defineProperty(e, "DrawPointMode", {
                enumerable: !0,
                get: function() {
                    return c.DrawPointMode
                }
            }), Object.defineProperty(e, "DrawLineStringMode", {
                enumerable: !0,
                get: function() {
                    return c.DrawLineStringMode
                }
            }), Object.defineProperty(e, "DrawPolygonMode", {
                enumerable: !0,
                get: function() {
                    return c.DrawPolygonMode
                }
            }), Object.defineProperty(e, "DrawRectangleMode", {
                enumerable: !0,
                get: function() {
                    return c.DrawRectangleMode
                }
            });
            var i, o = (i = n(35210)) && i.__esModule ? i : {
                    default: i
                },
                a = n(10663),
                s = n(69993);
            Object.keys(s).forEach((function(t) {
                "default" !== t && "__esModule" !== t && (Object.prototype.hasOwnProperty.call(r, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: function() {
                        return s[t]
                    }
                }))
            }));
            var u = n(7132);
            Object.keys(u).forEach((function(t) {
                "default" !== t && "__esModule" !== t && (Object.prototype.hasOwnProperty.call(r, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: function() {
                        return u[t]
                    }
                }))
            }));
            var c = n(87359)
        },
        34861: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.default = void 0;
            var r, i = n(38105),
                o = function(t) {
                    if (t && t.__esModule) return t;
                    if (null === t || "object" !== f(t) && "function" !== typeof t) return {
                        default: t
                    };
                    var e = l();
                    if (e && e.has(t)) return e.get(t);
                    var n = {},
                        r = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var i in t)
                        if (Object.prototype.hasOwnProperty.call(t, i)) {
                            var o = r ? Object.getOwnPropertyDescriptor(t, i) : null;
                            o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = t[i]
                        }
                    n.default = t, e && e.set(t, n);
                    return n
                }(n(67294)),
                a = n(87359),
                s = (r = n(95848)) && r.__esModule ? r : {
                    default: r
                },
                u = n(71103),
                c = n(10663);

            function l() {
                if ("function" !== typeof WeakMap) return null;
                var t = new WeakMap;
                return l = function() {
                    return t
                }, t
            }

            function f(t) {
                return (f = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function h(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function d(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? h(Object(n), !0).forEach((function(e) {
                        w(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : h(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }

            function p(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function g(t, e) {
                return !e || "object" !== f(e) && "function" !== typeof e ? y(t) : e
            }

            function y(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }

            function v() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (t) {
                    return !1
                }
            }

            function m(t) {
                return (m = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }

            function b(t, e) {
                return (b = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }

            function w(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var _ = {
                    featureCollection: new a.ImmutableFeatureCollection({
                        type: "FeatureCollection",
                        features: []
                    }),
                    selectedFeatureIndex: null,
                    hovered: null,
                    isDragging: !1,
                    didDrag: !1,
                    lastPointerMoveEvent: null,
                    pointerDownPicks: null,
                    pointerDownScreenCoords: null,
                    pointerDownMapCoords: null
                },
                P = function(t) {
                    ! function(t, e) {
                        if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                        t.prototype = Object.create(e && e.prototype, {
                            constructor: {
                                value: t,
                                writable: !0,
                                configurable: !0
                            }
                        }), e && b(t, e)
                    }(h, t);
                    var e, n, r, l, f = (e = h, function() {
                        var t, n = m(e);
                        if (v()) {
                            var r = m(this).constructor;
                            t = Reflect.construct(n, arguments, r)
                        } else t = n.apply(this, arguments);
                        return g(this, t)
                    });

                    function h(t) {
                        var e;
                        return function(t, e) {
                            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                        }(this, h), w(y(e = f.call(this, t)), "_events", void 0), w(y(e), "_eventsRegistered", void 0), w(y(e), "_modeHandler", void 0), w(y(e), "_context", void 0), w(y(e), "_containerRef", void 0), w(y(e), "getFeatures", (function() {
                            var t = e._getFeatureCollection();
                            return (t = t && t.getObject()) && t.features
                        })), w(y(e), "addFeatures", (function(t) {
                            var n = e._getFeatureCollection();
                            n && (Array.isArray(t) || (t = [t]), n = n.addFeatures(t), e.setState({
                                featureCollection: n
                            }))
                        })), w(y(e), "deleteFeatures", (function(t) {
                            var n = e._getFeatureCollection(),
                                r = e._getSelectedFeatureIndex();
                            if (n) {
                                Array.isArray(t) || (t = [t]);
                                var i = {
                                    featureCollection: n = n.deleteFeatures(t)
                                };
                                t.findIndex((function(t) {
                                    return r === t
                                })) >= 0 && (i.selectedFeatureIndex = null), e.setState(i)
                            }
                        })), w(y(e), "_getMemorizedFeatureCollection", (0, a._memoize)((function(t) {
                            var e = t.propsFeatures,
                                n = t.stateFeatures,
                                r = e || n;
                            return r instanceof a.ImmutableFeatureCollection ? r : r && "FeatureCollection" === r.type ? new a.ImmutableFeatureCollection({
                                type: "FeatureCollection",
                                features: r.features
                            }) : new a.ImmutableFeatureCollection({
                                type: "FeatureCollection",
                                features: r || []
                            })
                        }))), w(y(e), "_getFeatureCollection", (function() {
                            return e._getMemorizedFeatureCollection({
                                propsFeatures: e.props.features,
                                stateFeatures: e.state.featureCollection
                            })
                        })), w(y(e), "_setupModeHandler", (function() {
                            var t = e.props.mode;
                            e._modeHandler = t, t ? e._registerEvents() : e._degregisterEvents()
                        })), w(y(e), "_clearEditingState", (function() {
                            e.setState({
                                selectedFeatureIndex: null,
                                hovered: null,
                                pointerDownPicks: null,
                                pointerDownScreenCoords: null,
                                pointerDownMapCoords: null,
                                isDragging: !1,
                                didDrag: !1
                            })
                        })), w(y(e), "_getSelectedFeatureIndex", (function() {
                            return "selectedFeatureIndex" in e.props ? e.props.selectedFeatureIndex : e.state.selectedFeatureIndex
                        })), w(y(e), "_onSelect", (function(t) {
                            e.setState({
                                selectedFeatureIndex: t && t.selectedFeatureIndex
                            }), e.props.onSelect && e.props.onSelect(t)
                        })), w(y(e), "_onEdit", (function(t) {
                            var n = t.editType,
                                r = t.updatedData,
                                i = t.editContext;
                            switch (e.setState({
                                featureCollection: new a.ImmutableFeatureCollection(r)
                            }), n) {
                                case c.EDIT_TYPE.ADD_FEATURE:
                                    e._onSelect({
                                        selectedFeature: null,
                                        selectedFeatureIndex: null,
                                        selectedEditHandleIndex: null,
                                        screenCoords: i && i.screenCoords,
                                        mapCoords: i && i.mapCoords
                                    })
                            }
                            e.props.onUpdate && e.props.onUpdate({
                                data: r && r.features,
                                editType: n,
                                editContext: i
                            })
                        })), w(y(e), "_degregisterEvents", (function() {
                            var t = e._context && e._context.eventManager;
                            e._events && t && e._eventsRegistered && (t.off(e._events), e._eventsRegistered = !1)
                        })), w(y(e), "_registerEvents", (function() {
                            var t = e._containerRef,
                                n = e._context && e._context.eventManager;
                            e._events && t && n && (e._eventsRegistered || (n.on(e._events, t), e._eventsRegistered = !0))
                        })), w(y(e), "_onEvent", (function(t, n, r) {
                            t(e._getEvent(n)), r && n.stopImmediatePropagation()
                        })), w(y(e), "_onClick", (function(t) {
                            var n = e.getModeProps();
                            if (e._modeHandler instanceof s.default || e.props.selectable) {
                                var r = t.mapCoords,
                                    i = t.screenCoords,
                                    o = t.picks && t.picks[0];
                                if (o && (0, u.isNumeric)(o.featureIndex)) {
                                    var a = o.featureIndex;
                                    e._onSelect({
                                        selectedFeature: o.object,
                                        selectedFeatureIndex: a,
                                        selectedEditHandleIndex: o.type === c.ELEMENT_TYPE.EDIT_HANDLE ? o.index : null,
                                        mapCoords: r,
                                        screenCoords: i
                                    })
                                } else e._onSelect({
                                    selectedFeature: null,
                                    selectedFeatureIndex: null,
                                    selectedEditHandleIndex: null,
                                    mapCoords: r,
                                    screenCoords: i
                                })
                            }
                            e._modeHandler.handleClick(t, n)
                        })), w(y(e), "_onDblclick", (function(t) {
                            (0, u.isNumeric)(e._getSelectedFeatureIndex()) && t.sourceEvent.stopImmediatePropagation()
                        })), w(y(e), "_onPointerMove", (function(t) {
                            var n = e._getHoverState(t),
                                r = e.state,
                                i = r.isDragging,
                                o = r.didDrag,
                                a = r.pointerDownPicks,
                                s = r.pointerDownScreenCoords,
                                u = r.pointerDownMapCoords;
                            if (i && !o && s) {
                                var c = t.screenCoords[0] - s[0],
                                    l = t.screenCoords[1] - s[1];
                                c * c + l * l > 5 && e.setState({
                                    didDrag: !0
                                })
                            }
                            var f = d({}, t, {
                                isDragging: i,
                                pointerDownPicks: a,
                                pointerDownScreenCoords: s,
                                pointerDownMapCoords: u
                            });
                            if (e.state.didDrag) {
                                var h = e.getModeProps();
                                e._modeHandler.handlePointerMove(f, h)
                            }
                            e.setState({
                                hovered: n,
                                lastPointerMoveEvent: f
                            })
                        })), w(y(e), "_onPointerDown", (function(t) {
                            var n = e.props.modeConfig && e.props.modeConfig.dragToDraw,
                                r = Boolean(t.picks && t.picks[0]) || n,
                                i = d({}, t, {
                                    isDragging: r,
                                    pointerDownScreenCoords: t.screenCoords,
                                    pointerDownMapCoords: t.mapCoords,
                                    cancelPan: t.sourceEvent.stopImmediatePropagation
                                }),
                                o = {
                                    isDragging: r,
                                    pointerDownPicks: t.picks,
                                    pointerDownScreenCoords: t.screenCoords,
                                    pointerDownMapCoords: t.mapCoords
                                };
                            e.setState(o);
                            var a = e.getModeProps();
                            e._modeHandler.handleStartDragging(i, a)
                        })), w(y(e), "_onPointerUp", (function(t) {
                            var n = e.state,
                                r = n.didDrag,
                                i = n.pointerDownPicks,
                                o = n.pointerDownScreenCoords,
                                a = n.pointerDownMapCoords,
                                s = d({}, t, {
                                    isDragging: !1,
                                    pointerDownPicks: r ? i : null,
                                    pointerDownScreenCoords: r ? o : null,
                                    pointerDownMapCoords: r ? a : null,
                                    cancelPan: t.sourceEvent.cancelPan
                                });
                            e.setState({
                                isDragging: !1,
                                didDrag: !1,
                                pointerDownPicks: null,
                                pointerDownScreenCoords: null,
                                pointerDownMapCoords: null
                            });
                            var u = e.getModeProps();
                            r && e._modeHandler.handleStopDragging(s, u)
                        })), w(y(e), "_onPan", (function(t) {
                            e.state.isDragging && t.sourceEvent.stopImmediatePropagation(), e._modeHandler.handlePan && e._modeHandler.handlePan(t, e.getModeProps())
                        })), w(y(e), "project", (function(t) {
                            var n = e._context && e._context.viewport;
                            return n && n.project(t)
                        })), w(y(e), "unproject", (function(t) {
                            var n = e._context && e._context.viewport;
                            return n && n.unproject(t)
                        })), w(y(e), "_getHoverState", (function(t) {
                            var e = t.picks && t.picks[0];
                            return e ? d({
                                screenCoords: t.screenCoords,
                                mapCoords: t.mapCoords
                            }, e) : null
                        })), e.state = _, e._eventsRegistered = !1, e._events = {
                            anyclick: function(t) {
                                return e._onEvent(e._onClick, t, !0)
                            },
                            dblclick: function(t) {
                                return e._onEvent(e._onDblclick, t, !1)
                            },
                            click: function(t) {
                                return t.stopImmediatePropagation()
                            },
                            pointermove: function(t) {
                                return e._onEvent(e._onPointerMove, t, !1)
                            },
                            pointerdown: function(t) {
                                return e._onEvent(e._onPointerDown, t, !0)
                            },
                            pointerup: function(t) {
                                return e._onEvent(e._onPointerUp, t, !0)
                            },
                            panmove: function(t) {
                                return e._onEvent(e._onPan, t, !1)
                            },
                            panstart: function(t) {
                                return e._onEvent(e._onPan, t, !1)
                            },
                            panend: function(t) {
                                return e._onEvent(e._onPan, t, !1)
                            }
                        }, e
                    }
                    return n = h, (r = [{
                        key: "componentDidMount",
                        value: function() {
                            this._setupModeHandler()
                        }
                    }, {
                        key: "componentDidUpdate",
                        value: function(t) {
                            t.mode !== this.props.mode && (this._clearEditingState(), this._setupModeHandler())
                        }
                    }, {
                        key: "componentWillUnmount",
                        value: function() {
                            this._degregisterEvents()
                        }
                    }, {
                        key: "getModeProps",
                        value: function() {
                            var t = this._getFeatureCollection(),
                                e = this.state.lastPointerMoveEvent,
                                n = this._getSelectedFeatureIndex(),
                                r = this._context && this._context.viewport;
                            return {
                                data: t && t.featureCollection,
                                selectedIndexes: (0, u.isNumeric)(n) ? [n] : [],
                                lastPointerMoveEvent: e,
                                viewport: r,
                                featuresDraggable: this.props.featuresDraggable,
                                onEdit: this._onEdit,
                                onUpdateCursor: this.props.onUpdateCursor,
                                modeConfig: this.props.modeConfig
                            }
                        }
                    }, {
                        key: "_getEvent",
                        value: function(t) {
                            var e = this.getFeatures(),
                                n = this._modeHandler.getGuides(this.getModeProps()),
                                r = (0, u.parseEventElement)(t, e, n && n.features),
                                i = (0, u.getScreenCoords)(t);
                            return {
                                picks: r ? [r] : null,
                                screenCoords: i,
                                mapCoords: this.unproject(i),
                                sourceEvent: t
                            }
                        }
                    }, {
                        key: "_render",
                        value: function() {
                            return o.createElement("div", null)
                        }
                    }, {
                        key: "render",
                        value: function() {
                            var t = this;
                            return o.createElement(i._MapContext.Consumer, null, (function(e) {
                                t._context = e;
                                var n = e && e.viewport;
                                return !n || n.height <= 0 || n.width <= 0 ? null : t._render()
                            }))
                        }
                    }]) && p(n.prototype, r), l && p(n, l), h
                }(o.PureComponent);
            e.default = P, w(P, "displayName", "ModeHandler"), w(P, "defaultProps", {
                selectable: !0,
                mode: null,
                features: null,
                onSelect: null,
                onUpdate: null,
                onUpdateCursor: function() {}
            })
        },
        53723: function(t, e, n) {
            "use strict";
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.featureStyle = function(t) {
                var e = t.feature,
                    n = t.state,
                    i = e.properties.shape || e.geometry.type,
                    a = null;
                switch (n) {
                    case r.RENDER_STATE.SELECTED:
                        a = o({}, u);
                        break;
                    case r.RENDER_STATE.HOVERED:
                        a = o({}, c);
                        break;
                    case r.RENDER_STATE.UNCOMMITTED:
                    case r.RENDER_STATE.CLOSING:
                        a = o({}, l);
                        break;
                    case r.RENDER_STATE.INACTIVE:
                        a = o({}, f);
                        break;
                    default:
                        a = o({}, h)
                }
                switch (i) {
                    case r.SHAPE.POINT:
                        a.r = 8;
                        break;
                    case r.SHAPE.LINE_STRING:
                        a.fill = "none";
                        break;
                    case r.SHAPE.POLYGON:
                        n === r.RENDER_STATE.CLOSING && (a.strokeDasharray = "4,2");
                        break;
                    case r.SHAPE.RECTANGLE:
                        n === r.RENDER_STATE.UNCOMMITTED && (a.strokeDasharray = "4,2")
                }
                return a
            }, e.editHandleStyle = function(t) {
                t.feature;
                var e = t.shape,
                    n = (t.index, t.state),
                    i = {};
                switch (n) {
                    case r.RENDER_STATE.SELECTED:
                        i = o({}, u);
                        break;
                    case r.RENDER_STATE.HOVERED:
                        i = o({}, c);
                        break;
                    case r.RENDER_STATE.UNCOMMITTED:
                    case r.RENDER_STATE.CLOSING:
                        i = o({}, l);
                        break;
                    case r.RENDER_STATE.INACTIVE:
                        i = o({}, f);
                        break;
                    default:
                        i = o({}, h)
                }
                switch (e) {
                    case "circle":
                        i.r = 8;
                        break;
                    case "rect":
                        i = o({}, i, {}, s)
                }
                return i
            };
            var r = n(10663);

            function i(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function o(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? i(Object(n), !0).forEach((function(e) {
                        a(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }

            function a(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            var s = {
                    stroke: "#7ac943",
                    strokeWidth: 2,
                    x: -6,
                    y: -6,
                    height: 12,
                    width: 12
                },
                u = {
                    stroke: "rgb(38, 181, 242)",
                    strokeWidth: 2,
                    fill: "rgb(189,189,189)",
                    fillOpacity: .3
                },
                c = {
                    stroke: "rgb(38, 181, 242)",
                    strokeWidth: 2,
                    fill: "rgb(122,202,67)",
                    fillOpacity: .3
                },
                l = {
                    stroke: "rgb(189,189,189)",
                    strokeDasharray: "4,2",
                    strokeWidth: 2,
                    fill: "rgb(189,189,189)",
                    fillOpacity: .1
                },
                f = l,
                h = {
                    stroke: "#000000",
                    strokeWidth: 2,
                    fill: "#a9a9a9",
                    fillOpacity: .1
                }
        },
        7132: function() {},
        38105: function(t, e, n) {
            "use strict";
            n.r(e), n.d(e, {
                AttributionControl: function() {
                    return en
                },
                BaseControl: function() {
                    return Me
                },
                CanvasOverlay: function() {
                    return jn
                },
                FlyToInterpolator: function() {
                    return xt
                },
                FullscreenControl: function() {
                    return un
                },
                GeolocateControl: function() {
                    return gn
                },
                HTMLOverlay: function() {
                    return Fn
                },
                InteractiveMap: function() {
                    return ae
                },
                Layer: function() {
                    return _e
                },
                LinearInterpolator: function() {
                    return Ct
                },
                MapContext: function() {
                    return Y
                },
                MapController: function() {
                    return Yt
                },
                Marker: function() {
                    return Ze
                },
                NavigationControl: function() {
                    return xn
                },
                Popup: function() {
                    return Xe
                },
                SVGOverlay: function() {
                    return Un
                },
                ScaleControl: function() {
                    return Cn
                },
                Source: function() {
                    return de
                },
                StaticMap: function() {
                    return it
                },
                TRANSITION_EVENTS: function() {
                    return kt
                },
                TransitionInterpolator: function() {
                    return st
                },
                WebMercatorViewport: function() {
                    return f.DW
                },
                _MapContext: function() {
                    return Y
                },
                _useMapControl: function() {
                    return Se
                },
                default: function() {
                    return ae
                },
                setRTLTextPlugin: function() {
                    return Gn
                }
            });
            var r = n(87462);

            function i(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function o(t, e) {
                if (t) {
                    if ("string" === typeof t) return i(t, e);
                    var n = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? i(t, e) : void 0
                }
            }

            function a(t) {
                return function(t) {
                    if (Array.isArray(t)) return i(t)
                }(t) || function(t) {
                    if ("undefined" !== typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
                }(t) || o(t) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var s = n(4942),
                u = n(67294),
                c = n(45697);

            function l(t, e) {
                return function(t) {
                    if (Array.isArray(t)) return t
                }(t) || function(t, e) {
                    var n = null == t ? null : "undefined" !== typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                    if (null != n) {
                        var r, i, o = [],
                            a = !0,
                            s = !1;
                        try {
                            for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0);
                        } catch (u) {
                            s = !0, i = u
                        } finally {
                            try {
                                a || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return o
                    }
                }(t, e) || o(t, e) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            var f = n(78866),
                h = n(91033);

            function d(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }

            function p(t, e) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
                }
            }

            function g(t, e, n) {
                return e && p(t.prototype, e), n && p(t, n), t
            }
            "undefined" !== typeof window ? window : n.g, "undefined" !== typeof n.g ? n.g : window;
            var y = "undefined" !== typeof document ? document : {};

            function v(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function m(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? v(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : v(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }

            function b(t, e) {
                var n;
                if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                    if (Array.isArray(t) || (n = function(t, e) {
                            if (!t) return;
                            if ("string" === typeof t) return w(t, e);
                            var n = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === n && t.constructor && (n = t.constructor.name);
                            if ("Map" === n || "Set" === n) return Array.from(t);
                            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return w(t, e)
                        }(t)) || e && t && "number" === typeof t.length) {
                        n && (t = n);
                        var r = 0,
                            i = function() {};
                        return {
                            s: i,
                            n: function() {
                                return r >= t.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t[r++]
                                }
                            },
                            e: function(t) {
                                throw t
                            },
                            f: i
                        }
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                var o, a = !0,
                    s = !1;
                return {
                    s: function() {
                        n = t[Symbol.iterator]()
                    },
                    n: function() {
                        var t = n.next();
                        return a = t.done, t
                    },
                    e: function(t) {
                        s = !0, o = t
                    },
                    f: function() {
                        try {
                            a || null == n.return || n.return()
                        } finally {
                            if (s) throw o
                        }
                    }
                }
            }

            function w(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }
            var _ = ["type", "source", "source-layer", "minzoom", "maxzoom", "filter", "layout"];

            function P(t) {
                if (!t) return null;
                if ("string" === typeof t) return t;
                t.toJS && (t = t.toJS());
                var e, n = {},
                    r = b(t.layers);
                try {
                    for (r.s(); !(e = r.n()).done;) {
                        var i = e.value;
                        n[i.id] = i
                    }
                } catch (a) {
                    r.e(a)
                } finally {
                    r.f()
                }
                var o = t.layers.map((function(t) {
                    var e = n[t.ref],
                        r = null;
                    if ("interactive" in t && delete(r = m({}, t)).interactive, e) {
                        delete(r = r || m({}, t)).ref;
                        var i, o = b(_);
                        try {
                            for (o.s(); !(i = o.n()).done;) {
                                var s = i.value;
                                s in e && (r[s] = e[s])
                            }
                        } catch (a) {
                            o.e(a)
                        } finally {
                            o.f()
                        }
                    }
                    return r || t
                }));
                return m(m({}, t), {}, {
                    layers: o
                })
            }
            var E = n(83454);
            var x = {
                    container: c.object,
                    gl: c.object,
                    mapboxApiAccessToken: c.string,
                    mapboxApiUrl: c.string,
                    attributionControl: c.bool,
                    preserveDrawingBuffer: c.bool,
                    reuseMaps: c.bool,
                    transformRequest: c.func,
                    mapOptions: c.object,
                    mapStyle: c.oneOfType([c.string, c.object]),
                    preventStyleDiffing: c.bool,
                    visible: c.bool,
                    asyncRender: c.bool,
                    onLoad: c.func,
                    onError: c.func,
                    width: c.number,
                    height: c.number,
                    viewState: c.object,
                    longitude: c.number,
                    latitude: c.number,
                    zoom: c.number,
                    bearing: c.number,
                    pitch: c.number,
                    altitude: c.number
                },
                S = {
                    container: y.body,
                    mapboxApiAccessToken: function() {
                        var t = null;
                        if ("undefined" !== typeof window && window.location) {
                            var e = window.location.search.match(/access_token=([^&\/]*)/);
                            t = e && e[1]
                        }
                        t || "undefined" === typeof E || (t = t || E.env.MapboxAccessToken || E.env.REACT_APP_MAPBOX_ACCESS_TOKEN);
                        return t || "no-token"
                    }(),
                    mapboxApiUrl: "https://api.mapbox.com",
                    preserveDrawingBuffer: !1,
                    attributionControl: !0,
                    reuseMaps: !1,
                    mapOptions: {},
                    mapStyle: "mapbox://styles/mapbox/light-v8",
                    preventStyleDiffing: !1,
                    visible: !0,
                    asyncRender: !1,
                    onLoad: function() {},
                    onError: function(t) {
                        t && console.error(t.error)
                    },
                    width: 0,
                    height: 0,
                    longitude: 0,
                    latitude: 0,
                    zoom: 0,
                    bearing: 0,
                    pitch: 0,
                    altitude: 1.5
                };

            function O(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "component";
                t.debug && c.checkPropTypes(x, t, "prop", e)
            }
            var T = function() {
                function t(e) {
                    var n = this;
                    if (d(this, t), (0, s.Z)(this, "props", S), (0, s.Z)(this, "width", 0), (0, s.Z)(this, "height", 0), (0, s.Z)(this, "_fireLoadEvent", (function() {
                            n.props.onLoad({
                                type: "load",
                                target: n._map
                            })
                        })), (0, s.Z)(this, "_handleError", (function(t) {
                            n.props.onError(t)
                        })), !e.mapboxgl) throw new Error("Mapbox not available");
                    this.mapboxgl = e.mapboxgl, t.initialized || (t.initialized = !0, this._checkStyleSheet(this.mapboxgl.version)), this._initialize(e)
                }
                return g(t, [{
                    key: "finalize",
                    value: function() {
                        return this._destroy(), this
                    }
                }, {
                    key: "setProps",
                    value: function(t) {
                        return this._update(this.props, t), this
                    }
                }, {
                    key: "redraw",
                    value: function() {
                        var t = this._map;
                        t.style && (t._frame && (t._frame.cancel(), t._frame = null), t._render())
                    }
                }, {
                    key: "getMap",
                    value: function() {
                        return this._map
                    }
                }, {
                    key: "_reuse",
                    value: function(e) {
                        this._map = t.savedMap;
                        var n = this._map.getContainer(),
                            r = e.container;
                        for (r.classList.add("mapboxgl-map"); n.childNodes.length > 0;) r.appendChild(n.childNodes[0]);
                        this._map._container = r, t.savedMap = null, e.mapStyle && this._map.setStyle(P(e.mapStyle), {
                            diff: !1
                        }), this._map.isStyleLoaded() ? this._fireLoadEvent() : this._map.once("styledata", this._fireLoadEvent)
                    }
                }, {
                    key: "_create",
                    value: function(e) {
                        if (e.reuseMaps && t.savedMap) this._reuse(e);
                        else {
                            if (e.gl) {
                                var n = HTMLCanvasElement.prototype.getContext;
                                HTMLCanvasElement.prototype.getContext = function() {
                                    return HTMLCanvasElement.prototype.getContext = n, e.gl
                                }
                            }
                            var r = {
                                container: e.container,
                                center: [0, 0],
                                zoom: 8,
                                pitch: 0,
                                bearing: 0,
                                maxZoom: 24,
                                style: P(e.mapStyle),
                                interactive: !1,
                                trackResize: !1,
                                attributionControl: e.attributionControl,
                                preserveDrawingBuffer: e.preserveDrawingBuffer
                            };
                            e.transformRequest && (r.transformRequest = e.transformRequest), this._map = new this.mapboxgl.Map(Object.assign({}, r, e.mapOptions)), this._map.once("load", this._fireLoadEvent), this._map.on("error", this._handleError)
                        }
                        return this
                    }
                }, {
                    key: "_destroy",
                    value: function() {
                        this._map && (this.props.reuseMaps && !t.savedMap ? (t.savedMap = this._map, this._map.off("load", this._fireLoadEvent), this._map.off("error", this._handleError), this._map.off("styledata", this._fireLoadEvent)) : this._map.remove(), this._map = null)
                    }
                }, {
                    key: "_initialize",
                    value: function(t) {
                        var e = this;
                        O(t = Object.assign({}, S, t), "Mapbox"), this.mapboxgl.accessToken = t.mapboxApiAccessToken || S.mapboxApiAccessToken, this.mapboxgl.baseApiUrl = t.mapboxApiUrl, this._create(t);
                        var n = t.container;
                        Object.defineProperty(n, "offsetWidth", {
                            get: function() {
                                return e.width
                            }
                        }), Object.defineProperty(n, "clientWidth", {
                            get: function() {
                                return e.width
                            }
                        }), Object.defineProperty(n, "offsetHeight", {
                            get: function() {
                                return e.height
                            }
                        }), Object.defineProperty(n, "clientHeight", {
                            get: function() {
                                return e.height
                            }
                        });
                        var r = this._map.getCanvas();
                        r && (r.style.outline = "none"), this._updateMapViewport({}, t), this._updateMapSize({}, t), this.props = t
                    }
                }, {
                    key: "_update",
                    value: function(t, e) {
                        if (this._map) {
                            O(e = Object.assign({}, this.props, e), "Mapbox");
                            var n = this._updateMapViewport(t, e),
                                r = this._updateMapSize(t, e);
                            this._updateMapStyle(t, e), e.asyncRender || !n && !r || this.redraw(), this.props = e
                        }
                    }
                }, {
                    key: "_updateMapStyle",
                    value: function(t, e) {
                        t.mapStyle !== e.mapStyle && this._map.setStyle(P(e.mapStyle), {
                            diff: !e.preventStyleDiffing
                        })
                    }
                }, {
                    key: "_updateMapSize",
                    value: function(t, e) {
                        var n = t.width !== e.width || t.height !== e.height;
                        return n && (this.width = e.width, this.height = e.height, this._map.resize()), n
                    }
                }, {
                    key: "_updateMapViewport",
                    value: function(t, e) {
                        var n = this._getViewState(t),
                            r = this._getViewState(e),
                            i = r.latitude !== n.latitude || r.longitude !== n.longitude || r.zoom !== n.zoom || r.pitch !== n.pitch || r.bearing !== n.bearing || r.altitude !== n.altitude;
                        return i && (this._map.jumpTo(this._viewStateToMapboxProps(r)), r.altitude !== n.altitude && (this._map.transform.altitude = r.altitude)), i
                    }
                }, {
                    key: "_getViewState",
                    value: function(t) {
                        var e = t.viewState || t,
                            n = e.longitude,
                            r = e.latitude,
                            i = e.zoom,
                            o = e.pitch,
                            a = void 0 === o ? 0 : o,
                            s = e.bearing,
                            u = void 0 === s ? 0 : s,
                            c = e.altitude;
                        return {
                            longitude: n,
                            latitude: r,
                            zoom: i,
                            pitch: a,
                            bearing: u,
                            altitude: void 0 === c ? 1.5 : c
                        }
                    }
                }, {
                    key: "_checkStyleSheet",
                    value: function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "0.47.0";
                        if ("undefined" !== typeof y) try {
                            var e = y.createElement("div");
                            e.className = "mapboxgl-map", e.style.display = "none", y.body.appendChild(e);
                            var n = "static" !== window.getComputedStyle(e).position;
                            if (!n) {
                                var r = y.createElement("link");
                                r.setAttribute("rel", "stylesheet"), r.setAttribute("type", "text/css"), r.setAttribute("href", "https://api.tiles.mapbox.com/mapbox-gl-js/v".concat(t, "/mapbox-gl.css")), y.head.appendChild(r)
                            }
                        } catch (i) {}
                    }
                }, {
                    key: "_viewStateToMapboxProps",
                    value: function(t) {
                        return {
                            center: [t.longitude, t.latitude],
                            zoom: t.zoom,
                            bearing: t.bearing,
                            pitch: t.pitch
                        }
                    }
                }]), t
            }();
            (0, s.Z)(T, "initialized", !1), (0, s.Z)(T, "propTypes", x), (0, s.Z)(T, "defaultProps", S), (0, s.Z)(T, "savedMap", null);
            var M = n(6158),
                C = n.n(M);

            function A(t) {
                return Array.isArray(t) || ArrayBuffer.isView(t)
            }

            function k(t, e) {
                if (t === e) return !0;
                if (A(t) && A(e)) {
                    if (t.length !== e.length) return !1;
                    for (var n = 0; n < t.length; ++n)
                        if (!k(t[n], e[n])) return !1;
                    return !0
                }
                return Math.abs(t - e) <= 1e-7
            }

            function I(t, e, n) {
                return Math.max(e, Math.min(n, t))
            }

            function j(t, e, n) {
                return A(t) ? t.map((function(t, r) {
                    return j(t, e[r], n)
                })) : n * e + (1 - n) * t
            }

            function L(t, e) {
                if (!t) throw new Error(e || "react-map-gl: assertion failed.")
            }

            function R(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function D(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? R(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : R(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }
            var F = {
                    minZoom: 0,
                    maxZoom: 24,
                    minPitch: 0,
                    maxPitch: 60
                },
                N = 0,
                z = 0,
                B = 1.5,
                U = function() {
                    function t(e) {
                        var n = e.width,
                            r = e.height,
                            i = e.latitude,
                            o = e.longitude,
                            a = e.zoom,
                            s = e.bearing,
                            u = void 0 === s ? z : s,
                            c = e.pitch,
                            l = void 0 === c ? N : c,
                            f = e.altitude,
                            h = void 0 === f ? B : f,
                            p = e.maxZoom,
                            g = void 0 === p ? F.maxZoom : p,
                            y = e.minZoom,
                            v = void 0 === y ? F.minZoom : y,
                            m = e.maxPitch,
                            b = void 0 === m ? F.maxPitch : m,
                            w = e.minPitch,
                            _ = void 0 === w ? F.minPitch : w,
                            P = e.transitionDuration,
                            E = e.transitionEasing,
                            x = e.transitionInterpolator,
                            S = e.transitionInterruption,
                            O = e.startPanLngLat,
                            T = e.startZoomLngLat,
                            M = e.startRotatePos,
                            C = e.startBearing,
                            A = e.startPitch,
                            k = e.startZoom;
                        d(this, t), L(Number.isFinite(n), "`width` must be supplied"), L(Number.isFinite(r), "`height` must be supplied"), L(Number.isFinite(o), "`longitude` must be supplied"), L(Number.isFinite(i), "`latitude` must be supplied"), L(Number.isFinite(a), "`zoom` must be supplied"), this._viewportProps = this._applyConstraints({
                            width: n,
                            height: r,
                            latitude: i,
                            longitude: o,
                            zoom: a,
                            bearing: u,
                            pitch: l,
                            altitude: h,
                            maxZoom: g,
                            minZoom: v,
                            maxPitch: b,
                            minPitch: _,
                            transitionDuration: P,
                            transitionEasing: E,
                            transitionInterpolator: x,
                            transitionInterruption: S
                        }), this._state = {
                            startPanLngLat: O,
                            startZoomLngLat: T,
                            startRotatePos: M,
                            startBearing: C,
                            startPitch: A,
                            startZoom: k
                        }
                    }
                    return g(t, [{
                        key: "getViewportProps",
                        value: function() {
                            return this._viewportProps
                        }
                    }, {
                        key: "getState",
                        value: function() {
                            return this._state
                        }
                    }, {
                        key: "panStart",
                        value: function(t) {
                            var e = t.pos;
                            return this._getUpdatedMapState({
                                startPanLngLat: this._unproject(e)
                            })
                        }
                    }, {
                        key: "pan",
                        value: function(t) {
                            var e = t.pos,
                                n = t.startPos,
                                r = this._state.startPanLngLat || this._unproject(n);
                            if (!r) return this;
                            var i = l(this._calculateNewLngLat({
                                    startPanLngLat: r,
                                    pos: e
                                }), 2),
                                o = i[0],
                                a = i[1];
                            return this._getUpdatedMapState({
                                longitude: o,
                                latitude: a
                            })
                        }
                    }, {
                        key: "panEnd",
                        value: function() {
                            return this._getUpdatedMapState({
                                startPanLngLat: null
                            })
                        }
                    }, {
                        key: "rotateStart",
                        value: function(t) {
                            var e = t.pos;
                            return this._getUpdatedMapState({
                                startRotatePos: e,
                                startBearing: this._viewportProps.bearing,
                                startPitch: this._viewportProps.pitch
                            })
                        }
                    }, {
                        key: "rotate",
                        value: function(t) {
                            var e, n = t.pos,
                                r = t.deltaAngleX,
                                i = void 0 === r ? 0 : r,
                                o = t.deltaAngleY,
                                a = void 0 === o ? 0 : o,
                                s = this._state,
                                u = s.startRotatePos,
                                c = s.startBearing,
                                l = s.startPitch;
                            return Number.isFinite(c) && Number.isFinite(l) ? (e = n ? this._calculateNewPitchAndBearing(D(D({}, this._getRotationParams(n, u)), {}, {
                                startBearing: c,
                                startPitch: l
                            })) : {
                                bearing: c + i,
                                pitch: l + a
                            }, this._getUpdatedMapState(e)) : this
                        }
                    }, {
                        key: "rotateEnd",
                        value: function() {
                            return this._getUpdatedMapState({
                                startBearing: null,
                                startPitch: null
                            })
                        }
                    }, {
                        key: "zoomStart",
                        value: function(t) {
                            var e = t.pos;
                            return this._getUpdatedMapState({
                                startZoomLngLat: this._unproject(e),
                                startZoom: this._viewportProps.zoom
                            })
                        }
                    }, {
                        key: "zoom",
                        value: function(t) {
                            var e = t.pos,
                                n = t.startPos,
                                r = t.scale;
                            L(r > 0, "`scale` must be a positive number");
                            var i = this._state,
                                o = i.startZoom,
                                a = i.startZoomLngLat;
                            Number.isFinite(o) || (o = this._viewportProps.zoom, a = this._unproject(n) || this._unproject(e)), L(a, "`startZoomLngLat` prop is required for zoom behavior to calculate where to position the map.");
                            var s = this._calculateNewZoom({
                                    scale: r,
                                    startZoom: o || 0
                                }),
                                u = l(new f.DW(Object.assign({}, this._viewportProps, {
                                    zoom: s
                                })).getMapCenterByLngLatPosition({
                                    lngLat: a,
                                    pos: e
                                }), 2),
                                c = u[0],
                                h = u[1];
                            return this._getUpdatedMapState({
                                zoom: s,
                                longitude: c,
                                latitude: h
                            })
                        }
                    }, {
                        key: "zoomEnd",
                        value: function() {
                            return this._getUpdatedMapState({
                                startZoomLngLat: null,
                                startZoom: null
                            })
                        }
                    }, {
                        key: "_getUpdatedMapState",
                        value: function(e) {
                            return new t(Object.assign({}, this._viewportProps, this._state, e))
                        }
                    }, {
                        key: "_applyConstraints",
                        value: function(t) {
                            var e = t.maxZoom,
                                n = t.minZoom,
                                r = t.zoom;
                            t.zoom = I(r, n, e);
                            var i = t.maxPitch,
                                o = t.minPitch,
                                a = t.pitch;
                            return t.pitch = I(a, o, i), Object.assign(t, (0, f.QA)(t)), t
                        }
                    }, {
                        key: "_unproject",
                        value: function(t) {
                            var e = new f.DW(this._viewportProps);
                            return t && e.unproject(t)
                        }
                    }, {
                        key: "_calculateNewLngLat",
                        value: function(t) {
                            var e = t.startPanLngLat,
                                n = t.pos;
                            return new f.DW(this._viewportProps).getMapCenterByLngLatPosition({
                                lngLat: e,
                                pos: n
                            })
                        }
                    }, {
                        key: "_calculateNewZoom",
                        value: function(t) {
                            var e = t.scale,
                                n = t.startZoom,
                                r = this._viewportProps,
                                i = r.maxZoom,
                                o = r.minZoom;
                            return I(n + Math.log2(e), o, i)
                        }
                    }, {
                        key: "_calculateNewPitchAndBearing",
                        value: function(t) {
                            var e = t.deltaScaleX,
                                n = t.deltaScaleY,
                                r = t.startBearing,
                                i = t.startPitch;
                            n = I(n, -1, 1);
                            var o = this._viewportProps,
                                a = o.minPitch,
                                s = o.maxPitch,
                                u = i;
                            return n > 0 ? u = i + n * (s - i) : n < 0 && (u = i - n * (a - i)), {
                                pitch: u,
                                bearing: r + 180 * e
                            }
                        }
                    }, {
                        key: "_getRotationParams",
                        value: function(t, e) {
                            var n = t[0] - e[0],
                                r = t[1] - e[1],
                                i = t[1],
                                o = e[1],
                                a = this._viewportProps,
                                s = a.width,
                                u = a.height,
                                c = n / s,
                                l = 0;
                            return r > 0 ? Math.abs(u - o) > 5 && (l = r / (o - u) * 1.2) : r < 0 && o > 5 && (l = 1 - i / o), {
                                deltaScaleX: c,
                                deltaScaleY: l = Math.min(1, Math.max(-1, l))
                            }
                        }
                    }]), t
                }();

            function G(t) {
                return t[0].toLowerCase() + t.slice(1)
            }

            function Z(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function V(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? Z(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Z(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }
            var H = (0, u.createContext)({
                    viewport: null,
                    map: null,
                    container: null,
                    onViewportChange: null,
                    onViewStateChange: null,
                    eventManager: null
                }),
                W = H.Provider;
            H.Provider = function(t) {
                var e = t.value,
                    n = t.children,
                    r = l((0, u.useState)(null), 2),
                    i = r[0],
                    o = r[1],
                    a = (0, u.useContext)(H);
                return e = V(V({
                    setMap: o
                }, a), {}, {
                    map: a && a.map || i
                }, e), u.createElement(W, {
                    value: e
                }, n)
            };
            var Y = H,
                q = "undefined" !== typeof window ? u.useLayoutEffect : u.useEffect;

            function $(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function X(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? $(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : $(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }
            var K = "A valid API access token is required to use Mapbox data";

            function J(t) {
                var e = t.props,
                    n = t.width,
                    r = t.height;
                return new f.DW(X(X(X({}, e), e.viewState), {}, {
                    width: n,
                    height: r
                }))
            }
            var Q = {
                    position: "absolute",
                    width: "100%",
                    height: "100%",
                    overflow: "hidden"
                },
                tt = Object.assign({}, T.propTypes, {
                    width: c.oneOfType([c.number, c.string]),
                    height: c.oneOfType([c.number, c.string]),
                    onResize: c.func,
                    disableTokenWarning: c.bool,
                    visible: c.bool,
                    className: c.string,
                    style: c.object,
                    visibilityConstraints: c.object
                }),
                et = Object.assign({}, T.defaultProps, {
                    disableTokenWarning: !1,
                    visible: !0,
                    onResize: function() {},
                    className: "",
                    style: null,
                    visibilityConstraints: F
                });

            function nt() {
                return u.createElement("div", {
                    key: "warning",
                    id: "no-token-warning",
                    style: {
                        position: "absolute",
                        left: 0,
                        top: 0
                    }
                }, u.createElement("h3", {
                    key: "header"
                }, K), u.createElement("div", {
                    key: "text"
                }, "For information on setting up your basemap, read"), u.createElement("a", {
                    key: "link",
                    href: "https://visgl.github.io/react-map-gl/docs/get-started/mapbox-tokens"
                }, "Note on Map Tokens"))
            }
            var rt = (0, u.forwardRef)((function(t, e) {
                var n = l((0, u.useState)(!0), 2),
                    r = n[0],
                    i = n[1],
                    o = l((0, u.useState)({
                        width: 0,
                        height: 0
                    }), 2),
                    a = o[0],
                    s = o[1],
                    c = (0, u.useRef)(null),
                    f = (0, u.useRef)(null),
                    d = (0, u.useRef)(null),
                    p = (0, u.useRef)(null),
                    g = (0, u.useContext)(Y);
                q((function() {
                    if (rt.supported()) {
                        var e = new T(X(X(X({}, t), a), {}, {
                            mapboxgl: C(),
                            container: f.current,
                            onError: function(e) {
                                401 === (e.error && e.error.status || e.status) && r && (console.error(K), i(!1)), t.onError(e)
                            }
                        }));
                        c.current = e, g && g.setMap && g.setMap(e.getMap());
                        var n = new h.Z((function(e) {
                            if (e[0].contentRect) {
                                var n = e[0].contentRect,
                                    r = n.width,
                                    i = n.height;
                                s({
                                    width: r,
                                    height: i
                                }), t.onResize({
                                    width: r,
                                    height: i
                                })
                            }
                        }));
                        return n.observe(d.current),
                            function() {
                                e.finalize(), c.current = null, n.disconnect()
                            }
                    }
                }), []), q((function() {
                    c.current && c.current.setProps(X(X({}, t), a))
                }));
                var y = c.current && c.current.getMap();
                (0, u.useImperativeHandle)(e, (function() {
                    return function(t) {
                        return {
                            getMap: function() {
                                return t.current && t.current.getMap()
                            },
                            queryRenderedFeatures: function(e) {
                                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                    r = t.current && t.current.getMap();
                                return r && r.queryRenderedFeatures(e, n)
                            }
                        }
                    }(c)
                }), []);
                var v = (0, u.useCallback)((function(t) {
                        var e = t.target;
                        e === p.current && e.scrollTo(0, 0)
                    }), []),
                    m = y && u.createElement(W, {
                        value: X(X({}, g), {}, {
                            viewport: g.viewport || J(X({
                                map: y,
                                props: t
                            }, a)),
                            map: y,
                            container: g.container || d.current
                        })
                    }, u.createElement("div", {
                        key: "map-overlays",
                        className: "overlays",
                        ref: p,
                        style: Q,
                        onScroll: v
                    }, t.children)),
                    b = t.className,
                    w = t.width,
                    _ = t.height,
                    P = t.style,
                    E = t.visibilityConstraints,
                    x = Object.assign({
                        position: "relative"
                    }, P, {
                        width: w,
                        height: _
                    }),
                    S = t.visible && function(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : F;
                        for (var n in e) {
                            var r = n.slice(0, 3),
                                i = G(n.slice(3));
                            if ("min" === r && t[i] < e[n]) return !1;
                            if ("max" === r && t[i] > e[n]) return !1
                        }
                        return !0
                    }(t.viewState || t, E),
                    O = Object.assign({}, Q, {
                        visibility: S ? "inherit" : "hidden"
                    });
                return u.createElement("div", {
                    key: "map-container",
                    ref: d,
                    style: x
                }, u.createElement("div", {
                    key: "map-mapbox",
                    ref: f,
                    style: O,
                    className: b
                }), m, !r && !t.disableTokenWarning && u.createElement(nt, null))
            }));
            rt.supported = function() {
                return C() && C().supported()
            }, rt.propTypes = tt, rt.defaultProps = et;
            var it = rt;

            function ot(t, e) {
                var n;
                if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                    if (Array.isArray(t) || (n = function(t, e) {
                            if (!t) return;
                            if ("string" === typeof t) return at(t, e);
                            var n = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === n && t.constructor && (n = t.constructor.name);
                            if ("Map" === n || "Set" === n) return Array.from(t);
                            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return at(t, e)
                        }(t)) || e && t && "number" === typeof t.length) {
                        n && (t = n);
                        var r = 0,
                            i = function() {};
                        return {
                            s: i,
                            n: function() {
                                return r >= t.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t[r++]
                                }
                            },
                            e: function(t) {
                                throw t
                            },
                            f: i
                        }
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                var o, a = !0,
                    s = !1;
                return {
                    s: function() {
                        n = t[Symbol.iterator]()
                    },
                    n: function() {
                        var t = n.next();
                        return a = t.done, t
                    },
                    e: function(t) {
                        s = !0, o = t
                    },
                    f: function() {
                        try {
                            a || null == n.return || n.return()
                        } finally {
                            if (s) throw o
                        }
                    }
                }
            }

            function at(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }
            var st = function() {
                function t() {
                    d(this, t), (0, s.Z)(this, "propNames", [])
                }
                return g(t, [{
                    key: "arePropsEqual",
                    value: function(t, e) {
                        var n, r = ot(this.propNames || []);
                        try {
                            for (r.s(); !(n = r.n()).done;) {
                                var i = n.value;
                                if (!k(t[i], e[i])) return !1
                            }
                        } catch (o) {
                            r.e(o)
                        } finally {
                            r.f()
                        }
                        return !0
                    }
                }, {
                    key: "initializeProps",
                    value: function(t, e) {
                        return {
                            start: t,
                            end: e
                        }
                    }
                }, {
                    key: "interpolateProps",
                    value: function(t, e, n) {
                        L(!1, "interpolateProps is not implemented")
                    }
                }, {
                    key: "getDuration",
                    value: function(t, e) {
                        return e.transitionDuration
                    }
                }]), t
            }();

            function ut(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t
            }
            var ct = n(89611);

            function lt(t, e) {
                if ("function" !== typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
                t.prototype = Object.create(e && e.prototype, {
                    constructor: {
                        value: t,
                        writable: !0,
                        configurable: !0
                    }
                }), e && (0, ct.Z)(t, e)
            }

            function ft(t) {
                return (ft = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t) {
                    return typeof t
                } : function(t) {
                    return t && "function" === typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                })(t)
            }

            function ht(t, e) {
                if (e && ("object" === ft(e) || "function" === typeof e)) return e;
                if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
                return ut(t)
            }

            function dt(t) {
                return (dt = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                    return t.__proto__ || Object.getPrototypeOf(t)
                })(t)
            }
            var pt = {
                longitude: 1,
                bearing: 1
            };

            function gt(t) {
                return Number.isFinite(t) || Array.isArray(t)
            }

            function yt(t, e, n) {
                return function(t) {
                    return t in pt
                }(t) && Math.abs(n - e) > 180 && (n = n < 0 ? n + 360 : n - 360), n
            }

            function vt(t, e) {
                var n;
                if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                    if (Array.isArray(t) || (n = function(t, e) {
                            if (!t) return;
                            if ("string" === typeof t) return mt(t, e);
                            var n = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === n && t.constructor && (n = t.constructor.name);
                            if ("Map" === n || "Set" === n) return Array.from(t);
                            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mt(t, e)
                        }(t)) || e && t && "number" === typeof t.length) {
                        n && (t = n);
                        var r = 0,
                            i = function() {};
                        return {
                            s: i,
                            n: function() {
                                return r >= t.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t[r++]
                                }
                            },
                            e: function(t) {
                                throw t
                            },
                            f: i
                        }
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                var o, a = !0,
                    s = !1;
                return {
                    s: function() {
                        n = t[Symbol.iterator]()
                    },
                    n: function() {
                        var t = n.next();
                        return a = t.done, t
                    },
                    e: function(t) {
                        s = !0, o = t
                    },
                    f: function() {
                        try {
                            a || null == n.return || n.return()
                        } finally {
                            if (s) throw o
                        }
                    }
                }
            }

            function mt(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function bt(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = dt(t);
                    if (e) {
                        var i = dt(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return ht(this, n)
                }
            }
            var wt = ["longitude", "latitude", "zoom", "bearing", "pitch"],
                _t = ["latitude", "longitude", "zoom", "width", "height"],
                Pt = ["bearing", "pitch"],
                Et = {
                    speed: 1.2,
                    curve: 1.414
                },
                xt = function(t) {
                    lt(n, t);
                    var e = bt(n);

                    function n() {
                        var t, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return d(this, n), t = e.call(this), (0, s.Z)(ut(t), "propNames", wt), t.props = Object.assign({}, Et, r), t
                    }
                    return g(n, [{
                        key: "initializeProps",
                        value: function(t, e) {
                            var n, r = {},
                                i = {},
                                o = vt(_t);
                            try {
                                for (o.s(); !(n = o.n()).done;) {
                                    var a = n.value,
                                        s = t[a],
                                        u = e[a];
                                    L(gt(s) && gt(u), "".concat(a, " must be supplied for transition")), r[a] = s, i[a] = yt(a, s, u)
                                }
                            } catch (p) {
                                o.e(p)
                            } finally {
                                o.f()
                            }
                            var c, l = vt(Pt);
                            try {
                                for (l.s(); !(c = l.n()).done;) {
                                    var f = c.value,
                                        h = t[f] || 0,
                                        d = e[f] || 0;
                                    r[f] = h, i[f] = yt(f, h, d)
                                }
                            } catch (p) {
                                l.e(p)
                            } finally {
                                l.f()
                            }
                            return {
                                start: r,
                                end: i
                            }
                        }
                    }, {
                        key: "interpolateProps",
                        value: function(t, e, n) {
                            var r, i = (0, f.if)(t, e, n, this.props),
                                o = vt(Pt);
                            try {
                                for (o.s(); !(r = o.n()).done;) {
                                    var a = r.value;
                                    i[a] = j(t[a], e[a], n)
                                }
                            } catch (s) {
                                o.e(s)
                            } finally {
                                o.f()
                            }
                            return i
                        }
                    }, {
                        key: "getDuration",
                        value: function(t, e) {
                            var n = e.transitionDuration;
                            return "auto" === n && (n = (0, f.up)(t, e, this.props)), n
                        }
                    }]), n
                }(st);

            function St(t, e) {
                var n;
                if ("undefined" === typeof Symbol || null == t[Symbol.iterator]) {
                    if (Array.isArray(t) || (n = function(t, e) {
                            if (!t) return;
                            if ("string" === typeof t) return Ot(t, e);
                            var n = Object.prototype.toString.call(t).slice(8, -1);
                            "Object" === n && t.constructor && (n = t.constructor.name);
                            if ("Map" === n || "Set" === n) return Array.from(t);
                            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Ot(t, e)
                        }(t)) || e && t && "number" === typeof t.length) {
                        n && (t = n);
                        var r = 0,
                            i = function() {};
                        return {
                            s: i,
                            n: function() {
                                return r >= t.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: t[r++]
                                }
                            },
                            e: function(t) {
                                throw t
                            },
                            f: i
                        }
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                var o, a = !0,
                    s = !1;
                return {
                    s: function() {
                        n = t[Symbol.iterator]()
                    },
                    n: function() {
                        var t = n.next();
                        return a = t.done, t
                    },
                    e: function(t) {
                        s = !0, o = t
                    },
                    f: function() {
                        try {
                            a || null == n.return || n.return()
                        } finally {
                            if (s) throw o
                        }
                    }
                }
            }

            function Ot(t, e) {
                (null == e || e > t.length) && (e = t.length);
                for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
                return r
            }

            function Tt(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = dt(t);
                    if (e) {
                        var i = dt(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return ht(this, n)
                }
            }
            var Mt = ["longitude", "latitude", "zoom", "bearing", "pitch"],
                Ct = function(t) {
                    lt(n, t);
                    var e = Tt(n);

                    function n() {
                        var t, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return d(this, n), t = e.call(this), Array.isArray(r) && (r = {
                            transitionProps: r
                        }), t.propNames = r.transitionProps || Mt, r.around && (t.around = r.around), t
                    }
                    return g(n, [{
                        key: "initializeProps",
                        value: function(t, e) {
                            var n = {},
                                r = {};
                            if (this.around) {
                                n.around = this.around;
                                var i = new f.DW(t).unproject(this.around);
                                Object.assign(r, e, {
                                    around: new f.DW(e).project(i),
                                    aroundLngLat: i
                                })
                            }
                            var o, a = St(this.propNames);
                            try {
                                for (a.s(); !(o = a.n()).done;) {
                                    var s = o.value,
                                        u = t[s],
                                        c = e[s];
                                    L(gt(u) && gt(c), "".concat(s, " must be supplied for transition")), n[s] = u, r[s] = yt(s, u, c)
                                }
                            } catch (l) {
                                a.e(l)
                            } finally {
                                a.f()
                            }
                            return {
                                start: n,
                                end: r
                            }
                        }
                    }, {
                        key: "interpolateProps",
                        value: function(t, e, n) {
                            var r, i = {},
                                o = St(this.propNames);
                            try {
                                for (o.s(); !(r = o.n()).done;) {
                                    var a = r.value;
                                    i[a] = j(t[a], e[a], n)
                                }
                            } catch (h) {
                                o.e(h)
                            } finally {
                                o.f()
                            }
                            if (e.around) {
                                var s = l(new f.DW(Object.assign({}, e, i)).getMapCenterByLngLatPosition({
                                        lngLat: e.aroundLngLat,
                                        pos: j(t.around, e.around, n)
                                    }), 2),
                                    u = s[0],
                                    c = s[1];
                                i.longitude = u, i.latitude = c
                            }
                            return i
                        }
                    }]), n
                }(st),
                At = function() {};
            var kt = {
                    BREAK: 1,
                    SNAP_TO_END: 2,
                    IGNORE: 3,
                    UPDATE: 4
                },
                It = {
                    transitionDuration: 0,
                    transitionEasing: function(t) {
                        return t
                    },
                    transitionInterpolator: new Ct,
                    transitionInterruption: kt.BREAK,
                    onTransitionStart: At,
                    onTransitionInterrupt: At,
                    onTransitionEnd: At
                },
                jt = function() {
                    function t() {
                        var e = this,
                            n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        d(this, t), (0, s.Z)(this, "_animationFrame", null), (0, s.Z)(this, "_onTransitionFrame", (function() {
                            e._animationFrame = requestAnimationFrame(e._onTransitionFrame), e._updateViewport()
                        })), this.props = null, this.onViewportChange = n.onViewportChange || At, this.onStateChange = n.onStateChange || At, this.time = n.getTime || Date.now
                    }
                    return g(t, [{
                        key: "getViewportInTransition",
                        value: function() {
                            return this._animationFrame ? this.state.propsInTransition : null
                        }
                    }, {
                        key: "processViewportChange",
                        value: function(t) {
                            var e = this.props;
                            if (this.props = t, !e || this._shouldIgnoreViewportChange(e, t)) return !1;
                            if (this._isTransitionEnabled(t)) {
                                var n = Object.assign({}, e),
                                    r = Object.assign({}, t);
                                if (this._isTransitionInProgress() && (e.onTransitionInterrupt(), this.state.interruption === kt.SNAP_TO_END ? Object.assign(n, this.state.endProps) : Object.assign(n, this.state.propsInTransition), this.state.interruption === kt.UPDATE)) {
                                    var i = this.time(),
                                        o = (i - this.state.startTime) / this.state.duration;
                                    r.transitionDuration = this.state.duration - (i - this.state.startTime), r.transitionEasing = function(t, e) {
                                        var n = t(e);
                                        return function(r) {
                                            return 1 / (1 - n) * (t(r * (1 - e) + e) - n)
                                        }
                                    }(this.state.easing, o), r.transitionInterpolator = n.transitionInterpolator
                                }
                                return r.onTransitionStart(), this._triggerTransition(n, r), !0
                            }
                            return this._isTransitionInProgress() && (e.onTransitionInterrupt(), this._endTransition()), !1
                        }
                    }, {
                        key: "_isTransitionInProgress",
                        value: function() {
                            return Boolean(this._animationFrame)
                        }
                    }, {
                        key: "_isTransitionEnabled",
                        value: function(t) {
                            var e = t.transitionDuration,
                                n = t.transitionInterpolator;
                            return (e > 0 || "auto" === e) && Boolean(n)
                        }
                    }, {
                        key: "_isUpdateDueToCurrentTransition",
                        value: function(t) {
                            return !!this.state.propsInTransition && this.state.interpolator.arePropsEqual(t, this.state.propsInTransition)
                        }
                    }, {
                        key: "_shouldIgnoreViewportChange",
                        value: function(t, e) {
                            return !t || (this._isTransitionInProgress() ? this.state.interruption === kt.IGNORE || this._isUpdateDueToCurrentTransition(e) : !this._isTransitionEnabled(e) || e.transitionInterpolator.arePropsEqual(t, e))
                        }
                    }, {
                        key: "_triggerTransition",
                        value: function(t, e) {
                            L(this._isTransitionEnabled(e)), this._animationFrame && cancelAnimationFrame(this._animationFrame);
                            var n = e.transitionInterpolator,
                                r = n.getDuration ? n.getDuration(t, e) : e.transitionDuration;
                            if (0 !== r) {
                                var i = e.transitionInterpolator.initializeProps(t, e),
                                    o = {
                                        inTransition: !0,
                                        isZooming: t.zoom !== e.zoom,
                                        isPanning: t.longitude !== e.longitude || t.latitude !== e.latitude,
                                        isRotating: t.bearing !== e.bearing || t.pitch !== e.pitch
                                    };
                                this.state = {
                                    duration: r,
                                    easing: e.transitionEasing,
                                    interpolator: e.transitionInterpolator,
                                    interruption: e.transitionInterruption,
                                    startTime: this.time(),
                                    startProps: i.start,
                                    endProps: i.end,
                                    animation: null,
                                    propsInTransition: {}
                                }, this._onTransitionFrame(), this.onStateChange(o)
                            }
                        }
                    }, {
                        key: "_endTransition",
                        value: function() {
                            this._animationFrame && (cancelAnimationFrame(this._animationFrame), this._animationFrame = null), this.onStateChange({
                                inTransition: !1,
                                isZooming: !1,
                                isPanning: !1,
                                isRotating: !1
                            })
                        }
                    }, {
                        key: "_updateViewport",
                        value: function() {
                            var t = this.time(),
                                e = this.state,
                                n = e.startTime,
                                r = e.duration,
                                i = e.easing,
                                o = e.interpolator,
                                a = e.startProps,
                                s = e.endProps,
                                u = !1,
                                c = (t - n) / r;
                            c >= 1 && (c = 1, u = !0), c = i(c);
                            var l = o.interpolateProps(a, s, c),
                                f = new U(Object.assign({}, this.props, l));
                            this.state.propsInTransition = f.getViewportProps(), this.onViewportChange(this.state.propsInTransition, this.props), u && (this._endTransition(), this.props.onTransitionEnd())
                        }
                    }]), t
                }();
            (0, s.Z)(jt, "defaultProps", It);
            var Lt = n(23042);

            function Rt(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function Dt(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? Rt(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Rt(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }
            var Ft = {
                    transitionDuration: 0
                },
                Nt = {
                    transitionDuration: 300,
                    transitionEasing: function(t) {
                        return t
                    },
                    transitionInterpolator: new Ct,
                    transitionInterruption: kt.BREAK
                },
                zt = 300,
                Bt = function(t) {
                    return 1 - (1 - t) * (1 - t)
                },
                Ut = ["wheel"],
                Gt = ["panstart", "panmove", "panend"],
                Zt = ["pinchstart", "pinchmove", "pinchend"],
                Vt = ["tripanstart", "tripanmove", "tripanend"],
                Ht = ["doubletap"],
                Wt = ["keydown"],
                Yt = function() {
                    function t() {
                        var e = this;
                        d(this, t), (0, s.Z)(this, "events", []), (0, s.Z)(this, "scrollZoom", !0), (0, s.Z)(this, "dragPan", !0), (0, s.Z)(this, "dragRotate", !0), (0, s.Z)(this, "doubleClickZoom", !0), (0, s.Z)(this, "touchZoom", !0), (0, s.Z)(this, "touchRotate", !1), (0, s.Z)(this, "keyboard", !0), (0, s.Z)(this, "_interactionState", {
                            isDragging: !1
                        }), (0, s.Z)(this, "_events", {}), (0, s.Z)(this, "_setInteractionState", (function(t) {
                            Object.assign(e._interactionState, t), e.onStateChange && e.onStateChange(e._interactionState)
                        })), (0, s.Z)(this, "_onTransition", (function(t, n) {
                            e.onViewportChange(t, e._interactionState, n)
                        })), this.handleEvent = this.handleEvent.bind(this), this._transitionManager = new jt({
                            onViewportChange: this._onTransition,
                            onStateChange: this._setInteractionState
                        })
                    }
                    return g(t, [{
                        key: "handleEvent",
                        value: function(t) {
                            this.mapState = this.getMapState();
                            var e = this._eventStartBlocked;
                            switch (t.type) {
                                case "panstart":
                                    return !e && this._onPanStart(t);
                                case "panmove":
                                    return this._onPan(t);
                                case "panend":
                                    return this._onPanEnd(t);
                                case "pinchstart":
                                    return !e && this._onPinchStart(t);
                                case "pinchmove":
                                    return this._onPinch(t);
                                case "pinchend":
                                    return this._onPinchEnd(t);
                                case "tripanstart":
                                    return !e && this._onTriplePanStart(t);
                                case "tripanmove":
                                    return this._onTriplePan(t);
                                case "tripanend":
                                    return this._onTriplePanEnd(t);
                                case "doubletap":
                                    return this._onDoubleTap(t);
                                case "wheel":
                                    return this._onWheel(t);
                                case "keydown":
                                    return this._onKeyDown(t);
                                default:
                                    return !1
                            }
                        }
                    }, {
                        key: "getCenter",
                        value: function(t) {
                            var e = t.offsetCenter;
                            return [e.x, e.y]
                        }
                    }, {
                        key: "isFunctionKeyPressed",
                        value: function(t) {
                            var e = t.srcEvent;
                            return Boolean(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
                        }
                    }, {
                        key: "blockEvents",
                        value: function(t) {
                            var e = this,
                                n = setTimeout((function() {
                                    e._eventStartBlocked === n && (e._eventStartBlocked = null)
                                }), t);
                            this._eventStartBlocked = n
                        }
                    }, {
                        key: "updateViewport",
                        value: function(t, e, n) {
                            var r = this.mapState instanceof U ? this.mapState.getViewportProps() : this.mapState,
                                i = Dt(Dt({}, t.getViewportProps()), e),
                                o = Object.keys(i).some((function(t) {
                                    return r[t] !== i[t]
                                }));
                            this._state = t.getState(), this._setInteractionState(n), o && this.onViewportChange(i, this._interactionState, r)
                        }
                    }, {
                        key: "getMapState",
                        value: function(t) {
                            return new U(Dt(Dt(Dt({}, this.mapStateProps), this._state), t))
                        }
                    }, {
                        key: "isDragging",
                        value: function() {
                            return this._interactionState.isDragging
                        }
                    }, {
                        key: "setOptions",
                        value: function(t) {
                            var e = t.onViewportChange,
                                n = t.onStateChange,
                                r = t.eventManager,
                                i = void 0 === r ? this.eventManager : r,
                                o = t.isInteractive,
                                a = void 0 === o || o,
                                s = t.scrollZoom,
                                u = void 0 === s ? this.scrollZoom : s,
                                c = t.dragPan,
                                l = void 0 === c ? this.dragPan : c,
                                f = t.dragRotate,
                                h = void 0 === f ? this.dragRotate : f,
                                d = t.doubleClickZoom,
                                p = void 0 === d ? this.doubleClickZoom : d,
                                g = t.touchZoom,
                                y = void 0 === g ? this.touchZoom : g,
                                v = t.touchRotate,
                                m = void 0 === v ? this.touchRotate : v,
                                b = t.keyboard,
                                w = void 0 === b ? this.keyboard : b;
                            this.onViewportChange = e, this.onStateChange = n;
                            var _ = this.mapStateProps || {},
                                P = _.height !== t.height || _.width !== t.width;
                            this.mapStateProps = t, P && (this.mapState = _, this.updateViewport(new U(t))), this._transitionManager.processViewportChange(t), this.eventManager !== i && (this.eventManager = i, this._events = {}, this.toggleEvents(this.events, !0)), this.toggleEvents(Ut, a && Boolean(u)), this.toggleEvents(Gt, a && Boolean(l || h)), this.toggleEvents(Zt, a && Boolean(y || m)), this.toggleEvents(Vt, a && Boolean(m)), this.toggleEvents(Ht, a && Boolean(p)), this.toggleEvents(Wt, a && Boolean(w)), this.scrollZoom = u, this.dragPan = l, this.dragRotate = h, this.doubleClickZoom = p, this.touchZoom = y, this.touchRotate = m, this.keyboard = w
                        }
                    }, {
                        key: "toggleEvents",
                        value: function(t, e) {
                            var n = this;
                            this.eventManager && t.forEach((function(t) {
                                n._events[t] !== e && (n._events[t] = e, e ? n.eventManager.on(t, n.handleEvent) : n.eventManager.off(t, n.handleEvent))
                            }))
                        }
                    }, {
                        key: "_onPanStart",
                        value: function(t) {
                            var e = this.getCenter(t);
                            this._panRotate = this.isFunctionKeyPressed(t) || t.rightButton;
                            var n = this._panRotate ? this.mapState.rotateStart({
                                pos: e
                            }) : this.mapState.panStart({
                                pos: e
                            });
                            return this.updateViewport(n, Ft, {
                                isDragging: !0
                            }), !0
                        }
                    }, {
                        key: "_onPan",
                        value: function(t) {
                            return !!this.isDragging() && (this._panRotate ? this._onPanRotate(t) : this._onPanMove(t))
                        }
                    }, {
                        key: "_onPanEnd",
                        value: function(t) {
                            return !!this.isDragging() && (this._panRotate ? this._onPanRotateEnd(t) : this._onPanMoveEnd(t))
                        }
                    }, {
                        key: "_onPanMove",
                        value: function(t) {
                            if (!this.dragPan) return !1;
                            var e = this.getCenter(t),
                                n = this.mapState.pan({
                                    pos: e
                                });
                            return this.updateViewport(n, Ft, {
                                isPanning: !0
                            }), !0
                        }
                    }, {
                        key: "_onPanMoveEnd",
                        value: function(t) {
                            if (this.dragPan) {
                                var e = this.dragPan.inertia,
                                    n = void 0 === e ? zt : e;
                                if (n && t.velocity) {
                                    var r = this.getCenter(t),
                                        i = [r[0] + t.velocityX * n / 2, r[1] + t.velocityY * n / 2],
                                        o = this.mapState.pan({
                                            pos: i
                                        }).panEnd();
                                    return this.updateViewport(o, Dt(Dt({}, Nt), {}, {
                                        transitionDuration: n,
                                        transitionEasing: Bt
                                    }), {
                                        isDragging: !1,
                                        isPanning: !0
                                    }), !0
                                }
                            }
                            var a = this.mapState.panEnd();
                            return this.updateViewport(a, null, {
                                isDragging: !1,
                                isPanning: !1
                            }), !0
                        }
                    }, {
                        key: "_onPanRotate",
                        value: function(t) {
                            if (!this.dragRotate) return !1;
                            var e = this.getCenter(t),
                                n = this.mapState.rotate({
                                    pos: e
                                });
                            return this.updateViewport(n, Ft, {
                                isRotating: !0
                            }), !0
                        }
                    }, {
                        key: "_onPanRotateEnd",
                        value: function(t) {
                            if (this.dragRotate) {
                                var e = this.dragRotate.inertia,
                                    n = void 0 === e ? zt : e;
                                if (n && t.velocity) {
                                    var r = this.getCenter(t),
                                        i = [r[0] + t.velocityX * n / 2, r[1] + t.velocityY * n / 2],
                                        o = this.mapState.rotate({
                                            pos: i
                                        }).rotateEnd();
                                    return this.updateViewport(o, Dt(Dt({}, Nt), {}, {
                                        transitionDuration: n,
                                        transitionEasing: Bt
                                    }), {
                                        isDragging: !1,
                                        isRotating: !0
                                    }), !0
                                }
                            }
                            var a = this.mapState.panEnd();
                            return this.updateViewport(a, null, {
                                isDragging: !1,
                                isRotating: !1
                            }), !0
                        }
                    }, {
                        key: "_onWheel",
                        value: function(t) {
                            if (!this.scrollZoom) return !1;
                            var e = this.scrollZoom,
                                n = e.speed,
                                r = void 0 === n ? .01 : n,
                                i = e.smooth,
                                o = void 0 !== i && i;
                            t.preventDefault();
                            var a = this.getCenter(t),
                                s = t.delta,
                                u = 2 / (1 + Math.exp(-Math.abs(s * r)));
                            s < 0 && 0 !== u && (u = 1 / u);
                            var c = this.mapState.zoom({
                                pos: a,
                                scale: u
                            });
                            return c.getViewportProps().zoom !== this.mapStateProps.zoom && (this.updateViewport(c, Dt(Dt({}, Nt), {}, {
                                transitionInterpolator: new Ct({
                                    around: a
                                }),
                                transitionDuration: o ? 250 : 1
                            }), {
                                isPanning: !0,
                                isZooming: !0
                            }), !0)
                        }
                    }, {
                        key: "_onPinchStart",
                        value: function(t) {
                            var e = this.getCenter(t),
                                n = this.mapState.zoomStart({
                                    pos: e
                                }).rotateStart({
                                    pos: e
                                });
                            return this._startPinchRotation = t.rotation, this._lastPinchEvent = t, this.updateViewport(n, Ft, {
                                isDragging: !0
                            }), !0
                        }
                    }, {
                        key: "_onPinch",
                        value: function(t) {
                            if (!this.isDragging()) return !1;
                            if (!this.touchZoom && !this.touchRotate) return !1;
                            var e = this.mapState;
                            if (this.touchZoom) {
                                var n = t.scale,
                                    r = this.getCenter(t);
                                e = e.zoom({
                                    pos: r,
                                    scale: n
                                })
                            }
                            if (this.touchRotate) {
                                var i = t.rotation;
                                e = e.rotate({
                                    deltaAngleX: this._startPinchRotation - i
                                })
                            }
                            return this.updateViewport(e, Ft, {
                                isDragging: !0,
                                isPanning: Boolean(this.touchZoom),
                                isZooming: Boolean(this.touchZoom),
                                isRotating: Boolean(this.touchRotate)
                            }), this._lastPinchEvent = t, !0
                        }
                    }, {
                        key: "_onPinchEnd",
                        value: function(t) {
                            if (!this.isDragging()) return !1;
                            if (this.touchZoom) {
                                var e = this.touchZoom.inertia,
                                    n = void 0 === e ? zt : e,
                                    r = this._lastPinchEvent;
                                if (n && r && t.scale !== r.scale) {
                                    var i = this.getCenter(t),
                                        o = this.mapState.rotateEnd(),
                                        a = Math.log2(t.scale),
                                        s = (a - Math.log2(r.scale)) / (t.deltaTime - r.deltaTime),
                                        u = Math.pow(2, a + s * n / 2);
                                    return o = o.zoom({
                                        pos: i,
                                        scale: u
                                    }).zoomEnd(), this.updateViewport(o, Dt(Dt({}, Nt), {}, {
                                        transitionInterpolator: new Ct({
                                            around: i
                                        }),
                                        transitionDuration: n,
                                        transitionEasing: Bt
                                    }), {
                                        isDragging: !1,
                                        isPanning: Boolean(this.touchZoom),
                                        isZooming: Boolean(this.touchZoom),
                                        isRotating: !1
                                    }), this.blockEvents(n), !0
                                }
                            }
                            var c = this.mapState.zoomEnd().rotateEnd();
                            return this._state.startPinchRotation = 0, this.updateViewport(c, null, {
                                isDragging: !1,
                                isPanning: !1,
                                isZooming: !1,
                                isRotating: !1
                            }), this._startPinchRotation = null, this._lastPinchEvent = null, !0
                        }
                    }, {
                        key: "_onTriplePanStart",
                        value: function(t) {
                            var e = this.getCenter(t),
                                n = this.mapState.rotateStart({
                                    pos: e
                                });
                            return this.updateViewport(n, Ft, {
                                isDragging: !0
                            }), !0
                        }
                    }, {
                        key: "_onTriplePan",
                        value: function(t) {
                            if (!this.isDragging()) return !1;
                            if (!this.touchRotate) return !1;
                            var e = this.getCenter(t);
                            e[0] -= t.deltaX;
                            var n = this.mapState.rotate({
                                pos: e
                            });
                            return this.updateViewport(n, Ft, {
                                isRotating: !0
                            }), !0
                        }
                    }, {
                        key: "_onTriplePanEnd",
                        value: function(t) {
                            if (!this.isDragging()) return !1;
                            if (this.touchRotate) {
                                var e = this.touchRotate.inertia,
                                    n = void 0 === e ? zt : e;
                                if (n && t.velocityY) {
                                    var r = this.getCenter(t),
                                        i = [r[0], r[1] += t.velocityY * n / 2],
                                        o = this.mapState.rotate({
                                            pos: i
                                        });
                                    return this.updateViewport(o, Dt(Dt({}, Nt), {}, {
                                        transitionDuration: n,
                                        transitionEasing: Bt
                                    }), {
                                        isDragging: !1,
                                        isRotating: !0
                                    }), this.blockEvents(n), !1
                                }
                            }
                            var a = this.mapState.rotateEnd();
                            return this.updateViewport(a, null, {
                                isDragging: !1,
                                isRotating: !1
                            }), !0
                        }
                    }, {
                        key: "_onDoubleTap",
                        value: function(t) {
                            if (!this.doubleClickZoom) return !1;
                            var e = this.getCenter(t),
                                n = this.isFunctionKeyPressed(t),
                                r = this.mapState.zoom({
                                    pos: e,
                                    scale: n ? .5 : 2
                                });
                            return this.updateViewport(r, Object.assign({}, Nt, {
                                transitionInterpolator: new Ct({
                                    around: e
                                })
                            }), {
                                isZooming: !0
                            }), !0
                        }
                    }, {
                        key: "_onKeyDown",
                        value: function(t) {
                            if (!this.keyboard) return !1;
                            var e, n = this.isFunctionKeyPressed(t),
                                r = this.keyboard,
                                i = r.zoomSpeed,
                                o = void 0 === i ? 2 : i,
                                a = r.moveSpeed,
                                s = void 0 === a ? 100 : a,
                                u = r.rotateSpeedX,
                                c = void 0 === u ? 15 : u,
                                l = r.rotateSpeedY,
                                f = void 0 === l ? 10 : l,
                                h = this.mapStateProps;
                            switch (t.srcEvent.keyCode) {
                                case 189:
                                    e = n ? this.getMapState({
                                        zoom: h.zoom - Math.log2(o) - 1
                                    }) : this.getMapState({
                                        zoom: h.zoom - Math.log2(o)
                                    });
                                    break;
                                case 187:
                                    e = n ? this.getMapState({
                                        zoom: h.zoom + Math.log2(o) + 1
                                    }) : this.getMapState({
                                        zoom: h.zoom + Math.log2(o)
                                    });
                                    break;
                                case 37:
                                    e = n ? this.getMapState({
                                        bearing: h.bearing - c
                                    }) : this.mapState.pan({
                                        pos: [s, 0],
                                        startPos: [0, 0]
                                    });
                                    break;
                                case 39:
                                    e = n ? this.getMapState({
                                        bearing: h.bearing + c
                                    }) : this.mapState.pan({
                                        pos: [-s, 0],
                                        startPos: [0, 0]
                                    });
                                    break;
                                case 38:
                                    e = n ? this.getMapState({
                                        pitch: h.pitch + f
                                    }) : this.mapState.pan({
                                        pos: [0, s],
                                        startPos: [0, 0]
                                    });
                                    break;
                                case 40:
                                    e = n ? this.getMapState({
                                        pitch: h.pitch - f
                                    }) : this.mapState.pan({
                                        pos: [0, -s],
                                        startPos: [0, 0]
                                    });
                                    break;
                                default:
                                    return !1
                            }
                            return this.updateViewport(e, Nt)
                        }
                    }]), t
                }();

            function qt(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function $t(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? qt(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : qt(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }
            var Xt = Object.assign({}, it.propTypes, {
                    maxZoom: c.number,
                    minZoom: c.number,
                    maxPitch: c.number,
                    minPitch: c.number,
                    onViewStateChange: c.func,
                    onViewportChange: c.func,
                    onInteractionStateChange: c.func,
                    transitionDuration: c.oneOfType([c.number, c.string]),
                    transitionInterpolator: c.object,
                    transitionInterruption: c.number,
                    transitionEasing: c.func,
                    onTransitionStart: c.func,
                    onTransitionInterrupt: c.func,
                    onTransitionEnd: c.func,
                    scrollZoom: c.oneOfType([c.bool, c.object]),
                    dragPan: c.oneOfType([c.bool, c.object]),
                    dragRotate: c.oneOfType([c.bool, c.object]),
                    doubleClickZoom: c.bool,
                    touchZoom: c.oneOfType([c.bool, c.object]),
                    touchRotate: c.oneOfType([c.bool, c.object]),
                    keyboard: c.oneOfType([c.bool, c.object]),
                    onHover: c.func,
                    onClick: c.func,
                    onDblClick: c.func,
                    onContextMenu: c.func,
                    onMouseDown: c.func,
                    onMouseMove: c.func,
                    onMouseUp: c.func,
                    onTouchStart: c.func,
                    onTouchMove: c.func,
                    onTouchEnd: c.func,
                    onMouseEnter: c.func,
                    onMouseLeave: c.func,
                    onMouseOut: c.func,
                    onWheel: c.func,
                    touchAction: c.string,
                    eventRecognizerOptions: c.object,
                    clickRadius: c.number,
                    interactiveLayerIds: c.array,
                    getCursor: c.func,
                    controller: c.instanceOf(Yt)
                }),
                Kt = Object.assign({}, it.defaultProps, F, jt.defaultProps, {
                    onViewStateChange: null,
                    onViewportChange: null,
                    onClick: null,
                    onNativeClick: null,
                    onHover: null,
                    onContextMenu: function(t) {
                        return t.preventDefault()
                    },
                    scrollZoom: !0,
                    dragPan: !0,
                    dragRotate: !0,
                    doubleClickZoom: !0,
                    touchZoom: !0,
                    touchRotate: !1,
                    keyboard: !0,
                    touchAction: "none",
                    eventRecognizerOptions: {},
                    clickRadius: 0,
                    getCursor: function(t) {
                        var e = t.isDragging,
                            n = t.isHovering;
                        return e ? "grabbing" : n ? "pointer" : "grab"
                    }
                });

            function Jt(t) {
                if (t.lngLat || !t.offsetCenter) return t;
                var e = t.offsetCenter,
                    n = e.x,
                    r = e.y;
                if (!Number.isFinite(n) || !Number.isFinite(r)) return t;
                var i = [n, r];
                return t.point = i, t.lngLat = this.viewport.unproject(i), t
            }

            function Qt(t) {
                var e = this.map;
                if (!e || !t) return null;
                var n = {},
                    r = this.props.clickRadius;
                this.props.interactiveLayerIds && (n.layers = this.props.interactiveLayerIds);
                try {
                    return e.queryRenderedFeatures(r ? [
                        [t[0] - r, t[1] + r],
                        [t[0] + r, t[1] - r]
                    ] : t, n)
                } catch (i) {
                    return null
                }
            }

            function te(t, e) {
                var n = this.props[t];
                n && n(Jt.call(this, e))
            }

            function ee(t) {
                te.call(this, "touch" === t.pointerType ? "onTouchStart" : "onMouseDown", t)
            }

            function ne(t) {
                te.call(this, "touch" === t.pointerType ? "onTouchEnd" : "onMouseUp", t)
            }

            function re(t) {
                if (te.call(this, "touch" === t.pointerType ? "onTouchMove" : "onMouseMove", t), !this.state.isDragging) {
                    var e, n = this.props,
                        r = n.onHover,
                        i = n.interactiveLayerIds;
                    t = Jt.call(this, t), (i || r) && (e = Qt.call(this, t.point));
                    var o = Boolean(i && e && e.length > 0),
                        a = o && !this.state.isHovering,
                        s = !o && this.state.isHovering;
                    (r || a) && (t.features = e, r && r(t)), a && te.call(this, "onMouseEnter", t), s && te.call(this, "onMouseLeave", t), (a || s) && this.setState({
                        isHovering: o
                    })
                }
            }

            function ie(t) {
                var e = this.props,
                    n = e.onClick,
                    r = e.onNativeClick,
                    i = e.onDblClick,
                    o = e.doubleClickZoom,
                    a = [],
                    s = i || o;
                switch (t.type) {
                    case "anyclick":
                        a.push(r), s || a.push(n);
                        break;
                    case "click":
                        s && a.push(n)
                }(a = a.filter(Boolean)).length && ((t = Jt.call(this, t)).features = Qt.call(this, t.point), a.forEach((function(e) {
                    return e(t)
                })))
            }
            var oe = (0, u.forwardRef)((function(t, e) {
                var n = (0, u.useContext)(Y),
                    i = (0, u.useMemo)((function() {
                        return t.controller || new Yt
                    }), []),
                    o = (0, u.useMemo)((function() {
                        return new Lt.Q(null, {
                            touchAction: t.touchAction,
                            recognizerOptions: t.eventRecognizerOptions
                        })
                    }), []),
                    s = (0, u.useRef)(null),
                    c = (0, u.useRef)(null),
                    l = (0, u.useRef)({
                        width: 0,
                        height: 0,
                        state: {
                            isHovering: !1,
                            isDragging: !1
                        }
                    }).current;
                l.props = t, l.map = c.current && c.current.getMap(), l.setState = function(e) {
                    l.state = $t($t({}, l.state), e), s.current.style.cursor = t.getCursor(l.state)
                };
                var f, h, d = !0,
                    p = function(t, e, n) {
                        if (d) f = [t, e, n];
                        else {
                            var r = l.props,
                                i = r.onViewStateChange,
                                o = r.onViewportChange;
                            i && i({
                                viewState: t,
                                interactionState: e,
                                oldViewState: n
                            }), o && o(t, e, n)
                        }
                    };
                (0, u.useImperativeHandle)(e, (function() {
                    return function(t) {
                        return {
                            getMap: t.current && t.current.getMap,
                            queryRenderedFeatures: t.current && t.current.queryRenderedFeatures
                        }
                    }(c)
                }), []);
                var g = (0, u.useMemo)((function() {
                    return $t($t({}, n), {}, {
                        eventManager: o,
                        container: n.container || s.current
                    })
                }), [n, s.current]);
                g.onViewportChange = p, g.viewport = n.viewport || J(l), l.viewport = g.viewport;
                var y = function(t) {
                        var e = t.isDragging,
                            n = void 0 !== e && e;
                        if (n !== l.state.isDragging && l.setState({
                                isDragging: n
                            }), d) h = t;
                        else {
                            var r = l.props.onInteractionStateChange;
                            r && r(t)
                        }
                    },
                    v = function() {
                        l.width && l.height && i.setOptions($t($t($t({}, l.props), l.props.viewState), {}, {
                            isInteractive: Boolean(l.props.onViewStateChange || l.props.onViewportChange),
                            onViewportChange: p,
                            onStateChange: y,
                            eventManager: o,
                            width: l.width,
                            height: l.height
                        }))
                    };
                (0, u.useEffect)((function() {
                    return o.setElement(s.current), o.on({
                            pointerdown: ee.bind(l),
                            pointermove: re.bind(l),
                            pointerup: ne.bind(l),
                            pointerleave: te.bind(l, "onMouseOut"),
                            click: ie.bind(l),
                            anyclick: ie.bind(l),
                            dblclick: te.bind(l, "onDblClick"),
                            wheel: te.bind(l, "onWheel"),
                            contextmenu: te.bind(l, "onContextMenu")
                        }),
                        function() {
                            o.destroy()
                        }
                }), []), q((function() {
                    f && p.apply(void 0, a(f)), h && y(h)
                })), v();
                var m = t.width,
                    b = t.height,
                    w = t.style,
                    _ = t.getCursor,
                    P = (0, u.useMemo)((function() {
                        return $t($t({
                            position: "relative"
                        }, w), {}, {
                            width: m,
                            height: b,
                            cursor: _(l.state)
                        })
                    }), [w, m, b, _, l.state]);
                return f && l._child || (l._child = u.createElement(W, {
                    value: g
                }, u.createElement("div", {
                    key: "event-canvas",
                    ref: s,
                    style: P
                }, u.createElement(it, (0, r.Z)({}, t, {
                    width: "100%",
                    height: "100%",
                    style: null,
                    onResize: function(t) {
                        var e = t.width,
                            n = t.height;
                        l.width = e, l.height = n, v(), l.props.onResize({
                            width: e,
                            height: n
                        })
                    },
                    ref: c
                }))))), d = !1, l._child
            }));
            oe.supported = it.supported, oe.propTypes = Xt, oe.defaultProps = Kt;
            var ae = oe;

            function se(t, e) {
                if (t === e) return !0;
                if (!t || !e) return !1;
                if (Array.isArray(t)) {
                    if (!Array.isArray(e) || t.length !== e.length) return !1;
                    for (var n = 0; n < t.length; n++)
                        if (!se(t[n], e[n])) return !1;
                    return !0
                }
                if (Array.isArray(e)) return !1;
                if ("object" === ft(t) && "object" === ft(e)) {
                    var r = Object.keys(t),
                        i = Object.keys(e);
                    if (r.length !== i.length) return !1;
                    for (var o = 0, a = r; o < a.length; o++) {
                        var s = a[o];
                        if (!e.hasOwnProperty(s)) return !1;
                        if (!se(t[s], e[s])) return !1
                    }
                    return !0
                }
                return !1
            }

            function ue(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var ce = {
                    type: c.string.isRequired,
                    id: c.string
                },
                le = 0;

            function fe(t, e, n) {
                if (t.style && t.style._loaded) {
                    var r = function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? ue(Object(n), !0).forEach((function(e) {
                                (0, s.Z)(t, e, n[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : ue(Object(n)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                            }))
                        }
                        return t
                    }({}, n);
                    return delete r.id, delete r.children, t.addSource(e, r), t.getSource(e)
                }
                return null
            }

            function he(t) {
                var e = (0, u.useContext)(Y),
                    n = (0, u.useRef)({
                        id: t.id,
                        type: t.type
                    }),
                    r = l((0, u.useState)(0), 2)[1],
                    i = (0, u.useMemo)((function() {
                        return t.id || "jsx-source-".concat(le++)
                    }), []),
                    o = e.map;
                (0, u.useEffect)((function() {
                    if (o) {
                        var t = function() {
                            return r((function(t) {
                                return t + 1
                            }))
                        };
                        return o.on("styledata", t),
                            function() {
                                o.off("styledata", t), requestAnimationFrame((function() {
                                    o.style && o.style._loaded && o.getSource(i) && o.removeSource(i)
                                }))
                            }
                    }
                }), [o, i]);
                var a = o && o.style && o.getSource(i);
                return a ? function(t, e, n) {
                    L(e.id === n.id, "source id changed"), L(e.type === n.type, "source type changed");
                    var r = "",
                        i = 0;
                    for (var o in e) "children" === o || "id" === o || se(n[o], e[o]) || (r = o, i++);
                    if (i) {
                        var a = e.type;
                        if ("geojson" === a) t.setData(e.data);
                        else if ("image" === a) t.updateImage({
                            url: e.url,
                            coordinates: e.coordinates
                        });
                        else if ("canvas" !== a && "video" !== a || 1 !== i || "coordinates" !== r)
                            if ("vector" === a && t.setUrl) switch (r) {
                                case "url":
                                    t.setUrl(e.url);
                                    break;
                                case "tiles":
                                    t.setTiles(e.tiles)
                            } else console.warn("Unable to update <Source> prop: ".concat(r));
                            else t.setCoordinates(e.coordinates)
                    }
                }(a, t, n.current) : a = fe(o, i, t), n.current = t, a && u.Children.map(t.children, (function(t) {
                    return t && (0, u.cloneElement)(t, {
                        source: i
                    })
                })) || null
            }
            he.propTypes = ce;
            var de = he;

            function pe(t, e) {
                if (null == t) return {};
                var n, r, i = function(t, e) {
                    if (null == t) return {};
                    var n, r, i = {},
                        o = Object.keys(t);
                    for (r = 0; r < o.length; r++) n = o[r], e.indexOf(n) >= 0 || (i[n] = t[n]);
                    return i
                }(t, e);
                if (Object.getOwnPropertySymbols) {
                    var o = Object.getOwnPropertySymbols(t);
                    for (r = 0; r < o.length; r++) n = o[r], e.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(t, n) && (i[n] = t[n])
                }
                return i
            }

            function ge(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function ye(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? ge(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : ge(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }
            var ve = {
                type: c.oneOf(["fill", "line", "symbol", "circle", "fill-extrusion", "raster", "background", "heatmap", "hillshade"]).isRequired,
                id: c.string,
                source: c.string,
                beforeId: c.string
            };

            function me(t, e, n, r) {
                L(n.id === r.id, "layer id changed"), L(n.type === r.type, "layer type changed");
                try {
                    ! function(t, e, n, r) {
                        var i = n.layout,
                            o = void 0 === i ? {} : i,
                            a = n.paint,
                            s = void 0 === a ? {} : a,
                            u = n.filter,
                            c = n.minzoom,
                            l = n.maxzoom,
                            f = n.beforeId,
                            h = pe(n, ["layout", "paint", "filter", "minzoom", "maxzoom", "beforeId"]);
                        if (f !== r.beforeId && t.moveLayer(e, f), o !== r.layout) {
                            var d = r.layout || {};
                            for (var p in o) se(o[p], d[p]) || t.setLayoutProperty(e, p, o[p]);
                            for (var g in d) o.hasOwnProperty(g) || t.setLayoutProperty(e, g, void 0)
                        }
                        if (s !== r.paint) {
                            var y = r.paint || {};
                            for (var v in s) se(s[v], y[v]) || t.setPaintProperty(e, v, s[v]);
                            for (var m in y) s.hasOwnProperty(m) || t.setPaintProperty(e, m, void 0)
                        }
                        for (var b in se(u, r.filter) || t.setFilter(e, u), c === r.minzoom && l === r.maxzoom || t.setLayerZoomRange(e, c, l), h) se(h[b], r[b]) || t.setLayerProperty(e, b, h[b])
                    }(t, e, n, r)
                } catch (i) {
                    console.warn(i)
                }
            }
            var be = 0;

            function we(t) {
                var e = (0, u.useContext)(Y),
                    n = (0, u.useRef)({
                        id: t.id,
                        type: t.type
                    }),
                    r = l((0, u.useState)(0), 2)[1],
                    i = (0, u.useMemo)((function() {
                        return t.id || "jsx-layer-".concat(be++)
                    }), []),
                    o = e.map;
                return (0, u.useEffect)((function() {
                    if (o) {
                        var t = function() {
                            return r((function(t) {
                                return t + 1
                            }))
                        };
                        return o.on("styledata", t),
                            function() {
                                o.off("styledata", t), o.style && o.style._loaded && o.removeLayer(i)
                            }
                    }
                }), [o]), o && o.style && o.getLayer(i) ? me(o, i, t, n.current) : function(t, e, n) {
                    if (t.style && t.style._loaded) {
                        var r = ye(ye({}, n), {}, {
                            id: e
                        });
                        delete r.beforeId, t.addLayer(r, n.beforeId)
                    }
                }(o, i, t), n.current = t, null
            }
            we.propTypes = ve;
            var _e = we,
                Pe = {
                    captureScroll: !1,
                    captureDrag: !0,
                    captureClick: !0,
                    captureDoubleClick: !0,
                    capturePointerMove: !1
                },
                Ee = {
                    captureScroll: c.bool,
                    captureDrag: c.bool,
                    captureClick: c.bool,
                    captureDoubleClick: c.bool,
                    capturePointerMove: c.bool
                };

            function xe(t) {
                var e = t.containerRef.current,
                    n = t.context.eventManager;
                if (e && n) {
                    var r = {
                        wheel: function(e) {
                            var n = t.props;
                            n.captureScroll && e.stopPropagation(), n.onScroll && n.onScroll(e, t)
                        },
                        panstart: function(e) {
                            var n = t.props;
                            n.captureDrag && e.stopPropagation(), n.onDragStart && n.onDragStart(e, t)
                        },
                        anyclick: function(e) {
                            var n = t.props;
                            n.captureClick && e.stopPropagation(), n.onNativeClick && n.onNativeClick(e, t)
                        },
                        click: function(e) {
                            var n = t.props;
                            n.captureClick && e.stopPropagation(), n.onClick && n.onClick(e, t)
                        },
                        dblclick: function(e) {
                            var n = t.props;
                            n.captureDoubleClick && e.stopPropagation(), n.onDoubleClick && n.onDoubleClick(e, t)
                        },
                        pointermove: function(e) {
                            var n = t.props;
                            n.capturePointerMove && e.stopPropagation(), n.onPointerMove && n.onPointerMove(e, t)
                        }
                    };
                    return n.watch(r, e),
                        function() {
                            n.off(r)
                        }
                }
            }

            function Se() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = (0, u.useContext)(Y),
                    n = (0, u.useRef)(null),
                    r = (0, u.useRef)({
                        props: t,
                        state: {},
                        context: e,
                        containerRef: n
                    }),
                    i = r.current;
                return i.props = t, i.context = e, (0, u.useEffect)((function() {
                    return xe(i)
                }), [e.eventManager]), i
            }

            function Oe(t) {
                var e = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                    } catch (t) {
                        return !1
                    }
                }();
                return function() {
                    var n, r = dt(t);
                    if (e) {
                        var i = dt(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return ht(this, n)
                }
            }

            function Te(t) {
                var e = t.instance,
                    n = Se(t),
                    r = n.context,
                    i = n.containerRef;
                return e._context = r, e._containerRef = i, e._render()
            }
            var Me = function(t) {
                lt(n, t);
                var e = Oe(n);

                function n() {
                    var t;
                    d(this, n);
                    for (var r = arguments.length, i = new Array(r), o = 0; o < r; o++) i[o] = arguments[o];
                    return t = e.call.apply(e, [this].concat(i)), (0, s.Z)(ut(t), "_context", {}), (0, s.Z)(ut(t), "_containerRef", (0, u.createRef)()), (0, s.Z)(ut(t), "_onScroll", (function(t) {})), (0, s.Z)(ut(t), "_onDragStart", (function(t) {})), (0, s.Z)(ut(t), "_onDblClick", (function(t) {})), (0, s.Z)(ut(t), "_onClick", (function(t) {})), (0, s.Z)(ut(t), "_onPointerMove", (function(t) {})), t
                }
                return g(n, [{
                    key: "_render",
                    value: function() {
                        throw new Error("_render() not implemented")
                    }
                }, {
                    key: "render",
                    value: function() {
                        return u.createElement(Te, (0, r.Z)({
                            instance: this
                        }, this.props, {
                            onScroll: this._onScroll,
                            onDragStart: this._onDragStart,
                            onDblClick: this._onDblClick,
                            onClick: this._onClick,
                            onPointerMove: this._onPointerMove
                        }))
                    }
                }]), n
            }(u.PureComponent);

            function Ce(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function Ae(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = null != arguments[e] ? arguments[e] : {};
                    e % 2 ? Ce(Object(n), !0).forEach((function(e) {
                        (0, s.Z)(t, e, n[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Ce(Object(n)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                    }))
                }
                return t
            }(0, s.Z)(Me, "propTypes", Ee), (0, s.Z)(Me, "defaultProps", Pe);
            var ke = Object.assign({}, Ee, {
                    draggable: c.bool,
                    onDrag: c.func,
                    onDragEnd: c.func,
                    onDragStart: c.func,
                    offsetLeft: c.number,
                    offsetTop: c.number
                }),
                Ie = Object.assign({}, Pe, {
                    draggable: !1,
                    offsetLeft: 0,
                    offsetTop: 0
                });

            function je(t) {
                var e = t.offsetCenter;
                return [e.x, e.y]
            }

            function Le(t, e, n, r) {
                var i = t[0] + e[0] - n.offsetLeft,
                    o = t[1] + e[1] - n.offsetTop;
                return r.viewport.unproject([i, o])
            }

            function Re(t, e) {
                var n = e.props,
                    r = e.callbacks,
                    i = e.state,
                    o = e.context,
                    a = e.containerRef;
                if (n.draggable) {
                    t.stopPropagation();
                    var s = je(t),
                        u = function(t, e) {
                            var n = t.center,
                                r = n.x,
                                i = n.y;
                            if (e) {
                                var o = e.getBoundingClientRect();
                                return [o.left - r, o.top - i]
                            }
                            return null
                        }(t, a.current);
                    if (i.setDragPos(s), i.setDragOffset(u), r.onDragStart && u) {
                        var c = Object.assign({}, t);
                        c.lngLat = Le(s, u, n, o), r.onDragStart(c)
                    }
                }
            }

            function De(t) {
                var e = t.context.eventManager;
                if (e && t.state.dragPos) {
                    var n = {
                        panmove: function(e) {
                            return function(t, e) {
                                var n = e.props,
                                    r = e.callbacks,
                                    i = e.state,
                                    o = e.context;
                                t.stopPropagation();
                                var a = je(t);
                                i.setDragPos(a);
                                var s = i.dragOffset;
                                if (r.onDrag && s) {
                                    var u = Object.assign({}, t);
                                    u.lngLat = Le(a, s, n, o), r.onDrag(u)
                                }
                            }(e, t)
                        },
                        panend: function(e) {
                            return function(t, e) {
                                var n = e.props,
                                    r = e.callbacks,
                                    i = e.state,
                                    o = e.context;
                                t.stopPropagation();
                                var a = i.dragPos,
                                    s = i.dragOffset;
                                if (i.setDragPos(null), i.setDragOffset(null), r.onDragEnd && a && s) {
                                    var u = Object.assign({}, t);
                                    u.lngLat = Le(a, s, n, o), r.onDragEnd(u)
                                }
                            }(e, t)
                        },
                        pancancel: function(e) {
                            return function(t, e) {
                                var n = e.state;
                                t.stopPropagation(), n.setDragPos(null), n.setDragOffset(null)
                            }(e, t)
                        }
                    };
                    return e.watch(n),
                        function() {
                            e.off(n)
                        }
                }
            }
            var Fe = "undefined" !== typeof window && window.devicePixelRatio || 1,
                Ne = function(t) {
                    return Math.round(t * Fe) / Fe
                },
                ze = function(t, e) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "x";
                    if (null === t) return e;
                    var r = "x" === n ? t.offsetWidth : t.offsetHeight;
                    return Ne(e / 100 * r) / r * 100
                },
                Be = Object.assign({}, ke, {
                    className: c.string,
                    longitude: c.number.isRequired,
                    latitude: c.number.isRequired
                }),
                Ue = Object.assign({}, Ie, {
                    className: ""
                });

            function Ge(t) {
                var e = function(t) {
                        var e = l((0, u.useState)(null), 2),
                            n = e[0],
                            r = e[1],
                            i = l((0, u.useState)(null), 2),
                            o = i[0],
                            a = i[1],
                            s = Se(Ae(Ae({}, t), {}, {
                                onDragStart: Re
                            }));
                        return s.callbacks = t, s.state.dragPos = n, s.state.setDragPos = r, s.state.dragOffset = o, s.state.setDragOffset = a, (0, u.useEffect)((function() {
                            return De(s)
                        }), [s.context.eventManager, Boolean(n)]), s
                    }(t),
                    n = e.state,
                    r = e.containerRef,
                    i = t.children,
                    o = t.className,
                    a = t.draggable,
                    s = n.dragPos,
                    c = function(t) {
                        var e = t.props,
                            n = t.state,
                            r = t.context,
                            i = e.longitude,
                            o = e.latitude,
                            a = e.offsetLeft,
                            s = e.offsetTop,
                            u = n.dragPos,
                            c = n.dragOffset;
                        if (u && c) return [u[0] + c[0], u[1] + c[1]];
                        var f = l(r.viewport.project([i, o]), 2),
                            h = f[0],
                            d = f[1];
                        return [h += a, d += s]
                    }(e),
                    f = l(c, 2),
                    h = f[0],
                    d = f[1],
                    p = "translate(".concat(Ne(h), "px, ").concat(Ne(d), "px)"),
                    g = a ? s ? "grabbing" : "grab" : "auto",
                    y = (0, u.useMemo)((function() {
                        var t = {
                            position: "absolute",
                            left: 0,
                            top: 0,
                            transform: p,
                            cursor: g
                        };
                        return u.createElement("div", {
                            className: "mapboxgl-marker ".concat(o),
                            ref: e.containerRef,
                            style: t
                        }, i)
                    }), [i, o]),
                    v = r.current;
                return v && (v.style.transform = p, v.style.cursor = g), y
            }
            Ge.defaultProps = Ue, Ge.propTypes = Be;
            var Ze = u.memo(Ge),
                Ve = {
                    top: {
                        x: .5,
                        y: 0
                    },
                    "top-left": {
                        x: 0,
                        y: 0
                    },
                    "top-right": {
                        x: 1,
                        y: 0
                    },
                    bottom: {
                        x: .5,
                        y: 1
                    },
                    "bottom-left": {
                        x: 0,
                        y: 1
                    },
                    "bottom-right": {
                        x: 1,
                        y: 1
                    },
                    left: {
                        x: 0,
                        y: .5
                    },
                    right: {
                        x: 1,
                        y: .5
                    }
                },
                He = Object.keys(Ve);
            var We = Object.assign({}, Ee, {
                    className: c.string,
                    longitude: c.number.isRequired,
                    latitude: c.number.isRequired,
                    altitude: c.number,
                    offsetLeft: c.number,
                    offsetTop: c.number,
                    tipSize: c.number,
                    closeButton: c.bool,
                    closeOnClick: c.bool,
                    anchor: c.oneOf(Object.keys(Ve)),
                    dynamicPosition: c.bool,
                    sortByDepth: c.bool,
                    onClose: c.func
                }),
                Ye = Object.assign({}, Pe, {
                    className: "",
                    altitude: 0,
                    offsetLeft: 0,
                    offsetTop: 0,
                    tipSize: 10,
                    anchor: "bottom",
                    dynamicPosition: !0,
                    sortByDepth: !1,
                    closeButton: !0,
                    closeOnClick: !0,
                    onClose: function() {}
                });

            function qe(t, e, n, r) {
                var i = l(r, 2),
                    o = i[0],
                    a = i[1],
                    s = t.anchor,
                    u = t.dynamicPosition,
                    c = t.tipSize;
                return n && u ? function(t) {
                    var e = t.x,
                        n = t.y,
                        r = t.width,
                        i = t.height,
                        o = t.selfWidth,
                        a = t.selfHeight,
                        s = t.anchor,
                        u = t.padding,
                        c = void 0 === u ? 0 : u,
                        l = Ve[s],
                        f = l.x,
                        h = l.y,
                        d = n - h * a,
                        p = d + a,
                        g = Math.max(0, c - d) + Math.max(0, p - i + c);
                    if (g > 0) {
                        var y = h,
                            v = g;
                        for (h = 0; h <= 1; h += .5) p = (d = n - h * a) + a, (g = Math.max(0, c - d) + Math.max(0, p - i + c)) < v && (v = g, y = h);
                        h = y
                    }
                    var m = .5;
                    .5 === h && (f = Math.floor(f), m = 1);
                    var b = e - f * o,
                        w = b + o,
                        _ = Math.max(0, c - b) + Math.max(0, w - r + c);
                    if (_ > 0) {
                        var P = f,
                            E = _;
                        for (f = 0; f <= 1; f += m) w = (b = e - f * o) + o, (_ = Math.max(0, c - b) + Math.max(0, w - r + c)) < E && (E = _, P = f);
                        f = P
                    }
                    return He.find((function(t) {
                        var e = Ve[t];
                        return e.x === f && e.y === h
                    })) || s
                }({
                    x: o,
                    y: a,
                    anchor: s,
                    padding: c,
                    width: e.width,
                    height: e.height,
                    selfWidth: n.clientWidth,
                    selfHeight: n.clientHeight
                }) : s
            }

            function $e(t) {
                var e = (0, u.useRef)(null),
                    n = Se(t),
                    r = n.context,
                    i = n.containerRef,
                    o = l((0, u.useState)(!1), 2)[1];
                (0, u.useEffect)((function() {
                    o(!0)
                }), [e.current]), (0, u.useEffect)((function() {
                    if (r.eventManager && t.closeOnClick) {
                        var e = function() {
                            return n.props.onClose()
                        };
                        return r.eventManager.on("anyclick", e),
                            function() {
                                r.eventManager.off("anyclick", e)
                            }
                    }
                }), [r.eventManager, t.closeOnClick]);
                var a = r.viewport,
                    s = t.className,
                    c = t.longitude,
                    f = t.latitude,
                    h = t.altitude,
                    d = t.tipSize,
                    p = t.closeButton,
                    g = t.children,
                    y = a.project([c, f, h]),
                    v = qe(t, a, e.current, y),
                    m = function(t, e, n, r, i) {
                        var o = l(r, 3),
                            a = o[0],
                            s = o[1],
                            u = o[2],
                            c = t.offsetLeft,
                            f = t.offsetTop,
                            h = t.sortByDepth,
                            d = Ve[i],
                            p = a + c,
                            g = s + f,
                            y = ze(n, 100 * -d.x),
                            v = ze(n, 100 * -d.y, "y"),
                            m = {
                                position: "absolute",
                                transform: "\n      translate(".concat(y, "%, ").concat(v, "%)\n      translate(").concat(Ne(p), "px, ").concat(Ne(g), "px)\n    "),
                                display: void 0,
                                zIndex: void 0
                            };
                        return h ? (u > 1 || u < -1 || a < 0 || a > e.width || s < 0 || s > e.height ? m.display = "none" : m.zIndex = Math.floor((1 - u) / 2 * 1e5), m) : m
                    }(t, a, i.current, y, v),
                    b = (0, u.useCallback)((function(t) {
                        n.props.onClose();
                        var e = n.context.eventManager;
                        e && e.once("click", (function(t) {
                            return t.stopPropagation()
                        }), t.target)
                    }), []);
                return u.createElement("div", {
                    className: "mapboxgl-popup mapboxgl-popup-anchor-".concat(v, " ").concat(s),
                    style: m,
                    ref: i
                }, u.createElement("div", {
                    key: "tip",
                    className: "mapboxgl-popup-tip",
                    style: {
                        borderWidth: d
                    }
                }), u.createElement("div", {
                    key: "content",
                    ref: e,
                    className: "mapboxgl-popup-content"
                }, p && u.createElement("button", {
                    key: "close-button",
                    className: "mapboxgl-popup-close-button",
                    type: "button",
                    onClick: b
                }, "\xd7"), g))
            }
            $e.propTypes = We, $e.defaultProps = Ye;
            var Xe = u.memo($e);

            function Ke(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var Je = Object.assign({}, Ee, {
                    toggleLabel: c.string,
                    className: c.string,
                    style: c.object,
                    compact: c.bool,
                    customAttribution: c.oneOfType([c.string, c.arrayOf(c.string)])
                }),
                Qe = Object.assign({}, Pe, {
                    className: "",
                    toggleLabel: "Toggle Attribution"
                });

            function tn(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = (0, u.useRef)(null),
                    o = l((0, u.useState)(!1), 2),
                    a = o[0],
                    c = o[1];
                (0, u.useEffect)((function() {
                    var e;
                    return n.map && (e = function(t, e, n, r) {
                            var i = new(C().AttributionControl)(t);
                            return i._map = e, i._container = n, i._innerContainer = r, i._updateAttributions(), i._updateEditLink(), e.on("styledata", i._updateData), e.on("sourcedata", i._updateData), i
                        }({
                            customAttribution: t.customAttribution
                        }, n.map, r.current, i.current)),
                        function() {
                            return e && function(t) {
                                t._map.off("styledata", t._updateData), t._map.off("sourcedata", t._updateData)
                            }(e)
                        }
                }), [n.map]);
                var f = void 0 === t.compact ? n.viewport.width <= 640 : t.compact;
                (0, u.useEffect)((function() {
                    !f && a && c(!1)
                }), [f]);
                var h = (0, u.useCallback)((function() {
                        return c((function(t) {
                            return !t
                        }))
                    }), []),
                    d = (0, u.useMemo)((function() {
                        return function(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var n = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? Ke(Object(n), !0).forEach((function(e) {
                                    (0, s.Z)(t, e, n[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Ke(Object(n)).forEach((function(e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                                }))
                            }
                            return t
                        }({
                            position: "absolute"
                        }, t.style)
                    }), [t.style]);
                return u.createElement("div", {
                    style: d,
                    className: t.className
                }, u.createElement("div", {
                    ref: r,
                    "aria-pressed": a,
                    className: "mapboxgl-ctrl mapboxgl-ctrl-attrib ".concat(f ? "mapboxgl-compact" : "", " ").concat(a ? "mapboxgl-compact-show" : "")
                }, u.createElement("button", {
                    type: "button",
                    className: "mapboxgl-ctrl-attrib-button",
                    title: t.toggleLabel,
                    onClick: h
                }), u.createElement("div", {
                    ref: i,
                    className: "mapboxgl-ctrl-attrib-inner",
                    role: "list"
                })))
            }
            tn.propTypes = Je, tn.defaultProps = Qe;
            var en = u.memo(tn);

            function nn(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var rn = Object.assign({}, Ee, {
                    className: c.string,
                    style: c.object,
                    container: c.object,
                    label: c.string
                }),
                on = Object.assign({}, Pe, {
                    className: "",
                    container: null,
                    label: "Toggle fullscreen"
                });

            function an(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = l((0, u.useState)(!1), 2),
                    o = i[0],
                    a = i[1],
                    c = l((0, u.useState)(!1), 2),
                    f = c[0],
                    h = c[1],
                    d = l((0, u.useState)(null), 2),
                    p = d[0],
                    g = d[1];
                (0, u.useEffect)((function() {
                    var t = new(C().FullscreenControl);
                    g(t), h(t._checkFullscreenSupport());
                    var e = function() {
                        var e = !t._fullscreen;
                        t._fullscreen = e, a(e)
                    };
                    return y.addEventListener(t._fullscreenchange, e),
                        function() {
                            y.removeEventListener(t._fullscreenchange, e)
                        }
                }), []);
                var v = (0, u.useMemo)((function() {
                    return function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? nn(Object(n), !0).forEach((function(e) {
                                (0, s.Z)(t, e, n[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : nn(Object(n)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                            }))
                        }
                        return t
                    }({
                        position: "absolute"
                    }, t.style)
                }), [t.style]);
                if (!f) return null;
                var m = t.className,
                    b = t.label,
                    w = o ? "shrink" : "fullscreen";
                return u.createElement("div", {
                    style: v,
                    className: m
                }, u.createElement("div", {
                    className: "mapboxgl-ctrl mapboxgl-ctrl-group",
                    ref: r
                }, u.createElement("button", {
                    key: w,
                    className: "mapboxgl-ctrl-icon mapboxgl-ctrl-".concat(w),
                    type: "button",
                    title: b,
                    onClick: function() {
                        p && (p._container = t.container || n.container, p._onClickFullscreen())
                    }
                }, u.createElement("span", {
                    className: "mapboxgl-ctrl-icon",
                    "aria-hidden": "true"
                }))))
            }
            an.propTypes = rn, an.defaultProps = on;
            var sn, un = u.memo(an);

            function cn(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var ln = function() {},
                fn = Object.assign({}, Ee, {
                    className: c.string,
                    style: c.object,
                    label: c.string,
                    disabledLabel: c.string,
                    auto: c.bool,
                    positionOptions: c.object,
                    fitBoundsOptions: c.object,
                    trackUserLocation: c.bool,
                    showUserLocation: c.bool,
                    showAccuracyCircle: c.bool,
                    onViewStateChange: c.func,
                    onViewportChange: c.func,
                    onGeolocate: c.func
                }),
                hn = Object.assign({}, Pe, {
                    className: "",
                    label: "Find My Location",
                    disabledLabel: "Location Not Available",
                    auto: !1,
                    positionOptions: {
                        enableHighAccuracy: !1,
                        timeout: 6e3
                    },
                    fitBoundsOptions: {
                        maxZoom: 15
                    },
                    trackUserLocation: !1,
                    showUserLocation: !0,
                    showAccuracyCircle: !0,
                    onGeolocate: function() {}
                });

            function dn(t, e) {
                var n = e.context,
                    r = e.props,
                    i = function(t) {
                        var e = new(C().LngLat)(t.coords.longitude, t.coords.latitude),
                            n = t.coords.accuracy,
                            r = e.toBounds(n);
                        return [
                            [r._ne.lng, r._ne.lat],
                            [r._sw.lng, r._sw.lat]
                        ]
                    }(t),
                    o = n.viewport.fitBounds(i, r.fitBoundsOptions),
                    a = o.longitude,
                    s = o.latitude,
                    u = o.zoom,
                    c = Object.assign({}, n.viewport, {
                        longitude: a,
                        latitude: s,
                        zoom: u
                    }),
                    l = new U(c),
                    f = Object.assign({}, l.getViewportProps(), Nt),
                    h = r.onViewportChange || n.onViewportChange || ln;
                (r.onViewStateChange || n.onViewStateChange || ln)({
                    viewState: f
                }), h(f)
            }

            function pn(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = (0, u.useRef)(null),
                    o = l((0, u.useState)(null), 2),
                    a = o[0],
                    c = o[1],
                    f = l((0, u.useState)(!1), 2),
                    h = f[0],
                    d = f[1];
                (0, u.useEffect)((function() {
                    var r;
                    return n.map && (void 0 !== sn ? Promise.resolve(sn) : void 0 !== window.navigator.permissions ? window.navigator.permissions.query({
                            name: "geolocation"
                        }).then((function(t) {
                            return sn = "denied" !== t.state
                        })) : (sn = Boolean(window.navigator.geolocation), Promise.resolve(sn))).then((function(o) {
                            d(o), i.current && ((r = function(t, e, n) {
                                var r = new(C().GeolocateControl)(e);
                                r._container = y.createElement("div"), r._map = {
                                    on: function() {},
                                    _getUIString: function() {
                                        return ""
                                    }
                                }, r._setupUI(!0), r._map = t.map, r._geolocateButton = n;
                                var i = t.eventManager;
                                return r.options.trackUserLocation && i && i.on("panstart", (function() {
                                    "ACTIVE_LOCK" === r._watchState && (r._watchState = "BACKGROUND", n.classList.add("mapboxgl-ctrl-geolocate-background"), n.classList.remove("mapboxgl-ctrl-geolocate-active"))
                                })), r.on("geolocate", e.onGeolocate), r
                            }(n, t, i.current))._updateCamera = function(t) {
                                return dn(t, e)
                            }, c(r))
                        })),
                        function() {
                            r && r._clearWatch()
                        }
                }), [n.map]);
                var p = (0, u.useCallback)((function() {
                    a && (a.options = e.props, a.trigger())
                }), [a]);
                (0, u.useEffect)((function() {
                    t.auto && p()
                }), [a, t.auto]), (0, u.useEffect)((function() {
                    a && a._onZoom()
                }), [n.viewport.zoom]);
                var g = t.className,
                    v = t.label,
                    m = t.disabledLabel,
                    b = t.trackUserLocation,
                    w = (0, u.useMemo)((function() {
                        return function(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var n = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? cn(Object(n), !0).forEach((function(e) {
                                    (0, s.Z)(t, e, n[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : cn(Object(n)).forEach((function(e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                                }))
                            }
                            return t
                        }({
                            position: "absolute"
                        }, t.style)
                    }), [t.style]);
                return u.createElement("div", {
                    style: w,
                    className: g
                }, u.createElement("div", {
                    key: "geolocate-control",
                    className: "mapboxgl-ctrl mapboxgl-ctrl-group",
                    ref: r
                }, u.createElement("button", {
                    key: "geolocate",
                    className: "mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate",
                    ref: i,
                    disabled: !h,
                    "aria-pressed": !b,
                    type: "button",
                    title: h ? v : m,
                    "aria-label": h ? v : m,
                    onClick: p
                }, u.createElement("span", {
                    className: "mapboxgl-ctrl-icon",
                    "aria-hidden": "true"
                }))))
            }
            pn.propTypes = fn, pn.defaultProps = hn;
            var gn = u.memo(pn);

            function yn(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var vn = function() {},
                mn = Object.assign({}, Ee, {
                    className: c.string,
                    style: c.object,
                    onViewStateChange: c.func,
                    onViewportChange: c.func,
                    showCompass: c.bool,
                    showZoom: c.bool,
                    zoomInLabel: c.string,
                    zoomOutLabel: c.string,
                    compassLabel: c.string
                }),
                bn = Object.assign({}, Pe, {
                    className: "",
                    showCompass: !0,
                    showZoom: !0,
                    zoomInLabel: "Zoom In",
                    zoomOutLabel: "Zoom Out",
                    compassLabel: "Reset North"
                });

            function wn(t) {
                return function(t, e) {
                    for (var n = (t || "").split(".").map(Number), r = (e || "").split(".").map(Number), i = 0; i < 3; i++) {
                        var o = n[i] || 0,
                            a = r[i] || 0;
                        if (o < a) return -1;
                        if (o > a) return 1
                    }
                    return 0
                }(t, "1.6.0") >= 0 ? 2 : 1
            }

            function _n(t, e, n) {
                var r = t.viewport,
                    i = new U(Object.assign({}, r, n)),
                    o = Object.assign({}, i.getViewportProps(), Nt),
                    a = e.onViewportChange || t.onViewportChange || vn;
                (e.onViewStateChange || t.onViewStateChange || vn)({
                    viewState: o
                }), a(o)
            }

            function Pn(t, e, n, r) {
                return u.createElement("button", {
                    key: t,
                    className: "mapboxgl-ctrl-icon mapboxgl-ctrl-".concat(t),
                    type: "button",
                    title: e,
                    onClick: n
                }, r || u.createElement("span", {
                    className: "mapboxgl-ctrl-icon",
                    "aria-hidden": "true"
                }))
            }

            function En(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = t.className,
                    o = t.showCompass,
                    a = t.showZoom,
                    c = t.zoomInLabel,
                    l = t.zoomOutLabel,
                    f = t.compassLabel,
                    h = (0, u.useMemo)((function() {
                        return function(t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var n = null != arguments[e] ? arguments[e] : {};
                                e % 2 ? yn(Object(n), !0).forEach((function(e) {
                                    (0, s.Z)(t, e, n[e])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : yn(Object(n)).forEach((function(e) {
                                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                                }))
                            }
                            return t
                        }({
                            position: "absolute"
                        }, t.style)
                    }), [t.style]);
                return u.createElement("div", {
                    style: h,
                    className: i
                }, u.createElement("div", {
                    className: "mapboxgl-ctrl mapboxgl-ctrl-group",
                    ref: r
                }, a && Pn("zoom-in", c, (function() {
                    _n(n, t, {
                        zoom: n.viewport.zoom + 1
                    })
                })), a && Pn("zoom-out", l, (function() {
                    _n(n, t, {
                        zoom: n.viewport.zoom - 1
                    })
                })), o && Pn("compass", f, (function() {
                    _n(n, t, {
                        bearing: 0,
                        pitch: 0
                    })
                }), function(t) {
                    var e = (0, u.useMemo)((function() {
                            return t.map ? wn(t.map.version) : 2
                        }), [t.map]),
                        n = t.viewport.bearing,
                        r = {
                            transform: "rotate(".concat(-n, "deg)")
                        };
                    return 2 === e ? u.createElement("span", {
                        className: "mapboxgl-ctrl-icon",
                        "aria-hidden": "true",
                        style: r
                    }) : u.createElement("span", {
                        className: "mapboxgl-ctrl-compass-arrow",
                        style: r
                    })
                }(n))))
            }
            En.propTypes = mn, En.defaultProps = bn;
            var xn = u.memo(En);

            function Sn(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var On = Object.assign({}, Ee, {
                    className: c.string,
                    style: c.object,
                    maxWidth: c.number,
                    unit: c.oneOf(["imperial", "metric", "nautical"])
                }),
                Tn = Object.assign({}, Pe, {
                    className: "",
                    maxWidth: 100,
                    unit: "metric"
                });

            function Mn(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = l((0, u.useState)(null), 2),
                    o = i[0],
                    a = i[1];
                (0, u.useEffect)((function() {
                    if (n.map) {
                        var t = new(C().ScaleControl);
                        t._map = n.map, t._container = r.current, a(t)
                    }
                }), [n.map]), o && (o.options = t, o._onMove());
                var c = (0, u.useMemo)((function() {
                    return function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? Sn(Object(n), !0).forEach((function(e) {
                                (0, s.Z)(t, e, n[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Sn(Object(n)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                            }))
                        }
                        return t
                    }({
                        position: "absolute"
                    }, t.style)
                }), [t.style]);
                return u.createElement("div", {
                    style: c,
                    className: t.className
                }, u.createElement("div", {
                    ref: r,
                    className: "mapboxgl-ctrl mapboxgl-ctrl-scale"
                }))
            }
            Mn.propTypes = On, Mn.defaultProps = Tn;
            var Cn = u.memo(Mn),
                An = "undefined" !== typeof window && window.devicePixelRatio || 1,
                kn = Object.assign({}, Ee, {
                    redraw: c.func.isRequired
                });

            function In(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = l((0, u.useState)(null), 2),
                    o = i[0],
                    a = i[1];
                (0, u.useEffect)((function() {
                    a(r.current.getContext("2d"))
                }), []);
                var s = n.viewport,
                    c = n.isDragging;
                return o && (o.save(), o.scale(An, An), t.redraw({
                    width: s.width,
                    height: s.height,
                    ctx: o,
                    isDragging: c,
                    project: s.project,
                    unproject: s.unproject
                }), o.restore()), u.createElement("canvas", {
                    ref: r,
                    width: s.width * An,
                    height: s.height * An,
                    style: {
                        width: "".concat(s.width, "px"),
                        height: "".concat(s.height, "px"),
                        position: "absolute",
                        left: 0,
                        top: 0
                    }
                })
            }
            In.propTypes = kn, In.defaultProps = {
                captureScroll: !1,
                captureDrag: !1,
                captureClick: !1,
                captureDoubleClick: !1,
                capturePointerMove: !1
            };
            var jn = In;

            function Ln(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var Rn = Object.assign({}, Ee, {
                redraw: c.func.isRequired,
                style: c.object
            });

            function Dn(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = n.viewport,
                    o = n.isDragging,
                    a = function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? Ln(Object(n), !0).forEach((function(e) {
                                (0, s.Z)(t, e, n[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Ln(Object(n)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                            }))
                        }
                        return t
                    }({
                        position: "absolute",
                        left: 0,
                        top: 0,
                        width: i.width,
                        height: i.height
                    }, t.style);
                return u.createElement("div", {
                    ref: r,
                    style: a
                }, t.redraw({
                    width: i.width,
                    height: i.height,
                    isDragging: o,
                    project: i.project,
                    unproject: i.unproject
                }))
            }
            Dn.propTypes = Rn, Dn.defaultProps = {
                captureScroll: !1,
                captureDrag: !1,
                captureClick: !1,
                captureDoubleClick: !1,
                capturePointerMove: !1
            };
            var Fn = Dn;

            function Nn(t, e) {
                var n = Object.keys(t);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(t);
                    e && (r = r.filter((function(e) {
                        return Object.getOwnPropertyDescriptor(t, e).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }
            var zn = Object.assign({}, Ee, {
                redraw: c.func.isRequired,
                style: c.object
            });

            function Bn(t) {
                var e = Se(t),
                    n = e.context,
                    r = e.containerRef,
                    i = n.viewport,
                    o = n.isDragging,
                    a = function(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var n = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? Nn(Object(n), !0).forEach((function(e) {
                                (0, s.Z)(t, e, n[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Nn(Object(n)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e))
                            }))
                        }
                        return t
                    }({
                        position: "absolute",
                        left: 0,
                        top: 0
                    }, t.style);
                return u.createElement("svg", {
                    width: i.width,
                    height: i.height,
                    ref: r,
                    style: a
                }, t.redraw({
                    width: i.width,
                    height: i.height,
                    isDragging: o,
                    project: i.project,
                    unproject: i.unproject
                }))
            }
            Bn.propTypes = zn, Bn.defaultProps = {
                captureScroll: !1,
                captureDrag: !1,
                captureClick: !1,
                captureDoubleClick: !1,
                capturePointerMove: !1
            };
            var Un = Bn,
                Gn = C() ? C().setRTLTextPlugin : function() {}
        },
        36738: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return s
                }
            });
            var r = n(67294),
                i = "undefined" !== typeof window ? r.useLayoutEffect : r.useEffect,
                o = (n(38252), "object" === typeof window),
                a = {
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0,
                    top: 0,
                    left: 0,
                    bottom: 0,
                    right: 0
                },
                s = o && window.ResizeObserver ? function() {
                    var t = (0, r.useState)(null),
                        e = t[0],
                        n = t[1],
                        o = (0, r.useState)(a),
                        s = o[0],
                        u = o[1],
                        c = (0, r.useMemo)((function() {
                            return new window.ResizeObserver((function(t) {
                                if (t[0]) {
                                    var e = t[0].contentRect,
                                        n = e.x,
                                        r = e.y,
                                        i = e.width,
                                        o = e.height,
                                        a = e.top,
                                        s = e.left,
                                        c = e.bottom,
                                        l = e.right;
                                    u({
                                        x: n,
                                        y: r,
                                        width: i,
                                        height: o,
                                        top: a,
                                        left: s,
                                        bottom: c,
                                        right: l
                                    })
                                }
                            }))
                        }), []);
                    return i((function() {
                        if (e) return c.observe(e),
                            function() {
                                c.disconnect()
                            }
                    }), [e]), [n, s]
                } : function() {
                    return [function() {}, a]
                }
        },
        81640: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return a
                }
            });
            var r = n(67294),
                i = function(t) {
                    (0, r.useEffect)(t, [])
                },
                o = function(t) {
                    var e = (0, r.useRef)(t);
                    e.current = t, i((function() {
                        return function() {
                            return e.current()
                        }
                    }))
                },
                a = function(t, e) {
                    void 0 === e && (e = 200);
                    var n = (0, r.useState)(t),
                        i = n[0],
                        a = n[1],
                        s = (0, r.useRef)(),
                        u = (0, r.useRef)(null),
                        c = (0, r.useRef)(0);
                    return (0, r.useEffect)((function() {
                        if (s.current) u.current = t, c.current = !0;
                        else {
                            a(t);
                            var n = function() {
                                c.current ? (c.current = !1, a(u.current), s.current = setTimeout(n, e)) : s.current = void 0
                            };
                            s.current = setTimeout(n, e)
                        }
                    }), [t]), o((function() {
                        s.current && clearTimeout(s.current)
                    })), i
                }
        },
        22222: function(t, e, n) {
            "use strict";

            function r(t, e) {
                return t === e
            }

            function i(t, e, n) {
                if (null === e || null === n || e.length !== n.length) return !1;
                for (var r = e.length, i = 0; i < r; i++)
                    if (!t(e[i], n[i])) return !1;
                return !0
            }

            function o(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : r,
                    n = null,
                    o = null;
                return function() {
                    return i(e, n, arguments) || (o = t.apply(null, arguments)), n = arguments, o
                }
            }

            function a(t) {
                var e = Array.isArray(t[0]) ? t[0] : t;
                if (!e.every((function(t) {
                        return "function" === typeof t
                    }))) {
                    var n = e.map((function(t) {
                        return typeof t
                    })).join(", ");
                    throw new Error("Selector creators expect all input-selectors to be functions, instead received the following types: [" + n + "]")
                }
                return e
            }

            function s(t) {
                for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) n[r - 1] = arguments[r];
                return function() {
                    for (var e = arguments.length, r = Array(e), i = 0; i < e; i++) r[i] = arguments[i];
                    var o = 0,
                        s = r.pop(),
                        u = a(r),
                        c = t.apply(void 0, [function() {
                            return o++, s.apply(null, arguments)
                        }].concat(n)),
                        l = t((function() {
                            for (var t = [], e = u.length, n = 0; n < e; n++) t.push(u[n].apply(null, arguments));
                            return c.apply(null, t)
                        }));
                    return l.resultFunc = s, l.dependencies = u, l.recomputations = function() {
                        return o
                    }, l.resetRecomputations = function() {
                        return o = 0
                    }, l
                }
            }
            n.d(e, {
                PW: function() {
                    return o
                },
                wN: function() {
                    return s
                },
                P1: function() {
                    return u
                }
            });
            var u = s(o)
        },
        36377: function(t, e, n) {
            var r = n(84832),
                i = n(68652),
                o = n(90801),
                a = n(92030),
                s = n(3618),
                u = n(89049),
                c = n(51971);
            c.alea = r, c.xor128 = i, c.xorwow = o, c.xorshift7 = a, c.xor4096 = s, c.tychei = u, t.exports = c
        },
        84832: function(t, e, n) {
            var r;
            ! function(t, i, o) {
                function a(t) {
                    var e = this,
                        n = function() {
                            var t = 4022871197;
                            return function(e) {
                                e = String(e);
                                for (var n = 0; n < e.length; n++) {
                                    var r = .02519603282416938 * (t += e.charCodeAt(n));
                                    r -= t = r >>> 0, t = (r *= t) >>> 0, t += 4294967296 * (r -= t)
                                }
                                return 2.3283064365386963e-10 * (t >>> 0)
                            }
                        }();
                    e.next = function() {
                        var t = 2091639 * e.s0 + 2.3283064365386963e-10 * e.c;
                        return e.s0 = e.s1, e.s1 = e.s2, e.s2 = t - (e.c = 0 | t)
                    }, e.c = 1, e.s0 = n(" "), e.s1 = n(" "), e.s2 = n(" "), e.s0 -= n(t), e.s0 < 0 && (e.s0 += 1), e.s1 -= n(t), e.s1 < 0 && (e.s1 += 1), e.s2 -= n(t), e.s2 < 0 && (e.s2 += 1), n = null
                }

                function s(t, e) {
                    return e.c = t.c, e.s0 = t.s0, e.s1 = t.s1, e.s2 = t.s2, e
                }

                function u(t, e) {
                    var n = new a(t),
                        r = e && e.state,
                        i = n.next;
                    return i.int32 = function() {
                        return 4294967296 * n.next() | 0
                    }, i.double = function() {
                        return i() + 11102230246251565e-32 * (2097152 * i() | 0)
                    }, i.quick = i, r && ("object" == typeof r && s(r, n), i.state = function() {
                        return s(n, {})
                    }), i
                }
                i && i.exports ? i.exports = u : n.amdD && n.amdO ? void 0 === (r = function() {
                    return u
                }.call(e, n, e, i)) || (i.exports = r) : this.alea = u
            }(0, t = n.nmd(t), n.amdD)
        },
        89049: function(t, e, n) {
            var r;
            ! function(t, i, o) {
                function a(t) {
                    var e = this,
                        n = "";
                    e.next = function() {
                        var t = e.b,
                            n = e.c,
                            r = e.d,
                            i = e.a;
                        return t = t << 25 ^ t >>> 7 ^ n, n = n - r | 0, r = r << 24 ^ r >>> 8 ^ i, i = i - t | 0, e.b = t = t << 20 ^ t >>> 12 ^ n, e.c = n = n - r | 0, e.d = r << 16 ^ n >>> 16 ^ i, e.a = i - t | 0
                    }, e.a = 0, e.b = 0, e.c = -1640531527, e.d = 1367130551, t === Math.floor(t) ? (e.a = t / 4294967296 | 0, e.b = 0 | t) : n += t;
                    for (var r = 0; r < n.length + 20; r++) e.b ^= 0 | n.charCodeAt(r), e.next()
                }

                function s(t, e) {
                    return e.a = t.a, e.b = t.b, e.c = t.c, e.d = t.d, e
                }

                function u(t, e) {
                    var n = new a(t),
                        r = e && e.state,
                        i = function() {
                            return (n.next() >>> 0) / 4294967296
                        };
                    return i.double = function() {
                        do {
                            var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                        } while (0 === t);
                        return t
                    }, i.int32 = n.next, i.quick = i, r && ("object" == typeof r && s(r, n), i.state = function() {
                        return s(n, {})
                    }), i
                }
                i && i.exports ? i.exports = u : n.amdD && n.amdO ? void 0 === (r = function() {
                    return u
                }.call(e, n, e, i)) || (i.exports = r) : this.tychei = u
            }(0, t = n.nmd(t), n.amdD)
        },
        68652: function(t, e, n) {
            var r;
            ! function(t, i, o) {
                function a(t) {
                    var e = this,
                        n = "";
                    e.x = 0, e.y = 0, e.z = 0, e.w = 0, e.next = function() {
                        var t = e.x ^ e.x << 11;
                        return e.x = e.y, e.y = e.z, e.z = e.w, e.w ^= e.w >>> 19 ^ t ^ t >>> 8
                    }, t === (0 | t) ? e.x = t : n += t;
                    for (var r = 0; r < n.length + 64; r++) e.x ^= 0 | n.charCodeAt(r), e.next()
                }

                function s(t, e) {
                    return e.x = t.x, e.y = t.y, e.z = t.z, e.w = t.w, e
                }

                function u(t, e) {
                    var n = new a(t),
                        r = e && e.state,
                        i = function() {
                            return (n.next() >>> 0) / 4294967296
                        };
                    return i.double = function() {
                        do {
                            var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                        } while (0 === t);
                        return t
                    }, i.int32 = n.next, i.quick = i, r && ("object" == typeof r && s(r, n), i.state = function() {
                        return s(n, {})
                    }), i
                }
                i && i.exports ? i.exports = u : n.amdD && n.amdO ? void 0 === (r = function() {
                    return u
                }.call(e, n, e, i)) || (i.exports = r) : this.xor128 = u
            }(0, t = n.nmd(t), n.amdD)
        },
        3618: function(t, e, n) {
            var r;
            ! function(t, i, o) {
                function a(t) {
                    var e = this;
                    e.next = function() {
                            var t, n, r = e.w,
                                i = e.X,
                                o = e.i;
                            return e.w = r = r + 1640531527 | 0, n = i[o + 34 & 127], t = i[o = o + 1 & 127], n ^= n << 13, t ^= t << 17, n ^= n >>> 15, t ^= t >>> 12, n = i[o] = n ^ t, e.i = o, n + (r ^ r >>> 16) | 0
                        },
                        function(t, e) {
                            var n, r, i, o, a, s = [],
                                u = 128;
                            for (e === (0 | e) ? (r = e, e = null) : (e += "\0", r = 0, u = Math.max(u, e.length)), i = 0, o = -32; o < u; ++o) e && (r ^= e.charCodeAt((o + 32) % e.length)), 0 === o && (a = r), r ^= r << 10, r ^= r >>> 15, r ^= r << 4, r ^= r >>> 13, o >= 0 && (a = a + 1640531527 | 0, i = 0 == (n = s[127 & o] ^= r + a) ? i + 1 : 0);
                            for (i >= 128 && (s[127 & (e && e.length || 0)] = -1), i = 127, o = 512; o > 0; --o) r = s[i + 34 & 127], n = s[i = i + 1 & 127], r ^= r << 13, n ^= n << 17, r ^= r >>> 15, n ^= n >>> 12, s[i] = r ^ n;
                            t.w = a, t.X = s, t.i = i
                        }(e, t)
                }

                function s(t, e) {
                    return e.i = t.i, e.w = t.w, e.X = t.X.slice(), e
                }

                function u(t, e) {
                    null == t && (t = +new Date);
                    var n = new a(t),
                        r = e && e.state,
                        i = function() {
                            return (n.next() >>> 0) / 4294967296
                        };
                    return i.double = function() {
                        do {
                            var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                        } while (0 === t);
                        return t
                    }, i.int32 = n.next, i.quick = i, r && (r.X && s(r, n), i.state = function() {
                        return s(n, {})
                    }), i
                }
                i && i.exports ? i.exports = u : n.amdD && n.amdO ? void 0 === (r = function() {
                    return u
                }.call(e, n, e, i)) || (i.exports = r) : this.xor4096 = u
            }(0, t = n.nmd(t), n.amdD)
        },
        92030: function(t, e, n) {
            var r;
            ! function(t, i, o) {
                function a(t) {
                    var e = this;
                    e.next = function() {
                            var t, n, r = e.x,
                                i = e.i;
                            return t = r[i], n = (t ^= t >>> 7) ^ t << 24, n ^= (t = r[i + 1 & 7]) ^ t >>> 10, n ^= (t = r[i + 3 & 7]) ^ t >>> 3, n ^= (t = r[i + 4 & 7]) ^ t << 7, t = r[i + 7 & 7], n ^= (t ^= t << 13) ^ t << 9, r[i] = n, e.i = i + 1 & 7, n
                        },
                        function(t, e) {
                            var n, r = [];
                            if (e === (0 | e)) r[0] = e;
                            else
                                for (e = "" + e, n = 0; n < e.length; ++n) r[7 & n] = r[7 & n] << 15 ^ e.charCodeAt(n) + r[n + 1 & 7] << 13;
                            for (; r.length < 8;) r.push(0);
                            for (n = 0; n < 8 && 0 === r[n]; ++n);
                            for (8 == n ? r[7] = -1 : r[n], t.x = r, t.i = 0, n = 256; n > 0; --n) t.next()
                        }(e, t)
                }

                function s(t, e) {
                    return e.x = t.x.slice(), e.i = t.i, e
                }

                function u(t, e) {
                    null == t && (t = +new Date);
                    var n = new a(t),
                        r = e && e.state,
                        i = function() {
                            return (n.next() >>> 0) / 4294967296
                        };
                    return i.double = function() {
                        do {
                            var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                        } while (0 === t);
                        return t
                    }, i.int32 = n.next, i.quick = i, r && (r.x && s(r, n), i.state = function() {
                        return s(n, {})
                    }), i
                }
                i && i.exports ? i.exports = u : n.amdD && n.amdO ? void 0 === (r = function() {
                    return u
                }.call(e, n, e, i)) || (i.exports = r) : this.xorshift7 = u
            }(0, t = n.nmd(t), n.amdD)
        },
        90801: function(t, e, n) {
            var r;
            ! function(t, i, o) {
                function a(t) {
                    var e = this,
                        n = "";
                    e.next = function() {
                        var t = e.x ^ e.x >>> 2;
                        return e.x = e.y, e.y = e.z, e.z = e.w, e.w = e.v, (e.d = e.d + 362437 | 0) + (e.v = e.v ^ e.v << 4 ^ t ^ t << 1) | 0
                    }, e.x = 0, e.y = 0, e.z = 0, e.w = 0, e.v = 0, t === (0 | t) ? e.x = t : n += t;
                    for (var r = 0; r < n.length + 64; r++) e.x ^= 0 | n.charCodeAt(r), r == n.length && (e.d = e.x << 10 ^ e.x >>> 4), e.next()
                }

                function s(t, e) {
                    return e.x = t.x, e.y = t.y, e.z = t.z, e.w = t.w, e.v = t.v, e.d = t.d, e
                }

                function u(t, e) {
                    var n = new a(t),
                        r = e && e.state,
                        i = function() {
                            return (n.next() >>> 0) / 4294967296
                        };
                    return i.double = function() {
                        do {
                            var t = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                        } while (0 === t);
                        return t
                    }, i.int32 = n.next, i.quick = i, r && ("object" == typeof r && s(r, n), i.state = function() {
                        return s(n, {})
                    }), i
                }
                i && i.exports ? i.exports = u : n.amdD && n.amdO ? void 0 === (r = function() {
                    return u
                }.call(e, n, e, i)) || (i.exports = r) : this.xorwow = u
            }(0, t = n.nmd(t), n.amdD)
        },
        51971: function(t, e, n) {
            var r;
            ! function(i, o, a) {
                var s, u = 256,
                    c = a.pow(u, 6),
                    l = a.pow(2, 52),
                    f = 2 * l,
                    h = 255;

                function d(t, e, n) {
                    var r = [],
                        h = v(y((e = 1 == e ? {
                            entropy: !0
                        } : e || {}).entropy ? [t, m(o)] : null == t ? function() {
                            try {
                                var t;
                                return s && (t = s.randomBytes) ? t = t(u) : (t = new Uint8Array(u), (i.crypto || i.msCrypto).getRandomValues(t)), m(t)
                            } catch (r) {
                                var e = i.navigator,
                                    n = e && e.plugins;
                                return [+new Date, i, n, i.screen, m(o)]
                            }
                        }() : t, 3), r),
                        d = new p(r),
                        b = function() {
                            for (var t = d.g(6), e = c, n = 0; t < l;) t = (t + n) * u, e *= u, n = d.g(1);
                            for (; t >= f;) t /= 2, e /= 2, n >>>= 1;
                            return (t + n) / e
                        };
                    return b.int32 = function() {
                        return 0 | d.g(4)
                    }, b.quick = function() {
                        return d.g(4) / 4294967296
                    }, b.double = b, v(m(d.S), o), (e.pass || n || function(t, e, n, r) {
                        return r && (r.S && g(r, d), t.state = function() {
                            return g(d, {})
                        }), n ? (a.random = t, e) : t
                    })(b, h, "global" in e ? e.global : this == a, e.state)
                }

                function p(t) {
                    var e, n = t.length,
                        r = this,
                        i = 0,
                        o = r.i = r.j = 0,
                        a = r.S = [];
                    for (n || (t = [n++]); i < u;) a[i] = i++;
                    for (i = 0; i < u; i++) a[i] = a[o = h & o + t[i % n] + (e = a[i])], a[o] = e;
                    (r.g = function(t) {
                        for (var e, n = 0, i = r.i, o = r.j, a = r.S; t--;) e = a[i = h & i + 1], n = n * u + a[h & (a[i] = a[o = h & o + e]) + (a[o] = e)];
                        return r.i = i, r.j = o, n
                    })(u)
                }

                function g(t, e) {
                    return e.i = t.i, e.j = t.j, e.S = t.S.slice(), e
                }

                function y(t, e) {
                    var n, r = [],
                        i = typeof t;
                    if (e && "object" == i)
                        for (n in t) try {
                            r.push(y(t[n], e - 1))
                        } catch (o) {}
                    return r.length ? r : "string" == i ? t : t + "\0"
                }

                function v(t, e) {
                    for (var n, r = t + "", i = 0; i < r.length;) e[h & i] = h & (n ^= 19 * e[h & i]) + r.charCodeAt(i++);
                    return m(e)
                }

                function m(t) {
                    return String.fromCharCode.apply(0, t)
                }
                if (v(a.random(), o), t.exports) {
                    t.exports = d;
                    try {
                        s = n(75042)
                    } catch (b) {}
                } else void 0 === (r = function() {
                    return d
                }.call(e, n, e, t)) || (t.exports = r)
            }("undefined" !== typeof self ? self : this, [], Math)
        },
        4942: function(t, e, n) {
            "use strict";

            function r(t, e, n) {
                return e in t ? Object.defineProperty(t, e, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = n, t
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        87462: function(t, e, n) {
            "use strict";

            function r() {
                return (r = Object.assign || function(t) {
                    for (var e = 1; e < arguments.length; e++) {
                        var n = arguments[e];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
                    }
                    return t
                }).apply(this, arguments)
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        89611: function(t, e, n) {
            "use strict";

            function r(t, e) {
                return (r = Object.setPrototypeOf || function(t, e) {
                    return t.__proto__ = e, t
                })(t, e)
            }
            n.d(e, {
                Z: function() {
                    return r
                }
            })
        },
        87592: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return o
                }
            });
            n(1449);

            function r(t, e, n) {
                if (null !== t)
                    for (var i, o, a, s, u, c, l, f, h = 0, d = 0, p = t.type, g = "FeatureCollection" === p, y = "Feature" === p, v = g ? t.features.length : 1, m = 0; m < v; m++) {
                        u = (f = !!(l = g ? t.features[m].geometry : y ? t.geometry : t) && "GeometryCollection" === l.type) ? l.geometries.length : 1;
                        for (var b = 0; b < u; b++) {
                            var w = 0,
                                _ = 0;
                            if (null !== (s = f ? l.geometries[b] : l)) {
                                c = s.coordinates;
                                var P = s.type;
                                switch (h = !n || "Polygon" !== P && "MultiPolygon" !== P ? 0 : 1, P) {
                                    case null:
                                        break;
                                    case "Point":
                                        if (!1 === e(c, d, m, w, _)) return !1;
                                        d++, w++;
                                        break;
                                    case "LineString":
                                    case "MultiPoint":
                                        for (i = 0; i < c.length; i++) {
                                            if (!1 === e(c[i], d, m, w, _)) return !1;
                                            d++, "MultiPoint" === P && w++
                                        }
                                        "LineString" === P && w++;
                                        break;
                                    case "Polygon":
                                    case "MultiLineString":
                                        for (i = 0; i < c.length; i++) {
                                            for (o = 0; o < c[i].length - h; o++) {
                                                if (!1 === e(c[i][o], d, m, w, _)) return !1;
                                                d++
                                            }
                                            "MultiLineString" === P && w++, "Polygon" === P && _++
                                        }
                                        "Polygon" === P && w++;
                                        break;
                                    case "MultiPolygon":
                                        for (i = 0; i < c.length; i++) {
                                            for (_ = 0, o = 0; o < c[i].length; o++) {
                                                for (a = 0; a < c[i][o].length - h; a++) {
                                                    if (!1 === e(c[i][o][a], d, m, w, _)) return !1;
                                                    d++
                                                }
                                                _++
                                            }
                                            w++
                                        }
                                        break;
                                    case "GeometryCollection":
                                        for (i = 0; i < s.geometries.length; i++)
                                            if (!1 === r(s.geometries[i], e, n)) return !1;
                                        break;
                                    default:
                                        throw new Error("Unknown Geometry Type")
                                }
                            }
                        }
                    }
            }

            function i(t) {
                var e = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                return r(t, (function(t) {
                    e[0] > t[0] && (e[0] = t[0]), e[1] > t[1] && (e[1] = t[1]), e[2] < t[0] && (e[2] = t[0]), e[3] < t[1] && (e[3] = t[1])
                })), e
            }
            i.default = i;
            var o = i
        },
        83700: function(t, e, n) {
            "use strict";
            n.d(e, {
                Z: function() {
                    return r
                }
            });
            n(1449);

            function r(t, e, n) {
                if (void 0 === n && (n = {}), !t) throw new Error("point is required");
                if (!e) throw new Error("polygon is required");
                var r, o = function(t) {
                        if (!t) throw new Error("coord is required");
                        if (!Array.isArray(t)) {
                            if ("Feature" === t.type && null !== t.geometry && "Point" === t.geometry.type) return t.geometry.coordinates;
                            if ("Point" === t.type) return t.coordinates
                        }
                        if (Array.isArray(t) && t.length >= 2 && !Array.isArray(t[0]) && !Array.isArray(t[1])) return t;
                        throw new Error("coord must be GeoJSON Point or an Array of numbers")
                    }(t),
                    a = "Feature" === (r = e).type ? r.geometry : r,
                    s = a.type,
                    u = e.bbox,
                    c = a.coordinates;
                if (u && !1 === function(t, e) {
                        return e[0] <= t[0] && e[1] <= t[1] && e[2] >= t[0] && e[3] >= t[1]
                    }(o, u)) return !1;
                "Polygon" === s && (c = [c]);
                for (var l = !1, f = 0; f < c.length && !l; f++)
                    if (i(o, c[f][0], n.ignoreBoundary)) {
                        for (var h = !1, d = 1; d < c[f].length && !h;) i(o, c[f][d], !n.ignoreBoundary) && (h = !0), d++;
                        h || (l = !0)
                    }
                return l
            }

            function i(t, e, n) {
                var r = !1;
                e[0][0] === e[e.length - 1][0] && e[0][1] === e[e.length - 1][1] && (e = e.slice(0, e.length - 1));
                for (var i = 0, o = e.length - 1; i < e.length; o = i++) {
                    var a = e[i][0],
                        s = e[i][1],
                        u = e[o][0],
                        c = e[o][1];
                    if (t[1] * (a - u) + s * (u - t[0]) + c * (t[0] - a) === 0 && (a - t[0]) * (u - t[0]) <= 0 && (s - t[1]) * (c - t[1]) <= 0) return !n;
                    s > t[1] !== c > t[1] && t[0] < (u - a) * (t[1] - s) / (c - s) + a && (r = !r)
                }
                return r
            }
        },
        1449: function(t, e, n) {
            "use strict"
        }
    }
]);